    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD D1 AD D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 -  -  -  -      ;load reset vectors
   44 D1:A895 21 4A A8 D1     ld  hl,testVectors
   45 D1:A899 01 01 01 00     ld  bc,$000101
   46 D1:A89D 1E FF -  -      ld  e,$FF
   47 D1:A89F CD E2 B4 D1     call i6502_map_pages
   48 D1:A8A3 -  -  -  -      ;load program ROM to lowmem
   49 D1:A8A3 21 4A A9 D1     ld  hl,testCode
   50 D1:A8A7 01 08 20 00     ld  bc,$002008
   51 D1:A8AB 1E 80 -  -      ld  e,$80
   52 D1:A8AD CD E2 B4 D1     call i6502_map_pages
   53 D1:A8B1 -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   54 D1:A8B1 -  -  -  -      ;memory to screen.
   55 D1:A8B1 21 00 50 D0     ld  hl,NAMETABLE1
   56 D1:A8B5 01 04 20 00     ld  bc,$002004
   57 D1:A8B9 1E 40 -  -      ld  e,$40
   58 D1:A8BB CD E2 B4 D1     call i6502_map_pages
   59 D1:A8BF -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   60 D1:A8BF -  -  -  -      ;start the emulation.
   61 D1:A8BF -  -  -  -      ;jr $
   62 D1:A8BF CD 24 AE D1     call clearTextBuf
   63 D1:A8C3 3E 01 -  -      ld  a,1
   64 D1:A8C5 CD 71 AE D1     call setLineStart
   65 D1:A8C9 CD 7A AE D1     call setCurLine
   66 D1:A8CD 21 C7 A9 D1     ld  hl,text001
   67 D1:A8D1 CD 97 AE D1     call printString
   68 D1:A8D5 FD 21 0B AA 
              D1 -  -  -      ld  iy,firstFileHeader
   69 D1:A8DA 01 00 00 00     ld  bc,0
   70 D1:A8DE FD 4E FF -      ld  c,(iy-1)
   71 D1:A8E1 CD 4C AD D1     call vatTraverse
   72 D1:A8E5 30 0C -  -      jr  nc,+_
   73 D1:A8E7 21 DE A9 D1     ld  hl,text002
   74 D1:A8EB CD 97 AE D1     call printString
   75 D1:A8EF C3 19 A9 D1     jp endCurrentRun
   76 D1:A8F3 D5 -  -  -  _:  push de
   77 D1:A8F4 21 FD A9 D1         ld  hl,text003
   78 D1:A8F8 CD 97 AE D1         call printString
   79 D1:A8FC DD 46 FA -          ld  b,(ix-6)
   80 D1:A8FF ED 22 F9 -          lea hl,ix-7
   81 D1:A902 7E -  -  -  _:      ld  a,(hl)
   82 D1:A903 2B -  -  -          dec hl
   83 D1:A904 E5 -  -  -          push hl
   84 D1:A905 C5 -  -  -              push bc
   85 D1:A906 CD AD AE D1                 call PrintBigFont
   86 D1:A90A C1 -  -  -              pop bc
   87 D1:A90B E1 -  -  -          pop hl
   88 D1:A90C 10 F4 -  -          djnz -_
   89 D1:A90E CD 85 AE D1         call newLine
   90 D1:A912 D1 -  -  -      pop de
   91 D1:A913 18 FE -  -      jr $
   92 D1:A915 CD 1E AB D1     call loadROMFile
   93 D1:A919 -  -  -  -  
   94 D1:A919 -  -  -  -  
   95 D1:A919 -  -  -  -  
   96 D1:A919 -  -  -  -  
   97 D1:A919 -  -  -  -      ;call i6502Init
   98 D1:A919 -  -  -  -  
   99 D1:A919 -  -  -  -  ;    call clearTextBuf
  100 D1:A919 -  -  -  -  ;    ld  hl,helloWorld
  101 D1:A919 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  102 D1:A919 -  -  -  -  ;    ld  bc,13
  103 D1:A919 -  -  -  -  ;    ldir
  104 D1:A919 -  -  -  -  
  105 D1:A919 -  -  -  -  endCurrentRun:
  106 D1:A919 -  -  -  -      ;call printTextBuf
  107 D1:A919 CD A8 AD D1     call fastCopy
  108 D1:A91D 00 -  -  -      nop
  109 D1:A91E CD BB A9 D1     call waituntilnewkeypress
  110 D1:A922 CD B3 A9 D1     call waituntilkeyrelease
  111 D1:A926 -  -  -  -  
  112 D1:A926 -  -  -  -      ;
  113 D1:A926 -  -  -  -      ;
  114 D1:A926 -  -  -  -      ;
  115 D1:A926 -  -  -  -  programExit:
  116 D1:A926 CD C3 AD D1     call stopGfx
  117 D1:A92A ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  118 D1:A92F 3A FF 31 D0     ld  a,(save_mbase)
  119 D1:A933 ED 6D -  -      ld  MB,a
  120 D1:A935 FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  121 D1:A93A C9 -  -  -      ret
  122 D1:A93B -  -  -  -  
  123 D1:A93B -  -  -  -  
  124 D1:A93B -  -  -  -  testFilename:
  125 D1:A93B 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  126 D1:A944 -  -  -  -  
  127 D1:A944 -  -  -  -  
  128 D1:A944 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  129 D1:A944 -  -  -  -  testVectors .equ $-(256-6)
  130 D1:A944 00 80 -  -  .dw $8000
  131 D1:A946 00 80 -  -  .dw $8000
  132 D1:A948 00 80 -  -  .dw $8000
  133 D1:A94A -  -  -  -  testCode:
  134 D1:A94A A9 00 AA A8 .db $A9,$00,$AA,$A8
  135 D1:A94E BD 14 80 -  .db $BD,$14,$80
  136 D1:A951 C9 00 -  -  .db $C9,$00
  137 D1:A953 F0 08 -  -  .db $F0,$08
  138 D1:A955 99 21 40 -  .db $99,$21,$40
  139 D1:A958 E8 C8 -  -  .db $E8,$C8
  140 D1:A95A -  -  -  -  ;.db $12
  141 D1:A95A 4C 04 80 02 .db $4C,$04,$80,$02
  142 D1:A95E 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  143 D1:A967 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  144 D1:A96C -  -  -  -  
  145 D1:A96C -  -  -  -  
  146 D1:A96C A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  147 D1:A97B F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  148 D1:A98B 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  149 D1:A98C -  -  -  -  
  150 D1:A98C -  -  -  -  helloWorld:
  151 D1:A98C 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  152 D1:A99A -  -  -  -  
  153 D1:A99A -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  154 D1:A99A -  -  -  -  ;find yet another hardware reference for something I already did.
  155 D1:A99A -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  156 D1:A99A -  -  -  -  ;what we're looking for. Here, we output the same sort of
  157 D1:A99A -  -  -  -  ;game keys that I've used basically all my programming life.
  158 D1:A99A -  -  -  -  ;Anyhoo. We'll be using the following:
  159 D1:A99A -  -  -  -  ;kbitDown	equ 00h
  160 D1:A99A -  -  -  -  ;kbitLeft	equ 01h
  161 D1:A99A -  -  -  -  ;kbitRight	equ 02h
  162 D1:A99A -  -  -  -  ;kbitUp		equ 03h
  163 D1:A99A -  -  -  -  ;kbitYequ equ 04h
  164 D1:A99A -  -  -  -  ;kbit2nd		equ 05h
  165 D1:A99A -  -  -  -  ;kbitMode	equ 06h
  166 D1:A99A -  -  -  -  ;kbitDel		equ 07h
  167 D1:A99A -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  168 D1:A99A -  -  -  -  
  169 D1:A99A -  -  -  -  getkbd_adl:
  170 D1:A99A DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  171 D1:A99F ED 22 00 -  	lea hl,ix+0
  172 D1:A9A2 36 02 -  -  	ld  (hl),keyModeScanOnce
  173 D1:A9A4 AF -  -  -  	xor a
  174 D1:A9A5 BE -  -  -  _:  cp  (hl)
  175 D1:A9A6 20 FD -  -  	jr  nz,-_
  176 D1:A9A8 DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  177 D1:A9AB DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  178 D1:A9AE AD -  -  -  	xor L
  179 D1:A9AF E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  180 D1:A9B1 AD -  -  -  	xor L
  181 D1:A9B2 C9 -  -  -  	ret
  182 D1:A9B3 -  -  -  -  
  183 D1:A9B3 -  -  -  -  
  184 D1:A9B3 -  -  -  -  waituntilkeyrelease:
  185 D1:A9B3 CD 9A A9 D1     call getkbd_adl
  186 D1:A9B7 B7 -  -  -      or  a,a
  187 D1:A9B8 20 F9 -  -      jr  nz,waituntilkeyrelease
  188 D1:A9BA C9 -  -  -  	ret
  189 D1:A9BB -  -  -  -  
  190 D1:A9BB -  -  -  -  waituntilnewkeypress:
  191 D1:A9BB CD B3 A9 D1     call waituntilkeyrelease
  192 D1:A9BF CD 9A A9 D1 _:  call getkbd_adl
  193 D1:A9C3 B7 -  -  -  	or  a,a
  194 D1:A9C4 28 F9 -  -  	jr  z,-_
  195 D1:A9C6 C9 -  -  -      ret
  196 D1:A9C7 -  -  -  -  
  197 D1:A9C7 -  -  -  -  
  198 D1:A9C7 -  -  -  -  text001:
  199 D1:A9C7 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  200 D1:A9DE -  -  -  -  text002:
  201 D1:A9DE 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  202 D1:A9FD -  -  -  -  text003:
  203 D1:A9FD 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  204 D1:AA0A -  -  -  -  
  205 D1:AA0A -  -  -  -  
  206 D1:AA0A 07 -  -  -  .db 7
  207 D1:AA0B -  -  -  -  firstFileHeader:
  208 D1:AA0B 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  209 D1:AA12 -  -  -  -  
  210 D1:AA12 -  -  -  -  err_:
  211 D1:AA12 -  -  -  -  
  212 D1:AA12 -  -  -  -  err_err:
  213 D1:AA12 E1 -  -  -      pop hl
  214 D1:AA13 CD 97 AE D1     call printString
  215 D1:AA17 -  -  -  -  err_err_quit:
  216 D1:AA17 CD A8 AD D1     call fastCopy
  217 D1:AA1B 00 -  -  -      nop
  218 D1:AA1C CD BB A9 D1     call waituntilnewkeypress
  219 D1:AA20 CD B3 A9 D1     call waituntilkeyrelease
  220 D1:AA24 C3 26 A9 D1     jp programExit
  221 D1:AA28 -  -  -  -  
  222 D1:AA28 -  -  -  -  err_missingFiles:
  223 D1:AA28 F5 -  -  -      push af
  224 D1:AA29 21 3A AA D1         ld  hl,err_missingFiles_str
  225 D1:AA2D CD 97 AE D1         call printString
  226 D1:AA31 F1 -  -  -      pop af
  227 D1:AA32 CD DD AE D1     call printSmallNumPair
  228 D1:AA36 C3 17 AA D1     jp err_err_quit
  229 D1:AA3A -  -  -  -  err_missingFiles_str:
  230 D1:AA3A 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  231 D1:AA54 -  -  -  -  
  232 D1:AA54 -  -  -  -  err_tooManyFiles:
  233 D1:AA54 CD 12 AA D1     call err_err
  234 D1:AA58 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  235 D1:AA6E -  -  -  -  
  236 D1:AA6E -  -  -  -  err_PRGROMTooLarge:
  237 D1:AA6E CD 12 AA D1     call err_err
  238 D1:AA72 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  239 D1:AA85 -  -  -  -  err_CHRROMTooLarge:
  240 D1:AA85 CD 12 AA D1     call err_err
  241 D1:AA89 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  242 D1:AA9C -  -  -  -  
  243 D1:AA9C -  -  -  -  err_missingROMDetected:
  244 D1:AA9C CD 12 AA D1     call err_err
  245 D1:AAA0 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  246 D1:AABC -  -  -  -  
  247 D1:AABC -  -  -  -  err_ROMHeaderDamaged:
  248 D1:AABC CD 12 AA D1     call err_err
  249 D1:AAC0 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  250 D1:AAD9 -  -  -  -  
  251 D1:AAD9 -  -  -  -  err_MapperOutOfRange:
  252 D1:AAD9 CD 12 AA D1     call err_err
  253 D1:AADD 4D 61 70 70 
              65 72 20 73 
              70 65 63 69 
              66 69 65 64 
              20 6F 75 74 
              20 6F 66 20 
              72 61 6E 67 
              65 2E 00 -  .db "Mapper specified out of range.",0
  254 D1:AAFC -  -  -  -  
  255 D1:AAFC -  -  -  -  err_CHRROMNotFound:
  256 D1:AAFC CD 12 AA D1     call err_err
  257 D1:AB00 43 48 52 5F 
              52 4F 4D 20 
              6E 6F 74 20 
              66 6F 75 6E 
              64 20 69 6E 
              73 69 64 65 
              20 66 69 6C 
              65 00 -  -  .db "CHR_ROM not found inside file",0
  258 D1:AB1E -  -  -  -  
  259 D1:AB1E -  -  -  -  
  260 D1:AB1E -  -  -  -  ;Input: DE = Address of first file after the container header signature
  261 D1:AB1E -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  262 D1:AB1E -  -  -  -  ;Destroys: All registers.
  263 D1:AB1E -  -  -  -  loadROMFile:
  264 D1:AB1E EB -  -  -      ex  de,hl
  265 D1:AB1F AF -  -  -      xor a,a
  266 D1:AB20 32 AB AD D1     ld  (missing_files),a
  267 D1:AB24 BE -  -  -  _:  cp  (hl)    ;
  268 D1:AB25 23 -  -  -      inc hl      ;
  269 D1:AB26 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  270 D1:AB28 22 A8 AD D1     ld  (basefile_sig),hl
  271 D1:AB2C 01 10 00 00     ld  bc,16
  272 D1:AB30 09 -  -  -      add hl,bc
  273 D1:AB31 7E -  -  -      ld  a,(hl)
  274 D1:AB32 FE 01 -  -      cp  a,MAXNUMFILES
  275 D1:AB34 D2 54 AA D1     jp  nc,err_tooManyFiles
  276 D1:AB38 32 04 34 D0     ld  (inputNumFiles),a
  277 D1:AB3C 47 -  -  -      ld  b,a
  278 D1:AB3D 0E 10 -  -      ld  c,16
  279 D1:AB3F ED 4C -  -      mlt bc
  280 D1:AB41 23 -  -  -      inc hl
  281 D1:AB42 E5 -  -  -      push hl
  282 D1:AB43 09 -  -  -          add hl,bc
  283 D1:AB44 FD 21 B4 AD 
              D1 -  -  -          ld  iy,FILETABLE
  284 D1:AB49 4E -  -  -          ld  c,(hl)
  285 D1:AB4A 23 -  -  -          inc hl
  286 D1:AB4B 46 -  -  -          ld  b,(hl)
  287 D1:AB4C 23 -  -  -          inc hl
  288 D1:AB4D 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  289 D1:AB51 FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  290 D1:AB54 E1 -  -  -      pop hl
  291 D1:AB55 3C -  -  -      inc a
  292 D1:AB56 3D -  -  -      dec a
  293 D1:AB57 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  294 D1:AB59 -  -  -  -      ;If more than one file, fill FILETABLE.
  295 D1:AB59 -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  296 D1:AB59 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  297 D1:AB5C 47 -  -  -      ld  b,a
  298 D1:AB5D -  -  -  -  loadROMFile_multiFileLoadLoop:
  299 D1:AB5D C5 -  -  -      push bc
  300 D1:AB5E FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  301 D1:AB61 01 10 00 00         ld  bc,16
  302 D1:AB65 11 3C AD D1         ld  de,loadROMFile_tempSigHash
  303 D1:AB69 ED B0 -  -          ldir
  304 D1:AB6B E5 -  -  -          push hl
  305 D1:AB6C FD E5 -  -              push iy
  306 D1:AB6E 01 17 00 00                 ld  bc,23
  307 D1:AB72 FD 21 35 AD 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  308 D1:AB77 CD 4C AD D1                 call vatTraverse    ;returns DE @ datasection size if found
  309 D1:AB7B 30 05 -  -                  jr  nc,+_
  310 D1:AB7D 21 AB AD D1                 ld  hl,missing_files
  311 D1:AB81 34 -  -  -                  inc (hl)
  312 D1:AB82 FD E1 -  -  _:          pop iy
  313 D1:AB84 EB -  -  -              ex  de,hl
  314 D1:AB85 5E -  -  -              ld  e,(hl)
  315 D1:AB86 23 -  -  -              inc hl
  316 D1:AB87 56 -  -  -              ld  d,(hl)
  317 D1:AB88 23 -  -  -              inc hl
  318 D1:AB89 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  319 D1:AB8D FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  320 D1:AB90 E1 -  -  -          pop hl
  321 D1:AB91 C1 -  -  -      pop bc
  322 D1:AB92 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  323 D1:AB95 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  324 D1:AB97 3A AB AD D1     ld  a,(missing_files)
  325 D1:AB9B B7 -  -  -      or  a,a
  326 D1:AB9C C2 28 AA D1     jp  nz,err_missingFiles
  327 D1:ABA0 -  -  -  -  loadROMFile_singleFileLoad:
  328 D1:ABA0 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  329 D1:ABA0 3A 04 34 D0     ld  a,(inputNumFiles)
  330 D1:ABA4 3C -  -  -      inc a
  331 D1:ABA5 47 -  -  -      ld  b,a
  332 D1:ABA6 21 00 00 00     ld  hl,0
  333 D1:ABAA DD 21 B4 AD 
              D1 -  -  -      ld  ix,FILETABLE
  334 D1:ABAF 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  335 D1:ABB3 19 -  -  -      add hl,de
  336 D1:ABB4 ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  337 D1:ABB7 10 F6 -  -      djnz -_
  338 D1:ABB9 01 F0 FF FF     ld  bc,-16
  339 D1:ABBD 09 -  -  -      add hl,bc   ;subtract INES header
  340 D1:ABBE 22 AC AD D1     ld  (total_rom_size),hl
  341 D1:ABC2 -  -  -  -      ;Verify that the file actually contains an INES header.
  342 D1:ABC2 -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  343 D1:ABC2 DD 27 00 -      ld  hl,(ix+0)
  344 D1:ABC5 11 B2 BA AC     ld  de,-$53454E         ;4E 45 53 == "NES"
  345 D1:ABC9 19 -  -  -      add hl,de
  346 D1:ABCA C2 BC AA D1 _:  jp  nz,err_ROMHeaderDamaged
  347 D1:ABCE DD 7E 03 -      ld  a,(ix+3)
  348 D1:ABD1 FE 1A -  -      cp  a,$1A
  349 D1:ABD3 20 F5 -  -      jr  nz,-_   ;19
  350 D1:ABD5 -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  351 D1:ABD5 -  -  -  -      ;Note: The below line is optimized from...
  352 D1:ABD5 DD 2A B6 AD 
              D1 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  353 D1:ABDA -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  354 D1:ABDA -  -  -  -      ;these here just in case there's ever a question about it.
  355 D1:ABDA -  -  -  -  ;    ld  ix,FILETABLE
  356 D1:ABDA -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  357 D1:ABDA DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  358 D1:ABDD DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  359 D1:ABE0 26 00 -  -      ld  h,0
  360 D1:ABE2 54 -  -  -      ld  d,h
  361 D1:ABE3 DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  362 D1:ABE6 E6 0C -  -      and a,%00001100
  363 D1:ABE8 FE 08 -  -      cp  a,%00001000
  364 D1:ABEA 20 1B -  -      jr  nz,+_
  365 D1:ABEC DD 7E 09 -      ld  a,(ix+9)
  366 D1:ABEF 47 -  -  -      ld  b,a
  367 D1:ABF0 E6 0F -  -      and a,$0F
  368 D1:ABF2 FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  369 D1:ABF4 D2 6E AA D1     jp  nc,err_PRGROMTooLarge
  370 D1:ABF8 67 -  -  -      ld  h,a
  371 D1:ABF9 78 -  -  -      ld  a,b
  372 D1:ABFA E6 F0 -  -      and a,$F0
  373 D1:ABFC 07 -  -  -      rlca
  374 D1:ABFD 07 -  -  -      rlca
  375 D1:ABFE 07 -  -  -      rlca
  376 D1:ABFF 07 -  -  -      rlca
  377 D1:AC00 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  378 D1:AC02 D2 85 AA D1     jp  nc,err_CHRROMTooLarge
  379 D1:AC06 57 -  -  -      ld  d,a
  380 D1:AC07 AF -  -  -  _:  xor a,a
  381 D1:AC08 32 AF AD D1     ld  (prg_rom_size),a
  382 D1:AC0C 32 B2 AD D1     ld  (chr_rom_size),a
  383 D1:AC10 29 -  -  -      add hl,hl   ;x2
  384 D1:AC11 29 -  -  -      add hl,hl   ;x4
  385 D1:AC12 29 -  -  -      add hl,hl   ;x8
  386 D1:AC13 29 -  -  -      add hl,hl   ;x16
  387 D1:AC14 29 -  -  -      add hl,hl   ;x32
  388 D1:AC15 29 -  -  -      add hl,hl   ;x64
  389 D1:AC16 52 22 B0 AD 
              D1 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  390 D1:AC1B EB -  -  -      ex  de,hl
  391 D1:AC1C 29 -  -  -      add hl,hl   ;x2
  392 D1:AC1D 29 -  -  -      add hl,hl   ;x4
  393 D1:AC1E 29 -  -  -      add hl,hl   ;x8
  394 D1:AC1F 29 -  -  -      add hl,hl   ;x16
  395 D1:AC20 29 -  -  -      add hl,hl   ;x32
  396 D1:AC21 52 22 B3 AD 
              D1 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  397 D1:AC26 2A B2 AD D1     ld  hl,(chr_rom_size)
  398 D1:AC2A ED 5B AF AD 
              D1 -  -  -      ld  de,(prg_rom_size)
  399 D1:AC2F 19 -  -  -      add hl,de
  400 D1:AC30 ED 5B AC AD 
              D1 -  -  -      ld  de,(total_rom_size)
  401 D1:AC35 B7 -  -  -      or  a,a
  402 D1:AC36 ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  403 D1:AC38 28 04 -  -      jr  z,+_
  404 D1:AC3A D2 9C AA D1     jp  nc,err_missingROMDetected
  405 D1:AC3E -  -  -  -  _:  ;Find trainer, PRG, and CHR base addresses
  406 D1:AC3E ED 22 10 -      lea hl,ix+16
  407 D1:AC41 22 BB AD D1     ld  (trainer_base),hl   ;whether it exists or not.
  408 D1:AC45 11 00 00 00     ld  de,0
  409 D1:AC49 DD CB 06 56     bit 2,(ix+6)
  410 D1:AC4D 28 04 -  -      jr  z,+_
  411 D1:AC4F 11 00 02 00     ld  de,512
  412 D1:AC53 19 -  -  -  _:  add hl,de
  413 D1:AC54 22 AB AD D1     ld  (prg_rom_base),hl
  414 D1:AC58 FD 21 B4 AD 
              D1 -  -  -      ld  iy,FILETABLE
  415 D1:AC5D 52 FD 27 00     ld.s hl,(iy+FILE_SIZE_OFFSET)
  416 D1:AC61 B7 -  -  -      or  a,a
  417 D1:AC62 ED 52 -  -      sbc hl,de   ;less possible trainer
  418 D1:AC64 11 10 00 00     ld  de,16
  419 D1:AC68 ED 52 -  -      sbc hl,de   ;less iNES header. Remaining is now size of current file.
  420 D1:AC6A EB -  -  -      ex  de,hl   ;curfilesize is now in DE
  421 D1:AC6B 2A AF AD D1     ld  hl,(prg_rom_size)   ;keep subtracting filesize from this until carry.
  422 D1:AC6F B7 -  -  -      or  a,a
  423 D1:AC70 ED 52 -  -      sbc hl,de   ;if carry, prg_rom end is inside this file. Undo: HL is offset.
  424 D1:AC72 0E 00 -  -      ld  c,0     ;0th file current
  425 D1:AC74 38 1D -  -      jr  c,loadROMFile_locatedCHRROM
  426 D1:AC76 3A 04 34 D0     ld  a,(inputNumFiles)
  427 D1:AC7A B7 -  -  -      or  a,a
  428 D1:AC7B 28 12 -  -      jr  z,loadROMFile_noCHRROMFound
  429 D1:AC7D 47 -  -  -      ld  b,a
  430 D1:AC7E ED 33 08 -  _:  lea iy,iy+FILETABLE_STRIDE
  431 D1:AC81 52 ED 5B 00 
              00 00 -  -      ld.s de,(FILE_SIZE_OFFSET)
  432 D1:AC87 0C -  -  -      inc c
  433 D1:AC88 B7 -  -  -      or  a,a
  434 D1:AC89 ED 52 -  -      sbc hl,de   ;
  435 D1:AC8B 38 06 -  -      jr  c,loadROMFile_locatedCHRROM
  436 D1:AC8D 10 EF -  -      djnz -_
  437 D1:AC8F -  -  -  -  loadROMFile_noCHRROMFound:
  438 D1:AC8F C3 FC AA D1     jp  err_CHRROMNotFound
  439 D1:AC93 -  -  -  -  loadROMFile_locatedCHRROM:
  440 D1:AC93 19 -  -  -      add hl,de       ;Undid subtract. HL is now offset in current file
  441 D1:AC94 FD 17 02 -      ld  de,(iy+FILE_ADR_OFFSET) ;so get address inside that file.
  442 D1:AC97 B7 -  -  -      or  a,a         ;Don't feel like figuring what the add above did to carry
  443 D1:AC98 ED 52 -  -      sbc hl,de
  444 D1:AC9A 79 -  -  -      ld  a,c
  445 D1:AC9B 22 AE AD D1     ld  (chr_rom_base),hl
  446 D1:AC9F 32 B1 AD D1     ld  (chr_rom_base_file),a
  447 D1:ACA3 -  -  -  -      ;Detect mapper and run its initializer
  448 D1:ACA3 DD 7E 06 -      ld  a,(ix+6)
  449 D1:ACA6 DD 46 07 -      ld  b,(ix+7)
  450 D1:ACA9 07 -  -  -      rlca
  451 D1:ACAA 07 -  -  -      rlca
  452 D1:ACAB 07 -  -  -      rlca
  453 D1:ACAC 07 -  -  -      rlca
  454 D1:ACAD A8 -  -  -      xor a,b
  455 D1:ACAE E6 0F -  -      and a,$0F
  456 D1:ACB0 A8 -  -  -      xor a,b
  457 D1:ACB1 52 EB -  -      ex.s de,hl  ;clears HLU,DEU
  458 D1:ACB3 5F -  -  -      ld  e,a
  459 D1:ACB4 21 B5 AD D1     ld  hl,submapper
  460 D1:ACB8 36 00 -  -      ld  (hl),0
  461 D1:ACBA 78 -  -  -      ld  a,b
  462 D1:ACBB E6 0C -  -      and a,%00001100
  463 D1:ACBD FE 08 -  -      cp  a,%00001000
  464 D1:ACBF 3E 00 -  -      ld  a,0
  465 D1:ACC1 20 0E -  -      jr  nz,+_
  466 D1:ACC3 DD 46 08 -      ld  b,(ix+8)
  467 D1:ACC6 78 -  -  -      ld  a,b
  468 D1:ACC7 07 -  -  -      rlca
  469 D1:ACC8 07 -  -  -      rlca
  470 D1:ACC9 07 -  -  -      rlca
  471 D1:ACCA 07 -  -  -      rlca
  472 D1:ACCB E6 0F -  -      and a,$0F
  473 D1:ACCD 77 -  -  -      ld  (hl),a
  474 D1:ACCE 78 -  -  -      ld  a,b
  475 D1:ACCF E6 0F -  -      and a,$0F
  476 D1:ACD1 5F -  -  -  _:  ld  e,a
  477 D1:ACD2 ED 53 B7 AD 
              D1 -  -  -      ld  (mapper_id),de
  478 D1:ACD7 21 FF FF FF     ld  hl,-NUMBER_OF_MAPPERS
  479 D1:ACDB 19 -  -  -      add hl,de
  480 D1:ACDC DA D9 AA D1     jp  c,err_MapperOutOfRange
  481 D1:ACE0 ED 62 -  -      sbc hl,hl
  482 D1:ACE2 19 -  -  -      add hl,de               ;hl=de. both are mapper IDs
  483 D1:ACE3 2E 09 -  -      ld  L,MAPPER_STRIDE
  484 D1:ACE5 55 -  -  -      ld  d,L
  485 D1:ACE6 ED 6C -  -      mlt hl                  ;high byte multiply
  486 D1:ACE8 65 -  -  -      ld  h,L
  487 D1:ACE9 2E 00 -  -      ld  L,0
  488 D1:ACEB ED 5C -  -      mlt de                  ;low byte multiply
  489 D1:ACED 19 -  -  -      add hl,de               ;This is the best 16bit * 8bit I know to do.
  490 D1:ACEE 11 FA AC D1     ld  de,mapper_table
  491 D1:ACF2 19 -  -  -      add hl,de
  492 D1:ACF3 22 B8 AD D1     ld  (mapper_adr_base),hl
  493 D1:ACF7 ED 27 -  -      ld  hl,(hl)
  494 D1:ACF9 E9 -  -  -      jp  (hl)
  495 D1:ACFA -  -  -  -  
  496 D1:ACFA -  -  -  -  mapper_table:   ;entries 9 wide
  497 D1:ACFA 03 AD D1 -  .dl mapper0_init
  498 D1:ACFD 31 AD D1 -  .dl mapper0_read
  499 D1:AD00 33 AD D1 -  .dl mapper0_write
  500 D1:AD03 -  -  -  -  
  501 D1:AD03 -  -  -  -  mapper0_init:
  502 D1:AD03 -  -  -  -      ;map trainer, if exist
  503 D1:AD03 DD CB 06 56     bit 2,(ix+6)
  504 D1:AD07 28 0D -  -      jr  z,+_
  505 D1:AD09 2A BB AD D1     ld  hl,(trainer_base)
  506 D1:AD0D 1E 70 -  -      ld  e,$70
  507 D1:AD0F 0E 02 -  -      ld  c,2
  508 D1:AD11 41 -  -  -      ld  b,c
  509 D1:AD12 CD E2 B4 D1     call i6502_map_pages
  510 D1:AD16 2A AF AD D1 _:  ld  hl,(prg_rom_size)
  511 D1:AD1A 11 01 C0 FF     ld  de,-(16384-1)
  512 D1:AD1E 19 -  -  -      add hl,de   ;carry if more than 1 16KB segment
  513 D1:AD1F 2A AB AD D1     ld  hl,(prg_rom_base)
  514 D1:AD23 06 80 -  -      ld  b,$80
  515 D1:AD25 58 -  -  -      ld  e,b
  516 D1:AD26 0E 40 -  -      ld  c,$40
  517 D1:AD28 30 02 -  -      jr  nc,+_
  518 D1:AD2A CB 21 -  -      sla c
  519 D1:AD2C CD E2 B4 D1 _:  call i6502_map_pages
  520 D1:AD30 C9 -  -  -      ret
  521 D1:AD31 -  -  -  -  
  522 D1:AD31 -  -  -  -  
  523 D1:AD31 -  -  -  -  mapper0_read:
  524 D1:AD31 7E -  -  -      ld  a,(hl)
  525 D1:AD32 C9 -  -  -      ret
  526 D1:AD33 -  -  -  -  mapper0_write:
  527 D1:AD33 70 -  -  -      ld  (hl),b
  528 D1:AD34 C9 -  -  -      ret
  529 D1:AD35 -  -  -  -  
  530 D1:AD35 -  -  -  -  
  531 D1:AD35 -  -  -  -  
  532 D1:AD35 -  -  -  -  
  533 D1:AD35 -  -  -  -  
  534 D1:AD35 -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  535 D1:AD35 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  536 D1:AD3C -  -  -  -  loadROMFile_tempSigHash:
  537 D1:AD3C 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  538 D1:AD4C -  -  -  -  
  539 D1:AD4C -  -  -  -  
  540 D1:AD4C -  -  -  -  ;Input: IY = locationOfSignature. 
  541 D1:AD4C -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  542 D1:AD4C -  -  -  -  ;Output: carry=1: Variable not found.
  543 D1:AD4C -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  544 D1:AD4C -  -  -  -  ;        IX=location of current variable's VAT location.
  545 D1:AD4C -  -  -  -  ;Destroys: All registers not in use.
  546 D1:AD4C -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  547 D1:AD4C -  -  -  -  
  548 D1:AD4C -  -  -  -  ;To continue searching:
  549 D1:AD4C -  -  -  -  ;call vatTraverse_continue with the following inputs:
  550 D1:AD4C -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  551 D1:AD4C -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  552 D1:AD4C -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  553 D1:AD4C -  -  -  -  vatTraverse:
  554 D1:AD4C -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  555 D1:AD4C DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  556 D1:AD51 -  -  -  -  vatTraverse_loop:
  557 D1:AD51 2A 9A 25 D0     ld  hl,(pTemp)
  558 D1:AD55 ED 12 00 -      lea de,ix+0
  559 D1:AD58 B7 -  -  -      or  a,a
  560 D1:AD59 ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  561 D1:AD5B 3F -  -  -      ccf
  562 D1:AD5C D8 -  -  -      ret c
  563 D1:AD5D 1A -  -  -      ld  a,(de)
  564 D1:AD5E E6 1F -  -      and a,$1F
  565 D1:AD60 FE 15 -  -      cp  a,AppVarObj
  566 D1:AD62 20 34 -  -      jr  nz,vatTraverse_skip
  567 D1:AD64 DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  568 D1:AD67 DD 5E FD -      ld  e,(ix-3)
  569 D1:AD6A DD 56 FC -      ld  d,(ix-4)
  570 D1:AD6D CD 98 1F 02     call _ChkInRam
  571 D1:AD71 EB -  -  -      ex  de,hl
  572 D1:AD72 30 08 -  -      jr  nc,+_
  573 D1:AD74 11 09 00 00     ld  de,9
  574 D1:AD78 19 -  -  -      add hl,de
  575 D1:AD79 5E -  -  -      ld  e,(hl)
  576 D1:AD7A 19 -  -  -      add hl,de
  577 D1:AD7B 23 -  -  -      inc hl
  578 D1:AD7C 5E -  -  -  _:  ld  e,(hl)
  579 D1:AD7D 23 -  -  -      inc hl
  580 D1:AD7E 56 -  -  -      ld  d,(hl)
  581 D1:AD7F 23 -  -  -      inc hl
  582 D1:AD80 EB -  -  -      ex  de,hl
  583 D1:AD81 B7 -  -  -      or  a,a
  584 D1:AD82 ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  585 D1:AD84 38 12 -  -      jr  c,vatTraverse_skip
  586 D1:AD86 ED 23 00 -      lea hl,iy+0
  587 D1:AD89 C5 -  -  -      push bc
  588 D1:AD8A 1A -  -  -  _:      ld  a,(de)
  589 D1:AD8B 13 -  -  -          inc de
  590 D1:AD8C ED A1 -  -          cpi
  591 D1:AD8E 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  592 D1:AD90 EA 8A AD D1         jp  pe,-_
  593 D1:AD94 C1 -  -  -      pop bc
  594 D1:AD95 B7 -  -  -      or  a,a
  595 D1:AD96 C9 -  -  -      ret         ;NC. DE = past the signature.
  596 D1:AD97 -  -  -  -  vatTraverse_sigNoMatch:
  597 D1:AD97 C1 -  -  -      pop bc
  598 D1:AD98 -  -  -  -  vatTraverse_continue:
  599 D1:AD98 -  -  -  -  vatTraverse_skip:
  600 D1:AD98 3E 07 -  -      ld  a,7
  601 D1:AD9A 11 FF FF FF     ld  de,-1
  602 D1:AD9E DD 86 FA -      add a,(ix-6)
  603 D1:ADA1 ED 44 -  -      neg
  604 D1:ADA3 5F -  -  -      ld  e,a
  605 D1:ADA4 DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  606 D1:ADA6 18 A9 -  -      jr  vatTraverse_loop
  607 D1:ADA8 -  -  -  -  
  608 D1:ADA8 -  -  -  -  
  609 D1:ADA8 -  -  -  -  
  610 D1:ADA8 -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:ADA8 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:ADA8 -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:ADA8 -  -  -  -  
    3 D1:ADA8 -  -  -  -  ;Various Parts Contributed by
    4 D1:ADA8 -  -  -  -  ;- BrandonW
    5 D1:ADA8 -  -  -  -  ;- calc84
    6 D1:ADA8 -  -  -  -  ;- MateoConLechuga
    7 D1:ADA8 -  -  -  -  ;- Runer112
    8 D1:ADA8 -  -  -  -  ;- tr1p1ea
    9 D1:ADA8 -  -  -  -  ;- Kerm Martian
   10 D1:ADA8 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:ADA8 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:ADA8 -  -  -  -  ;
    6 D1:ADA8 -  -  -  -  ;
    7 D1:ADA8 -  -  -  -  ;
    8 D1:ADA8 -  -  -  -  
    9 D1:ADA8 -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:ADA8 -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:ADA8 -  -  -  -  
   12 D1:ADA8 -  -  -  -  screenBuf1      .equ vRam
   13 D1:ADA8 -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:ADA8 -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:ADA8 -  -  -  -  xPos                .equ $D031F6
   16 D1:ADA8 -  -  -  -  yPos                .equ $D031F7
   17 D1:ADA8 -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:ADA8 -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:ADA8 -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:ADA8 -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:ADA8 -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:ADA8 -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:ADA8 -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:ADA8 -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:ADA8 -  -  -  -  
   26 D1:ADA8 -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:ADA8 -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:ADA8 -  -  -  -  
   29 D1:ADA8 -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:ADA8 -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:ADA8 -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:ADA8 -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:ADA8 -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:ADA8 -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:ADA8 -  -  -  -  
   36 D1:ADA8 -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:ADA8 -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:ADA8 -  -  -  -  
   39 D1:ADA8 -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:ADA8 -  -  -  -  ;
   41 D1:ADA8 -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:ADA8 -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:ADA8 -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   44 D1:ADA8 -  -  -  -  basefile_sig        .equ inputNumFile+1     ;3b pointer to 16b hash
   45 D1:ADA8 -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   46 D1:ADA8 -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   47 D1:ADA8 -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   48 D1:ADA8 -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   49 D1:ADA8 -  -  -  -  submapper           .equ chr_rom_size+3     ;1b. iNES2 thing. Not often used.
   50 D1:ADA8 -  -  -  -  ines_flag_6         .equ submapper+1        ;1b. Flags that a mapper may need.
   51 D1:ADA8 -  -  -  -  mapper_id           .equ ines_flag_6+1      ;3b. Convenience load for 12 bits
   52 D1:ADA8 -  -  -  -  mapper_adr_base     .equ mapper_id+1        ;3b. Used to load mapper
   53 D1:ADA8 -  -  -  -  trainer_base        .equ mapper_adr_base+3  ;3b. If exist, starts here
   54 D1:ADA8 -  -  -  -  prg_rom_base        .equ prg_rom_base+3     ;3b. Adjusted in case of trainer.
   55 D1:ADA8 -  -  -  -  chr_rom_base        .equ prg_rom_base+3     ;3b. Located somewhere.
   56 D1:ADA8 -  -  -  -  chr_rom_base_file   .equ chr_rom_base+3     ;1b. Nonzero if not in first file.
   57 D1:ADA8 -  -  -  -  
   58 D1:ADA8 -  -  -  -  MAXPRGROM_HINIB     .equ 1
   59 D1:ADA8 -  -  -  -  MAXCHRROM_HINIB     .equ 3
   60 D1:ADA8 -  -  -  -  NUMBER_OF_MAPPERS   .equ 1
   61 D1:ADA8 -  -  -  -  MAPPER_STRIDE       .equ 9
   62 D1:ADA8 -  -  -  -  
   63 D1:ADA8 -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   64 D1:ADA8 -  -  -  -  FILETABLE_STRIDE    .equ 8
   65 D1:ADA8 -  -  -  -  FILETABLE           .equ chr_rom_base_file+3   ;(MAXNUMFILES*FILETABLE_STRIDE)b
   66 D1:ADA8 -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   67 D1:ADA8 -  -  -  -  FILE_ADR_OFFSET     .equ 2
   68 D1:ADA8 -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   69 D1:ADA8 -  -  -  -  
   70 D1:ADA8 -  -  -  -  
   71 D1:ADA8 -  -  -  -  
   72 D1:ADA8 -  -  -  -  ;
   73 D1:ADA8 -  -  -  -  ;
   74 D1:ADA8 -  -  -  -  
   75 D1:ADA8 -  -  -  -  
   76 D1:ADA8 -  -  -  -  
   77 D1:ADA8 -  -  -  -  
   78 D1:ADA8 -  -  -  -  
   79 D1:ADA8 -  -  -  -  #define REGA 0
   80 D1:ADA8 -  -  -  -  #define REGX 1
   81 D1:ADA8 -  -  -  -  #define REGY 2
   82 D1:ADA8 -  -  -  -  #define REGSP 3
   83 D1:ADA8 -  -  -  -  #define REGSR 4
   84 D1:ADA8 -  -  -  -  #define REGPC 5
   85 D1:ADA8 -  -  -  -  #define CYCLES_REMAIN ix+8
   86 D1:ADA8 -  -  -  -  #define SF_NEG 7
   87 D1:ADA8 -  -  -  -  #define SF_OVER 6 
   88 D1:ADA8 -  -  -  -  #define SF_RESERVED 5 
   89 D1:ADA8 -  -  -  -  #define SF_BRK 4
   90 D1:ADA8 -  -  -  -  #define SF_DEC 3
   91 D1:ADA8 -  -  -  -  #define SF_INT 2
   92 D1:ADA8 -  -  -  -  #define SF_ZERO 1
   93 D1:ADA8 -  -  -  -  #define SF_CARRY 0
   94 D1:ADA8 -  -  -  -  
   95 D1:ADA8 -  -  -  -  #macro ADDCYC(X)
   96 D1:ADA8                 #if (x < 1)
   97 D1:ADA8                     nop
   98 D1:ADA8                 #elif (X = 1)
   99 D1:ADA8                     inc iy
  100 D1:ADA8                 #else
  101 D1:ADA8                     lea iy,iy+X
  102 D1:ADA8                 #endif
  103 D1:ADA8             #endmacro
  104 D1:ADA8 -  -  -  -  
  105 D1:ADA8 -  -  -  -  ;
  106 D1:ADA8 -  -  -  -  ;
  107 D1:ADA8 -  -  -  -  ;
  108 D1:ADA8 -  -  -  -  #endif
  109 D1:ADA8 -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:ADA8 -  -  -  -  
    4 D1:ADA8 -  -  -  -  ;Function list:
    5 D1:ADA8 -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:ADA8 -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:ADA8 -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:ADA8 -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:ADA8 -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:ADA8 -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:ADA8 -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:ADA8 -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:ADA8 -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:ADA8 -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:ADA8 -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:ADA8 -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:ADA8 -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:ADA8 -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:ADA8 -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into screen buffer address.
   20 D1:ADA8 -  -  -  -  ;
   21 D1:ADA8 -  -  -  -  ;
   22 D1:ADA8 -  -  -  -  ;
   23 D1:ADA8 -  -  -  -  ;
   24 D1:ADA8 -  -  -  -  ;
   25 D1:ADA8 -  -  -  -  ;
   26 D1:ADA8 -  -  -  -  ;
   27 D1:ADA8 -  -  -  -  
   28 D1:ADA8 -  -  -  -  
   29 D1:ADA8 -  -  -  -  
   30 D1:ADA8 -  -  -  -  
   31 D1:ADA8 -  -  -  -  ;-----------------------------------------------------------------------------
   32 D1:ADA8 -  -  -  -  ;Screen hardware interface stuff
   33 D1:ADA8 -  -  -  -  
   34 D1:ADA8 -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   35 D1:ADA8 -  -  -  -  fastCopy:
   36 D1:ADA8 11 00 00 D4     ld  de,screenBuf1
   37 D1:ADAC 2A 10 00 E3     ld  hl,(mpLcdBase)
   38 D1:ADB0 22 00 34 D0     ld  (curScreenBuf),hl
   39 D1:ADB4 B7 -  -  -      or  a,a
   40 D1:ADB5 ED 52 -  -      sbc hl,de
   41 D1:ADB7 EB -  -  -      ex  de,hl
   42 D1:ADB8 20 04 -  -      jr  nz,+_
   43 D1:ADBA 21 00 2C D5     ld  hl,screenBuf2
   44 D1:ADBE 22 10 00 E3 _:  ld  (mpLcdBase),hl
   45 D1:ADC2 C9 -  -  -      ret
   46 D1:ADC3 -  -  -  -  
   47 D1:ADC3 -  -  -  -  stopGfx:
   48 D1:ADC3 CD 74 03 00     call _boot_ClearVRAM
   49 D1:ADC7 11 2D 09 00     ld  de,lcdNormalMode
   50 D1:ADCB 01 00 00 D4     ld  bc,screenBuf1
   51 D1:ADCF 18 0C -  -      jr  configureScreen
   52 D1:ADD1 -  -  -  -  
   53 D1:ADD1 -  -  -  -  startGfx:
   54 D1:ADD1 CD 74 03 00     call _boot_ClearVRAM
   55 D1:ADD5 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   56 D1:ADD9 01 00 00 D4     ld  bc,screenBuf1
   57 D1:ADDD -  -  -  -  configureScreen:
   58 D1:ADDD 21 10 00 E3     ld  hl,mpLcdBase
   59 D1:ADE1 ED 0F -  -      ld  (hl),bc
   60 D1:ADE3 2E 18 -  -      ld  L,lcdCtrl
   61 D1:ADE5 ED 1F -  -      ld  (hl),de
   62 D1:ADE7 2E 01 -  -      ld  L,lcdTiming0 + 1
   63 D1:ADE9 01 08 00 00     ld  bc,8
   64 D1:ADED 11 1C AE D1     ld  de,screenSettings
   65 D1:ADF1 1A -  -  -  _:  ld  a,(de)
   66 D1:ADF2 ED A0 -  -      ldi
   67 D1:ADF4 2B -  -  -      dec hl
   68 D1:ADF5 77 -  -  -      ld  (hl),a
   69 D1:ADF6 23 -  -  -      inc hl
   70 D1:ADF7 EA F1 AD D1     jp  pe,-_
   71 D1:ADFB 21 00 2C D5     ld  hl,screenBuf2
   72 D1:ADFF 22 00 34 D0     ld  (curScreenBuf),hl
   73 D1:AE03 -  -  -  -  ;Also copied from graphx
   74 D1:AE03 -  -  -  -  setDefaultPalette:
   75 D1:AE03 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   76 D1:AE07 43 -  -  -  	ld	b,e			        ; b = 0
   77 D1:AE08 78 -  -  -  _:	ld	a,b
   78 D1:AE09 0F -  -  -  	rrca
   79 D1:AE0A A8 -  -  -  	xor	a,b
   80 D1:AE0B E6 E0 -  -  	and	a,224
   81 D1:AE0D A8 -  -  -  	xor	a,b
   82 D1:AE0E 12 -  -  -  	ld	(de),a
   83 D1:AE0F 13 -  -  -  	inc	de
   84 D1:AE10 78 -  -  -  	ld	a,b
   85 D1:AE11 17 -  -  -  	rla
   86 D1:AE12 17 -  -  -  	rla
   87 D1:AE13 17 -  -  -  	rla
   88 D1:AE14 78 -  -  -  	ld	a,b
   89 D1:AE15 1F -  -  -  	rra
   90 D1:AE16 12 -  -  -  	ld	(de),a
   91 D1:AE17 13 -  -  -  	inc	de
   92 D1:AE18 04 -  -  -  	inc	b
   93 D1:AE19 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   94 D1:AE1B C9 -  -  -  	ret
   95 D1:AE1C -  -  -  -  
   96 D1:AE1C -  -  -  -  screenSettings:
   97 D1:AE1C -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   98 D1:AE1C -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
   99 D1:AE1C 07 -  -  -  	.db	7					; HSW
  100 D1:AE1D 57 -  -  -  	.db	87					; HFP
  101 D1:AE1E 3F -  -  -  	.db	63					; HBP
  102 D1:AE1F 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  103 D1:AE21 B3 -  -  -  	.db	179					; VFP
  104 D1:AE22 00 -  -  -  	.db	0					; VBP
  105 D1:AE23 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  106 D1:AE24 -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  107 D1:AE24 -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  108 D1:AE24 -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  109 D1:AE24 -  -  -  -  ; Hz = 48000000/CC = 60
  110 D1:AE24 -  -  -  -  
  111 D1:AE24 -  -  -  -  
  112 D1:AE24 -  -  -  -  ;-----------------------------------------------------------------------------
  113 D1:AE24 -  -  -  -  ; Text Rendering
  114 D1:AE24 -  -  -  -  
  115 D1:AE24 -  -  -  -  clearTextBuf:
  116 D1:AE24 21 00 50 D0     ld  hl,NAMETABLE1
  117 D1:AE28 11 01 50 D0     ld  de,NAMETABLE1+1
  118 D1:AE2C 01 FF 03 00     ld  bc,1023
  119 D1:AE30 36 20 -  -      ld  (hl),' '
  120 D1:AE32 ED B0 -  -      ldir
  121 D1:AE34 C9 -  -  -      ret
  122 D1:AE35 -  -  -  -  
  123 D1:AE35 -  -  -  -  printTextBuf:
  124 D1:AE35 2A F6 31 D0     ld  hl,(xPos)
  125 D1:AE39 22 69 AE D1     ld  (printTextBuf_smcPosRecovery),hl
  126 D1:AE3D 21 00 50 D0     ld  hl,NAMETABLE1
  127 D1:AE41 AF -  -  -      xor a,a
  128 D1:AE42 32 F7 31 D0     ld  (yPos),a
  129 D1:AE46 0E 1E -  -      ld  c,30
  130 D1:AE48 3E 08 -  -  _:  ld  a,8
  131 D1:AE4A 32 F6 31 D0     ld  (xPos),a
  132 D1:AE4E 06 20 -  -      ld  b,$20
  133 D1:AE50 7E -  -  -  _:  ld  a,(hl)
  134 D1:AE51 23 -  -  -      inc hl
  135 D1:AE52 C5 -  -  -      push bc
  136 D1:AE53 E5 -  -  -          push hl
  137 D1:AE54 CD AD AE D1             call printBigFont
  138 D1:AE58 E1 -  -  -          pop hl
  139 D1:AE59 C1 -  -  -      pop bc
  140 D1:AE5A 10 F4 -  -      djnz -_
  141 D1:AE5C 3A F7 31 D0     ld  a,(yPos)
  142 D1:AE60 3C -  -  -      inc a
  143 D1:AE61 32 F7 31 D0     ld  (yPos),a
  144 D1:AE65 0D -  -  -      dec  c
  145 D1:AE66 20 E0 -  -      jr  nz,--_
  146 D1:AE68 -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  147 D1:AE68 21 00 00 00     ld  hl,0
  148 D1:AE6C 22 F6 31 D0     ld  (xPos),hl
  149 D1:AE70 C9 -  -  -      ret
  150 D1:AE71 -  -  -  -  
  151 D1:AE71 -  -  -  -  ;A=column to start on
  152 D1:AE71 -  -  -  -  setLineStart:
  153 D1:AE71 32 F6 31 D0     ld  (xPos),a
  154 D1:AE75 32 03 34 D0     ld  (linestart),a
  155 D1:AE79 C9 -  -  -      ret
  156 D1:AE7A -  -  -  -  
  157 D1:AE7A -  -  -  -  ;A=row to start on
  158 D1:AE7A -  -  -  -  setCurLine:
  159 D1:AE7A 32 F7 31 D0     ld  (yPos),a
  160 D1:AE7E C9 -  -  -      ret
  161 D1:AE7F -  -  -  -  
  162 D1:AE7F -  -  -  -  newPage:
  163 D1:AE7F 3E FF -  -      ld  a,$FF
  164 D1:AE81 32 F7 31 D0     ld  (yPos),a
  165 D1:AE85 -  -  -  -  newLine:
  166 D1:AE85 3A 03 34 D0     ld  a,(linestart)
  167 D1:AE89 32 F6 31 D0     ld  (xPos),a
  168 D1:AE8D 3A F7 31 D0     ld  a,(yPos)
  169 D1:AE91 3C -  -  -      inc a
  170 D1:AE92 32 F7 31 D0     ld  (yPos),a
  171 D1:AE96 C9 -  -  -      ret
  172 D1:AE97 -  -  -  -  
  173 D1:AE97 -  -  -  -      
  174 D1:AE97 -  -  -  -      
  175 D1:AE97 -  -  -  -  
  176 D1:AE97 -  -  -  -  ;HL=address to string
  177 D1:AE97 -  -  -  -  printString:
  178 D1:AE97 7E -  -  -      ld  a,(hl)
  179 D1:AE98 23 -  -  -      inc hl
  180 D1:AE99 B7 -  -  -      or  a,a
  181 D1:AE9A C8 -  -  -      ret z
  182 D1:AE9B FE 0A -  -      cp  a,'\n'
  183 D1:AE9D 20 06 -  -      jr nz,+_
  184 D1:AE9F CD 85 AE D1     call newLine
  185 D1:AEA3 18 F2 -  -      jr  printString
  186 D1:AEA5 E5 -  -  -  _:  push hl
  187 D1:AEA6 CD AD AE D1         call printBigFont
  188 D1:AEAA E1 -  -  -      pop hl
  189 D1:AEAB 18 EA -  -      jr printString
  190 D1:AEAD -  -  -  -  
  191 D1:AEAD -  -  -  -  
  192 D1:AEAD -  -  -  -  ;in: A=chrToPrint
  193 D1:AEAD -  -  -  -  printBigFont:
  194 D1:AEAD CD 42 AF D1     call calculateScreenPtr
  195 D1:AEB1 EB -  -  -      ex  de,hl
  196 D1:AEB2 6F -  -  -      ld  L,a
  197 D1:AEB3 26 08 -  -      ld  H,8
  198 D1:AEB5 ED 6C -  -      mlt hl
  199 D1:AEB7 01 5C AE D1     ld  bc,graphx_textdata
  200 D1:AEBB 09 -  -  -      add hl,bc
  201 D1:AEBC EB -  -  -      ex  de,hl
  202 D1:AEBD 0E 08 -  -      ld  c,8
  203 D1:AEBF 06 08 -  -  _:  ld  b,8
  204 D1:AEC1 1A -  -  -      ld  a,(de)
  205 D1:AEC2 87 -  -  -  _:  add a,a
  206 D1:AEC3 -  -  -  -  fontBGColor_var .equ $+1
  207 D1:AEC3 36 00 -  -      ld  (hl),FONTBGCOLOR
  208 D1:AEC5 30 02 -  -      jr  nc,$+4
  209 D1:AEC7 -  -  -  -  fontFGColor_var .equ $+1
  210 D1:AEC7 36 FF -  -      ld  (hl),FONTFGCOLOR
  211 D1:AEC9 23 -  -  -      inc hl
  212 D1:AECA 10 F6 -  -      djnz -_
  213 D1:AECC 79 -  -  -      ld  a,c
  214 D1:AECD 01 38 01 00     ld  bc,320-8
  215 D1:AED1 09 -  -  -      add hl,bc
  216 D1:AED2 4F -  -  -      ld  c,a
  217 D1:AED3 13 -  -  -      inc de
  218 D1:AED4 0D -  -  -      dec c
  219 D1:AED5 20 E8 -  -      jr  nz,--_
  220 D1:AED7 21 F6 31 D0     ld  hl,xPos
  221 D1:AEDB 34 -  -  -      inc (hl)
  222 D1:AEDC C9 -  -  -      ret
  223 D1:AEDD -  -  -  -  
  224 D1:AEDD -  -  -  -  ;A= 0-255 numeric value to display as hex
  225 D1:AEDD -  -  -  -  printSmallNumPair:
  226 D1:AEDD CD 42 AF D1     call calculateScreenPtr
  227 D1:AEE1 F5 -  -  -      push af
  228 D1:AEE2 1F -  -  -          rra
  229 D1:AEE3 1F -  -  -          rra
  230 D1:AEE4 1F -  -  -          rra
  231 D1:AEE5 1F -  -  -          rra
  232 D1:AEE6 CD F5 AE D1         call +_
  233 D1:AEEA F1 -  -  -      pop af
  234 D1:AEEB CD F5 AE D1     call +_
  235 D1:AEEF 21 F6 31 D0     ld  hl,xPos
  236 D1:AEF3 34 -  -  -      inc (hl)
  237 D1:AEF4 C9 -  -  -      ret
  238 D1:AEF5 E6 0F -  -  _:  and a,$0F
  239 D1:AEF7 01 40 01 00     ld  bc,320
  240 D1:AEFB 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  241 D1:AEFC EB -  -  -      ex  de,hl
  242 D1:AEFD 6F -  -  -      ld  L,a
  243 D1:AEFE 26 03 -  -      ld  H,3
  244 D1:AF00 ED 6C -  -      mlt hl
  245 D1:AF02 01 5C B2 D1     ld  bc,SmallHexFont
  246 D1:AF06 09 -  -  -      add hl,bc
  247 D1:AF07 EB -  -  -      ex  de,hl
  248 D1:AF08 0E 03 -  -      ld  c,3
  249 D1:AF0A 18 14 -  -      jr  printSmallNumPair_2ndHalf
  250 D1:AF0C -  -  -  -  printSmallNumPair_1stHalf:
  251 D1:AF0C 1A -  -  -      ld  a,(de)
  252 D1:AF0D 06 04 -  -      ld  b,4
  253 D1:AF0F 87 -  -  -  _:  add a,a
  254 D1:AF10 36 00 -  -      ld  (hl),FONTBGCOLOR
  255 D1:AF12 30 02 -  -      jr  nc,$+4
  256 D1:AF14 36 FF -  -      ld  (hl),FONTFGCOLOR
  257 D1:AF16 23 -  -  -      inc hl
  258 D1:AF17 10 F6 -  -      djnz -_
  259 D1:AF19 79 -  -  -      ld  a,c
  260 D1:AF1A 01 3C 01 00     ld  bc,320-4
  261 D1:AF1E 09 -  -  -      add hl,bc
  262 D1:AF1F 4F -  -  -      ld  c,a
  263 D1:AF20 -  -  -  -  printSmallNumPair_2ndHalf:
  264 D1:AF20 1A -  -  -      ld  a,(de)
  265 D1:AF21 07 -  -  -      rlca
  266 D1:AF22 07 -  -  -      rlca
  267 D1:AF23 07 -  -  -      rlca
  268 D1:AF24 07 -  -  -      rlca
  269 D1:AF25 06 04 -  -      ld  b,4
  270 D1:AF27 87 -  -  -  _:  add a,a
  271 D1:AF28 36 00 -  -      ld  (hl),FONTBGCOLOR
  272 D1:AF2A 30 02 -  -      jr  nc,$+4
  273 D1:AF2C 36 FF -  -      ld  (hl),FONTFGCOLOR
  274 D1:AF2E 23 -  -  -      inc hl
  275 D1:AF2F 10 F6 -  -      djnz -_
  276 D1:AF31 13 -  -  -      inc de
  277 D1:AF32 79 -  -  -      ld  a,c
  278 D1:AF33 01 3C 01 00     ld  bc,320-4
  279 D1:AF37 09 -  -  -      add hl,bc
  280 D1:AF38 4F -  -  -      ld  c,a
  281 D1:AF39 0D -  -  -      dec c
  282 D1:AF3A 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  283 D1:AF3C 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  284 D1:AF40 09 -  -  -      add hl,bc
  285 D1:AF41 C9 -  -  -      ret
  286 D1:AF42 -  -  -  -  
  287 D1:AF42 -  -  -  -  calculateScreenPtr:
  288 D1:AF42 -  -  -  -      ;xcoord: x * 8 
  289 D1:AF42 -  -  -  -      ;ycoord: 320 * 8 * y
  290 D1:AF42 -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  291 D1:AF42 ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  292 D1:AF47 6A -  -  -      ld  L,d     ;yPos
  293 D1:AF48 26 A0 -  -      ld  h,160
  294 D1:AF4A ED 6C -  -      mlt hl
  295 D1:AF4C 29 -  -  -      add hl,hl
  296 D1:AF4D 16 01 -  -      ld  d,1
  297 D1:AF4F ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  298 D1:AF51 19 -  -  -      add hl,de
  299 D1:AF52 29 -  -  -      add hl,hl
  300 D1:AF53 29 -  -  -      add hl,hl
  301 D1:AF54 29 -  -  -      add hl,hl
  302 D1:AF55 ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  303 D1:AF5A 19 -  -  -      add hl,de
  304 D1:AF5B C9 -  -  -      ret
  305 D1:AF5C -  -  -  -  
  306 D1:AF5C -  -  -  -  
  307 D1:AF5C -  -  -  -  
  308 D1:AF5C -  -  -  -  
  309 D1:AF5C -  -  -  -  
  310 D1:AF5C -  -  -  -  
  311 D1:AF5C -  -  -  -  
  312 D1:AF5C -  -  -  -  
  313 D1:AF5C -  -  -  -  
  314 D1:AF5C -  -  -  -  ;-----------------------------------------------------------------------------
  315 D1:AF5C -  -  -  -  ; Data Section
  316 D1:AF5C -  -  -  -  
  317 D1:AF5C -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  318 D1:AF5C 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  319 D1:AF64 C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  320 D1:AF6C D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  321 D1:AF74 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  322 D1:AF7C 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  323 D1:AF84 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  324 D1:AF8C 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  325 D1:AF94 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  326 D1:AF9C 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  327 D1:AFA4 C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  328 D1:AFAC 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  329 D1:AFB4 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  330 D1:AFBC 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  331 D1:AFC4 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  332 D1:AFCC 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  333 D1:AFD4 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  334 D1:AFDC 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  335 D1:AFE4 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  336 D1:AFEC 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  337 D1:AFF4 FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  338 D1:AFFC 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  339 D1:B004 FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  340 D1:B00C 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  341 D1:B014 FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  342 D1:B01C 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  343 D1:B024 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  344 D1:B02C 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  345 D1:B034 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  346 D1:B03C 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  347 D1:B044 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  348 D1:B04C C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  349 D1:B054 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  350 D1:B05C 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  351 D1:B064 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  352 D1:B06C FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  353 D1:B074 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  354 D1:B07C F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  355 D1:B084 FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  356 D1:B08C FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  357 D1:B094 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  358 D1:B09C C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  359 D1:B0A4 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  360 D1:B0AC 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  361 D1:B0B4 C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  362 D1:B0BC C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  363 D1:B0C4 C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  364 D1:B0CC C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  365 D1:B0D4 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  366 D1:B0DC FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  367 D1:B0E4 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  368 D1:B0EC FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  369 D1:B0F4 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  370 D1:B0FC FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  371 D1:B104 C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  372 D1:B10C C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  373 D1:B114 C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  374 D1:B11C C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  375 D1:B124 C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  376 D1:B12C FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  377 D1:B134 F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  378 D1:B13C C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  379 D1:B144 F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  380 D1:B14C 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  381 D1:B154 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  382 D1:B15C C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  383 D1:B164 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  384 D1:B16C C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  385 D1:B174 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  386 D1:B17C 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  387 D1:B184 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  388 D1:B18C 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  389 D1:B194 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  390 D1:B19C C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  391 D1:B1A4 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  392 D1:B1AC 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  393 D1:B1B4 C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  394 D1:B1BC 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  395 D1:B1C4 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  396 D1:B1CC 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  397 D1:B1D4 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  398 D1:B1DC 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  399 D1:B1E4 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  400 D1:B1EC 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  401 D1:B1F4 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  402 D1:B1FC 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  403 D1:B204 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  404 D1:B20C 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  405 D1:B214 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  406 D1:B21C 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  407 D1:B224 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  408 D1:B22C 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  409 D1:B234 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  410 D1:B23C C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  411 D1:B244 E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  412 D1:B24C 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  413 D1:B254 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  414 D1:B25C -  -  -  -  
  415 D1:B25C -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  416 D1:B25C -  -  -  -  ;whose format was copied from a (then-)authorized source
  417 D1:B25C -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  418 D1:B25C -  -  -  -  SmallHexFont:
  419 D1:B25C 4E AA AE -  .db $4E,$AA,$AE				;zero
  420 D1:B25F 44 C4 4E -  .db $44,$C4,$4E				;one
  421 D1:B262 4C 24 8E -  .db $4C,$24,$8E				;two
  422 D1:B265 4C 24 2C -  .db $4C,$24,$2C				;three
  423 D1:B268 48 AE 22 -  .db $48,$AE,$22				;four
  424 D1:B26B 4E 8C 2C -  .db $4E,$8C,$2C				;five
  425 D1:B26E 45 8E AE -  .db $45,$8E,$AE				;six
  426 D1:B271 4E 24 88 -  .db $4E,$24,$88				;seven
  427 D1:B274 4E AE AE -  .db $4E,$AE,$AE				;eight
  428 D1:B277 4E AE 2C -  .db $4E,$AE,$2C				;nine
  429 D1:B27A 44 AE AA -  .db $44,$AE,$AA				;A
  430 D1:B27D 4C AC AC -  .db $4C,$AC,$AC				;B
  431 D1:B280 46 88 86 -  .db $46,$88,$86				;C
  432 D1:B283 4C AA AC -  .db $4C,$AA,$AC				;D
  433 D1:B286 4E 8C 8E -  .db $4E,$8C,$8E				;E
  434 D1:B289 4E 8C 88 -  .db $4E,$8C,$88				;F
  435 D1:B28C -  -  -  -  
  436 D1:B28C -  -  -  -  
  437 D1:B28C -  -  -  -  
Listing for file "main.z80"
  611 D1:B28C -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B28C -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B28C -  -  -  -  
    3 D1:B28C -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B28C -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B28C -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B28C -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B28C -  -  -  -  ;
    8 D1:B28C -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B28C -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B28C -  -  -  -  ;
   11 D1:B28C -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B28C -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B28C -  -  -  -  ;
   14 D1:B28C -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B28C -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B28C -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B28C -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B28C -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B28C -  -  -  -  
   20 D1:B28C -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B28C -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+5 \ set SF_OVER,b
   22 D1:B28C -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B28C -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B28C -  -  -  -  
   25 D1:B28C -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ add a,a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B28C -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B28C -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B28C -  -  -  -  
   29 D1:B28C -  -  -  -  
   30 D1:B28C -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B28C -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B28C -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B28C -  -  -  -  
   34 D1:B28C -  -  -  -  
   35 D1:B28C -  -  -  -  
   36 D1:B28C -  -  -  -  
   37 D1:B28C -  -  -  -  ;=============================================================================
   38 D1:B28C -  -  -  -  ;=============================================================================
   39 D1:B28C -  -  -  -  ;=============================================================================
   40 D1:B28C -  -  -  -  ;=============================================================================
   41 D1:B28C -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B28C -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B28C -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B28C -  -  -  -  i6502Init:
   45 D1:B28C -  -  -  -      ;
   46 D1:B28C -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B28C -  -  -  -      ;
   48 D1:B28C 21 00 38 D0     ld  hl,main_ram
   49 D1:B290 01 08 20 00     ld  bc,$002008
   50 D1:B294 1E 00 -  -      ld  e,$00
   51 D1:B296 CD E2 B4 D1     call i6502_map_pages
   52 D1:B29A 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B29E 01 01 20 00     ld  bc,$002001
   54 D1:B2A2 1E 20 -  -      ld  e,$20
   55 D1:B2A4 CD E2 B4 D1     call i6502_map_pages
   56 D1:B2A8 FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B2AD DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:B2B2 ED 22 80 -      lea hl,ix-128
   59 D1:B2B5 ED 12 81 -      lea de,ix-127
   60 D1:B2B8 01 FF 00 00     ld  bc,255
   61 D1:B2BC 36 00 -  -      ld  (hl),$00
   62 D1:B2BE ED B0 -  -      ldir
   63 D1:B2C0 CD C9 B4 D1     call i6502_load_instruction_set
   64 D1:B2C4 -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:B2C4 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:B2C8 ED 27 -  -      ld  hl,(hl)
   67 D1:B2CA 11 FC 00 00     ld  de,$0000FC
   68 D1:B2CE 19 -  -  -      add hl,de
   69 D1:B2CF C3 07 CC D1     jp inst6502_jsr
   70 D1:B2D3 -  -  -  -  
   71 D1:B2D3 -  -  -  -  i6502FirstLoad:
   72 D1:B2D3 52 DD 17 05     ld.s de,(ix+REGPC)
   73 D1:B2D7 7B -  -  -      ld  a,e
   74 D1:B2D8 1E 08 -  -      ld  e,BASETABLE_STRIDE
   75 D1:B2DA ED 5C -  -      mlt de
   76 D1:B2DC 21 00 40 D0     ld  hl,PAGETABLE
   77 D1:B2E0 19 -  -  -      add hl,de
   78 D1:B2E1 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   79 D1:B2E3 16 00 -  -      ld  d,0
   80 D1:B2E5 5F -  -  -      ld  e,a
   81 D1:B2E6 19 -  -  -      add hl,de       ;resolve final address
   82 D1:B2E7 18 19 -  -      jr  i6502FinishLoad
   83 D1:B2E9 -  -  -  -  i6502NextLoad:
   84 D1:B2E9 23 -  -  -      inc hl
   85 D1:B2EA 1C -  -  -      inc e
   86 D1:B2EB 20 15 -  -      jr  nz,i6502FinishLoad
   87 D1:B2ED DD 56 06 -      ld  d,(ix+REGPC+1)
   88 D1:B2F0 14 -  -  -      inc d
   89 D1:B2F1 52 DD 1F 05     ld.s (ix+REGPC),de
   90 D1:B2F5 1E 08 -  -      ld  e,BASETABLE_STRIDE
   91 D1:B2F7 ED 5C -  -      mlt de
   92 D1:B2F9 21 00 40 D0     ld  hl,PAGETABLE
   93 D1:B2FD 19 -  -  -      add hl,de
   94 D1:B2FE ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   95 D1:B300 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
   96 D1:B302 -  -  -  -  i6502FinishLoad:
   97 D1:B302 7E -  -  -      ld  a,(hl)
   98 D1:B303 23 -  -  -      inc hl
   99 D1:B304 1C -  -  -      inc e
  100 D1:B305 20 15 -  -      jr  nz,i6502PrepNextPage
  101 D1:B307 DD 56 06 -      ld  d,(ix+REGPC+1)
  102 D1:B30A 14 -  -  -      inc d
  103 D1:B30B 52 DD 1F 05     ld.s (ix+REGPC),de
  104 D1:B30F 1E 08 -  -      ld  e,BASETABLE_STRIDE
  105 D1:B311 ED 5C -  -      mlt de
  106 D1:B313 21 00 40 D0     ld  hl,PAGETABLE
  107 D1:B317 19 -  -  -      add hl,de
  108 D1:B318 ED 27 -  -      ld  hl,(hl)
  109 D1:B31A 1E 00 -  -      ld  e,0
  110 D1:B31C -  -  -  -  i6502PrepNextPage:
  111 D1:B31C E5 -  -  -      push hl
  112 D1:B31D 67 -  -  -          ld  h,a
  113 D1:B31E 2E 08 -  -          ld  l,BASETABLE_STRIDE
  114 D1:B320 ED 6C -  -          mlt hl
  115 D1:B322 01 04 40 D0         ld  bc,JUMPTABLE
  116 D1:B326 09 -  -  -          add hl,bc
  117 D1:B327 ED 27 -  -          ld  hl,(hl)     ;jumptable
  118 D1:B329 E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  119 D1:B32A C9 -  -  -      ret
  120 D1:B32B -  -  -  -  
  121 D1:B32B -  -  -  -  
  122 D1:B32B -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  123 D1:B32B -  -  -  -  ;   JP i6502FinishLoad
  124 D1:B32B -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  125 D1:B32B -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  126 D1:B32B -  -  -  -  ;   JP i6502NextLoad
  127 D1:B32B -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  128 D1:B32B -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  129 D1:B32B -  -  -  -  ;   JP i6502FinishLoad
  130 D1:B32B -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  131 D1:B32B -  -  -  -  
  132 D1:B32B -  -  -  -  
  133 D1:B32B -  -  -  -  ;-----------------------------------------------------------------------------    
  134 D1:B32B -  -  -  -  ;-----------------------------------------------------------------------------    
  135 D1:B32B -  -  -  -  
  136 D1:B32B -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  137 D1:B32B -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  138 D1:B32B -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  139 D1:B32B -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  140 D1:B32B -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  141 D1:B32B -  -  -  -  
  142 D1:B32B -  -  -  -  ;-----------------------------------------------------------------------------    
  143 D1:B32B -  -  -  -  ;-----------------------------------------------------------------------------    
  144 D1:B32B -  -  -  -  outline6502_imm:
  145 D1:B32B 7E -  -  -      ld  a,(hl)  ;oper uses A
  146 D1:B32C -  -  -  -      ;oper
  147 D1:B32C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  148 D1:B33F ED 33 02 -      ADDCYC(2)
  149 D1:B342 C3 E9 B2 D1     jp i6502NextLoad
  150 D1:B346 -  -  -  -  
  151 D1:B346 -  -  -  -  outline6502_abs:
  152 D1:B346 4E -  -  -      ld  c,(hl)
  153 D1:B347 23 -  -  -      inc hl
  154 D1:B348 1C -  -  -      inc e
  155 D1:B349 20 15 -  -      jr nz,+_
  156 D1:B34B DD 56 06 -      ld  d,(ix+REGPC+1)
  157 D1:B34E 14 -  -  -      inc d
  158 D1:B34F 52 DD 1F 05     ld.s (ix+REGPC),de
  159 D1:B353 1E 08 -  -      ld  e,BASETABLE_STRIDE
  160 D1:B355 ED 5C -  -      mlt de
  161 D1:B357 21 00 40 D0     ld  hl,PAGETABLE
  162 D1:B35B 19 -  -  -      add hl,de
  163 D1:B35C ED 27 -  -      ld  hl,(hl) ;
  164 D1:B35E 1E 00 -  -      ld  e,0
  165 D1:B360 46 -  -  -  _:  ld  b,(hl)
  166 D1:B361 E5 -  -  -      push hl
  167 D1:B362 50 -  -  -          ld  d,b
  168 D1:B363 79 -  -  -          ld  a,c
  169 D1:B364 0E 08 -  -          ld  c,BASETABLE_STRIDE
  170 D1:B366 ED 4C -  -          mlt bc
  171 D1:B368 21 00 40 D0         ld  hl,PAGETABLE
  172 D1:B36C 09 -  -  -          add hl,bc
  173 D1:B36D ED 27 -  -          ld  hl,(hl)
  174 D1:B36F 06 00 -  -          ld  b,0
  175 D1:B371 4F -  -  -          ld  c,a
  176 D1:B372 09 -  -  -          add hl,bc   ;full address
  177 D1:B373 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  178 D1:B373 7E -  -  -          ld  a,(hl)  ;oper uses A
  179 D1:B374 -  -  -  -          ;oper
  180 D1:B374 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  181 D1:B387 ED 33 03 -      ADDCYC(3)
  182 D1:B38A E1 -  -  -      pop hl
  183 D1:B38B C3 E9 B2 D1     jp i6502NextLoad
  184 D1:B38F -  -  -  -  
  185 D1:B38F -  -  -  -  outline6502_zeropage:
  186 D1:B38F 7E -  -  -      ld  a,(hl)
  187 D1:B390 01 00 38 D0     ld  bc,ZEROPAGE
  188 D1:B394 81 -  -  -      add a,c
  189 D1:B395 4F -  -  -      ld  c,a
  190 D1:B396 0A -  -  -      ld  a,(bc)      ;oper uses A
  191 D1:B397 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  192 D1:B397 -  -  -  -      ;oper
  193 D1:B397 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  194 D1:B3AA ED 33 03 -      ADDCYC(3)
  195 D1:B3AD C3 E9 B2 D1     jp i6502NextLoad
  196 D1:B3B1 -  -  -  -  
  197 D1:B3B1 -  -  -  -  
  198 D1:B3B1 -  -  -  -  ;Note: has same split start as abs
  199 D1:B3B1 -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  200 D1:B3B1 4E -  -  -      ld  c,(hl)
  201 D1:B3B2 23 -  -  -      inc hl
  202 D1:B3B3 1C -  -  -      inc e
  203 D1:B3B4 20 15 -  -      jr nz,+_
  204 D1:B3B6 DD 56 06 -      ld  d,(ix+REGPC+1)
  205 D1:B3B9 14 -  -  -      inc d
  206 D1:B3BA 52 DD 1F 05     ld.s (ix+REGPC),de
  207 D1:B3BE 1E 08 -  -      ld  e,BASETABLE_STRIDE
  208 D1:B3C0 ED 5C -  -      mlt de
  209 D1:B3C2 21 00 40 D0     ld  hl,PAGETABLE
  210 D1:B3C6 19 -  -  -      add hl,de
  211 D1:B3C7 ED 27 -  -      ld  hl,(hl) ;
  212 D1:B3C9 1E 00 -  -      ld  e,0
  213 D1:B3CB 46 -  -  -  _:  ld  b,(hl)
  214 D1:B3CC E5 -  -  -      push hl
  215 D1:B3CD 50 -  -  -          ld  d,b
  216 D1:B3CE 79 -  -  -          ld  a,c
  217 D1:B3CF 0E 08 -  -          ld  c,BASETABLE_STRIDE
  218 D1:B3D1 ED 4C -  -          mlt bc
  219 D1:B3D3 21 00 40 D0         ld  hl,PAGETABLE
  220 D1:B3D7 09 -  -  -          add hl,bc
  221 D1:B3D8 ED 27 -  -          ld  hl,(hl)
  222 D1:B3DA 06 00 -  -          ld  b,0
  223 D1:B3DC 4F -  -  -          ld  c,a
  224 D1:B3DD DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  225 D1:B3E0 81 -  -  -          add a,c
  226 D1:B3E1 30 04 -  -          jr  nc,+_
  227 D1:B3E3 04 -  -  -          inc b
  228 D1:B3E4 14 -  -  -          inc d
  229 D1:B3E5 FD 23 -  -          ADDCYC(1)
  230 D1:B3E7 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  231 D1:B3E7 09 -  -  -          add hl,bc   ;full address
  232 D1:B3E8 7E -  -  -          ld  a,(hl)  ;oper uses A
  233 D1:B3E9 -  -  -  -          ;oper
  234 D1:B3E9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  235 D1:B3FC ED 33 04 -      ADDCYC(4)
  236 D1:B3FF E1 -  -  -      pop hl
  237 D1:B400 C3 E9 B2 D1     jp i6502NextLoad
  238 D1:B404 -  -  -  -  
  239 D1:B404 -  -  -  -  
  240 D1:B404 -  -  -  -  outline6502_zpx:
  241 D1:B404 7E -  -  -      ld  a,(hl)
  242 D1:B405 01 00 38 D0     ld  bc,ZEROPAGE
  243 D1:B409 81 -  -  -      add a,c
  244 D1:B40A DD 86 01 -      add a,(ix+REGX)
  245 D1:B40D 4F -  -  -      ld  c,a
  246 D1:B40E 0A -  -  -      ld  a,(bc)      ;oper uses A
  247 D1:B40F -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  248 D1:B40F -  -  -  -      ;oper
  249 D1:B40F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  250 D1:B422 ED 33 04 -      ADDCYC(4)
  251 D1:B425 C3 E9 B2 D1     jp i6502NextLoad
  252 D1:B429 -  -  -  -      
  253 D1:B429 -  -  -  -  outline6502_zpy:
  254 D1:B429 7E -  -  -      ld  a,(hl)
  255 D1:B42A 01 00 38 D0     ld  bc,ZEROPAGE
  256 D1:B42E 81 -  -  -      add a,c
  257 D1:B42F DD 86 02 -      add a,(ix+REGY)
  258 D1:B432 4F -  -  -      ld  c,a
  259 D1:B433 0A -  -  -      ld  a,(bc)      ;oper uses A
  260 D1:B434 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  261 D1:B434 -  -  -  -      ;oper
  262 D1:B434 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  263 D1:B447 ED 33 04 -      ADDCYC(4)
  264 D1:B44A C3 E9 B2 D1     jp i6502NextLoad
  265 D1:B44E -  -  -  -  
  266 D1:B44E -  -  -  -  outline6502_preidx_indir:
  267 D1:B44E E5 -  -  -      push hl
  268 D1:B44F 7E -  -  -          ld  a,(hl)
  269 D1:B450 21 00 38 D0         ld  hl,ZEROPAGE
  270 D1:B454 85 -  -  -          add a,L
  271 D1:B455 DD 86 01 -          add a,(ix+REGX)
  272 D1:B458 6F -  -  -          ld  L,a
  273 D1:B459 7E -  -  -          ld  a,(hl)
  274 D1:B45A 2C -  -  -          inc L
  275 D1:B45B 56 -  -  -          ld  d,(hl)
  276 D1:B45C 42 -  -  -          ld  b,d
  277 D1:B45D 0E 08 -  -          ld  c,BASETABLE_STRIDE
  278 D1:B45F ED 4C -  -          mlt bc
  279 D1:B461 21 00 40 D0         ld  hl,PAGETABLE
  280 D1:B465 09 -  -  -          add hl,bc
  281 D1:B466 ED 27 -  -          ld  hl,(hl)
  282 D1:B468 06 00 -  -          ld  b,0
  283 D1:B46A 4F -  -  -          ld  c,a
  284 D1:B46B 09 -  -  -          add hl,bc
  285 D1:B46C -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  286 D1:B46C 7E -  -  -          ld  a,(hl)  ;oper uses A.
  287 D1:B46D -  -  -  -          ;oper
  288 D1:B46D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  289 D1:B480 ED 33 06 -          ADDCYC(6)
  290 D1:B483 E1 -  -  -      pop hl
  291 D1:B484 C3 E9 B2 D1     jp i6502NextLoad
  292 D1:B488 -  -  -  -  
  293 D1:B488 -  -  -  -  outline6502_postidx_indir:
  294 D1:B488 E5 -  -  -      push hl
  295 D1:B489 7E -  -  -          ld  a,(hl)
  296 D1:B48A 21 00 38 D0         ld  hl,ZEROPAGE
  297 D1:B48E 85 -  -  -          add a,L
  298 D1:B48F 6F -  -  -          ld  L,a
  299 D1:B490 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  300 D1:B491 2C -  -  -          inc L
  301 D1:B492 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  302 D1:B495 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  303 D1:B496 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  304 D1:B498 FD 23 -  -          ADDCYC(1)
  305 D1:B49A 24 -  -  -          inc h
  306 D1:B49B 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  307 D1:B49C 2E 08 -  -          ld  L,BASETABLE_STRIDE
  308 D1:B49E ED 6C -  -          mlt hl          ;23.
  309 D1:B4A0 01 00 40 D0         ld  bc,PAGETABLE
  310 D1:B4A4 09 -  -  -          add hl,bc
  311 D1:B4A5 ED 27 -  -          ld  hl,(hl)     ;address get.
  312 D1:B4A7 01 00 00 00         ld  bc,0
  313 D1:B4AB 4F -  -  -          ld  c,a
  314 D1:B4AC 09 -  -  -          add hl,bc       ;Full address get.
  315 D1:B4AD 7E -  -  -          ld  a,(hl)
  316 D1:B4AE -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  317 D1:B4AE -  -  -  -          ;oper
  318 D1:B4AE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  319 D1:B4C1 ED 33 05 -          ADDCYC(5)
  320 D1:B4C4 E1 -  -  -      pop hl
  321 D1:B4C5 C3 E9 B2 D1     jp i6502NextLoad
  322 D1:B4C9 -  -  -  -  
  323 D1:B4C9 -  -  -  -  ;-----------------------------------------------------------------------------
  324 D1:B4C9 -  -  -  -  ;-----------------------------------------------------------------------------
  325 D1:B4C9 -  -  -  -  ;-----------------------------------------------------------------------------
  326 D1:B4C9 -  -  -  -  
  327 D1:B4C9 -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  328 D1:B4C9 -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  329 D1:B4C9 -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  330 D1:B4C9 -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  331 D1:B4C9 -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  332 D1:B4C9 -  -  -  -  
  333 D1:B4C9 -  -  -  -  ;-----------------------------------------------------------------------------
  334 D1:B4C9 -  -  -  -  
  335 D1:B4C9 -  -  -  -  i6502_load_instruction_set:
  336 D1:B4C9 DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  337 D1:B4CE 21 9D CC D1     ld  hl,inst6502_instruction_set
  338 D1:B4D2 06 00 -  -      ld  b,0
  339 D1:B4D4 ED 17 -  -  _:  ld  de,(hl)
  340 D1:B4D6 DD 1F 00 -      ld  (ix+0),de
  341 D1:B4D9 23 -  -  -      inc hl
  342 D1:B4DA 23 -  -  -      inc hl
  343 D1:B4DB 23 -  -  -      inc hl
  344 D1:B4DC ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  345 D1:B4DF 10 F3 -  -      djnz -_
  346 D1:B4E1 C9 -  -  -      ret
  347 D1:B4E2 -  -  -  -  
  348 D1:B4E2 -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  349 D1:B4E2 -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  350 D1:B4E2 -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  351 D1:B4E2 -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  352 D1:B4E2 -  -  -  -  i6502_map_pages:
  353 D1:B4E2 16 08 -  -      ld  d,BASETABLE_STRIDE
  354 D1:B4E4 ED 5C -  -      mlt de
  355 D1:B4E6 DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  356 D1:B4EB DD 19 -  -      add ix,de
  357 D1:B4ED 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  358 D1:B4EE 11 00 01 00     ld  de,256
  359 D1:B4F2 E5 -  -  -      push hl
  360 D1:B4F3 FD E1 -  -      pop iy
  361 D1:B4F5 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  362 D1:B4F6 DD 2F 00 -  _:  ld  (ix+0),hl
  363 D1:B4F9 19 -  -  -      add hl,de                   ;next page z80
  364 D1:B4FA ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  365 D1:B4FD 3D -  -  -      dec a
  366 D1:B4FE C8 -  -  -      ret z
  367 D1:B4FF 10 F5 -  -      djnz -_
  368 D1:B501 ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  369 D1:B504 18 EF -  -      jr --_
  370 D1:B506 -  -  -  -  
  371 D1:B506 -  -  -  -  
  372 D1:B506 -  -  -  -  subroutine6502_abs_split_start:
  373 D1:B506 4E -  -  -      ld  c,(hl)
  374 D1:B507 23 -  -  -      inc hl
  375 D1:B508 1C -  -  -      inc e
  376 D1:B509 20 15 -  -      jr nz,+_
  377 D1:B50B DD 56 06 -      ld  d,(ix+REGPC+1)
  378 D1:B50E 14 -  -  -      inc d
  379 D1:B50F 52 DD 1F 05     ld.s (ix+REGPC),de
  380 D1:B513 1E 08 -  -      ld  e,BASETABLE_STRIDE
  381 D1:B515 ED 5C -  -      mlt de
  382 D1:B517 21 00 40 D0     ld  hl,PAGETABLE
  383 D1:B51B 19 -  -  -      add hl,de
  384 D1:B51C ED 27 -  -      ld  hl,(hl) ;
  385 D1:B51E 1E 00 -  -      ld  e,0
  386 D1:B520 46 -  -  -  _:  ld  b,(hl)
  387 D1:B521 C9 -  -  -      ret
  388 D1:B522 -  -  -  -  
  389 D1:B522 -  -  -  -  subroutine6502_adc_combined_end:
  390 D1:B522 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  391 D1:B525 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  392 D1:B526 DD 7E 00 -      ld  a,(ix+REGA)
  393 D1:B529 89 -  -  -      adc a,c
  394 D1:B52A DD 77 00 -      ld  (ix+REGA),a
  395 D1:B52D DD 46 04 CB 
              B0 E2 37 B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  396 D1:B54E C3 E9 B2 D1     jp i6502NextLoad
  397 D1:B552 -  -  -  -  
  398 D1:B552 -  -  -  -  subroutine6502_sbc_combined_end:
  399 D1:B552 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  400 D1:B555 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  401 D1:B556 DD 7E 00 -      ld  a,(ix+REGA)
  402 D1:B559 3F -  -  -      ccf
  403 D1:B55A 99 -  -  -      sbc a,c
  404 D1:B55B 3F -  -  -      ccf
  405 D1:B55C DD 77 00 -      ld  (ix+REGA),a
  406 D1:B55F DD 46 04 CB 
              B0 E2 69 B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  407 D1:B580 C3 E9 B2 D1     jp i6502NextLoad
  408 D1:B584 -  -  -  -  
  409 D1:B584 -  -  -  -  subroutine6502_cmp_combined_end:
  410 D1:B584 DD 7E 00 -      ld  a,(ix+REGA)
  411 D1:B587 B8 -  -  -      cp  b
  412 D1:B588 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  413 D1:B5A1 C3 E9 B2 D1     jp i6502NextLoad
  414 D1:B5A5 -  -  -  -  
  415 D1:B5A5 -  -  -  -  subroutine6502_take_branch:
  416 D1:B5A5 FD 23 -  -      ADDCYC(1)
  417 D1:B5A7 7E -  -  -      ld  a,(hl)  ;offset byte
  418 D1:B5A8 6F -  -  -      ld  L,a
  419 D1:B5A9 87 -  -  -      add a,a
  420 D1:B5AA 9F -  -  -      sbc a,a
  421 D1:B5AB 67 -  -  -      ld  H,a     ;sign-extending offset byte
  422 D1:B5AC DD 56 06 -      ld  d,(ix+REGPC+1)
  423 D1:B5AF 13 -  -  -      inc de
  424 D1:B5B0 52 19 -  -      add.s hl,de
  425 D1:B5B2 7C -  -  -      ld  a,h
  426 D1:B5B3 BA -  -  -      cp  d       ;is high byte the same?
  427 D1:B5B4 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  428 D1:B5B6 FD 23 -  -      ADDCYC(1)
  429 D1:B5B8 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  430 D1:B5BC C3 D3 B2 D1     jp  i6502FirstLoad
  431 D1:B5C0 -  -  -  -  
  432 D1:B5C0 -  -  -  -  
  433 D1:B5C0 -  -  -  -  ;-----------------------------------------------------------------------------
  434 D1:B5C0 -  -  -  -  
  435 D1:B5C0 -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  436 D1:B5C0 -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  437 D1:B5C0 -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  438 D1:B5C0 -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  439 D1:B5C0 -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  440 D1:B5C0 -  -  -  -  
  441 D1:B5C0 -  -  -  -  ;-----------------------------------------------------------------------------
  442 D1:B5C0 -  -  -  -  
  443 D1:B5C0 -  -  -  -  ;-----------------------------------------------------------------------------
  444 D1:B5C0 -  -  -  -  ;-----------------------------------------------------------------------------
  445 D1:B5C0 -  -  -  -  ;-----------------------------------------------------------------------------
  446 D1:B5C0 -  -  -  -  ;Instructions by type: Transfer Instructions
  447 D1:B5C0 -  -  -  -  ;LDA - Load Accumulator with Memory
  448 D1:B5C0 -  -  -  -  ;    M -> A
  449 D1:B5C0 -  -  -  -  ;    N	Z	C	I	D	V
  450 D1:B5C0 -  -  -  -  ;    +	+	-	-	-	-
  451 D1:B5C0 -  -  -  -  
  452 D1:B5C0 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  453 D1:B5C0 -  -  -  -  ;immediate	LDA #oper	A9	2	2
  454 D1:B5C0 -  -  -  -  inst6502_lda_imm:
  455 D1:B5C0 7E -  -  -      ld  a,(hl)
  456 D1:B5C1 DD 77 00 -      ld  (ix+REGA),a
  457 D1:B5C4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  458 D1:B5D7 ED 33 02 -      ADDCYC(2)
  459 D1:B5DA C3 E9 B2 D1     jp i6502NextLoad
  460 D1:B5DE -  -  -  -  
  461 D1:B5DE -  -  -  -  ;zeropage	LDA oper	A5	2	3
  462 D1:B5DE -  -  -  -  inst6502_lda_zp:
  463 D1:B5DE 7E -  -  -      ld  a,(hl)
  464 D1:B5DF 01 00 38 D0     ld  bc,ZEROPAGE
  465 D1:B5E3 81 -  -  -      add a,c
  466 D1:B5E4 4F -  -  -      ld  c,a
  467 D1:B5E5 0A -  -  -      ld  a,(bc)
  468 D1:B5E6 DD 77 00 -      ld  (ix+REGA),a
  469 D1:B5E9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  470 D1:B5FC ED 33 03 -      ADDCYC(3)
  471 D1:B5FF C3 E9 B2 D1     jp i6502NextLoad
  472 D1:B603 -  -  -  -  
  473 D1:B603 -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  474 D1:B603 -  -  -  -  inst6502_lda_zpx:
  475 D1:B603 7E -  -  -      ld  a,(hl)
  476 D1:B604 01 00 38 D0     ld  bc,ZEROPAGE
  477 D1:B608 81 -  -  -      add a,c
  478 D1:B609 DD 86 01 -      add a,(ix+REGX)
  479 D1:B60C 4F -  -  -      ld  c,a
  480 D1:B60D 0A -  -  -      ld  a,(bc)
  481 D1:B60E DD 77 00 -      ld  (ix+REGA),a
  482 D1:B611 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  483 D1:B624 ED 33 04 -      ADDCYC(4)
  484 D1:B627 C3 E9 B2 D1     jp i6502NextLoad
  485 D1:B62B -  -  -  -  
  486 D1:B62B -  -  -  -  ;absolute	LDA oper	AD	3	4
  487 D1:B62B -  -  -  -  inst6502_lda_abs:
  488 D1:B62B CD 06 B5 D1     call subroutine6502_abs_split_start
  489 D1:B62F E5 -  -  -      push hl
  490 D1:B630 50 -  -  -          ld  d,b
  491 D1:B631 79 -  -  -          ld  a,c
  492 D1:B632 0E 08 -  -          ld  c,BASETABLE_STRIDE
  493 D1:B634 ED 4C -  -          mlt bc
  494 D1:B636 21 00 40 D0         ld  hl,PAGETABLE
  495 D1:B63A 09 -  -  -          add hl,bc
  496 D1:B63B ED 27 -  -          ld  hl,(hl)
  497 D1:B63D 06 00 -  -          ld  b,0
  498 D1:B63F 4F -  -  -          ld  c,a
  499 D1:B640 09 -  -  -          add hl,bc   ;full address
  500 D1:B641 7E -  -  -          READ_ACCESS
  501 D1:B642 DD 77 00 -          ld (ix+REGA),a
  502 D1:B645 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  503 D1:B658 ED 33 04 -          ADDCYC(4)
  504 D1:B65B E1 -  -  -      pop hl
  505 D1:B65C C3 E9 B2 D1     jp i6502NextLoad
  506 D1:B660 -  -  -  -  
  507 D1:B660 -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  508 D1:B660 -  -  -  -  inst6502_lda_absx:
  509 D1:B660 CD 06 B5 D1     call subroutine6502_abs_split_start
  510 D1:B664 E5 -  -  -      push hl
  511 D1:B665 50 -  -  -          ld  d,b
  512 D1:B666 79 -  -  -          ld  a,c
  513 D1:B667 0E 08 -  -          ld  c,BASETABLE_STRIDE
  514 D1:B669 ED 4C -  -          mlt bc
  515 D1:B66B 21 00 40 D0         ld  hl,PAGETABLE
  516 D1:B66F 09 -  -  -          add hl,bc
  517 D1:B670 ED 27 -  -          ld  hl,(hl)
  518 D1:B672 06 00 -  -          ld  b,0
  519 D1:B674 DD 86 01 -          add a,(ix+REGX)
  520 D1:B677 4F -  -  -          ld  c,a
  521 D1:B678 30 04 -  -          jr  nc,+_
  522 D1:B67A FD 23 -  -          ADDCYC(1)
  523 D1:B67C 04 -  -  -          inc b
  524 D1:B67D 14 -  -  -          inc d
  525 D1:B67E 09 -  -  -  _:      add hl,bc   ;full address
  526 D1:B67F 7E -  -  -          READ_ACCESS
  527 D1:B680 DD 77 00 -          ld (ix+REGA),a
  528 D1:B683 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  529 D1:B696 ED 33 04 -          ADDCYC(4)
  530 D1:B699 E1 -  -  -      pop hl
  531 D1:B69A C3 E9 B2 D1     jp i6502NextLoad
  532 D1:B69E -  -  -  -  
  533 D1:B69E -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  534 D1:B69E -  -  -  -  inst6502_lda_absy:
  535 D1:B69E CD 06 B5 D1     call subroutine6502_abs_split_start
  536 D1:B6A2 E5 -  -  -      push hl
  537 D1:B6A3 50 -  -  -          ld  d,b
  538 D1:B6A4 79 -  -  -          ld  a,c
  539 D1:B6A5 0E 08 -  -          ld  c,BASETABLE_STRIDE
  540 D1:B6A7 ED 4C -  -          mlt bc
  541 D1:B6A9 21 00 40 D0         ld  hl,PAGETABLE
  542 D1:B6AD 09 -  -  -          add hl,bc
  543 D1:B6AE ED 27 -  -          ld  hl,(hl)
  544 D1:B6B0 06 00 -  -          ld  b,0
  545 D1:B6B2 DD 86 02 -          add a,(ix+REGY)
  546 D1:B6B5 4F -  -  -          ld  c,a
  547 D1:B6B6 30 04 -  -          jr  nc,+_
  548 D1:B6B8 FD 23 -  -          ADDCYC(1)
  549 D1:B6BA 04 -  -  -          inc b
  550 D1:B6BB 14 -  -  -          inc d
  551 D1:B6BC 09 -  -  -  _:      add hl,bc   ;full address
  552 D1:B6BD 7E -  -  -          READ_ACCESS
  553 D1:B6BE DD 77 00 -          ld (ix+REGA),a
  554 D1:B6C1 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  555 D1:B6D4 ED 33 04 -          ADDCYC(4)
  556 D1:B6D7 E1 -  -  -      pop hl
  557 D1:B6D8 C3 E9 B2 D1     jp i6502NextLoad
  558 D1:B6DC -  -  -  -  
  559 D1:B6DC -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  560 D1:B6DC -  -  -  -  inst6502_lda_indx:
  561 D1:B6DC E5 -  -  -      push hl
  562 D1:B6DD 7E -  -  -          ld  a,(hl)
  563 D1:B6DE 21 00 38 D0         ld  hl,ZEROPAGE
  564 D1:B6E2 85 -  -  -          add a,L
  565 D1:B6E3 DD 86 01 -          add a,(ix+REGX)
  566 D1:B6E6 6F -  -  -          ld  L,a
  567 D1:B6E7 7E -  -  -          ld  a,(hl)
  568 D1:B6E8 2C -  -  -          inc L
  569 D1:B6E9 56 -  -  -          ld  d,(hl)
  570 D1:B6EA 42 -  -  -          ld  b,d
  571 D1:B6EB 0E 08 -  -          ld  c,BASETABLE_STRIDE
  572 D1:B6ED ED 4C -  -          mlt bc
  573 D1:B6EF 21 00 40 D0         ld  hl,PAGETABLE
  574 D1:B6F3 09 -  -  -          add hl,bc
  575 D1:B6F4 ED 27 -  -          ld  hl,(hl)
  576 D1:B6F6 06 00 -  -          ld  b,0
  577 D1:B6F8 4F -  -  -          ld  c,a
  578 D1:B6F9 09 -  -  -          add hl,bc
  579 D1:B6FA 7E -  -  -          READ_ACCESS
  580 D1:B6FB DD 77 00 -          ld (ix+REGA),a
  581 D1:B6FE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  582 D1:B711 ED 33 06 -          ADDCYC(6)
  583 D1:B714 E1 -  -  -      pop hl
  584 D1:B715 C3 E9 B2 D1     jp i6502NextLoad
  585 D1:B719 -  -  -  -  
  586 D1:B719 -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  587 D1:B719 -  -  -  -  inst6502_lda_indy:
  588 D1:B719 E5 -  -  -      push hl
  589 D1:B71A 7E -  -  -          ld  a,(hl)
  590 D1:B71B 21 00 38 D0         ld  hl,ZEROPAGE
  591 D1:B71F 85 -  -  -          add a,L
  592 D1:B720 6F -  -  -          ld  L,a
  593 D1:B721 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  594 D1:B722 2C -  -  -          inc L
  595 D1:B723 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  596 D1:B726 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  597 D1:B727 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  598 D1:B729 FD 23 -  -          ADDCYC(1)
  599 D1:B72B 24 -  -  -          inc h
  600 D1:B72C 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  601 D1:B72D 2E 08 -  -          ld  L,BASETABLE_STRIDE
  602 D1:B72F ED 6C -  -          mlt hl          ;23.
  603 D1:B731 01 00 40 D0         ld  bc,PAGETABLE
  604 D1:B735 09 -  -  -          add hl,bc
  605 D1:B736 ED 27 -  -          ld  hl,(hl)     ;address get.
  606 D1:B738 01 00 00 00         ld  bc,0
  607 D1:B73C 4F -  -  -          ld  c,a
  608 D1:B73D 09 -  -  -          add hl,bc       ;Full address get.
  609 D1:B73E 7E -  -  -          READ_ACCESS
  610 D1:B73F DD 77 00 -          ld  (ix+REGA),a
  611 D1:B742 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  612 D1:B755 ED 33 05 -          ADDCYC(5)
  613 D1:B758 E1 -  -  -      pop hl
  614 D1:B759 C3 E9 B2 D1     jp i6502NextLoad
  615 D1:B75D -  -  -  -  
  616 D1:B75D -  -  -  -  ;-----------------------------------------------------------------------------
  617 D1:B75D -  -  -  -  ;LDX - Load Index X with Memory
  618 D1:B75D -  -  -  -  ;    M -> X
  619 D1:B75D -  -  -  -  ;    N	Z	C	I	D	V
  620 D1:B75D -  -  -  -  ;    +	+	-	-	-	-
  621 D1:B75D -  -  -  -  
  622 D1:B75D -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  623 D1:B75D -  -  -  -  inst6502_ldx_imm:
  624 D1:B75D 7E -  -  -      ld  a,(hl)
  625 D1:B75E DD 77 01 -      ld  (ix+REGX),a
  626 D1:B761 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  627 D1:B774 ED 33 02 -      ADDCYC(2)
  628 D1:B777 C3 E9 B2 D1     jp i6502NextLoad
  629 D1:B77B -  -  -  -  
  630 D1:B77B -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  631 D1:B77B -  -  -  -  inst6502_ldx_zp:
  632 D1:B77B 7E -  -  -      ld  a,(hl)
  633 D1:B77C 01 00 38 D0     ld  bc,ZEROPAGE
  634 D1:B780 81 -  -  -      add a,c
  635 D1:B781 4F -  -  -      ld  c,a
  636 D1:B782 0A -  -  -      ld  a,(bc)
  637 D1:B783 DD 77 01 -      ld  (ix+REGX),a
  638 D1:B786 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  639 D1:B799 ED 33 03 -      ADDCYC(3)
  640 D1:B79C C3 E9 B2 D1     jp i6502NextLoad
  641 D1:B7A0 -  -  -  -  
  642 D1:B7A0 -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  643 D1:B7A0 -  -  -  -  inst6502_ldx_zpy:
  644 D1:B7A0 7E -  -  -      ld  a,(hl)
  645 D1:B7A1 01 00 38 D0     ld  bc,ZEROPAGE
  646 D1:B7A5 81 -  -  -      add a,c
  647 D1:B7A6 DD 86 02 -      add a,(ix+REGY)
  648 D1:B7A9 4F -  -  -      ld  c,a
  649 D1:B7AA 0A -  -  -      ld  a,(bc)
  650 D1:B7AB DD 77 01 -      ld  (ix+REGX),a
  651 D1:B7AE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  652 D1:B7C1 ED 33 04 -      ADDCYC(4)
  653 D1:B7C4 C3 E9 B2 D1     jp i6502NextLoad
  654 D1:B7C8 -  -  -  -  
  655 D1:B7C8 -  -  -  -  ;absolute	LDX oper	AE	3	4  
  656 D1:B7C8 -  -  -  -  inst6502_ldx_abs:
  657 D1:B7C8 CD 06 B5 D1     call subroutine6502_abs_split_start
  658 D1:B7CC E5 -  -  -      push hl
  659 D1:B7CD 50 -  -  -          ld  d,b
  660 D1:B7CE 79 -  -  -          ld  a,c
  661 D1:B7CF 0E 08 -  -          ld  c,BASETABLE_STRIDE
  662 D1:B7D1 ED 4C -  -          mlt bc
  663 D1:B7D3 21 00 40 D0         ld  hl,PAGETABLE
  664 D1:B7D7 09 -  -  -          add hl,bc
  665 D1:B7D8 ED 27 -  -          ld  hl,(hl)
  666 D1:B7DA 06 00 -  -          ld  b,0
  667 D1:B7DC 4F -  -  -          ld  c,a
  668 D1:B7DD 09 -  -  -          add hl,bc   ;full address
  669 D1:B7DE 7E -  -  -          READ_ACCESS
  670 D1:B7DF DD 77 01 -          ld (ix+REGX),a
  671 D1:B7E2 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  672 D1:B7F5 ED 33 04 -          ADDCYC(4)
  673 D1:B7F8 E1 -  -  -      pop hl
  674 D1:B7F9 C3 E9 B2 D1     jp i6502NextLoad
  675 D1:B7FD -  -  -  -  
  676 D1:B7FD -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  677 D1:B7FD -  -  -  -  inst6502_ldx_absy:
  678 D1:B7FD CD 06 B5 D1     call subroutine6502_abs_split_start
  679 D1:B801 E5 -  -  -      push hl
  680 D1:B802 50 -  -  -          ld  d,b
  681 D1:B803 79 -  -  -          ld  a,c
  682 D1:B804 0E 08 -  -          ld  c,BASETABLE_STRIDE
  683 D1:B806 ED 4C -  -          mlt bc
  684 D1:B808 21 00 40 D0         ld  hl,PAGETABLE
  685 D1:B80C 09 -  -  -          add hl,bc
  686 D1:B80D ED 27 -  -          ld  hl,(hl)
  687 D1:B80F 06 00 -  -          ld  b,0
  688 D1:B811 DD 86 02 -          add a,(ix+REGY)
  689 D1:B814 4F -  -  -          ld  c,a
  690 D1:B815 30 04 -  -          jr  nc,+_
  691 D1:B817 FD 23 -  -          ADDCYC(1)
  692 D1:B819 04 -  -  -          inc b
  693 D1:B81A 14 -  -  -          inc d
  694 D1:B81B 09 -  -  -  _:      add hl,bc   ;full address
  695 D1:B81C 7E -  -  -          READ_ACCESS
  696 D1:B81D DD 77 01 -          ld (ix+REGX),a
  697 D1:B820 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  698 D1:B833 ED 33 04 -          ADDCYC(4)
  699 D1:B836 E1 -  -  -      pop hl
  700 D1:B837 C3 E9 B2 D1     jp i6502NextLoad
  701 D1:B83B -  -  -  -  
  702 D1:B83B -  -  -  -  ;-----------------------------------------------------------------------------
  703 D1:B83B -  -  -  -  ;LDY -  Load Index Y with Memory
  704 D1:B83B -  -  -  -  ;    M -> Y
  705 D1:B83B -  -  -  -  ;    N	Z	C	I	D	V
  706 D1:B83B -  -  -  -  ;    +	+	-	-	-	-
  707 D1:B83B -  -  -  -  
  708 D1:B83B -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  709 D1:B83B -  -  -  -  inst6502_ldy_imm:
  710 D1:B83B 7E -  -  -      ld  a,(hl)
  711 D1:B83C DD 77 02 -      ld  (ix+REGY),a
  712 D1:B83F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  713 D1:B852 ED 33 02 -      ADDCYC(2)
  714 D1:B855 C3 E9 B2 D1     jp i6502NextLoad
  715 D1:B859 -  -  -  -  
  716 D1:B859 -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  717 D1:B859 -  -  -  -  inst6502_ldy_zp:
  718 D1:B859 7E -  -  -      ld  a,(hl)
  719 D1:B85A 01 00 38 D0     ld  bc,ZEROPAGE
  720 D1:B85E 81 -  -  -      add a,c
  721 D1:B85F 4F -  -  -      ld  c,a
  722 D1:B860 0A -  -  -      ld  a,(bc)
  723 D1:B861 DD 77 02 -      ld  (ix+REGY),a
  724 D1:B864 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  725 D1:B877 ED 33 03 -      ADDCYC(3)
  726 D1:B87A C3 E9 B2 D1     jp i6502NextLoad
  727 D1:B87E -  -  -  -  
  728 D1:B87E -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  729 D1:B87E -  -  -  -  inst6502_ldy_zpx:
  730 D1:B87E 7E -  -  -      ld  a,(hl)
  731 D1:B87F 01 00 38 D0     ld  bc,ZEROPAGE
  732 D1:B883 81 -  -  -      add a,c
  733 D1:B884 DD 86 01 -      add a,(ix+REGX)
  734 D1:B887 4F -  -  -      ld  c,a
  735 D1:B888 0A -  -  -      ld  a,(bc)
  736 D1:B889 DD 77 02 -      ld  (ix+REGY),a
  737 D1:B88C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  738 D1:B89F ED 33 04 -      ADDCYC(4)
  739 D1:B8A2 C3 E9 B2 D1     jp i6502NextLoad
  740 D1:B8A6 -  -  -  -  
  741 D1:B8A6 -  -  -  -  ;absolute	LDY oper	AC	3	4  
  742 D1:B8A6 -  -  -  -  inst6502_ldy_abs:
  743 D1:B8A6 CD 06 B5 D1     call subroutine6502_abs_split_start
  744 D1:B8AA E5 -  -  -      push hl
  745 D1:B8AB 50 -  -  -          ld  d,b
  746 D1:B8AC 79 -  -  -          ld  a,c
  747 D1:B8AD 0E 08 -  -          ld  c,BASETABLE_STRIDE
  748 D1:B8AF ED 4C -  -          mlt bc
  749 D1:B8B1 21 00 40 D0         ld  hl,PAGETABLE
  750 D1:B8B5 09 -  -  -          add hl,bc
  751 D1:B8B6 ED 27 -  -          ld  hl,(hl)
  752 D1:B8B8 06 00 -  -          ld  b,0
  753 D1:B8BA 4F -  -  -          ld  c,a
  754 D1:B8BB 09 -  -  -          add hl,bc   ;full address
  755 D1:B8BC 7E -  -  -          READ_ACCESS
  756 D1:B8BD DD 77 02 -          ld (ix+REGY),a
  757 D1:B8C0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  758 D1:B8D3 ED 33 04 -          ADDCYC(4)
  759 D1:B8D6 E1 -  -  -      pop hl
  760 D1:B8D7 C3 E9 B2 D1     jp i6502NextLoad
  761 D1:B8DB -  -  -  -  
  762 D1:B8DB -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  763 D1:B8DB -  -  -  -  inst6502_ldy_absx:
  764 D1:B8DB CD 06 B5 D1     call subroutine6502_abs_split_start
  765 D1:B8DF E5 -  -  -      push hl
  766 D1:B8E0 50 -  -  -          ld  d,b
  767 D1:B8E1 79 -  -  -          ld  a,c
  768 D1:B8E2 0E 08 -  -          ld  c,BASETABLE_STRIDE
  769 D1:B8E4 ED 4C -  -          mlt bc
  770 D1:B8E6 21 00 40 D0         ld  hl,PAGETABLE
  771 D1:B8EA 09 -  -  -          add hl,bc
  772 D1:B8EB ED 27 -  -          ld  hl,(hl)
  773 D1:B8ED 06 00 -  -          ld  b,0
  774 D1:B8EF DD 86 01 -          add a,(ix+REGX)
  775 D1:B8F2 4F -  -  -          ld  c,a
  776 D1:B8F3 30 04 -  -          jr  nc,+_
  777 D1:B8F5 FD 23 -  -          ADDCYC(1)
  778 D1:B8F7 04 -  -  -          inc b
  779 D1:B8F8 14 -  -  -          inc d
  780 D1:B8F9 09 -  -  -  _:      add hl,bc   ;full address
  781 D1:B8FA 7E -  -  -          READ_ACCESS
  782 D1:B8FB DD 77 02 -          ld (ix+REGY),a
  783 D1:B8FE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  784 D1:B911 ED 33 04 -          ADDCYC(4)
  785 D1:B914 E1 -  -  -      pop hl
  786 D1:B915 C3 E9 B2 D1     jp i6502NextLoad
  787 D1:B919 -  -  -  -  
  788 D1:B919 -  -  -  -  ;-----------------------------------------------------------------------------
  789 D1:B919 -  -  -  -  ;STA - Store Accumulator in Memory
  790 D1:B919 -  -  -  -  ;    A -> M
  791 D1:B919 -  -  -  -  ;    N	Z	C	I	D	V
  792 D1:B919 -  -  -  -  ;    -	-	-	-	-	-
  793 D1:B919 -  -  -  -  
  794 D1:B919 -  -  -  -  ;zeropage	STA oper	85	2	3  
  795 D1:B919 -  -  -  -  inst6502_sta_zp:
  796 D1:B919 7E -  -  -      ld  a,(hl)
  797 D1:B91A 01 00 38 D0     ld  bc,ZEROPAGE
  798 D1:B91E 81 -  -  -      add a,c
  799 D1:B91F 4F -  -  -      ld  c,a
  800 D1:B920 DD 7E 00 -      ld  a,(ix+REGA)
  801 D1:B923 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  802 D1:B924 ED 33 03 -      ADDCYC(3)
  803 D1:B927 C3 E9 B2 D1     jp i6502NextLoad
  804 D1:B92B -  -  -  -  
  805 D1:B92B -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  806 D1:B92B -  -  -  -  inst6502_sta_zpx:
  807 D1:B92B 7E -  -  -      ld  a,(hl)
  808 D1:B92C 01 00 38 D0     ld  bc,ZEROPAGE
  809 D1:B930 81 -  -  -      add a,c
  810 D1:B931 DD 86 01 -      add a,(ix+REGX)
  811 D1:B934 4F -  -  -      ld  c,a
  812 D1:B935 DD 7E 00 -      ld  a,(ix+REGA)
  813 D1:B938 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  814 D1:B939 ED 33 04 -      ADDCYC(4)
  815 D1:B93C C3 E9 B2 D1     jp i6502NextLoad
  816 D1:B940 -  -  -  -  
  817 D1:B940 -  -  -  -  ;absolute	STA oper	8D	3	4
  818 D1:B940 -  -  -  -  inst6502_sta_abs:
  819 D1:B940 CD 06 B5 D1     call subroutine6502_abs_split_start
  820 D1:B944 E5 -  -  -      push hl
  821 D1:B945 50 -  -  -          ld  d,b
  822 D1:B946 79 -  -  -          ld  a,c
  823 D1:B947 0E 08 -  -          ld  c,BASETABLE_STRIDE
  824 D1:B949 ED 4C -  -          mlt bc
  825 D1:B94B 21 00 40 D0         ld  hl,PAGETABLE
  826 D1:B94F 09 -  -  -          add hl,bc
  827 D1:B950 ED 27 -  -          ld  hl,(hl)
  828 D1:B952 06 00 -  -          ld  b,0
  829 D1:B954 4F -  -  -          ld  c,a
  830 D1:B955 09 -  -  -          add hl,bc   ;full address
  831 D1:B956 DD 46 00 -          ld  b,(ix+REGA)
  832 D1:B959 70 -  -  -          WRITE_ACCESS
  833 D1:B95A ED 33 04 -          ADDCYC(4)
  834 D1:B95D E1 -  -  -      pop hl
  835 D1:B95E C3 E9 B2 D1     jp i6502NextLoad
  836 D1:B962 -  -  -  -  
  837 D1:B962 -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  838 D1:B962 -  -  -  -  inst6502_sta_absx:
  839 D1:B962 CD 06 B5 D1     call subroutine6502_abs_split_start
  840 D1:B966 E5 -  -  -      push hl
  841 D1:B967 50 -  -  -          ld  d,b
  842 D1:B968 79 -  -  -          ld  a,c
  843 D1:B969 0E 08 -  -          ld  c,BASETABLE_STRIDE
  844 D1:B96B ED 4C -  -          mlt bc
  845 D1:B96D 21 00 40 D0         ld  hl,PAGETABLE
  846 D1:B971 09 -  -  -          add hl,bc
  847 D1:B972 ED 27 -  -          ld  hl,(hl)
  848 D1:B974 06 00 -  -          ld  b,0
  849 D1:B976 DD 86 01 -          add a,(ix+REGX)
  850 D1:B979 4F -  -  -          ld  c,a
  851 D1:B97A 30 02 -  -          jr  nc,+_
  852 D1:B97C 04 -  -  -          inc b
  853 D1:B97D 14 -  -  -          inc d
  854 D1:B97E 09 -  -  -  _:      add hl,bc   ;full address
  855 D1:B97F DD 46 00 -          ld  b,(ix+REGA)
  856 D1:B982 70 -  -  -          WRITE_ACCESS
  857 D1:B983 ED 33 05 -          ADDCYC(5)
  858 D1:B986 E1 -  -  -      pop hl
  859 D1:B987 C3 E9 B2 D1     jp i6502NextLoad
  860 D1:B98B -  -  -  -  
  861 D1:B98B -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  862 D1:B98B -  -  -  -  inst6502_sta_absy:
  863 D1:B98B CD 06 B5 D1     call subroutine6502_abs_split_start
  864 D1:B98F E5 -  -  -      push hl
  865 D1:B990 50 -  -  -          ld  d,b
  866 D1:B991 79 -  -  -          ld  a,c
  867 D1:B992 0E 08 -  -          ld  c,BASETABLE_STRIDE
  868 D1:B994 ED 4C -  -          mlt bc
  869 D1:B996 21 00 40 D0         ld  hl,PAGETABLE
  870 D1:B99A 09 -  -  -          add hl,bc
  871 D1:B99B ED 27 -  -          ld  hl,(hl)
  872 D1:B99D 06 00 -  -          ld  b,0
  873 D1:B99F DD 86 02 -          add a,(ix+REGY)
  874 D1:B9A2 4F -  -  -          ld  c,a
  875 D1:B9A3 30 02 -  -          jr  nc,+_
  876 D1:B9A5 04 -  -  -          inc b
  877 D1:B9A6 14 -  -  -          inc d
  878 D1:B9A7 09 -  -  -  _:      add hl,bc   ;full address
  879 D1:B9A8 DD 46 00 -          ld  b,(ix+REGA)
  880 D1:B9AB 70 -  -  -          WRITE_ACCESS
  881 D1:B9AC ED 33 05 -          ADDCYC(5)
  882 D1:B9AF E1 -  -  -      pop hl
  883 D1:B9B0 C3 E9 B2 D1     jp i6502NextLoad
  884 D1:B9B4 -  -  -  -  
  885 D1:B9B4 -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  886 D1:B9B4 -  -  -  -  inst6502_sta_indx:
  887 D1:B9B4 E5 -  -  -      push hl
  888 D1:B9B5 7E -  -  -          ld  a,(hl)
  889 D1:B9B6 21 00 38 D0         ld  hl,ZEROPAGE
  890 D1:B9BA 85 -  -  -          add a,L
  891 D1:B9BB DD 86 01 -          add a,(ix+REGX)
  892 D1:B9BE 6F -  -  -          ld  L,a
  893 D1:B9BF 7E -  -  -          ld  a,(hl)
  894 D1:B9C0 2C -  -  -          inc L
  895 D1:B9C1 56 -  -  -          ld  d,(hl)
  896 D1:B9C2 42 -  -  -          ld  b,d
  897 D1:B9C3 0E 08 -  -          ld  c,BASETABLE_STRIDE
  898 D1:B9C5 ED 4C -  -          mlt bc
  899 D1:B9C7 21 00 40 D0         ld  hl,PAGETABLE
  900 D1:B9CB 09 -  -  -          add hl,bc
  901 D1:B9CC ED 27 -  -          ld  hl,(hl)
  902 D1:B9CE 06 00 -  -          ld  b,0
  903 D1:B9D0 4F -  -  -          ld  c,a
  904 D1:B9D1 09 -  -  -          add hl,bc
  905 D1:B9D2 DD 46 00 -          ld  b,(ix+REGA)
  906 D1:B9D5 70 -  -  -          WRITE_ACCESS
  907 D1:B9D6 ED 33 06 -          ADDCYC(6)
  908 D1:B9D9 E1 -  -  -      pop hl
  909 D1:B9DA C3 E9 B2 D1     jp i6502NextLoad
  910 D1:B9DE -  -  -  -  
  911 D1:B9DE -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  912 D1:B9DE -  -  -  -  inst6502_sta_indy:
  913 D1:B9DE E5 -  -  -      push hl
  914 D1:B9DF 7E -  -  -          ld  a,(hl)
  915 D1:B9E0 21 00 38 D0         ld  hl,ZEROPAGE
  916 D1:B9E4 85 -  -  -          add a,L
  917 D1:B9E5 6F -  -  -          ld  L,a
  918 D1:B9E6 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  919 D1:B9E7 2C -  -  -          inc L
  920 D1:B9E8 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  921 D1:B9EB 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  922 D1:B9EC 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  923 D1:B9EE 24 -  -  -          inc h
  924 D1:B9EF 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  925 D1:B9F0 2E 08 -  -          ld  L,BASETABLE_STRIDE
  926 D1:B9F2 ED 6C -  -          mlt hl          ;23.
  927 D1:B9F4 01 00 40 D0         ld  bc,PAGETABLE
  928 D1:B9F8 09 -  -  -          add hl,bc
  929 D1:B9F9 ED 27 -  -          ld  hl,(hl)     ;address get.
  930 D1:B9FB 01 00 00 00         ld  bc,0
  931 D1:B9FF 4F -  -  -          ld  c,a
  932 D1:BA00 09 -  -  -          add hl,bc       ;Full address get.
  933 D1:BA01 DD 46 00 -          ld  b,(ix+REGA)
  934 D1:BA04 70 -  -  -          WRITE_ACCESS
  935 D1:BA05 ED 33 06 -          ADDCYC(6)
  936 D1:BA08 E1 -  -  -      pop hl
  937 D1:BA09 C3 E9 B2 D1     jp i6502NextLoad
  938 D1:BA0D -  -  -  -  
  939 D1:BA0D -  -  -  -  ;-----------------------------------------------------------------------------
  940 D1:BA0D -  -  -  -  ;STX - Store Index X in Memory
  941 D1:BA0D -  -  -  -  ;    X -> M
  942 D1:BA0D -  -  -  -  ;    N	Z	C	I	D	V
  943 D1:BA0D -  -  -  -  ;    -	-	-	-	-	-
  944 D1:BA0D -  -  -  -  
  945 D1:BA0D -  -  -  -  ;zeropage	STX oper	86	2	3  
  946 D1:BA0D -  -  -  -  inst6502_stx_zp:
  947 D1:BA0D 7E -  -  -      ld  a,(hl)
  948 D1:BA0E 01 00 38 D0     ld  bc,ZEROPAGE
  949 D1:BA12 81 -  -  -      add a,c
  950 D1:BA13 4F -  -  -      ld  c,a
  951 D1:BA14 DD 7E 01 -      ld  a,(ix+REGX)
  952 D1:BA17 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  953 D1:BA18 ED 33 03 -      ADDCYC(3)
  954 D1:BA1B C3 E9 B2 D1     jp i6502NextLoad
  955 D1:BA1F -  -  -  -  
  956 D1:BA1F -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
  957 D1:BA1F -  -  -  -  inst6502_stx_zpy:
  958 D1:BA1F 7E -  -  -      ld  a,(hl)
  959 D1:BA20 01 00 38 D0     ld  bc,ZEROPAGE
  960 D1:BA24 81 -  -  -      add a,c
  961 D1:BA25 DD 86 02 -      add a,(ix+REGY)
  962 D1:BA28 4F -  -  -      ld  c,a
  963 D1:BA29 DD 7E 01 -      ld  a,(ix+REGX)
  964 D1:BA2C 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  965 D1:BA2D ED 33 04 -      ADDCYC(4)
  966 D1:BA30 C3 E9 B2 D1     jp i6502NextLoad
  967 D1:BA34 -  -  -  -  
  968 D1:BA34 -  -  -  -  ;absolute	STX oper	8E	3	4  
  969 D1:BA34 -  -  -  -  inst6502_stx_abs:
  970 D1:BA34 CD 06 B5 D1     call subroutine6502_abs_split_start
  971 D1:BA38 E5 -  -  -      push hl
  972 D1:BA39 50 -  -  -          ld  d,b
  973 D1:BA3A 79 -  -  -          ld  a,c
  974 D1:BA3B 0E 08 -  -          ld  c,BASETABLE_STRIDE
  975 D1:BA3D ED 4C -  -          mlt bc
  976 D1:BA3F 21 00 40 D0         ld  hl,PAGETABLE
  977 D1:BA43 09 -  -  -          add hl,bc
  978 D1:BA44 ED 27 -  -          ld  hl,(hl)
  979 D1:BA46 06 00 -  -          ld  b,0
  980 D1:BA48 4F -  -  -          ld  c,a
  981 D1:BA49 09 -  -  -          add hl,bc   ;full address
  982 D1:BA4A DD 46 01 -          ld  b,(ix+REGX)
  983 D1:BA4D 70 -  -  -          WRITE_ACCESS
  984 D1:BA4E ED 33 04 -          ADDCYC(4)
  985 D1:BA51 E1 -  -  -      pop hl
  986 D1:BA52 C3 E9 B2 D1     jp i6502NextLoad
  987 D1:BA56 -  -  -  -  
  988 D1:BA56 -  -  -  -  ;-----------------------------------------------------------------------------
  989 D1:BA56 -  -  -  -  ;STY - Store Index Y in Memory
  990 D1:BA56 -  -  -  -  ;    Y -> M
  991 D1:BA56 -  -  -  -  ;    N	Z	C	I	D	V
  992 D1:BA56 -  -  -  -  ;    -	-	-	-	-	-
  993 D1:BA56 -  -  -  -  
  994 D1:BA56 -  -  -  -  ;zeropage	STY oper	84	2	3  
  995 D1:BA56 -  -  -  -  inst6502_sty_zp:
  996 D1:BA56 7E -  -  -      ld  a,(hl)
  997 D1:BA57 01 00 38 D0     ld  bc,ZEROPAGE
  998 D1:BA5B 81 -  -  -      add a,c
  999 D1:BA5C 4F -  -  -      ld  c,a
 1000 D1:BA5D DD 7E 02 -      ld  a,(ix+REGY)
 1001 D1:BA60 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1002 D1:BA61 ED 33 03 -      ADDCYC(3)
 1003 D1:BA64 C3 E9 B2 D1     jp i6502NextLoad
 1004 D1:BA68 -  -  -  -  
 1005 D1:BA68 -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1006 D1:BA68 -  -  -  -  inst6502_sty_zpx:
 1007 D1:BA68 7E -  -  -      ld  a,(hl)
 1008 D1:BA69 01 00 38 D0     ld  bc,ZEROPAGE
 1009 D1:BA6D 81 -  -  -      add a,c
 1010 D1:BA6E DD 86 01 -      add a,(ix+REGX)
 1011 D1:BA71 4F -  -  -      ld  c,a
 1012 D1:BA72 DD 7E 02 -      ld  a,(ix+REGY)
 1013 D1:BA75 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1014 D1:BA76 ED 33 04 -      ADDCYC(4)
 1015 D1:BA79 C3 E9 B2 D1     jp i6502NextLoad
 1016 D1:BA7D -  -  -  -  
 1017 D1:BA7D -  -  -  -  ;absolute	STY oper	8C	3	4  
 1018 D1:BA7D -  -  -  -  inst6502_sty_abs:
 1019 D1:BA7D CD 06 B5 D1     call subroutine6502_abs_split_start
 1020 D1:BA81 E5 -  -  -      push hl
 1021 D1:BA82 50 -  -  -          ld  d,b
 1022 D1:BA83 79 -  -  -          ld  a,c
 1023 D1:BA84 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1024 D1:BA86 ED 4C -  -          mlt bc
 1025 D1:BA88 21 00 40 D0         ld  hl,PAGETABLE
 1026 D1:BA8C 09 -  -  -          add hl,bc
 1027 D1:BA8D ED 27 -  -          ld  hl,(hl)
 1028 D1:BA8F 06 00 -  -          ld  b,0
 1029 D1:BA91 4F -  -  -          ld  c,a
 1030 D1:BA92 09 -  -  -          add hl,bc   ;full address
 1031 D1:BA93 DD 46 02 -          ld  b,(ix+REGY)
 1032 D1:BA96 70 -  -  -          WRITE_ACCESS
 1033 D1:BA97 ED 33 04 -          ADDCYC(4)
 1034 D1:BA9A E1 -  -  -      pop hl
 1035 D1:BA9B C3 E9 B2 D1     jp i6502NextLoad
 1036 D1:BA9F -  -  -  -  
 1037 D1:BA9F -  -  -  -  ;-----------------------------------------------------------------------------
 1038 D1:BA9F -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1039 D1:BA9F -  -  -  -  ;N	Z	C	I	D	V
 1040 D1:BA9F -  -  -  -  ;+	+	-	-	-	-
 1041 D1:BA9F -  -  -  -  ;implied	TAX	AA	1	2
 1042 D1:BA9F -  -  -  -  inst6502_tax:
 1043 D1:BA9F DD 7E 00 -      ld  a,(ix+REGA)
 1044 D1:BAA2 DD 77 01 -      ld  (ix+REGX),a
 1045 D1:BAA5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1046 D1:BAB8 ED 33 02 -      ADDCYC(2)
 1047 D1:BABB C3 02 B3 D1     jp i6502FinishLoad
 1048 D1:BABF -  -  -  -  
 1049 D1:BABF -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1050 D1:BABF -  -  -  -  ;N	Z	C	I	D	V
 1051 D1:BABF -  -  -  -  ;+	+	-	-	-	-
 1052 D1:BABF -  -  -  -  ;implied	TAY	A8	1	2
 1053 D1:BABF -  -  -  -  inst6502_tay:
 1054 D1:BABF DD 7E 00 -      ld  a,(ix+REGA)
 1055 D1:BAC2 DD 77 02 -      ld  (ix+REGY),a
 1056 D1:BAC5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1057 D1:BAD8 ED 33 02 -      ADDCYC(2)
 1058 D1:BADB C3 02 B3 D1     jp i6502FinishLoad
 1059 D1:BADF -  -  -  -  
 1060 D1:BADF -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1061 D1:BADF -  -  -  -  ;N	Z	C	I	D	V
 1062 D1:BADF -  -  -  -  ;+	+	-	-	-	-
 1063 D1:BADF -  -  -  -  ;implied	TSX	BA	1	2
 1064 D1:BADF -  -  -  -  inst6502_tsx:
 1065 D1:BADF DD 7E 03 -      ld  a,(ix+REGSP)
 1066 D1:BAE2 DD 77 01 -      ld  (ix+REGX),a
 1067 D1:BAE5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1068 D1:BAF8 ED 33 02 -      ADDCYC(2)
 1069 D1:BAFB C3 02 B3 D1     jp i6502FinishLoad
 1070 D1:BAFF -  -  -  -  
 1071 D1:BAFF -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1072 D1:BAFF -  -  -  -  ;N	Z	C	I	D	V
 1073 D1:BAFF -  -  -  -  ;+	+	-	-	-	-
 1074 D1:BAFF -  -  -  -  ;implied	TXA	8A	1	2
 1075 D1:BAFF -  -  -  -  inst6502_txa:
 1076 D1:BAFF DD 7E 01 -      ld  a,(ix+REGX)
 1077 D1:BB02 DD 77 00 -      ld  (ix+REGA),a
 1078 D1:BB05 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1079 D1:BB18 ED 33 02 -      ADDCYC(2)
 1080 D1:BB1B C3 02 B3 D1     jp i6502FinishLoad
 1081 D1:BB1F -  -  -  -  
 1082 D1:BB1F -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1083 D1:BB1F -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:BB1F -  -  -  -  ;-	-	-	-	-	-
 1085 D1:BB1F -  -  -  -  ;implied	TXS	9A	1	2
 1086 D1:BB1F -  -  -  -  inst6502_txs:
 1087 D1:BB1F DD 7E 01 -      ld  a,(ix+REGX)
 1088 D1:BB22 DD 77 03 -      ld  (ix+REGSP),a
 1089 D1:BB25 ED 33 02 -      ADDCYC(2)
 1090 D1:BB28 C3 02 B3 D1     jp i6502FinishLoad
 1091 D1:BB2C -  -  -  -  
 1092 D1:BB2C -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1093 D1:BB2C -  -  -  -  ;N	Z	C	I	D	V
 1094 D1:BB2C -  -  -  -  ;+	+	-	-	-	-
 1095 D1:BB2C -  -  -  -  ;implied	TYA	98	1	2
 1096 D1:BB2C -  -  -  -  inst6502_tya:
 1097 D1:BB2C DD 7E 02 -      ld  a,(ix+REGY)
 1098 D1:BB2F DD 77 00 -      ld  (ix+REGA),a
 1099 D1:BB32 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1100 D1:BB45 ED 33 02 -      ADDCYC(2)
 1101 D1:BB48 C3 02 B3 D1     jp i6502FinishLoad
 1102 D1:BB4C -  -  -  -  
 1103 D1:BB4C -  -  -  -  ;-----------------------------------------------------------------------------
 1104 D1:BB4C -  -  -  -  ;-----------------------------------------------------------------------------
 1105 D1:BB4C -  -  -  -  ;-----------------------------------------------------------------------------
 1106 D1:BB4C -  -  -  -  ;Instructions by type: Stack Instructions
 1107 D1:BB4C -  -  -  -  ;PHA - Push Accumulator on Stack
 1108 D1:BB4C -  -  -  -  ;    push A
 1109 D1:BB4C -  -  -  -  ;    N	Z	C	I	D	V
 1110 D1:BB4C -  -  -  -  ;    -	-	-	-	-	-
 1111 D1:BB4C -  -  -  -  ;implied	PHA	48	1	3 
 1112 D1:BB4C -  -  -  -  inst6502_pha:
 1113 D1:BB4C DD 7E 00 -      ld  a,(ix+REGA)
 1114 D1:BB4F 01 00 39 D0     ld  bc,STACKBASE
 1115 D1:BB53 DD 4E 03 -      ld  c,(ix+REGSP)
 1116 D1:BB56 02 -  -  -      ld  (bc),a
 1117 D1:BB57 0D -  -  -      dec c
 1118 D1:BB58 DD 71 03 -      ld  (ix+REGSP),c
 1119 D1:BB5B C3 02 B3 D1     jp i6502FinishLoad
 1120 D1:BB5F -  -  -  -  
 1121 D1:BB5F -  -  -  -  ;PHP - Push Processor Status on Stack
 1122 D1:BB5F -  -  -  -  ;    The status register will be pushed with the break
 1123 D1:BB5F -  -  -  -  ;    flag and bit 5 set to 1.
 1124 D1:BB5F -  -  -  -  ;    push SR
 1125 D1:BB5F -  -  -  -  ;    N	Z	C	I	D	V
 1126 D1:BB5F -  -  -  -  ;    -	-	-	-	-	-
 1127 D1:BB5F -  -  -  -  ;implied	PHP	08	1	3  
 1128 D1:BB5F -  -  -  -  inst6502_php:
 1129 D1:BB5F DD 7E 04 -      ld  a,(ix+REGSR)
 1130 D1:BB62 F6 30 -  -      or  a,%00110000
 1131 D1:BB64 01 00 39 D0     ld  bc,STACKBASE
 1132 D1:BB68 DD 4E 03 -      ld  c,(ix+REGSP)
 1133 D1:BB6B 02 -  -  -      ld  (bc),a
 1134 D1:BB6C 0D -  -  -      dec c
 1135 D1:BB6D DD 71 03 -      ld  (ix+REGSP),c
 1136 D1:BB70 C3 02 B3 D1     jp i6502FinishLoad
 1137 D1:BB74 -  -  -  -  
 1138 D1:BB74 -  -  -  -  
 1139 D1:BB74 -  -  -  -  
 1140 D1:BB74 -  -  -  -  ;PLA - Pull Accumulator from Stack
 1141 D1:BB74 -  -  -  -  ;    pull A
 1142 D1:BB74 -  -  -  -  ;    N	Z	C	I	D	V
 1143 D1:BB74 -  -  -  -  ;    +	+	-	-	-	-
 1144 D1:BB74 -  -  -  -  ;implied	PLA	68	1	4  
 1145 D1:BB74 -  -  -  -  inst6502_pla:
 1146 D1:BB74 01 00 39 D0     ld  bc,STACKBASE
 1147 D1:BB78 DD 4E 03 -      ld  c,(ix+REGSP)
 1148 D1:BB7B 0C -  -  -      inc c
 1149 D1:BB7C 0A -  -  -      ld  a,(bc)
 1150 D1:BB7D DD 71 03 -      ld  (ix+REGSP),c
 1151 D1:BB80 DD 77 00 -      ld  (ix+REGA),a
 1152 D1:BB83 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1153 D1:BB96 C3 02 B3 D1     jp i6502FinishLoad
 1154 D1:BB9A -  -  -  -  
 1155 D1:BB9A -  -  -  -  ;PLP - Pull Processor Status from Stack
 1156 D1:BB9A -  -  -  -  ;    The status register will be pulled with the break
 1157 D1:BB9A -  -  -  -  ;    flag and bit 5 ignored.
 1158 D1:BB9A -  -  -  -  ;    pull SR
 1159 D1:BB9A -  -  -  -  ;    N	Z	C	I	D	V
 1160 D1:BB9A -  -  -  -  ;    from stack
 1161 D1:BB9A -  -  -  -  ;implied	PLP	28	1	4  
 1162 D1:BB9A -  -  -  -  inst6502_plp:
 1163 D1:BB9A 01 00 39 D0     ld  bc,STACKBASE
 1164 D1:BB9E DD 4E 03 -      ld  c,(ix+REGSP)
 1165 D1:BBA1 0C -  -  -      inc c
 1166 D1:BBA2 0A -  -  -      ld  a,(bc)
 1167 D1:BBA3 DD 71 03 -      ld  (ix+REGSP),c
 1168 D1:BBA6 DD 46 04 -      ld  b,(ix+REGSR)
 1169 D1:BBA9 A8 -  -  -      xor a,b
 1170 D1:BBAA E6 CF -  -      and a,%11001111
 1171 D1:BBAC A8 -  -  -      xor a,b
 1172 D1:BBAD DD 77 04 -      ld  (ix+REGSR),a
 1173 D1:BBB0 C3 02 B3 D1     jp i6502FinishLoad
 1174 D1:BBB4 -  -  -  -  
 1175 D1:BBB4 -  -  -  -  
 1176 D1:BBB4 -  -  -  -  ;-----------------------------------------------------------------------------
 1177 D1:BBB4 -  -  -  -  ;-----------------------------------------------------------------------------
 1178 D1:BBB4 -  -  -  -  ;-----------------------------------------------------------------------------
 1179 D1:BBB4 -  -  -  -  ;Instructions by type: Decrements and Increments
 1180 D1:BBB4 -  -  -  -  
 1181 D1:BBB4 -  -  -  -  ;DEC -  Decrement Memory by One
 1182 D1:BBB4 -  -  -  -  ;    M - 1 -> M
 1183 D1:BBB4 -  -  -  -  ;    N	Z	C	I	D	V
 1184 D1:BBB4 -  -  -  -  ;    +	+	-	-	-	-
 1185 D1:BBB4 -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1186 D1:BBB4 -  -  -  -  
 1187 D1:BBB4 -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1188 D1:BBB4 -  -  -  -  inst6502_dec_zp:
 1189 D1:BBB4 7E -  -  -      ld  a,(hl)
 1190 D1:BBB5 01 00 38 D0     ld  bc,ZEROPAGE
 1191 D1:BBB9 81 -  -  -      add a,c
 1192 D1:BBBA 4F -  -  -      ld  c,a
 1193 D1:BBBB 0A -  -  -      ld  a,(bc)
 1194 D1:BBBC 3D -  -  -      dec a
 1195 D1:BBBD 02 -  -  -      ld  (bc),a
 1196 D1:BBBE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1197 D1:BBD1 ED 33 05 -      ADDCYC(5)
 1198 D1:BBD4 C3 E9 B2 D1     jp i6502NextLoad
 1199 D1:BBD8 -  -  -  -  
 1200 D1:BBD8 -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1201 D1:BBD8 -  -  -  -  inst6502_dec_zpx:
 1202 D1:BBD8 7E -  -  -      ld  a,(hl)
 1203 D1:BBD9 01 00 38 D0     ld  bc,ZEROPAGE
 1204 D1:BBDD 81 -  -  -      add a,c
 1205 D1:BBDE DD 86 01 -      add a,(ix+REGX)
 1206 D1:BBE1 4F -  -  -      ld  c,a
 1207 D1:BBE2 0A -  -  -      ld  a,(bc)
 1208 D1:BBE3 3D -  -  -      dec a
 1209 D1:BBE4 02 -  -  -      ld  (bc),a
 1210 D1:BBE5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1211 D1:BBF8 ED 33 06 -      ADDCYC(6)
 1212 D1:BBFB C3 E9 B2 D1     jp i6502NextLoad
 1213 D1:BBFF -  -  -  -  
 1214 D1:BBFF -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1215 D1:BBFF -  -  -  -  inst6502_dec_abs:
 1216 D1:BBFF CD 06 B5 D1     call subroutine6502_abs_split_start
 1217 D1:BC03 E5 -  -  -      push hl
 1218 D1:BC04 50 -  -  -          ld  d,b
 1219 D1:BC05 79 -  -  -          ld  a,c
 1220 D1:BC06 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1221 D1:BC08 ED 4C -  -          mlt bc
 1222 D1:BC0A 21 00 40 D0         ld  hl,PAGETABLE
 1223 D1:BC0E 09 -  -  -          add hl,bc
 1224 D1:BC0F ED 27 -  -          ld  hl,(hl)
 1225 D1:BC11 06 00 -  -          ld  b,0
 1226 D1:BC13 4F -  -  -          ld  c,a
 1227 D1:BC14 09 -  -  -          add hl,bc   ;full address
 1228 D1:BC15 7E -  -  -          READ_ACCESS
 1229 D1:BC16 3D -  -  -          dec a
 1230 D1:BC17 47 -  -  -          ld  b,a
 1231 D1:BC18 -  -  -  -          ;
 1232 D1:BC18 DD 7E 04 -          ld  a,(ix+REGSR)
 1233 D1:BC1B CB 8F -  -          res SF_ZERO,a
 1234 D1:BC1D 20 02 -  -          jr  nz,$+4
 1235 D1:BC1F CB CF -  -          set SF_ZERO,a
 1236 D1:BC21 CB BF -  -          res SF_NEG,a
 1237 D1:BC23 FA 28 BC D1         jp  m,$+5
 1238 D1:BC27 CB FF -  -          set SF_NEG,a
 1239 D1:BC29 DD 77 04 -          ld  (ix+REGSR),a
 1240 D1:BC2C -  -  -  -          ;
 1241 D1:BC2C 70 -  -  -          WRITE_ACCESS
 1242 D1:BC2D ED 33 06 -          ADDCYC(6)
 1243 D1:BC30 E1 -  -  -      pop hl
 1244 D1:BC31 C3 E9 B2 D1     jp i6502NextLoad
 1245 D1:BC35 -  -  -  -  
 1246 D1:BC35 -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1247 D1:BC35 -  -  -  -  inst6502_dec_absx:
 1248 D1:BC35 CD 06 B5 D1     call subroutine6502_abs_split_start
 1249 D1:BC39 E5 -  -  -      push hl
 1250 D1:BC3A 50 -  -  -          ld  d,b
 1251 D1:BC3B 79 -  -  -          ld  a,c
 1252 D1:BC3C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1253 D1:BC3E ED 4C -  -          mlt bc
 1254 D1:BC40 21 00 40 D0         ld  hl,PAGETABLE
 1255 D1:BC44 09 -  -  -          add hl,bc
 1256 D1:BC45 ED 27 -  -          ld  hl,(hl)
 1257 D1:BC47 06 00 -  -          ld  b,0
 1258 D1:BC49 DD 86 01 -          add a,(ix+REGX)
 1259 D1:BC4C 4F -  -  -          ld  c,a
 1260 D1:BC4D 30 02 -  -          jr  nc,+_
 1261 D1:BC4F 04 -  -  -          inc b
 1262 D1:BC50 14 -  -  -          inc d
 1263 D1:BC51 09 -  -  -  _:      add hl,bc   ;full address
 1264 D1:BC52 7E -  -  -          READ_ACCESS
 1265 D1:BC53 3D -  -  -          dec a
 1266 D1:BC54 47 -  -  -          ld  b,a
 1267 D1:BC55 -  -  -  -          ;
 1268 D1:BC55 DD 7E 04 -          ld  a,(ix+REGSR)
 1269 D1:BC58 CB 8F -  -          res SF_ZERO,a
 1270 D1:BC5A 20 02 -  -          jr  nz,$+4
 1271 D1:BC5C CB CF -  -          set SF_ZERO,a
 1272 D1:BC5E CB BF -  -          res SF_NEG,a
 1273 D1:BC60 FA 65 BC D1         jp  m,$+5
 1274 D1:BC64 CB FF -  -          set SF_NEG,a
 1275 D1:BC66 DD 77 04 -          ld  (ix+REGSR),a
 1276 D1:BC69 -  -  -  -          ;
 1277 D1:BC69 70 -  -  -          WRITE_ACCESS
 1278 D1:BC6A ED 33 07 -          ADDCYC(7)
 1279 D1:BC6D E1 -  -  -      pop hl
 1280 D1:BC6E C3 E9 B2 D1     jp i6502NextLoad
 1281 D1:BC72 -  -  -  -  
 1282 D1:BC72 -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1283 D1:BC72 -  -  -  -  ;Flags altered: NZ
 1284 D1:BC72 -  -  -  -  ;implied	DEX	CA	1	2  
 1285 D1:BC72 -  -  -  -  inst6502_dex:
 1286 D1:BC72 DD 35 01 -      dec (ix+REGX)
 1287 D1:BC75 DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1288 D1:BC78 CB 8F -  -      res SF_ZERO,a
 1289 D1:BC7A 20 02 -  -      jr  nz,$+4
 1290 D1:BC7C CB CF -  -      set SF_ZERO,a
 1291 D1:BC7E CB BF -  -      res SF_NEG,a
 1292 D1:BC80 FA 85 BC D1     jp  m,$+5
 1293 D1:BC84 CB FF -  -      set SF_NEG,a
 1294 D1:BC86 DD 77 04 -      ld  (ix+REGSR),a
 1295 D1:BC89 ED 33 02 -      ADDCYC(2)
 1296 D1:BC8C C3 02 B3 D1     jp i6502FinishLoad
 1297 D1:BC90 -  -  -  -  
 1298 D1:BC90 -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1299 D1:BC90 -  -  -  -  ;Flags altered: NZ
 1300 D1:BC90 -  -  -  -  ;implied	DEY	88	1	2  
 1301 D1:BC90 -  -  -  -  inst6502_dey:
 1302 D1:BC90 DD 35 02 -      dec (ix+REGY)
 1303 D1:BC93 18 E0 -  -      jr  -_
 1304 D1:BC95 -  -  -  -  
 1305 D1:BC95 -  -  -  -  
 1306 D1:BC95 -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1307 D1:BC95 -  -  -  -  ;Flags altered: NZ
 1308 D1:BC95 -  -  -  -  ;implied	INX	E8	1	2  
 1309 D1:BC95 -  -  -  -  inst6502_inx:
 1310 D1:BC95 DD 34 01 -      inc (ix+REGX)
 1311 D1:BC98 18 DB -  -      jr  -_
 1312 D1:BC9A -  -  -  -  
 1313 D1:BC9A -  -  -  -  
 1314 D1:BC9A -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1315 D1:BC9A -  -  -  -  ;Flags altered: NZ
 1316 D1:BC9A -  -  -  -  ;implied	INY	C8	1	2  
 1317 D1:BC9A -  -  -  -  inst6502_iny:
 1318 D1:BC9A DD 34 02 -      inc (ix+REGY)
 1319 D1:BC9D 18 D6 -  -      jr  -_
 1320 D1:BC9F -  -  -  -  
 1321 D1:BC9F -  -  -  -  
 1322 D1:BC9F -  -  -  -  ;INC - Increment Memory by One
 1323 D1:BC9F -  -  -  -  ;    M + 1 -> M
 1324 D1:BC9F -  -  -  -  ;    N	Z	C	I	D	V
 1325 D1:BC9F -  -  -  -  ;    +	+	-	-	-	-
 1326 D1:BC9F -  -  -  -  
 1327 D1:BC9F -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1328 D1:BC9F -  -  -  -  inst6502_inc_zp:
 1329 D1:BC9F 7E -  -  -      ld  a,(hl)
 1330 D1:BCA0 01 00 38 D0     ld  bc,ZEROPAGE
 1331 D1:BCA4 81 -  -  -      add a,c
 1332 D1:BCA5 4F -  -  -      ld  c,a
 1333 D1:BCA6 0A -  -  -      ld  a,(bc)
 1334 D1:BCA7 3C -  -  -      inc a
 1335 D1:BCA8 02 -  -  -      ld  (bc),a
 1336 D1:BCA9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1337 D1:BCBC ED 33 05 -      ADDCYC(5)
 1338 D1:BCBF C3 E9 B2 D1     jp i6502NextLoad
 1339 D1:BCC3 -  -  -  -  
 1340 D1:BCC3 -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1341 D1:BCC3 -  -  -  -  inst6502_inc_zpx:
 1342 D1:BCC3 7E -  -  -      ld  a,(hl)
 1343 D1:BCC4 01 00 38 D0     ld  bc,ZEROPAGE
 1344 D1:BCC8 81 -  -  -      add a,c
 1345 D1:BCC9 DD 86 01 -      add a,(ix+REGX)
 1346 D1:BCCC 4F -  -  -      ld  c,a
 1347 D1:BCCD 0A -  -  -      ld  a,(bc)
 1348 D1:BCCE 3C -  -  -      inc a
 1349 D1:BCCF 02 -  -  -      ld  (bc),a
 1350 D1:BCD0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1351 D1:BCE3 ED 33 06 -      ADDCYC(6)
 1352 D1:BCE6 C3 E9 B2 D1     jp i6502NextLoad
 1353 D1:BCEA -  -  -  -      
 1354 D1:BCEA -  -  -  -  ;absolute	INC oper	EE	3	6
 1355 D1:BCEA -  -  -  -  inst6502_inc_abs:
 1356 D1:BCEA CD 06 B5 D1     call subroutine6502_abs_split_start
 1357 D1:BCEE E5 -  -  -      push hl
 1358 D1:BCEF 50 -  -  -          ld  d,b
 1359 D1:BCF0 79 -  -  -          ld  a,c
 1360 D1:BCF1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1361 D1:BCF3 ED 4C -  -          mlt bc
 1362 D1:BCF5 21 00 40 D0         ld  hl,PAGETABLE
 1363 D1:BCF9 09 -  -  -          add hl,bc
 1364 D1:BCFA ED 27 -  -          ld  hl,(hl)
 1365 D1:BCFC 06 00 -  -          ld  b,0
 1366 D1:BCFE 4F -  -  -          ld  c,a
 1367 D1:BCFF 09 -  -  -          add hl,bc   ;full address
 1368 D1:BD00 7E -  -  -          READ_ACCESS
 1369 D1:BD01 3C -  -  -          inc a
 1370 D1:BD02 47 -  -  -          ld  b,a
 1371 D1:BD03 -  -  -  -          ;
 1372 D1:BD03 DD 7E 04 -          ld  a,(ix+REGSR)
 1373 D1:BD06 CB 8F -  -          res SF_ZERO,a
 1374 D1:BD08 20 02 -  -          jr  nz,$+4
 1375 D1:BD0A CB CF -  -          set SF_ZERO,a
 1376 D1:BD0C CB BF -  -          res SF_NEG,a
 1377 D1:BD0E FA 13 BD D1         jp  m,$+5
 1378 D1:BD12 CB FF -  -          set SF_NEG,a
 1379 D1:BD14 DD 77 04 -          ld  (ix+REGSR),a
 1380 D1:BD17 -  -  -  -          ;
 1381 D1:BD17 70 -  -  -          WRITE_ACCESS
 1382 D1:BD18 ED 33 06 -          ADDCYC(6)
 1383 D1:BD1B E1 -  -  -      pop hl
 1384 D1:BD1C C3 E9 B2 D1     jp i6502NextLoad
 1385 D1:BD20 -  -  -  -  
 1386 D1:BD20 -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1387 D1:BD20 -  -  -  -  inst6502_inc_absx:
 1388 D1:BD20 CD 06 B5 D1     call subroutine6502_abs_split_start
 1389 D1:BD24 E5 -  -  -      push hl
 1390 D1:BD25 50 -  -  -          ld  d,b
 1391 D1:BD26 79 -  -  -          ld  a,c
 1392 D1:BD27 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1393 D1:BD29 ED 4C -  -          mlt bc
 1394 D1:BD2B 21 00 40 D0         ld  hl,PAGETABLE
 1395 D1:BD2F 09 -  -  -          add hl,bc
 1396 D1:BD30 ED 27 -  -          ld  hl,(hl)
 1397 D1:BD32 06 00 -  -          ld  b,0
 1398 D1:BD34 DD 86 01 -          add a,(ix+REGX)
 1399 D1:BD37 4F -  -  -          ld  c,a
 1400 D1:BD38 30 02 -  -          jr nc,+_
 1401 D1:BD3A 04 -  -  -          inc b
 1402 D1:BD3B 14 -  -  -          inc d
 1403 D1:BD3C 09 -  -  -  _:      add hl,bc   ;full address
 1404 D1:BD3D 7E -  -  -          READ_ACCESS
 1405 D1:BD3E 3C -  -  -          inc a
 1406 D1:BD3F 47 -  -  -          ld  b,a
 1407 D1:BD40 -  -  -  -          ;
 1408 D1:BD40 DD 7E 04 -          ld  a,(ix+REGSR)
 1409 D1:BD43 CB 8F -  -          res SF_ZERO,a
 1410 D1:BD45 20 02 -  -          jr  nz,$+4
 1411 D1:BD47 CB CF -  -          set SF_ZERO,a
 1412 D1:BD49 CB BF -  -          res SF_NEG,a
 1413 D1:BD4B FA 50 BD D1         jp  m,$+5
 1414 D1:BD4F CB FF -  -          set SF_NEG,a
 1415 D1:BD51 DD 77 04 -          ld  (ix+REGSR),a
 1416 D1:BD54 -  -  -  -          ;
 1417 D1:BD54 70 -  -  -          WRITE_ACCESS
 1418 D1:BD55 ED 33 07 -          ADDCYC(7)
 1419 D1:BD58 E1 -  -  -      pop hl
 1420 D1:BD59 C3 E9 B2 D1     jp i6502NextLoad
 1421 D1:BD5D -  -  -  -  
 1422 D1:BD5D -  -  -  -  ;-----------------------------------------------------------------------------
 1423 D1:BD5D -  -  -  -  ;-----------------------------------------------------------------------------
 1424 D1:BD5D -  -  -  -  ;-----------------------------------------------------------------------------
 1425 D1:BD5D -  -  -  -  ;Instructions by type: Arithmetic Operations
 1426 D1:BD5D -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1427 D1:BD5D -  -  -  -  ;    N	Z	C	I	D	V
 1428 D1:BD5D -  -  -  -  ;    +	+	+	-	-	+
 1429 D1:BD5D -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1430 D1:BD5D -  -  -  -  
 1431 D1:BD5D -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1432 D1:BD5D -  -  -  -  inst6502_adc_imm:
 1433 D1:BD5D ED 33 02 -      ADDCYC(2)
 1434 D1:BD60 4E -  -  -      ld  c,(hl)
 1435 D1:BD61 C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1436 D1:BD65 -  -  -  -      
 1437 D1:BD65 -  -  -  -  
 1438 D1:BD65 -  -  -  -  ;zeropage	ADC oper	65	2	3
 1439 D1:BD65 -  -  -  -  inst6502_adc_zp:
 1440 D1:BD65 ED 33 03 -      ADDCYC(3)
 1441 D1:BD68 7E -  -  -      ld  a,(hl)
 1442 D1:BD69 01 00 38 D0     ld  bc,ZEROPAGE
 1443 D1:BD6D 81 -  -  -      add a,c
 1444 D1:BD6E 4F -  -  -      ld  c,a
 1445 D1:BD6F 0A -  -  -      ld  a,(bc)
 1446 D1:BD70 4F -  -  -      ld  c,a
 1447 D1:BD71 C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1448 D1:BD75 -  -  -  -  
 1449 D1:BD75 -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1450 D1:BD75 -  -  -  -  inst6502_adc_zpx:
 1451 D1:BD75 ED 33 04 -      ADDCYC(4)
 1452 D1:BD78 7E -  -  -      ld  a,(hl)
 1453 D1:BD79 DD 86 01 -      add a,(ix+REGX)
 1454 D1:BD7C 01 00 38 D0     ld  bc,ZEROPAGE
 1455 D1:BD80 81 -  -  -      add a,c
 1456 D1:BD81 4F -  -  -      ld  c,a
 1457 D1:BD82 0A -  -  -      ld  a,(bc)
 1458 D1:BD83 4F -  -  -      ld  c,a
 1459 D1:BD84 C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1460 D1:BD88 -  -  -  -  
 1461 D1:BD88 -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1462 D1:BD88 -  -  -  -  inst6502_adc_abs:
 1463 D1:BD88 ED 33 04 -      ADDCYC(4)
 1464 D1:BD8B CD 06 B5 D1     call subroutine6502_abs_split_start
 1465 D1:BD8F E5 -  -  -      push hl
 1466 D1:BD90 50 -  -  -          ld  d,b
 1467 D1:BD91 79 -  -  -          ld  a,c
 1468 D1:BD92 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1469 D1:BD94 ED 4C -  -          mlt bc
 1470 D1:BD96 21 00 40 D0         ld  hl,PAGETABLE
 1471 D1:BD9A 09 -  -  -          add hl,bc
 1472 D1:BD9B ED 27 -  -          ld  hl,(hl)
 1473 D1:BD9D 06 00 -  -          ld  b,0
 1474 D1:BD9F 4F -  -  -          ld  c,a
 1475 D1:BDA0 09 -  -  -          add hl,bc   ;full address
 1476 D1:BDA1 7E -  -  -          READ_ACCESS
 1477 D1:BDA2 E1 -  -  -      pop hl
 1478 D1:BDA3 4F -  -  -      ld  c,a
 1479 D1:BDA4 C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1480 D1:BDA8 -  -  -  -  
 1481 D1:BDA8 -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1482 D1:BDA8 -  -  -  -  inst6502_adc_absx:
 1483 D1:BDA8 ED 33 04 -      ADDCYC(4)
 1484 D1:BDAB CD 06 B5 D1     call subroutine6502_abs_split_start
 1485 D1:BDAF E5 -  -  -      push hl
 1486 D1:BDB0 50 -  -  -          ld  d,b
 1487 D1:BDB1 79 -  -  -          ld  a,c
 1488 D1:BDB2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1489 D1:BDB4 ED 4C -  -          mlt bc
 1490 D1:BDB6 21 00 40 D0         ld  hl,PAGETABLE
 1491 D1:BDBA 09 -  -  -          add hl,bc
 1492 D1:BDBB ED 27 -  -          ld  hl,(hl)
 1493 D1:BDBD 06 00 -  -          ld  b,0
 1494 D1:BDBF DD 86 01 -          add a,(ix+REGX)
 1495 D1:BDC2 4F -  -  -          ld  c,a
 1496 D1:BDC3 30 04 -  -          jr  nc,+_
 1497 D1:BDC5 FD 23 -  -          ADDCYC(1)
 1498 D1:BDC7 04 -  -  -          inc b
 1499 D1:BDC8 14 -  -  -          inc d
 1500 D1:BDC9 09 -  -  -  _:      add hl,bc   ;full address
 1501 D1:BDCA 7E -  -  -          READ_ACCESS
 1502 D1:BDCB E1 -  -  -      pop hl
 1503 D1:BDCC 4F -  -  -      ld  c,a
 1504 D1:BDCD C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1505 D1:BDD1 -  -  -  -  
 1506 D1:BDD1 -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1507 D1:BDD1 -  -  -  -  inst6502_adc_absy:
 1508 D1:BDD1 ED 33 04 -      ADDCYC(4)
 1509 D1:BDD4 CD 06 B5 D1     call subroutine6502_abs_split_start
 1510 D1:BDD8 E5 -  -  -      push hl
 1511 D1:BDD9 50 -  -  -          ld  d,b
 1512 D1:BDDA 79 -  -  -          ld  a,c
 1513 D1:BDDB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1514 D1:BDDD ED 4C -  -          mlt bc
 1515 D1:BDDF 21 00 40 D0         ld  hl,PAGETABLE
 1516 D1:BDE3 09 -  -  -          add hl,bc
 1517 D1:BDE4 ED 27 -  -          ld  hl,(hl)
 1518 D1:BDE6 06 00 -  -          ld  b,0
 1519 D1:BDE8 DD 86 02 -          add a,(ix+REGY)
 1520 D1:BDEB 4F -  -  -          ld  c,a
 1521 D1:BDEC 30 04 -  -          jr  nc,+_
 1522 D1:BDEE FD 23 -  -          ADDCYC(1)
 1523 D1:BDF0 04 -  -  -          inc b
 1524 D1:BDF1 14 -  -  -          inc d
 1525 D1:BDF2 09 -  -  -  _:      add hl,bc   ;full address
 1526 D1:BDF3 7E -  -  -          READ_ACCESS
 1527 D1:BDF4 E1 -  -  -      pop hl
 1528 D1:BDF5 4F -  -  -      ld  c,a
 1529 D1:BDF6 C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1530 D1:BDFA -  -  -  -  
 1531 D1:BDFA -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1532 D1:BDFA -  -  -  -  inst6502_adc_indx:
 1533 D1:BDFA ED 33 06 -      ADDCYC(6)
 1534 D1:BDFD E5 -  -  -      push hl
 1535 D1:BDFE 7E -  -  -          ld  a,(hl)
 1536 D1:BDFF 21 00 38 D0         ld  hl,ZEROPAGE
 1537 D1:BE03 85 -  -  -          add a,L
 1538 D1:BE04 DD 86 01 -          add a,(ix+REGX)
 1539 D1:BE07 6F -  -  -          ld  L,a
 1540 D1:BE08 7E -  -  -          ld  a,(hl)
 1541 D1:BE09 2C -  -  -          inc L
 1542 D1:BE0A 56 -  -  -          ld  d,(hl)
 1543 D1:BE0B 42 -  -  -          ld  b,d
 1544 D1:BE0C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1545 D1:BE0E ED 4C -  -          mlt bc
 1546 D1:BE10 21 00 40 D0         ld  hl,PAGETABLE
 1547 D1:BE14 09 -  -  -          add hl,bc
 1548 D1:BE15 ED 27 -  -          ld  hl,(hl)
 1549 D1:BE17 06 00 -  -          ld  b,0
 1550 D1:BE19 4F -  -  -          ld  c,a
 1551 D1:BE1A 09 -  -  -          add hl,bc
 1552 D1:BE1B 7E -  -  -          READ_ACCESS
 1553 D1:BE1C E1 -  -  -      pop hl
 1554 D1:BE1D 4F -  -  -      ld  c,a
 1555 D1:BE1E C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1556 D1:BE22 -  -  -  -  
 1557 D1:BE22 -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1558 D1:BE22 -  -  -  -  inst6502_adc_indy:
 1559 D1:BE22 E5 -  -  -      push hl
 1560 D1:BE23 7E -  -  -          ld  a,(hl)
 1561 D1:BE24 21 00 38 D0         ld  hl,ZEROPAGE
 1562 D1:BE28 85 -  -  -          add a,L
 1563 D1:BE29 6F -  -  -          ld  L,a
 1564 D1:BE2A 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1565 D1:BE2B 2C -  -  -          inc L
 1566 D1:BE2C DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1567 D1:BE2F 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1568 D1:BE30 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1569 D1:BE32 FD 23 -  -          ADDCYC(1)
 1570 D1:BE34 24 -  -  -          inc h
 1571 D1:BE35 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1572 D1:BE36 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1573 D1:BE38 ED 6C -  -          mlt hl          ;23.
 1574 D1:BE3A 01 00 40 D0         ld  bc,PAGETABLE
 1575 D1:BE3E 09 -  -  -          add hl,bc
 1576 D1:BE3F ED 27 -  -          ld  hl,(hl)     ;address get.
 1577 D1:BE41 01 00 00 00         ld  bc,0
 1578 D1:BE45 4F -  -  -          ld  c,a
 1579 D1:BE46 09 -  -  -          add hl,bc       ;Full address get.
 1580 D1:BE47 7E -  -  -          READ_ACCESS
 1581 D1:BE48 E1 -  -  -      pop hl
 1582 D1:BE49 4F -  -  -      ld  c,a
 1583 D1:BE4A C3 22 B5 D1     jp  subroutine6502_adc_combined_end
 1584 D1:BE4E -  -  -  -  
 1585 D1:BE4E -  -  -  -  
 1586 D1:BE4E -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1587 D1:BE4E -  -  -  -  ;A - M - C̅ -> A
 1588 D1:BE4E -  -  -  -  ;N	Z	C	I	D	V
 1589 D1:BE4E -  -  -  -  ;+	+	+	-	-	+
 1590 D1:BE4E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1591 D1:BE4E -  -  -  -  
 1592 D1:BE4E -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1593 D1:BE4E -  -  -  -  inst6502_sbc_imm:
 1594 D1:BE4E ED 33 02 -      ADDCYC(2)
 1595 D1:BE51 4E -  -  -      ld  c,(hl)
 1596 D1:BE52 C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1597 D1:BE56 -  -  -  -  
 1598 D1:BE56 -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1599 D1:BE56 -  -  -  -  inst6502_sbc_zp:
 1600 D1:BE56 ED 33 03 -      ADDCYC(3)
 1601 D1:BE59 7E -  -  -      ld  a,(hl)
 1602 D1:BE5A 01 00 38 D0     ld  bc,ZEROPAGE
 1603 D1:BE5E 81 -  -  -      add a,c
 1604 D1:BE5F 4F -  -  -      ld  c,a
 1605 D1:BE60 0A -  -  -      ld  a,(bc)
 1606 D1:BE61 4F -  -  -      ld  c,a
 1607 D1:BE62 C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1608 D1:BE66 -  -  -  -  
 1609 D1:BE66 -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1610 D1:BE66 -  -  -  -  inst6502_sbc_zpx:
 1611 D1:BE66 ED 33 04 -      ADDCYC(4)
 1612 D1:BE69 7E -  -  -      ld  a,(hl)
 1613 D1:BE6A DD 86 01 -      add a,(ix+REGX)
 1614 D1:BE6D 01 00 38 D0     ld  bc,ZEROPAGE
 1615 D1:BE71 81 -  -  -      add a,c
 1616 D1:BE72 4F -  -  -      ld  c,a
 1617 D1:BE73 0A -  -  -      ld  a,(bc)
 1618 D1:BE74 4F -  -  -      ld  c,a
 1619 D1:BE75 C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1620 D1:BE79 -  -  -  -  
 1621 D1:BE79 -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1622 D1:BE79 -  -  -  -  inst6502_sbc_abs:
 1623 D1:BE79 ED 33 04 -      ADDCYC(4)
 1624 D1:BE7C CD 06 B5 D1     call subroutine6502_abs_split_start
 1625 D1:BE80 E5 -  -  -      push hl
 1626 D1:BE81 50 -  -  -          ld  d,b
 1627 D1:BE82 79 -  -  -          ld  a,c
 1628 D1:BE83 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1629 D1:BE85 ED 4C -  -          mlt bc
 1630 D1:BE87 21 00 40 D0         ld  hl,PAGETABLE
 1631 D1:BE8B 09 -  -  -          add hl,bc
 1632 D1:BE8C ED 27 -  -          ld  hl,(hl)
 1633 D1:BE8E 06 00 -  -          ld  b,0
 1634 D1:BE90 4F -  -  -          ld  c,a
 1635 D1:BE91 09 -  -  -          add hl,bc   ;full address
 1636 D1:BE92 7E -  -  -          READ_ACCESS
 1637 D1:BE93 E1 -  -  -      pop hl
 1638 D1:BE94 4F -  -  -      ld  c,a
 1639 D1:BE95 C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1640 D1:BE99 -  -  -  -  
 1641 D1:BE99 -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1642 D1:BE99 -  -  -  -  inst6502_sbc_absx:
 1643 D1:BE99 ED 33 04 -      ADDCYC(4)
 1644 D1:BE9C CD 06 B5 D1     call subroutine6502_abs_split_start
 1645 D1:BEA0 E5 -  -  -      push hl
 1646 D1:BEA1 50 -  -  -          ld  d,b
 1647 D1:BEA2 79 -  -  -          ld  a,c
 1648 D1:BEA3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1649 D1:BEA5 ED 4C -  -          mlt bc
 1650 D1:BEA7 21 00 40 D0         ld  hl,PAGETABLE
 1651 D1:BEAB 09 -  -  -          add hl,bc
 1652 D1:BEAC ED 27 -  -          ld  hl,(hl)
 1653 D1:BEAE 06 00 -  -          ld  b,0
 1654 D1:BEB0 DD 86 01 -          add a,(ix+REGX)
 1655 D1:BEB3 4F -  -  -          ld  c,a
 1656 D1:BEB4 30 04 -  -          jr  nc,+_
 1657 D1:BEB6 FD 23 -  -          ADDCYC(1)
 1658 D1:BEB8 04 -  -  -          inc b
 1659 D1:BEB9 14 -  -  -          inc d
 1660 D1:BEBA 09 -  -  -  _:      add hl,bc   ;full address
 1661 D1:BEBB 7E -  -  -          READ_ACCESS
 1662 D1:BEBC E1 -  -  -      pop hl
 1663 D1:BEBD 4F -  -  -      ld  c,a
 1664 D1:BEBE C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1665 D1:BEC2 -  -  -  -  
 1666 D1:BEC2 -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1667 D1:BEC2 -  -  -  -  inst6502_sbc_absy:
 1668 D1:BEC2 ED 33 04 -      ADDCYC(4)
 1669 D1:BEC5 CD 06 B5 D1     call subroutine6502_abs_split_start
 1670 D1:BEC9 E5 -  -  -      push hl
 1671 D1:BECA 50 -  -  -          ld  d,b
 1672 D1:BECB 79 -  -  -          ld  a,c
 1673 D1:BECC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1674 D1:BECE ED 4C -  -          mlt bc
 1675 D1:BED0 21 00 40 D0         ld  hl,PAGETABLE
 1676 D1:BED4 09 -  -  -          add hl,bc
 1677 D1:BED5 ED 27 -  -          ld  hl,(hl)
 1678 D1:BED7 06 00 -  -          ld  b,0
 1679 D1:BED9 DD 86 02 -          add a,(ix+REGY)
 1680 D1:BEDC 4F -  -  -          ld  c,a
 1681 D1:BEDD 30 04 -  -          jr  nc,+_
 1682 D1:BEDF FD 23 -  -          ADDCYC(1)
 1683 D1:BEE1 04 -  -  -          inc b
 1684 D1:BEE2 14 -  -  -          inc d
 1685 D1:BEE3 09 -  -  -  _:      add hl,bc   ;full address
 1686 D1:BEE4 7E -  -  -          READ_ACCESS
 1687 D1:BEE5 E1 -  -  -      pop hl
 1688 D1:BEE6 4F -  -  -      ld  c,a
 1689 D1:BEE7 C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1690 D1:BEEB -  -  -  -  
 1691 D1:BEEB -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1692 D1:BEEB -  -  -  -  inst6502_sbc_indx:
 1693 D1:BEEB ED 33 06 -      ADDCYC(6)
 1694 D1:BEEE E5 -  -  -      push hl
 1695 D1:BEEF 7E -  -  -          ld  a,(hl)
 1696 D1:BEF0 21 00 38 D0         ld  hl,ZEROPAGE
 1697 D1:BEF4 85 -  -  -          add a,L
 1698 D1:BEF5 DD 86 01 -          add a,(ix+REGX)
 1699 D1:BEF8 6F -  -  -          ld  L,a
 1700 D1:BEF9 7E -  -  -          ld  a,(hl)
 1701 D1:BEFA 2C -  -  -          inc L
 1702 D1:BEFB 56 -  -  -          ld  d,(hl)
 1703 D1:BEFC 42 -  -  -          ld  b,d
 1704 D1:BEFD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1705 D1:BEFF ED 4C -  -          mlt bc
 1706 D1:BF01 21 00 40 D0         ld  hl,PAGETABLE
 1707 D1:BF05 09 -  -  -          add hl,bc
 1708 D1:BF06 ED 27 -  -          ld  hl,(hl)
 1709 D1:BF08 06 00 -  -          ld  b,0
 1710 D1:BF0A 4F -  -  -          ld  c,a
 1711 D1:BF0B 09 -  -  -          add hl,bc
 1712 D1:BF0C 7E -  -  -          READ_ACCESS
 1713 D1:BF0D E1 -  -  -      pop hl
 1714 D1:BF0E 4F -  -  -      ld  c,a
 1715 D1:BF0F C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1716 D1:BF13 -  -  -  -  
 1717 D1:BF13 -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1718 D1:BF13 -  -  -  -  inst6502_sbc_indy:
 1719 D1:BF13 E5 -  -  -      push hl
 1720 D1:BF14 7E -  -  -          ld  a,(hl)
 1721 D1:BF15 21 00 38 D0         ld  hl,ZEROPAGE
 1722 D1:BF19 85 -  -  -          add a,L
 1723 D1:BF1A 6F -  -  -          ld  L,a
 1724 D1:BF1B 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1725 D1:BF1C 2C -  -  -          inc L
 1726 D1:BF1D DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1727 D1:BF20 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1728 D1:BF21 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1729 D1:BF23 FD 23 -  -          ADDCYC(1)
 1730 D1:BF25 24 -  -  -          inc h
 1731 D1:BF26 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1732 D1:BF27 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1733 D1:BF29 ED 6C -  -          mlt hl          ;23.
 1734 D1:BF2B 01 00 40 D0         ld  bc,PAGETABLE
 1735 D1:BF2F 09 -  -  -          add hl,bc
 1736 D1:BF30 ED 27 -  -          ld  hl,(hl)     ;address get.
 1737 D1:BF32 01 00 00 00         ld  bc,0
 1738 D1:BF36 4F -  -  -          ld  c,a
 1739 D1:BF37 09 -  -  -          add hl,bc       ;Full address get.
 1740 D1:BF38 7E -  -  -          READ_ACCESS
 1741 D1:BF39 E1 -  -  -      pop hl
 1742 D1:BF3A 4F -  -  -      ld  c,a
 1743 D1:BF3B C3 52 B5 D1     jp  subroutine6502_sbc_combined_end
 1744 D1:BF3F -  -  -  -  
 1745 D1:BF3F -  -  -  -  
 1746 D1:BF3F -  -  -  -  
 1747 D1:BF3F -  -  -  -  ;-----------------------------------------------------------------------------
 1748 D1:BF3F -  -  -  -  ;-----------------------------------------------------------------------------
 1749 D1:BF3F -  -  -  -  ;-----------------------------------------------------------------------------
 1750 D1:BF3F -  -  -  -  ;Instructions by type: Logical Operations
 1751 D1:BF3F -  -  -  -  
 1752 D1:BF3F -  -  -  -  ;AND - AND Memory with Accumulator
 1753 D1:BF3F -  -  -  -  ;A AND M -> A
 1754 D1:BF3F -  -  -  -  ;N	Z	C	I	D	V
 1755 D1:BF3F -  -  -  -  ;+	+	-	-	-	-
 1756 D1:BF3F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1757 D1:BF3F -  -  -  -  
 1758 D1:BF3F -  -  -  -  ;immediate	AND #oper	29	2	2  
 1759 D1:BF3F -  -  -  -  inst6502_and_imm:
 1760 D1:BF3F ED 33 02 -      ADDCYC(2)
 1761 D1:BF42 7E -  -  -      ld  a,(hl)
 1762 D1:BF43 DD A6 00 -      and a,(ix+REGA)
 1763 D1:BF46 DD 77 00 -      ld  (ix+REGA),A
 1764 D1:BF49 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1765 D1:BF5C C3 E9 B2 D1     jp i6502NextLoad
 1766 D1:BF60 -  -  -  -  
 1767 D1:BF60 -  -  -  -  ;zeropage	AND oper	25	2	3  
 1768 D1:BF60 -  -  -  -  inst6502_and_zp:
 1769 D1:BF60 ED 33 03 -      ADDCYC(3)
 1770 D1:BF63 7E -  -  -      ld  a,(hl)
 1771 D1:BF64 01 00 38 D0     ld  bc,ZEROPAGE
 1772 D1:BF68 81 -  -  -      add a,c
 1773 D1:BF69 4F -  -  -      ld  c,a
 1774 D1:BF6A 0A -  -  -      ld  a,(bc)
 1775 D1:BF6B DD A6 00 -      and a,(ix+REGA)
 1776 D1:BF6E DD 77 00 -      ld  (ix+REGA),A
 1777 D1:BF71 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1778 D1:BF84 C3 E9 B2 D1     jp i6502NextLoad
 1779 D1:BF88 -  -  -  -  
 1780 D1:BF88 -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1781 D1:BF88 -  -  -  -  inst6502_and_zpx:
 1782 D1:BF88 ED 33 04 -      ADDCYC(4)
 1783 D1:BF8B 7E -  -  -      ld  a,(hl)
 1784 D1:BF8C 01 00 38 D0     ld  bc,ZEROPAGE
 1785 D1:BF90 81 -  -  -      add a,c
 1786 D1:BF91 DD 86 01 -      add a,(ix+REGX)
 1787 D1:BF94 4F -  -  -      ld  c,a
 1788 D1:BF95 0A -  -  -      ld  a,(bc)
 1789 D1:BF96 DD A6 00 -      and a,(ix+REGA)
 1790 D1:BF99 DD 77 00 -      ld  (ix+REGA),A
 1791 D1:BF9C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1792 D1:BFAF C3 E9 B2 D1     jp i6502NextLoad
 1793 D1:BFB3 -  -  -  -  
 1794 D1:BFB3 -  -  -  -  ;absolute	AND oper	2D	3	4  
 1795 D1:BFB3 -  -  -  -  inst6502_and_abs:
 1796 D1:BFB3 ED 33 04 -      ADDCYC(4)
 1797 D1:BFB6 CD 06 B5 D1     call subroutine6502_abs_split_start
 1798 D1:BFBA E5 -  -  -      push hl
 1799 D1:BFBB 50 -  -  -          ld  d,b
 1800 D1:BFBC 79 -  -  -          ld  a,c
 1801 D1:BFBD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1802 D1:BFBF ED 4C -  -          mlt bc
 1803 D1:BFC1 21 00 40 D0         ld  hl,PAGETABLE
 1804 D1:BFC5 09 -  -  -          add hl,bc
 1805 D1:BFC6 ED 27 -  -          ld  hl,(hl)
 1806 D1:BFC8 06 00 -  -          ld  b,0
 1807 D1:BFCA 4F -  -  -          ld  c,a
 1808 D1:BFCB 09 -  -  -          add hl,bc   ;full address
 1809 D1:BFCC 7E -  -  -          READ_ACCESS
 1810 D1:BFCD E1 -  -  -      pop hl
 1811 D1:BFCE DD A6 00 -      and a,(ix+REGA)
 1812 D1:BFD1 DD 77 00 -      ld  (ix+REGA),A
 1813 D1:BFD4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1814 D1:BFE7 C3 E9 B2 D1     jp i6502NextLoad
 1815 D1:BFEB -  -  -  -  
 1816 D1:BFEB -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1817 D1:BFEB -  -  -  -  inst6502_and_absx:
 1818 D1:BFEB ED 33 04 -      ADDCYC(4)
 1819 D1:BFEE CD 06 B5 D1     call subroutine6502_abs_split_start
 1820 D1:BFF2 E5 -  -  -      push hl
 1821 D1:BFF3 50 -  -  -          ld  d,b
 1822 D1:BFF4 79 -  -  -          ld  a,c
 1823 D1:BFF5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1824 D1:BFF7 ED 4C -  -          mlt bc
 1825 D1:BFF9 21 00 40 D0         ld  hl,PAGETABLE
 1826 D1:BFFD 09 -  -  -          add hl,bc
 1827 D1:BFFE ED 27 -  -          ld  hl,(hl)
 1828 D1:C000 06 00 -  -          ld  b,0
 1829 D1:C002 DD 86 01 -          add a,(ix+REGX)
 1830 D1:C005 4F -  -  -          ld  c,a
 1831 D1:C006 30 04 -  -          jr  nc,+_
 1832 D1:C008 04 -  -  -          inc b
 1833 D1:C009 14 -  -  -          inc d
 1834 D1:C00A FD 23 -  -          ADDCYC(1)
 1835 D1:C00C 09 -  -  -  _:      add hl,bc   ;full address
 1836 D1:C00D 7E -  -  -          READ_ACCESS
 1837 D1:C00E E1 -  -  -      pop hl
 1838 D1:C00F DD A6 00 -      and a,(ix+REGA)
 1839 D1:C012 DD 77 00 -      ld  (ix+REGA),A
 1840 D1:C015 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1841 D1:C028 C3 E9 B2 D1     jp i6502NextLoad
 1842 D1:C02C -  -  -  -  
 1843 D1:C02C -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1844 D1:C02C -  -  -  -  inst6502_and_absy:
 1845 D1:C02C ED 33 04 -      ADDCYC(4)
 1846 D1:C02F CD 06 B5 D1     call subroutine6502_abs_split_start
 1847 D1:C033 E5 -  -  -      push hl
 1848 D1:C034 50 -  -  -          ld  d,b
 1849 D1:C035 79 -  -  -          ld  a,c
 1850 D1:C036 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1851 D1:C038 ED 4C -  -          mlt bc
 1852 D1:C03A 21 00 40 D0         ld  hl,PAGETABLE
 1853 D1:C03E 09 -  -  -          add hl,bc
 1854 D1:C03F ED 27 -  -          ld  hl,(hl)
 1855 D1:C041 06 00 -  -          ld  b,0
 1856 D1:C043 DD 86 02 -          add a,(ix+REGY)
 1857 D1:C046 4F -  -  -          ld  c,a
 1858 D1:C047 30 04 -  -          jr  nc,+_
 1859 D1:C049 04 -  -  -          inc b
 1860 D1:C04A 14 -  -  -          inc d
 1861 D1:C04B FD 23 -  -          ADDCYC(1)
 1862 D1:C04D 09 -  -  -  _:      add hl,bc   ;full address
 1863 D1:C04E 7E -  -  -          READ_ACCESS
 1864 D1:C04F E1 -  -  -      pop hl
 1865 D1:C050 DD A6 00 -      and a,(ix+REGA)
 1866 D1:C053 DD 77 00 -      ld  (ix+REGA),A
 1867 D1:C056 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1868 D1:C069 C3 E9 B2 D1     jp i6502NextLoad
 1869 D1:C06D -  -  -  -  
 1870 D1:C06D -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1871 D1:C06D -  -  -  -  inst6502_and_indx:
 1872 D1:C06D ED 33 06 -      ADDCYC(6)
 1873 D1:C070 E5 -  -  -      push hl
 1874 D1:C071 7E -  -  -          ld  a,(hl)
 1875 D1:C072 21 00 38 D0         ld  hl,ZEROPAGE
 1876 D1:C076 85 -  -  -          add a,L
 1877 D1:C077 DD 86 01 -          add a,(ix+REGX)
 1878 D1:C07A 6F -  -  -          ld  L,a
 1879 D1:C07B 7E -  -  -          ld  a,(hl)
 1880 D1:C07C 2C -  -  -          inc L
 1881 D1:C07D 56 -  -  -          ld  d,(hl)
 1882 D1:C07E 42 -  -  -          ld  b,d
 1883 D1:C07F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1884 D1:C081 ED 4C -  -          mlt bc
 1885 D1:C083 21 00 40 D0         ld  hl,PAGETABLE
 1886 D1:C087 09 -  -  -          add hl,bc
 1887 D1:C088 ED 27 -  -          ld  hl,(hl)
 1888 D1:C08A 06 00 -  -          ld  b,0
 1889 D1:C08C 4F -  -  -          ld  c,a
 1890 D1:C08D 09 -  -  -          add hl,bc
 1891 D1:C08E 7E -  -  -          READ_ACCESS
 1892 D1:C08F E1 -  -  -      pop hl
 1893 D1:C090 DD A6 00 -      and a,(ix+REGA)
 1894 D1:C093 DD 77 00 -      ld  (ix+REGA),A
 1895 D1:C096 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1896 D1:C0A9 C3 E9 B2 D1     jp i6502NextLoad
 1897 D1:C0AD -  -  -  -  
 1898 D1:C0AD -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1899 D1:C0AD -  -  -  -  inst6502_and_indy:
 1900 D1:C0AD ED 33 05 -      ADDCYC(5)
 1901 D1:C0B0 E5 -  -  -      push hl
 1902 D1:C0B1 7E -  -  -          ld  a,(hl)
 1903 D1:C0B2 21 00 38 D0         ld  hl,ZEROPAGE
 1904 D1:C0B6 85 -  -  -          add a,L
 1905 D1:C0B7 6F -  -  -          ld  L,a
 1906 D1:C0B8 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1907 D1:C0B9 2C -  -  -          inc L
 1908 D1:C0BA DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1909 D1:C0BD 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1910 D1:C0BE 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1911 D1:C0C0 24 -  -  -          inc h
 1912 D1:C0C1 FD 23 -  -          ADDCYC(1)
 1913 D1:C0C3 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1914 D1:C0C4 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1915 D1:C0C6 ED 6C -  -          mlt hl          ;23.
 1916 D1:C0C8 01 00 40 D0         ld  bc,PAGETABLE
 1917 D1:C0CC 09 -  -  -          add hl,bc
 1918 D1:C0CD ED 27 -  -          ld  hl,(hl)     ;address get.
 1919 D1:C0CF 01 00 00 00         ld  bc,0
 1920 D1:C0D3 4F -  -  -          ld  c,a
 1921 D1:C0D4 09 -  -  -          add hl,bc       ;Full address get.
 1922 D1:C0D5 7E -  -  -          READ_ACCESS
 1923 D1:C0D6 E1 -  -  -      pop hl
 1924 D1:C0D7 DD A6 00 -      and a,(ix+REGA)
 1925 D1:C0DA DD 77 00 -      ld  (ix+REGA),A
 1926 D1:C0DD DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1927 D1:C0F0 C3 E9 B2 D1     jp i6502NextLoad
 1928 D1:C0F4 -  -  -  -  
 1929 D1:C0F4 -  -  -  -  ;-----------------------------------------------------------------------------
 1930 D1:C0F4 -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1931 D1:C0F4 -  -  -  -  ;A EOR M -> A
 1932 D1:C0F4 -  -  -  -  ;N	Z	C	I	D	V
 1933 D1:C0F4 -  -  -  -  ;+	+	-	-	-	-
 1934 D1:C0F4 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1935 D1:C0F4 -  -  -  -  
 1936 D1:C0F4 -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1937 D1:C0F4 -  -  -  -  inst6502_eor_imm:
 1938 D1:C0F4 ED 33 02 -      ADDCYC(2)
 1939 D1:C0F7 7E -  -  -      ld  a,(hl)
 1940 D1:C0F8 DD AE 00 -      xor a,(ix+REGA)
 1941 D1:C0FB DD 77 00 -      ld  (ix+REGA),A
 1942 D1:C0FE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1943 D1:C111 C3 E9 B2 D1     jp i6502NextLoad
 1944 D1:C115 -  -  -  -  
 1945 D1:C115 -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1946 D1:C115 -  -  -  -  inst6502_eor_zp:
 1947 D1:C115 ED 33 03 -      ADDCYC(3)
 1948 D1:C118 7E -  -  -      ld  a,(hl)
 1949 D1:C119 01 00 38 D0     ld  bc,ZEROPAGE
 1950 D1:C11D 81 -  -  -      add a,c
 1951 D1:C11E 4F -  -  -      ld  c,a
 1952 D1:C11F 0A -  -  -      ld  a,(bc)
 1953 D1:C120 DD AE 00 -      xor a,(ix+REGA)
 1954 D1:C123 DD 77 00 -      ld  (ix+REGA),A
 1955 D1:C126 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1956 D1:C139 C3 E9 B2 D1     jp i6502NextLoad
 1957 D1:C13D -  -  -  -  
 1958 D1:C13D -  -  -  -  
 1959 D1:C13D -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 1960 D1:C13D -  -  -  -  inst6502_eor_zpx:
 1961 D1:C13D ED 33 04 -      ADDCYC(4)
 1962 D1:C140 7E -  -  -      ld  a,(hl)
 1963 D1:C141 01 00 38 D0     ld  bc,ZEROPAGE
 1964 D1:C145 81 -  -  -      add a,c
 1965 D1:C146 DD 86 01 -      add a,(ix+REGX)
 1966 D1:C149 4F -  -  -      ld  c,a
 1967 D1:C14A 0A -  -  -      ld  a,(bc)
 1968 D1:C14B DD AE 00 -      xor a,(ix+REGA)
 1969 D1:C14E DD 77 00 -      ld  (ix+REGA),A
 1970 D1:C151 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1971 D1:C164 C3 E9 B2 D1     jp i6502NextLoad
 1972 D1:C168 -  -  -  -  
 1973 D1:C168 -  -  -  -  ;absolute	EOR oper	4D	3	4  
 1974 D1:C168 -  -  -  -  inst6502_eor_abs:
 1975 D1:C168 ED 33 04 -      ADDCYC(4)
 1976 D1:C16B CD 06 B5 D1     call subroutine6502_abs_split_start
 1977 D1:C16F E5 -  -  -      push hl
 1978 D1:C170 50 -  -  -          ld  d,b
 1979 D1:C171 79 -  -  -          ld  a,c
 1980 D1:C172 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1981 D1:C174 ED 4C -  -          mlt bc
 1982 D1:C176 21 00 40 D0         ld  hl,PAGETABLE
 1983 D1:C17A 09 -  -  -          add hl,bc
 1984 D1:C17B ED 27 -  -          ld  hl,(hl)
 1985 D1:C17D 06 00 -  -          ld  b,0
 1986 D1:C17F 4F -  -  -          ld  c,a
 1987 D1:C180 09 -  -  -          add hl,bc   ;full address
 1988 D1:C181 7E -  -  -          READ_ACCESS
 1989 D1:C182 E1 -  -  -      pop hl
 1990 D1:C183 DD AE 00 -      xor a,(ix+REGA)
 1991 D1:C186 DD 77 00 -      ld  (ix+REGA),A
 1992 D1:C189 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1993 D1:C19C C3 E9 B2 D1     jp i6502NextLoad
 1994 D1:C1A0 -  -  -  -  
 1995 D1:C1A0 -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 1996 D1:C1A0 -  -  -  -  inst6502_eor_absx:
 1997 D1:C1A0 ED 33 04 -      ADDCYC(4)
 1998 D1:C1A3 CD 06 B5 D1     call subroutine6502_abs_split_start
 1999 D1:C1A7 E5 -  -  -      push hl
 2000 D1:C1A8 50 -  -  -          ld  d,b
 2001 D1:C1A9 79 -  -  -          ld  a,c
 2002 D1:C1AA 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2003 D1:C1AC ED 4C -  -          mlt bc
 2004 D1:C1AE 21 00 40 D0         ld  hl,PAGETABLE
 2005 D1:C1B2 09 -  -  -          add hl,bc
 2006 D1:C1B3 ED 27 -  -          ld  hl,(hl)
 2007 D1:C1B5 06 00 -  -          ld  b,0
 2008 D1:C1B7 DD 86 01 -          add a,(ix+REGX)
 2009 D1:C1BA 4F -  -  -          ld  c,a
 2010 D1:C1BB 30 04 -  -          jr  nc,+_
 2011 D1:C1BD 04 -  -  -          inc b
 2012 D1:C1BE 14 -  -  -          inc d
 2013 D1:C1BF FD 23 -  -          ADDCYC(1)
 2014 D1:C1C1 09 -  -  -  _:      add hl,bc   ;full address
 2015 D1:C1C2 7E -  -  -          READ_ACCESS
 2016 D1:C1C3 E1 -  -  -      pop hl
 2017 D1:C1C4 DD AE 00 -      xor a,(ix+REGA)
 2018 D1:C1C7 DD 77 00 -      ld  (ix+REGA),A
 2019 D1:C1CA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2020 D1:C1DD C3 E9 B2 D1     jp i6502NextLoad
 2021 D1:C1E1 -  -  -  -  
 2022 D1:C1E1 -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2023 D1:C1E1 -  -  -  -  inst6502_eor_absy:
 2024 D1:C1E1 ED 33 04 -      ADDCYC(4)
 2025 D1:C1E4 CD 06 B5 D1     call subroutine6502_abs_split_start
 2026 D1:C1E8 E5 -  -  -      push hl
 2027 D1:C1E9 50 -  -  -          ld  d,b
 2028 D1:C1EA 79 -  -  -          ld  a,c
 2029 D1:C1EB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2030 D1:C1ED ED 4C -  -          mlt bc
 2031 D1:C1EF 21 00 40 D0         ld  hl,PAGETABLE
 2032 D1:C1F3 09 -  -  -          add hl,bc
 2033 D1:C1F4 ED 27 -  -          ld  hl,(hl)
 2034 D1:C1F6 06 00 -  -          ld  b,0
 2035 D1:C1F8 DD 86 02 -          add a,(ix+REGY)
 2036 D1:C1FB 4F -  -  -          ld  c,a
 2037 D1:C1FC 30 04 -  -          jr  nc,+_
 2038 D1:C1FE 04 -  -  -          inc b
 2039 D1:C1FF 14 -  -  -          inc d
 2040 D1:C200 FD 23 -  -          ADDCYC(1)
 2041 D1:C202 09 -  -  -  _:      add hl,bc   ;full address
 2042 D1:C203 7E -  -  -          READ_ACCESS
 2043 D1:C204 E1 -  -  -      pop hl
 2044 D1:C205 DD AE 00 -      xor a,(ix+REGA)
 2045 D1:C208 DD 77 00 -      ld  (ix+REGA),A
 2046 D1:C20B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2047 D1:C21E C3 E9 B2 D1     jp i6502NextLoad
 2048 D1:C222 -  -  -  -  
 2049 D1:C222 -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2050 D1:C222 -  -  -  -  inst6502_eor_indx:
 2051 D1:C222 ED 33 06 -      ADDCYC(6)
 2052 D1:C225 E5 -  -  -      push hl
 2053 D1:C226 7E -  -  -          ld  a,(hl)
 2054 D1:C227 21 00 38 D0         ld  hl,ZEROPAGE
 2055 D1:C22B 85 -  -  -          add a,L
 2056 D1:C22C DD 86 01 -          add a,(ix+REGX)
 2057 D1:C22F 6F -  -  -          ld  L,a
 2058 D1:C230 7E -  -  -          ld  a,(hl)
 2059 D1:C231 2C -  -  -          inc L
 2060 D1:C232 56 -  -  -          ld  d,(hl)
 2061 D1:C233 42 -  -  -          ld  b,d
 2062 D1:C234 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2063 D1:C236 ED 4C -  -          mlt bc
 2064 D1:C238 21 00 40 D0         ld  hl,PAGETABLE
 2065 D1:C23C 09 -  -  -          add hl,bc
 2066 D1:C23D ED 27 -  -          ld  hl,(hl)
 2067 D1:C23F 06 00 -  -          ld  b,0
 2068 D1:C241 4F -  -  -          ld  c,a
 2069 D1:C242 09 -  -  -          add hl,bc
 2070 D1:C243 7E -  -  -          READ_ACCESS
 2071 D1:C244 E1 -  -  -      pop hl
 2072 D1:C245 DD AE 00 -      xor a,(ix+REGA)
 2073 D1:C248 DD 77 00 -      ld  (ix+REGA),A
 2074 D1:C24B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2075 D1:C25E C3 E9 B2 D1     jp i6502NextLoad
 2076 D1:C262 -  -  -  -  
 2077 D1:C262 -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2078 D1:C262 -  -  -  -  inst6502_eor_indy:
 2079 D1:C262 ED 33 05 -      ADDCYC(5)
 2080 D1:C265 E5 -  -  -      push hl
 2081 D1:C266 7E -  -  -          ld  a,(hl)
 2082 D1:C267 21 00 38 D0         ld  hl,ZEROPAGE
 2083 D1:C26B 85 -  -  -          add a,L
 2084 D1:C26C 6F -  -  -          ld  L,a
 2085 D1:C26D 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2086 D1:C26E 2C -  -  -          inc L
 2087 D1:C26F DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2088 D1:C272 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2089 D1:C273 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2090 D1:C275 24 -  -  -          inc h
 2091 D1:C276 FD 23 -  -          ADDCYC(1)
 2092 D1:C278 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2093 D1:C279 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2094 D1:C27B ED 6C -  -          mlt hl          ;23.
 2095 D1:C27D 01 00 40 D0         ld  bc,PAGETABLE
 2096 D1:C281 09 -  -  -          add hl,bc
 2097 D1:C282 ED 27 -  -          ld  hl,(hl)     ;address get.
 2098 D1:C284 01 00 00 00         ld  bc,0
 2099 D1:C288 4F -  -  -          ld  c,a
 2100 D1:C289 09 -  -  -          add hl,bc       ;Full address get.
 2101 D1:C28A 7E -  -  -          READ_ACCESS
 2102 D1:C28B E1 -  -  -      pop hl
 2103 D1:C28C DD AE 00 -      xor a,(ix+REGA)
 2104 D1:C28F DD 77 00 -      ld  (ix+REGA),A
 2105 D1:C292 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2106 D1:C2A5 C3 E9 B2 D1     jp i6502NextLoad
 2107 D1:C2A9 -  -  -  -  
 2108 D1:C2A9 -  -  -  -  ;-----------------------------------------------------------------------------
 2109 D1:C2A9 -  -  -  -  ;ORA - OR Memory with Accumulator
 2110 D1:C2A9 -  -  -  -  ;A OR M -> A
 2111 D1:C2A9 -  -  -  -  ;N	Z	C	I	D	V
 2112 D1:C2A9 -  -  -  -  ;+	+	-	-	-	-
 2113 D1:C2A9 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2114 D1:C2A9 -  -  -  -  
 2115 D1:C2A9 -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2116 D1:C2A9 -  -  -  -  inst6502_ora_imm:
 2117 D1:C2A9 ED 33 02 -      ADDCYC(2)
 2118 D1:C2AC 7E -  -  -      ld  a,(hl)
 2119 D1:C2AD DD B6 00 -      or  a,(ix+REGA)
 2120 D1:C2B0 DD 77 00 -      ld  (ix+REGA),A
 2121 D1:C2B3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2122 D1:C2C6 C3 E9 B2 D1     jp i6502NextLoad
 2123 D1:C2CA -  -  -  -  
 2124 D1:C2CA -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2125 D1:C2CA -  -  -  -  inst6502_ora_zp:
 2126 D1:C2CA ED 33 03 -      ADDCYC(3)
 2127 D1:C2CD 7E -  -  -      ld  a,(hl)
 2128 D1:C2CE 01 00 38 D0     ld  bc,ZEROPAGE
 2129 D1:C2D2 81 -  -  -      add a,c
 2130 D1:C2D3 4F -  -  -      ld  c,a
 2131 D1:C2D4 0A -  -  -      ld  a,(bc)
 2132 D1:C2D5 DD B6 00 -      or  a,(ix+REGA)
 2133 D1:C2D8 DD 77 00 -      ld  (ix+REGA),A
 2134 D1:C2DB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2135 D1:C2EE C3 E9 B2 D1     jp i6502NextLoad
 2136 D1:C2F2 -  -  -  -  
 2137 D1:C2F2 -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2138 D1:C2F2 -  -  -  -  inst6502_ora_zpx:
 2139 D1:C2F2 ED 33 04 -      ADDCYC(4)
 2140 D1:C2F5 7E -  -  -      ld  a,(hl)
 2141 D1:C2F6 01 00 38 D0     ld  bc,ZEROPAGE
 2142 D1:C2FA 81 -  -  -      add a,c
 2143 D1:C2FB DD 86 01 -      add a,(ix+REGX)
 2144 D1:C2FE 4F -  -  -      ld  c,a
 2145 D1:C2FF 0A -  -  -      ld  a,(bc)
 2146 D1:C300 DD B6 00 -      or  a,(ix+REGA)
 2147 D1:C303 DD 77 00 -      ld  (ix+REGA),A
 2148 D1:C306 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2149 D1:C319 C3 E9 B2 D1     jp i6502NextLoad
 2150 D1:C31D -  -  -  -  
 2151 D1:C31D -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2152 D1:C31D -  -  -  -  inst6502_ora_abs:
 2153 D1:C31D ED 33 04 -      ADDCYC(4)
 2154 D1:C320 CD 06 B5 D1     call subroutine6502_abs_split_start
 2155 D1:C324 E5 -  -  -      push hl
 2156 D1:C325 50 -  -  -          ld  d,b
 2157 D1:C326 79 -  -  -          ld  a,c
 2158 D1:C327 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2159 D1:C329 ED 4C -  -          mlt bc
 2160 D1:C32B 21 00 40 D0         ld  hl,PAGETABLE
 2161 D1:C32F 09 -  -  -          add hl,bc
 2162 D1:C330 ED 27 -  -          ld  hl,(hl)
 2163 D1:C332 06 00 -  -          ld  b,0
 2164 D1:C334 4F -  -  -          ld  c,a
 2165 D1:C335 09 -  -  -          add hl,bc   ;full address
 2166 D1:C336 7E -  -  -          READ_ACCESS
 2167 D1:C337 E1 -  -  -      pop hl
 2168 D1:C338 DD B6 00 -      or  a,(ix+REGA)
 2169 D1:C33B DD 77 00 -      ld  (ix+REGA),A
 2170 D1:C33E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2171 D1:C351 C3 E9 B2 D1     jp i6502NextLoad
 2172 D1:C355 -  -  -  -  
 2173 D1:C355 -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2174 D1:C355 -  -  -  -  inst6502_ora_absx:
 2175 D1:C355 ED 33 04 -      ADDCYC(4)
 2176 D1:C358 CD 06 B5 D1     call subroutine6502_abs_split_start
 2177 D1:C35C E5 -  -  -      push hl
 2178 D1:C35D 50 -  -  -          ld  d,b
 2179 D1:C35E 79 -  -  -          ld  a,c
 2180 D1:C35F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2181 D1:C361 ED 4C -  -          mlt bc
 2182 D1:C363 21 00 40 D0         ld  hl,PAGETABLE
 2183 D1:C367 09 -  -  -          add hl,bc
 2184 D1:C368 ED 27 -  -          ld  hl,(hl)
 2185 D1:C36A 06 00 -  -          ld  b,0
 2186 D1:C36C DD 86 01 -          add a,(ix+REGX)
 2187 D1:C36F 4F -  -  -          ld  c,a
 2188 D1:C370 30 04 -  -          jr  nc,+_
 2189 D1:C372 04 -  -  -          inc b
 2190 D1:C373 14 -  -  -          inc d
 2191 D1:C374 FD 23 -  -          ADDCYC(1)
 2192 D1:C376 09 -  -  -  _:      add hl,bc   ;full address
 2193 D1:C377 7E -  -  -          READ_ACCESS
 2194 D1:C378 E1 -  -  -      pop hl
 2195 D1:C379 DD B6 00 -      or  a,(ix+REGA)
 2196 D1:C37C DD 77 00 -      ld  (ix+REGA),A
 2197 D1:C37F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2198 D1:C392 C3 E9 B2 D1     jp i6502NextLoad
 2199 D1:C396 -  -  -  -  
 2200 D1:C396 -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2201 D1:C396 -  -  -  -  inst6502_ora_absy:
 2202 D1:C396 ED 33 04 -      ADDCYC(4)
 2203 D1:C399 CD 06 B5 D1     call subroutine6502_abs_split_start
 2204 D1:C39D E5 -  -  -      push hl
 2205 D1:C39E 50 -  -  -          ld  d,b
 2206 D1:C39F 79 -  -  -          ld  a,c
 2207 D1:C3A0 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2208 D1:C3A2 ED 4C -  -          mlt bc
 2209 D1:C3A4 21 00 40 D0         ld  hl,PAGETABLE
 2210 D1:C3A8 09 -  -  -          add hl,bc
 2211 D1:C3A9 ED 27 -  -          ld  hl,(hl)
 2212 D1:C3AB 06 00 -  -          ld  b,0
 2213 D1:C3AD DD 86 02 -          add a,(ix+REGY)
 2214 D1:C3B0 4F -  -  -          ld  c,a
 2215 D1:C3B1 30 04 -  -          jr  nc,+_
 2216 D1:C3B3 04 -  -  -          inc b
 2217 D1:C3B4 14 -  -  -          inc d
 2218 D1:C3B5 FD 23 -  -          ADDCYC(1)
 2219 D1:C3B7 09 -  -  -  _:      add hl,bc   ;full address
 2220 D1:C3B8 7E -  -  -          READ_ACCESS
 2221 D1:C3B9 E1 -  -  -      pop hl
 2222 D1:C3BA DD B6 00 -      or  a,(ix+REGA)
 2223 D1:C3BD DD 77 00 -      ld  (ix+REGA),A
 2224 D1:C3C0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2225 D1:C3D3 C3 E9 B2 D1     jp i6502NextLoad
 2226 D1:C3D7 -  -  -  -  
 2227 D1:C3D7 -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2228 D1:C3D7 -  -  -  -  inst6502_ora_indx:
 2229 D1:C3D7 ED 33 06 -      ADDCYC(6)
 2230 D1:C3DA E5 -  -  -      push hl
 2231 D1:C3DB 7E -  -  -          ld  a,(hl)
 2232 D1:C3DC 21 00 38 D0         ld  hl,ZEROPAGE
 2233 D1:C3E0 85 -  -  -          add a,L
 2234 D1:C3E1 DD 86 01 -          add a,(ix+REGX)
 2235 D1:C3E4 6F -  -  -          ld  L,a
 2236 D1:C3E5 7E -  -  -          ld  a,(hl)
 2237 D1:C3E6 2C -  -  -          inc L
 2238 D1:C3E7 56 -  -  -          ld  d,(hl)
 2239 D1:C3E8 42 -  -  -          ld  b,d
 2240 D1:C3E9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2241 D1:C3EB ED 4C -  -          mlt bc
 2242 D1:C3ED 21 00 40 D0         ld  hl,PAGETABLE
 2243 D1:C3F1 09 -  -  -          add hl,bc
 2244 D1:C3F2 ED 27 -  -          ld  hl,(hl)
 2245 D1:C3F4 06 00 -  -          ld  b,0
 2246 D1:C3F6 4F -  -  -          ld  c,a
 2247 D1:C3F7 09 -  -  -          add hl,bc
 2248 D1:C3F8 7E -  -  -          READ_ACCESS
 2249 D1:C3F9 E1 -  -  -      pop hl
 2250 D1:C3FA DD B6 00 -      or  a,(ix+REGA)
 2251 D1:C3FD DD 77 00 -      ld  (ix+REGA),A
 2252 D1:C400 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2253 D1:C413 C3 E9 B2 D1     jp i6502NextLoad
 2254 D1:C417 -  -  -  -  
 2255 D1:C417 -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2256 D1:C417 -  -  -  -  inst6502_ora_indy:
 2257 D1:C417 ED 33 05 -      ADDCYC(5)
 2258 D1:C41A E5 -  -  -      push hl
 2259 D1:C41B 7E -  -  -          ld  a,(hl)
 2260 D1:C41C 21 00 38 D0         ld  hl,ZEROPAGE
 2261 D1:C420 85 -  -  -          add a,L
 2262 D1:C421 6F -  -  -          ld  L,a
 2263 D1:C422 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2264 D1:C423 2C -  -  -          inc L
 2265 D1:C424 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2266 D1:C427 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2267 D1:C428 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2268 D1:C42A 24 -  -  -          inc h
 2269 D1:C42B FD 23 -  -          ADDCYC(1)
 2270 D1:C42D 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2271 D1:C42E 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2272 D1:C430 ED 6C -  -          mlt hl          ;23.
 2273 D1:C432 01 00 40 D0         ld  bc,PAGETABLE
 2274 D1:C436 09 -  -  -          add hl,bc
 2275 D1:C437 ED 27 -  -          ld  hl,(hl)     ;address get.
 2276 D1:C439 01 00 00 00         ld  bc,0
 2277 D1:C43D 4F -  -  -          ld  c,a
 2278 D1:C43E 09 -  -  -          add hl,bc       ;Full address get.
 2279 D1:C43F 7E -  -  -          READ_ACCESS
 2280 D1:C440 E1 -  -  -      pop hl
 2281 D1:C441 DD B6 00 -      or  a,(ix+REGA)
 2282 D1:C444 DD 77 00 -      ld  (ix+REGA),A
 2283 D1:C447 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2284 D1:C45A C3 E9 B2 D1     jp i6502NextLoad
 2285 D1:C45E -  -  -  -  
 2286 D1:C45E -  -  -  -  ;-----------------------------------------------------------------------------
 2287 D1:C45E -  -  -  -  ;-----------------------------------------------------------------------------
 2288 D1:C45E -  -  -  -  ;-----------------------------------------------------------------------------
 2289 D1:C45E -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2290 D1:C45E -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2291 D1:C45E -  -  -  -  ;C <- [76543210] <- 0
 2292 D1:C45E -  -  -  -  ;N	Z	C	I	D	V
 2293 D1:C45E -  -  -  -  ;+	+	+	-	-	-
 2294 D1:C45E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2295 D1:C45E -  -  -  -  
 2296 D1:C45E -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2297 D1:C45E -  -  -  -  inst6502_asl:
 2298 D1:C45E ED 33 02 -      ADDCYC(2)
 2299 D1:C461 DD CB 00 26     sla (ix+REGA)
 2300 D1:C465 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2301 D1:C47E C3 02 B3 D1     jp i6502FinishLoad
 2302 D1:C482 -  -  -  -  
 2303 D1:C482 -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2304 D1:C482 -  -  -  -  inst6502_asl_zp:
 2305 D1:C482 ED 33 05 -      ADDCYC(5)
 2306 D1:C485 7E -  -  -      ld  a,(hl)
 2307 D1:C486 01 00 38 D0     ld  bc,ZEROPAGE
 2308 D1:C48A 81 -  -  -      add a,c
 2309 D1:C48B 4F -  -  -      ld  c,a
 2310 D1:C48C 0A -  -  -      ld  a,(bc)
 2311 D1:C48D CB 27 -  -      sla a
 2312 D1:C48F 02 -  -  -      ld  (bc),a
 2313 D1:C490 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2314 D1:C4A9 C3 E9 B2 D1     jp i6502NextLoad
 2315 D1:C4AD -  -  -  -  
 2316 D1:C4AD -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2317 D1:C4AD -  -  -  -  inst6502_asl_zpx:
 2318 D1:C4AD ED 33 06 -      ADDCYC(6)
 2319 D1:C4B0 7E -  -  -      ld  a,(hl)
 2320 D1:C4B1 01 00 38 D0     ld  bc,ZEROPAGE
 2321 D1:C4B5 81 -  -  -      add a,c
 2322 D1:C4B6 DD 86 01 -      add a,(ix+REGX)
 2323 D1:C4B9 4F -  -  -      ld  c,a
 2324 D1:C4BA 0A -  -  -      ld  a,(bc)
 2325 D1:C4BB CB 27 -  -      sla a
 2326 D1:C4BD 02 -  -  -      ld  (bc),a
 2327 D1:C4BE DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2328 D1:C4D7 C3 E9 B2 D1     jp i6502NextLoad
 2329 D1:C4DB -  -  -  -  
 2330 D1:C4DB -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2331 D1:C4DB -  -  -  -  inst6502_asl_abs:
 2332 D1:C4DB ED 33 06 -      ADDCYC(6)
 2333 D1:C4DE CD 06 B5 D1     call subroutine6502_abs_split_start
 2334 D1:C4E2 E5 -  -  -      push hl
 2335 D1:C4E3 50 -  -  -          ld  d,b
 2336 D1:C4E4 79 -  -  -          ld  a,c
 2337 D1:C4E5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2338 D1:C4E7 ED 4C -  -          mlt bc
 2339 D1:C4E9 21 00 40 D0         ld  hl,PAGETABLE
 2340 D1:C4ED 09 -  -  -          add hl,bc
 2341 D1:C4EE ED 27 -  -          ld  hl,(hl)
 2342 D1:C4F0 06 00 -  -          ld  b,0
 2343 D1:C4F2 4F -  -  -          ld  c,a
 2344 D1:C4F3 09 -  -  -          add hl,bc   ;full address
 2345 D1:C4F4 7E -  -  -          READ_ACCESS
 2346 D1:C4F5 E1 -  -  -      pop hl
 2347 D1:C4F6 7E -  -  -      ld  a,(hl)
 2348 D1:C4F7 CB 27 -  -      sla a
 2349 D1:C4F9 47 -  -  -      ld  b,a
 2350 D1:C4FA DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2351 D1:C513 70 -  -  -      WRITE_ACCESS
 2352 D1:C514 C3 E9 B2 D1     jp i6502NextLoad
 2353 D1:C518 -  -  -  -  
 2354 D1:C518 -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2355 D1:C518 -  -  -  -  inst6502_asl_absx:
 2356 D1:C518 ED 33 07 -      ADDCYC(7)
 2357 D1:C51B CD 06 B5 D1     call subroutine6502_abs_split_start
 2358 D1:C51F E5 -  -  -      push hl
 2359 D1:C520 50 -  -  -          ld  d,b
 2360 D1:C521 79 -  -  -          ld  a,c
 2361 D1:C522 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2362 D1:C524 ED 4C -  -          mlt bc
 2363 D1:C526 21 00 40 D0         ld  hl,PAGETABLE
 2364 D1:C52A 09 -  -  -          add hl,bc
 2365 D1:C52B ED 27 -  -          ld  hl,(hl)
 2366 D1:C52D 06 00 -  -          ld  b,0
 2367 D1:C52F DD 86 01 -          add a,(ix+REGX)
 2368 D1:C532 4F -  -  -          ld  c,a
 2369 D1:C533 30 02 -  -          jr  nc,+_
 2370 D1:C535 04 -  -  -          inc b
 2371 D1:C536 14 -  -  -          inc d
 2372 D1:C537 09 -  -  -  _:      add hl,bc   ;full address
 2373 D1:C538 7E -  -  -          READ_ACCESS
 2374 D1:C539 E1 -  -  -      pop hl
 2375 D1:C53A 7E -  -  -      ld  a,(hl)
 2376 D1:C53B CB 27 -  -      sla a
 2377 D1:C53D 47 -  -  -      ld  b,a
 2378 D1:C53E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2379 D1:C557 70 -  -  -      WRITE_ACCESS
 2380 D1:C558 C3 E9 B2 D1     jp i6502NextLoad
 2381 D1:C55C -  -  -  -  
 2382 D1:C55C -  -  -  -  ;-----------------------------------------------------------------------------
 2383 D1:C55C -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2384 D1:C55C -  -  -  -  ;0 -> [76543210] -> C
 2385 D1:C55C -  -  -  -  ;N	Z	C	I	D	V
 2386 D1:C55C -  -  -  -  ;0	+	+	-	-	-
 2387 D1:C55C -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2388 D1:C55C -  -  -  -  
 2389 D1:C55C -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2390 D1:C55C -  -  -  -  inst6502_lsr:
 2391 D1:C55C ED 33 02 -      ADDCYC(2)
 2392 D1:C55F DD CB 00 3E     srl (ix+REGA)
 2393 D1:C563 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2394 D1:C57C C3 02 B3 D1     jp i6502FinishLoad
 2395 D1:C580 -  -  -  -  
 2396 D1:C580 -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2397 D1:C580 -  -  -  -  inst6502_lsr_zp:
 2398 D1:C580 ED 33 05 -      ADDCYC(5)
 2399 D1:C583 7E -  -  -      ld  a,(hl)
 2400 D1:C584 01 00 38 D0     ld  bc,ZEROPAGE
 2401 D1:C588 81 -  -  -      add a,c
 2402 D1:C589 4F -  -  -      ld  c,a
 2403 D1:C58A 0A -  -  -      ld  a,(bc)
 2404 D1:C58B CB 3F -  -      srl a
 2405 D1:C58D 02 -  -  -      ld  (bc),a
 2406 D1:C58E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2407 D1:C5A7 C3 E9 B2 D1     jp i6502NextLoad
 2408 D1:C5AB -  -  -  -  
 2409 D1:C5AB -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2410 D1:C5AB -  -  -  -  inst6502_lsr_zpx:
 2411 D1:C5AB ED 33 06 -      ADDCYC(6)
 2412 D1:C5AE 7E -  -  -      ld  a,(hl)
 2413 D1:C5AF 01 00 38 D0     ld  bc,ZEROPAGE
 2414 D1:C5B3 81 -  -  -      add a,c
 2415 D1:C5B4 DD 86 01 -      add a,(ix+REGX)
 2416 D1:C5B7 4F -  -  -      ld  c,a
 2417 D1:C5B8 0A -  -  -      ld  a,(bc)
 2418 D1:C5B9 CB 3F -  -      srl a
 2419 D1:C5BB 02 -  -  -      ld  (bc),a
 2420 D1:C5BC DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2421 D1:C5D5 C3 E9 B2 D1     jp i6502NextLoad
 2422 D1:C5D9 -  -  -  -      
 2423 D1:C5D9 -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2424 D1:C5D9 -  -  -  -  inst6502_lsr_abs:
 2425 D1:C5D9 ED 33 06 -      ADDCYC(6)
 2426 D1:C5DC CD 06 B5 D1     call subroutine6502_abs_split_start
 2427 D1:C5E0 E5 -  -  -      push hl
 2428 D1:C5E1 50 -  -  -          ld  d,b
 2429 D1:C5E2 79 -  -  -          ld  a,c
 2430 D1:C5E3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2431 D1:C5E5 ED 4C -  -          mlt bc
 2432 D1:C5E7 21 00 40 D0         ld  hl,PAGETABLE
 2433 D1:C5EB 09 -  -  -          add hl,bc
 2434 D1:C5EC ED 27 -  -          ld  hl,(hl)
 2435 D1:C5EE 06 00 -  -          ld  b,0
 2436 D1:C5F0 4F -  -  -          ld  c,a
 2437 D1:C5F1 09 -  -  -          add hl,bc   ;full address
 2438 D1:C5F2 7E -  -  -          READ_ACCESS
 2439 D1:C5F3 E1 -  -  -      pop hl
 2440 D1:C5F4 7E -  -  -      ld  a,(hl)
 2441 D1:C5F5 CB 3F -  -      srl a
 2442 D1:C5F7 47 -  -  -      ld  b,a
 2443 D1:C5F8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2444 D1:C611 70 -  -  -      WRITE_ACCESS
 2445 D1:C612 C3 E9 B2 D1     jp i6502NextLoad
 2446 D1:C616 -  -  -  -  
 2447 D1:C616 -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2448 D1:C616 -  -  -  -  inst6502_lsr_absx:
 2449 D1:C616 ED 33 07 -      ADDCYC(7)
 2450 D1:C619 CD 06 B5 D1     call subroutine6502_abs_split_start
 2451 D1:C61D E5 -  -  -      push hl
 2452 D1:C61E 50 -  -  -          ld  d,b
 2453 D1:C61F 79 -  -  -          ld  a,c
 2454 D1:C620 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2455 D1:C622 ED 4C -  -          mlt bc
 2456 D1:C624 21 00 40 D0         ld  hl,PAGETABLE
 2457 D1:C628 09 -  -  -          add hl,bc
 2458 D1:C629 ED 27 -  -          ld  hl,(hl)
 2459 D1:C62B 06 00 -  -          ld  b,0
 2460 D1:C62D DD 86 01 -          add a,(ix+REGX)
 2461 D1:C630 4F -  -  -          ld  c,a
 2462 D1:C631 30 02 -  -          jr  nc,+_
 2463 D1:C633 04 -  -  -          inc b
 2464 D1:C634 14 -  -  -          inc d
 2465 D1:C635 09 -  -  -  _:      add hl,bc   ;full address
 2466 D1:C636 7E -  -  -          READ_ACCESS
 2467 D1:C637 E1 -  -  -      pop hl
 2468 D1:C638 7E -  -  -      ld  a,(hl)
 2469 D1:C639 CB 3F -  -      srl a
 2470 D1:C63B 47 -  -  -      ld  b,a
 2471 D1:C63C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2472 D1:C655 70 -  -  -      WRITE_ACCESS
 2473 D1:C656 C3 E9 B2 D1     jp i6502NextLoad
 2474 D1:C65A -  -  -  -  
 2475 D1:C65A -  -  -  -  ;-----------------------------------------------------------------------------
 2476 D1:C65A -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2477 D1:C65A -  -  -  -  ;C <- [76543210] <- C
 2478 D1:C65A -  -  -  -  ;N	Z	C	I	D	V
 2479 D1:C65A -  -  -  -  ;+	+	+	-	-	-
 2480 D1:C65A -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2481 D1:C65A -  -  -  -  
 2482 D1:C65A -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2483 D1:C65A -  -  -  -  inst6502_rol:
 2484 D1:C65A ED 33 02 -      ADDCYC(2)
 2485 D1:C65D DD 7E 04 -      ld  a,(ix+REGSR)
 2486 D1:C660 1F -  -  -      rra
 2487 D1:C661 DD CB 00 16     rl (ix+REGA)
 2488 D1:C665 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2489 D1:C67E C3 02 B3 D1     jp i6502FinishLoad
 2490 D1:C682 -  -  -  -  
 2491 D1:C682 -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2492 D1:C682 -  -  -  -  inst6502_rol_zp:
 2493 D1:C682 ED 33 05 -      ADDCYC(5)
 2494 D1:C685 7E -  -  -      ld  a,(hl)
 2495 D1:C686 01 00 38 D0     ld  bc,ZEROPAGE
 2496 D1:C68A 81 -  -  -      add a,c
 2497 D1:C68B 4F -  -  -      ld  c,a
 2498 D1:C68C DD 7E 04 -      ld  a,(ix+REGSR)
 2499 D1:C68F 1F -  -  -      rra
 2500 D1:C690 0A -  -  -      ld  a,(bc)
 2501 D1:C691 17 -  -  -      rla
 2502 D1:C692 02 -  -  -      ld  (bc),a
 2503 D1:C693 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2504 D1:C6AC C3 E9 B2 D1     jp i6502NextLoad
 2505 D1:C6B0 -  -  -  -  
 2506 D1:C6B0 -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2507 D1:C6B0 -  -  -  -  inst6502_rol_zpx:
 2508 D1:C6B0 ED 33 06 -      ADDCYC(6)
 2509 D1:C6B3 7E -  -  -      ld  a,(hl)
 2510 D1:C6B4 01 00 38 D0     ld  bc,ZEROPAGE
 2511 D1:C6B8 81 -  -  -      add a,c
 2512 D1:C6B9 DD 86 01 -      add a,(ix+REGX)
 2513 D1:C6BC 4F -  -  -      ld  c,a
 2514 D1:C6BD DD 7E 04 -      ld  a,(ix+REGSR)
 2515 D1:C6C0 1F -  -  -      rra
 2516 D1:C6C1 0A -  -  -      ld  a,(bc)
 2517 D1:C6C2 17 -  -  -      rla
 2518 D1:C6C3 02 -  -  -      ld  (bc),a
 2519 D1:C6C4 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2520 D1:C6DD C3 E9 B2 D1     jp i6502NextLoad
 2521 D1:C6E1 -  -  -  -  
 2522 D1:C6E1 -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2523 D1:C6E1 -  -  -  -  inst6502_rol_abs:
 2524 D1:C6E1 ED 33 06 -      ADDCYC(6)
 2525 D1:C6E4 CD 06 B5 D1     call subroutine6502_abs_split_start
 2526 D1:C6E8 E5 -  -  -      push hl
 2527 D1:C6E9 50 -  -  -          ld  d,b
 2528 D1:C6EA 79 -  -  -          ld  a,c
 2529 D1:C6EB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2530 D1:C6ED ED 4C -  -          mlt bc
 2531 D1:C6EF 21 00 40 D0         ld  hl,PAGETABLE
 2532 D1:C6F3 09 -  -  -          add hl,bc
 2533 D1:C6F4 ED 27 -  -          ld  hl,(hl)
 2534 D1:C6F6 06 00 -  -          ld  b,0
 2535 D1:C6F8 4F -  -  -          ld  c,a
 2536 D1:C6F9 09 -  -  -          add hl,bc   ;full address
 2537 D1:C6FA 7E -  -  -          READ_ACCESS
 2538 D1:C6FB E1 -  -  -      pop hl
 2539 D1:C6FC DD 7E 04 -      ld  a,(ix+REGSR)
 2540 D1:C6FF 1F -  -  -      rra
 2541 D1:C700 7E -  -  -      ld  a,(hl)
 2542 D1:C701 17 -  -  -      rla
 2543 D1:C702 47 -  -  -      ld  b,a
 2544 D1:C703 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2545 D1:C71C 70 -  -  -      WRITE_ACCESS
 2546 D1:C71D C3 E9 B2 D1     jp i6502NextLoad
 2547 D1:C721 -  -  -  -  
 2548 D1:C721 -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2549 D1:C721 -  -  -  -  inst6502_rol_absx:
 2550 D1:C721 ED 33 07 -      ADDCYC(7)
 2551 D1:C724 CD 06 B5 D1     call subroutine6502_abs_split_start
 2552 D1:C728 E5 -  -  -      push hl
 2553 D1:C729 50 -  -  -          ld  d,b
 2554 D1:C72A 79 -  -  -          ld  a,c
 2555 D1:C72B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2556 D1:C72D ED 4C -  -          mlt bc
 2557 D1:C72F 21 00 40 D0         ld  hl,PAGETABLE
 2558 D1:C733 09 -  -  -          add hl,bc
 2559 D1:C734 ED 27 -  -          ld  hl,(hl)
 2560 D1:C736 06 00 -  -          ld  b,0
 2561 D1:C738 DD 86 01 -          add a,(ix+REGX)
 2562 D1:C73B 4F -  -  -          ld  c,a
 2563 D1:C73C 30 02 -  -          jr  nc,+_
 2564 D1:C73E 04 -  -  -          inc b
 2565 D1:C73F 14 -  -  -          inc d
 2566 D1:C740 09 -  -  -  _:      add hl,bc   ;full address
 2567 D1:C741 7E -  -  -          READ_ACCESS
 2568 D1:C742 E1 -  -  -      pop hl
 2569 D1:C743 DD 7E 04 -      ld  a,(ix+REGSR)
 2570 D1:C746 1F -  -  -      rra
 2571 D1:C747 7E -  -  -      ld  a,(hl)
 2572 D1:C748 17 -  -  -      rla
 2573 D1:C749 47 -  -  -      ld  b,a
 2574 D1:C74A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2575 D1:C763 70 -  -  -      WRITE_ACCESS
 2576 D1:C764 C3 E9 B2 D1     jp i6502NextLoad
 2577 D1:C768 -  -  -  -  
 2578 D1:C768 -  -  -  -  ;-----------------------------------------------------------------------------
 2579 D1:C768 -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2580 D1:C768 -  -  -  -  ;C -> [76543210] -> C
 2581 D1:C768 -  -  -  -  ;N	Z	C	I	D	V
 2582 D1:C768 -  -  -  -  ;+	+	+	-	-	-
 2583 D1:C768 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2584 D1:C768 -  -  -  -  
 2585 D1:C768 -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2586 D1:C768 -  -  -  -  inst6502_ror:
 2587 D1:C768 ED 33 02 -      ADDCYC(2)
 2588 D1:C76B DD 7E 04 -      ld  a,(ix+REGSR)
 2589 D1:C76E 1F -  -  -      rra
 2590 D1:C76F DD CB 00 1E     rr  (ix+REGA)
 2591 D1:C773 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2592 D1:C78C C3 02 B3 D1     jp i6502FinishLoad
 2593 D1:C790 -  -  -  -  
 2594 D1:C790 -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2595 D1:C790 -  -  -  -  inst6502_ror_zp:
 2596 D1:C790 ED 33 05 -      ADDCYC(5)
 2597 D1:C793 7E -  -  -      ld  a,(hl)
 2598 D1:C794 01 00 38 D0     ld  bc,ZEROPAGE
 2599 D1:C798 81 -  -  -      add a,c
 2600 D1:C799 4F -  -  -      ld  c,a
 2601 D1:C79A DD 7E 04 -      ld  a,(ix+REGSR)
 2602 D1:C79D 1F -  -  -      rra
 2603 D1:C79E 0A -  -  -      ld  a,(bc)
 2604 D1:C79F 1F -  -  -      rra
 2605 D1:C7A0 02 -  -  -      ld  (bc),a
 2606 D1:C7A1 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2607 D1:C7BA C3 E9 B2 D1     jp i6502NextLoad
 2608 D1:C7BE -  -  -  -  
 2609 D1:C7BE -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2610 D1:C7BE -  -  -  -  inst6502_ror_zpx:
 2611 D1:C7BE ED 33 06 -      ADDCYC(6)
 2612 D1:C7C1 7E -  -  -      ld  a,(hl)
 2613 D1:C7C2 01 00 38 D0     ld  bc,ZEROPAGE
 2614 D1:C7C6 81 -  -  -      add a,c
 2615 D1:C7C7 DD 86 01 -      add a,(ix+REGX)
 2616 D1:C7CA 4F -  -  -      ld  c,a
 2617 D1:C7CB DD 7E 04 -      ld  a,(ix+REGSR)
 2618 D1:C7CE 1F -  -  -      rra
 2619 D1:C7CF 0A -  -  -      ld  a,(bc)
 2620 D1:C7D0 1F -  -  -      rra
 2621 D1:C7D1 02 -  -  -      ld  (bc),a
 2622 D1:C7D2 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2623 D1:C7EB C3 E9 B2 D1     jp i6502NextLoad
 2624 D1:C7EF -  -  -  -  
 2625 D1:C7EF -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2626 D1:C7EF -  -  -  -  inst6502_ror_abs:
 2627 D1:C7EF ED 33 06 -      ADDCYC(6)
 2628 D1:C7F2 CD 06 B5 D1     call subroutine6502_abs_split_start
 2629 D1:C7F6 E5 -  -  -      push hl
 2630 D1:C7F7 50 -  -  -          ld  d,b
 2631 D1:C7F8 79 -  -  -          ld  a,c
 2632 D1:C7F9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2633 D1:C7FB ED 4C -  -          mlt bc
 2634 D1:C7FD 21 00 40 D0         ld  hl,PAGETABLE
 2635 D1:C801 09 -  -  -          add hl,bc
 2636 D1:C802 ED 27 -  -          ld  hl,(hl)
 2637 D1:C804 06 00 -  -          ld  b,0
 2638 D1:C806 4F -  -  -          ld  c,a
 2639 D1:C807 09 -  -  -          add hl,bc   ;full address
 2640 D1:C808 7E -  -  -          READ_ACCESS
 2641 D1:C809 E1 -  -  -      pop hl
 2642 D1:C80A DD 7E 04 -      ld  a,(ix+REGSR)
 2643 D1:C80D 1F -  -  -      rra
 2644 D1:C80E 7E -  -  -      ld  a,(hl)
 2645 D1:C80F 1F -  -  -      rra
 2646 D1:C810 47 -  -  -      ld  b,a
 2647 D1:C811 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2648 D1:C82A 70 -  -  -      WRITE_ACCESS
 2649 D1:C82B C3 E9 B2 D1     jp i6502NextLoad
 2650 D1:C82F -  -  -  -  
 2651 D1:C82F -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2652 D1:C82F -  -  -  -  inst6502_ror_absx:
 2653 D1:C82F ED 33 07 -      ADDCYC(7)
 2654 D1:C832 CD 06 B5 D1     call subroutine6502_abs_split_start
 2655 D1:C836 E5 -  -  -      push hl
 2656 D1:C837 50 -  -  -          ld  d,b
 2657 D1:C838 79 -  -  -          ld  a,c
 2658 D1:C839 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2659 D1:C83B ED 4C -  -          mlt bc
 2660 D1:C83D 21 00 40 D0         ld  hl,PAGETABLE
 2661 D1:C841 09 -  -  -          add hl,bc
 2662 D1:C842 ED 27 -  -          ld  hl,(hl)
 2663 D1:C844 06 00 -  -          ld  b,0
 2664 D1:C846 DD 86 01 -          add a,(ix+REGX)
 2665 D1:C849 4F -  -  -          ld  c,a
 2666 D1:C84A 30 02 -  -          jr  nc,+_
 2667 D1:C84C 04 -  -  -          inc b
 2668 D1:C84D 14 -  -  -          inc d
 2669 D1:C84E 09 -  -  -  _:      add hl,bc   ;full address
 2670 D1:C84F 7E -  -  -          READ_ACCESS
 2671 D1:C850 E1 -  -  -      pop hl
 2672 D1:C851 DD 7E 04 -      ld  a,(ix+REGSR)
 2673 D1:C854 1F -  -  -      rra
 2674 D1:C855 7E -  -  -      ld  a,(hl)
 2675 D1:C856 1F -  -  -      rra
 2676 D1:C857 47 -  -  -      ld  b,a
 2677 D1:C858 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2678 D1:C871 70 -  -  -      WRITE_ACCESS
 2679 D1:C872 C3 E9 B2 D1     jp i6502NextLoad
 2680 D1:C876 -  -  -  -  
 2681 D1:C876 -  -  -  -  ;-----------------------------------------------------------------------------
 2682 D1:C876 -  -  -  -  ;-----------------------------------------------------------------------------
 2683 D1:C876 -  -  -  -  ;-----------------------------------------------------------------------------
 2684 D1:C876 -  -  -  -  ;Instructions by type: Flag Instructions
 2685 D1:C876 -  -  -  -  
 2686 D1:C876 -  -  -  -  ;CLC - Clear Carry Flag
 2687 D1:C876 -  -  -  -  ;0 -> C
 2688 D1:C876 -  -  -  -  ;N	Z	C	I	D	V
 2689 D1:C876 -  -  -  -  ;-	-	0	-	-	-
 2690 D1:C876 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2691 D1:C876 -  -  -  -  ;implied	CLC	18	1	2  
 2692 D1:C876 -  -  -  -  inst6502_clc:
 2693 D1:C876 DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2694 D1:C87A C3 02 B3 D1     jp  i6502FinishLoad
 2695 D1:C87E -  -  -  -  
 2696 D1:C87E -  -  -  -  ;CLD - Clear Decimal Mode
 2697 D1:C87E -  -  -  -  ;0 -> D
 2698 D1:C87E -  -  -  -  ;N	Z	C	I	D	V
 2699 D1:C87E -  -  -  -  ;-	-	-	-	0	-
 2700 D1:C87E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2701 D1:C87E -  -  -  -  ;implied	CLD	D8	1	2  
 2702 D1:C87E -  -  -  -  inst6502_cld:
 2703 D1:C87E DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2704 D1:C882 C3 02 B3 D1     jp  i6502FinishLoad
 2705 D1:C886 -  -  -  -  
 2706 D1:C886 -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2707 D1:C886 -  -  -  -  ;0 -> I
 2708 D1:C886 -  -  -  -  ;N	Z	C	I	D	V
 2709 D1:C886 -  -  -  -  ;-	-	-	0	-	-
 2710 D1:C886 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2711 D1:C886 -  -  -  -  ;implied	CLI	58	1	2  
 2712 D1:C886 -  -  -  -  inst6502_cli:
 2713 D1:C886 DD CB 04 96     res SF_INT,(ix+REGSR)
 2714 D1:C88A C3 02 B3 D1     jp  i6502FinishLoad
 2715 D1:C88E -  -  -  -  
 2716 D1:C88E -  -  -  -  ;CLV - Clear Overflow Flag
 2717 D1:C88E -  -  -  -  ;0 -> V
 2718 D1:C88E -  -  -  -  ;N	Z	C	I	D	V
 2719 D1:C88E -  -  -  -  ;-	-	-	-	-	0
 2720 D1:C88E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2721 D1:C88E -  -  -  -  ;implied	CLV	B8	1	2  
 2722 D1:C88E -  -  -  -  inst6502_clv:
 2723 D1:C88E DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2724 D1:C892 C3 02 B3 D1     jp  i6502FinishLoad
 2725 D1:C896 -  -  -  -  
 2726 D1:C896 -  -  -  -  ;SEC - Set Carry Flag
 2727 D1:C896 -  -  -  -  ;1 -> C
 2728 D1:C896 -  -  -  -  ;N	Z	C	I	D	V
 2729 D1:C896 -  -  -  -  ;-	-	1	-	-	-
 2730 D1:C896 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2731 D1:C896 -  -  -  -  ;implied	SEC	38	1	2  
 2732 D1:C896 -  -  -  -  inst6502_sec:
 2733 D1:C896 DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2734 D1:C89A C3 02 B3 D1     jp  i6502FinishLoad
 2735 D1:C89E -  -  -  -  
 2736 D1:C89E -  -  -  -  ;SED - Set Decimal Flag
 2737 D1:C89E -  -  -  -  ;1 -> D
 2738 D1:C89E -  -  -  -  ;N	Z	C	I	D	V
 2739 D1:C89E -  -  -  -  ;-	-	-	-	1	-
 2740 D1:C89E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2741 D1:C89E -  -  -  -  ;implied	SED	F8	1	2  
 2742 D1:C89E -  -  -  -  inst6502_sed:
 2743 D1:C89E DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2744 D1:C8A2 C3 02 B3 D1     jp  i6502FinishLoad
 2745 D1:C8A6 -  -  -  -  
 2746 D1:C8A6 -  -  -  -  ;SEI - Set Interrupt Disable Status
 2747 D1:C8A6 -  -  -  -  ;1 -> I
 2748 D1:C8A6 -  -  -  -  ;N	Z	C	I	D	V
 2749 D1:C8A6 -  -  -  -  ;-	-	-	1	-	-
 2750 D1:C8A6 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2751 D1:C8A6 -  -  -  -  ;implied	SEI	78	1	2  
 2752 D1:C8A6 -  -  -  -  inst6502_sei:
 2753 D1:C8A6 DD CB 04 D6     set SF_INT,(ix+REGSR)
 2754 D1:C8AA C3 02 B3 D1     jp  i6502FinishLoad
 2755 D1:C8AE -  -  -  -  
 2756 D1:C8AE -  -  -  -  ;-----------------------------------------------------------------------------
 2757 D1:C8AE -  -  -  -  ;-----------------------------------------------------------------------------
 2758 D1:C8AE -  -  -  -  ;-----------------------------------------------------------------------------
 2759 D1:C8AE -  -  -  -  ;Instructions by type: Comparisons
 2760 D1:C8AE -  -  -  -  
 2761 D1:C8AE -  -  -  -  ;CMP - Compare Memory with Accumulator
 2762 D1:C8AE -  -  -  -  ;A - M
 2763 D1:C8AE -  -  -  -  ;N	Z	C	I	D	V
 2764 D1:C8AE -  -  -  -  ;+	+	+	-	-	-
 2765 D1:C8AE -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2766 D1:C8AE -  -  -  -  
 2767 D1:C8AE -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2768 D1:C8AE -  -  -  -  inst6502_cmp_imm:
 2769 D1:C8AE ED 33 02 -      ADDCYC(2)
 2770 D1:C8B1 46 -  -  -      ld  b,(hl)
 2771 D1:C8B2 C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2772 D1:C8B6 -  -  -  -  
 2773 D1:C8B6 -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2774 D1:C8B6 -  -  -  -  inst6502_cmp_zp:
 2775 D1:C8B6 ED 33 03 -      ADDCYC(3)
 2776 D1:C8B9 7E -  -  -      ld  a,(hl)
 2777 D1:C8BA 01 00 38 D0     ld  bc,ZEROPAGE
 2778 D1:C8BE 81 -  -  -      add a,c
 2779 D1:C8BF 4F -  -  -      ld  c,a
 2780 D1:C8C0 0A -  -  -      ld  a,(bc)
 2781 D1:C8C1 47 -  -  -      ld  b,a
 2782 D1:C8C2 C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2783 D1:C8C6 -  -  -  -  
 2784 D1:C8C6 -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2785 D1:C8C6 -  -  -  -  inst6502_cmp_zpx:
 2786 D1:C8C6 ED 33 04 -      ADDCYC(4)
 2787 D1:C8C9 7E -  -  -      ld  a,(hl)
 2788 D1:C8CA 01 00 38 D0     ld  bc,ZEROPAGE
 2789 D1:C8CE 81 -  -  -      add a,c
 2790 D1:C8CF DD 86 01 -      add a,(ix+REGX)
 2791 D1:C8D2 4F -  -  -      ld  c,a
 2792 D1:C8D3 0A -  -  -      ld  a,(bc)
 2793 D1:C8D4 47 -  -  -      ld  b,a
 2794 D1:C8D5 C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2795 D1:C8D9 -  -  -  -  
 2796 D1:C8D9 -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2797 D1:C8D9 -  -  -  -  inst6502_cmp_abs:
 2798 D1:C8D9 ED 33 04 -      ADDCYC(4)
 2799 D1:C8DC CD 06 B5 D1     call subroutine6502_abs_split_start
 2800 D1:C8E0 E5 -  -  -      push hl
 2801 D1:C8E1 50 -  -  -          ld  d,b
 2802 D1:C8E2 79 -  -  -          ld  a,c
 2803 D1:C8E3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2804 D1:C8E5 ED 4C -  -          mlt bc
 2805 D1:C8E7 21 00 40 D0         ld  hl,PAGETABLE
 2806 D1:C8EB 09 -  -  -          add hl,bc
 2807 D1:C8EC ED 27 -  -          ld  hl,(hl)
 2808 D1:C8EE 06 00 -  -          ld  b,0
 2809 D1:C8F0 4F -  -  -          ld  c,a
 2810 D1:C8F1 09 -  -  -          add hl,bc   ;full address
 2811 D1:C8F2 7E -  -  -          READ_ACCESS
 2812 D1:C8F3 E1 -  -  -      pop hl
 2813 D1:C8F4 47 -  -  -      ld  b,a
 2814 D1:C8F5 C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2815 D1:C8F9 -  -  -  -  
 2816 D1:C8F9 -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2817 D1:C8F9 -  -  -  -  inst6502_cmp_absx:
 2818 D1:C8F9 ED 33 04 -      ADDCYC(4)
 2819 D1:C8FC CD 06 B5 D1     call subroutine6502_abs_split_start
 2820 D1:C900 E5 -  -  -      push hl
 2821 D1:C901 50 -  -  -          ld  d,b
 2822 D1:C902 79 -  -  -          ld  a,c
 2823 D1:C903 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2824 D1:C905 ED 4C -  -          mlt bc
 2825 D1:C907 21 00 40 D0         ld  hl,PAGETABLE
 2826 D1:C90B 09 -  -  -          add hl,bc
 2827 D1:C90C ED 27 -  -          ld  hl,(hl)
 2828 D1:C90E 06 00 -  -          ld  b,0
 2829 D1:C910 DD 86 01 -          add a,(ix+REGX)
 2830 D1:C913 4F -  -  -          ld  c,a
 2831 D1:C914 30 04 -  -          jr  nc,+_
 2832 D1:C916 04 -  -  -          inc b
 2833 D1:C917 14 -  -  -          inc d
 2834 D1:C918 FD 23 -  -          ADDCYC(1)
 2835 D1:C91A 09 -  -  -  _:      add hl,bc   ;full address
 2836 D1:C91B 7E -  -  -          READ_ACCESS
 2837 D1:C91C E1 -  -  -      pop hl
 2838 D1:C91D 47 -  -  -      ld  b,a
 2839 D1:C91E C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2840 D1:C922 -  -  -  -  
 2841 D1:C922 -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2842 D1:C922 -  -  -  -  inst6502_cmp_absy:
 2843 D1:C922 ED 33 04 -      ADDCYC(4)
 2844 D1:C925 CD 06 B5 D1     call subroutine6502_abs_split_start
 2845 D1:C929 E5 -  -  -      push hl
 2846 D1:C92A 50 -  -  -          ld  d,b
 2847 D1:C92B 79 -  -  -          ld  a,c
 2848 D1:C92C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2849 D1:C92E ED 4C -  -          mlt bc
 2850 D1:C930 21 00 40 D0         ld  hl,PAGETABLE
 2851 D1:C934 09 -  -  -          add hl,bc
 2852 D1:C935 ED 27 -  -          ld  hl,(hl)
 2853 D1:C937 06 00 -  -          ld  b,0
 2854 D1:C939 DD 86 02 -          add a,(ix+REGY)
 2855 D1:C93C 4F -  -  -          ld  c,a
 2856 D1:C93D 30 04 -  -          jr  nc,+_
 2857 D1:C93F 04 -  -  -          inc b
 2858 D1:C940 14 -  -  -          inc d
 2859 D1:C941 FD 23 -  -          ADDCYC(1)
 2860 D1:C943 09 -  -  -  _:      add hl,bc   ;full address
 2861 D1:C944 7E -  -  -          READ_ACCESS
 2862 D1:C945 E1 -  -  -      pop hl
 2863 D1:C946 47 -  -  -      ld  b,a
 2864 D1:C947 C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2865 D1:C94B -  -  -  -  
 2866 D1:C94B -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2867 D1:C94B -  -  -  -  inst6502_cmp_indx:
 2868 D1:C94B ED 33 06 -      ADDCYC(6)
 2869 D1:C94E E5 -  -  -      push hl
 2870 D1:C94F 7E -  -  -          ld  a,(hl)
 2871 D1:C950 21 00 38 D0         ld  hl,ZEROPAGE
 2872 D1:C954 85 -  -  -          add a,L
 2873 D1:C955 DD 86 01 -          add a,(ix+REGX)
 2874 D1:C958 6F -  -  -          ld  L,a
 2875 D1:C959 7E -  -  -          ld  a,(hl)
 2876 D1:C95A 2C -  -  -          inc L
 2877 D1:C95B 56 -  -  -          ld  d,(hl)
 2878 D1:C95C 42 -  -  -          ld  b,d
 2879 D1:C95D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2880 D1:C95F ED 4C -  -          mlt bc
 2881 D1:C961 21 00 40 D0         ld  hl,PAGETABLE
 2882 D1:C965 09 -  -  -          add hl,bc
 2883 D1:C966 ED 27 -  -          ld  hl,(hl)
 2884 D1:C968 06 00 -  -          ld  b,0
 2885 D1:C96A 4F -  -  -          ld  c,a
 2886 D1:C96B 09 -  -  -          add hl,bc
 2887 D1:C96C 7E -  -  -          READ_ACCESS
 2888 D1:C96D E1 -  -  -      pop hl
 2889 D1:C96E 47 -  -  -      ld  b,a
 2890 D1:C96F C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2891 D1:C973 -  -  -  -  
 2892 D1:C973 -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2893 D1:C973 -  -  -  -  inst6502_cmp_indy:
 2894 D1:C973 ED 33 05 -      ADDCYC(5)
 2895 D1:C976 E5 -  -  -      push hl
 2896 D1:C977 7E -  -  -          ld  a,(hl)
 2897 D1:C978 21 00 38 D0         ld  hl,ZEROPAGE
 2898 D1:C97C 85 -  -  -          add a,L
 2899 D1:C97D 6F -  -  -          ld  L,a
 2900 D1:C97E 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2901 D1:C97F 2C -  -  -          inc L
 2902 D1:C980 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2903 D1:C983 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2904 D1:C984 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2905 D1:C986 24 -  -  -          inc h
 2906 D1:C987 FD 23 -  -          ADDCYC(1)
 2907 D1:C989 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2908 D1:C98A 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2909 D1:C98C ED 6C -  -          mlt hl          ;23.
 2910 D1:C98E 01 00 40 D0         ld  bc,PAGETABLE
 2911 D1:C992 09 -  -  -          add hl,bc
 2912 D1:C993 ED 27 -  -          ld  hl,(hl)     ;address get.
 2913 D1:C995 01 00 00 00         ld  bc,0
 2914 D1:C999 4F -  -  -          ld  c,a
 2915 D1:C99A 09 -  -  -          add hl,bc       ;Full address get.
 2916 D1:C99B 7E -  -  -          READ_ACCESS
 2917 D1:C99C E1 -  -  -      pop hl
 2918 D1:C99D 47 -  -  -      ld  b,a
 2919 D1:C99E C3 84 B5 D1     jp  subroutine6502_cmp_combined_end
 2920 D1:C9A2 -  -  -  -  
 2921 D1:C9A2 -  -  -  -  ;-----------------------------------------------------------------------------
 2922 D1:C9A2 -  -  -  -  ;CPX - Compare Memory and Index X
 2923 D1:C9A2 -  -  -  -  ;X - M
 2924 D1:C9A2 -  -  -  -  ;N	Z	C	I	D	V
 2925 D1:C9A2 -  -  -  -  ;+	+	+	-	-	-
 2926 D1:C9A2 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2927 D1:C9A2 -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2928 D1:C9A2 -  -  -  -  inst6502_cpx_imm:
 2929 D1:C9A2 ED 33 02 -      ADDCYC(2)
 2930 D1:C9A5 DD 7E 01 -      ld  a,(ix+REGX)
 2931 D1:C9A8 BE -  -  -      cp  (hl)
 2932 D1:C9A9 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2933 D1:C9C2 C3 E9 B2 D1     jp  i6502NextLoad
 2934 D1:C9C6 -  -  -  -  
 2935 D1:C9C6 -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2936 D1:C9C6 -  -  -  -  inst6502_cpx_zp:
 2937 D1:C9C6 ED 33 03 -      ADDCYC(3)
 2938 D1:C9C9 7E -  -  -      ld  a,(hl)
 2939 D1:C9CA 01 00 38 D0     ld  bc,ZEROPAGE
 2940 D1:C9CE 81 -  -  -      add a,c
 2941 D1:C9CF 4F -  -  -      ld  c,a
 2942 D1:C9D0 0A -  -  -      ld  a,(bc)
 2943 D1:C9D1 47 -  -  -      ld  b,a
 2944 D1:C9D2 DD 7E 01 -      ld  a,(ix+REGX)
 2945 D1:C9D5 B8 -  -  -      cp  b
 2946 D1:C9D6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2947 D1:C9EF C3 E9 B2 D1     jp i6502NextLoad
 2948 D1:C9F3 -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2949 D1:C9F3 -  -  -  -  inst6502_cpx_abs:
 2950 D1:C9F3 ED 33 04 -      ADDCYC(4)
 2951 D1:C9F6 CD 06 B5 D1     call subroutine6502_abs_split_start
 2952 D1:C9FA E5 -  -  -      push hl
 2953 D1:C9FB 50 -  -  -          ld  d,b
 2954 D1:C9FC 79 -  -  -          ld  a,c
 2955 D1:C9FD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2956 D1:C9FF ED 4C -  -          mlt bc
 2957 D1:CA01 21 00 40 D0         ld  hl,PAGETABLE
 2958 D1:CA05 09 -  -  -          add hl,bc
 2959 D1:CA06 ED 27 -  -          ld  hl,(hl)
 2960 D1:CA08 06 00 -  -          ld  b,0
 2961 D1:CA0A 4F -  -  -          ld  c,a
 2962 D1:CA0B 09 -  -  -          add hl,bc   ;full address
 2963 D1:CA0C 7E -  -  -          READ_ACCESS
 2964 D1:CA0D E1 -  -  -      pop hl
 2965 D1:CA0E 47 -  -  -      ld  b,a
 2966 D1:CA0F DD 7E 01 -      ld  a,(ix+REGX)
 2967 D1:CA12 B8 -  -  -      cp  b
 2968 D1:CA13 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2969 D1:CA2C C3 E9 B2 D1     jp i6502NextLoad
 2970 D1:CA30 -  -  -  -  
 2971 D1:CA30 -  -  -  -  ;-----------------------------------------------------------------------------
 2972 D1:CA30 -  -  -  -  ;CPY - Compare Memory and Index Y
 2973 D1:CA30 -  -  -  -  ;Y - M
 2974 D1:CA30 -  -  -  -  ;N	Z	C	I	D	V
 2975 D1:CA30 -  -  -  -  ;+	+	+	-	-	-
 2976 D1:CA30 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2977 D1:CA30 -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 2978 D1:CA30 -  -  -  -  inst6502_cpy_imm:
 2979 D1:CA30 ED 33 02 -      ADDCYC(2)
 2980 D1:CA33 DD 7E 02 -      ld  a,(ix+REGY)
 2981 D1:CA36 BE -  -  -      cp  (hl)
 2982 D1:CA37 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2983 D1:CA50 C3 E9 B2 D1     jp  i6502NextLoad
 2984 D1:CA54 -  -  -  -  
 2985 D1:CA54 -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 2986 D1:CA54 -  -  -  -  inst6502_cpy_zp:
 2987 D1:CA54 ED 33 03 -      ADDCYC(3)
 2988 D1:CA57 7E -  -  -      ld  a,(hl)
 2989 D1:CA58 01 00 38 D0     ld  bc,ZEROPAGE
 2990 D1:CA5C 81 -  -  -      add a,c
 2991 D1:CA5D 4F -  -  -      ld  c,a
 2992 D1:CA5E 0A -  -  -      ld  a,(bc)
 2993 D1:CA5F 47 -  -  -      ld  b,a
 2994 D1:CA60 DD 7E 02 -      ld  a,(ix+REGY)
 2995 D1:CA63 B8 -  -  -      cp  b
 2996 D1:CA64 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2997 D1:CA7D C3 E9 B2 D1     jp i6502NextLoad
 2998 D1:CA81 -  -  -  -  
 2999 D1:CA81 -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3000 D1:CA81 -  -  -  -  inst6502_cpy_abs:
 3001 D1:CA81 ED 33 04 -      ADDCYC(4)
 3002 D1:CA84 CD 06 B5 D1     call subroutine6502_abs_split_start
 3003 D1:CA88 E5 -  -  -      push hl
 3004 D1:CA89 50 -  -  -          ld  d,b
 3005 D1:CA8A 79 -  -  -          ld  a,c
 3006 D1:CA8B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3007 D1:CA8D ED 4C -  -          mlt bc
 3008 D1:CA8F 21 00 40 D0         ld  hl,PAGETABLE
 3009 D1:CA93 09 -  -  -          add hl,bc
 3010 D1:CA94 ED 27 -  -          ld  hl,(hl)
 3011 D1:CA96 06 00 -  -          ld  b,0
 3012 D1:CA98 4F -  -  -          ld  c,a
 3013 D1:CA99 09 -  -  -          add hl,bc   ;full address
 3014 D1:CA9A 7E -  -  -          READ_ACCESS
 3015 D1:CA9B E1 -  -  -      pop hl
 3016 D1:CA9C 47 -  -  -      ld  b,a
 3017 D1:CA9D DD 7E 02 -      ld  a,(ix+REGY)
 3018 D1:CAA0 B8 -  -  -      cp  b
 3019 D1:CAA1 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3020 D1:CABA C3 E9 B2 D1     jp i6502NextLoad
 3021 D1:CABE -  -  -  -  
 3022 D1:CABE -  -  -  -  
 3023 D1:CABE -  -  -  -  ;-----------------------------------------------------------------------------
 3024 D1:CABE -  -  -  -  ;-----------------------------------------------------------------------------
 3025 D1:CABE -  -  -  -  ;-----------------------------------------------------------------------------
 3026 D1:CABE -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3027 D1:CABE -  -  -  -  
 3028 D1:CABE -  -  -  -  ;branch on C=0
 3029 D1:CABE -  -  -  -  ;relative	BCC oper	90	2	2**
 3030 D1:CABE -  -  -  -  inst6502_bcc:
 3031 D1:CABE ED 33 02 -      ADDCYC(2)
 3032 D1:CAC1 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3033 D1:CAC5 C2 E9 B2 D1     jp  nz,i6502NextLoad
 3034 D1:CAC9 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3035 D1:CACD -  -  -  -  
 3036 D1:CACD -  -  -  -  ;branch on C=1
 3037 D1:CACD -  -  -  -  ;relative	BCS oper	B0	2	2**
 3038 D1:CACD -  -  -  -  inst6502_bcs:
 3039 D1:CACD ED 33 02 -      ADDCYC(2)
 3040 D1:CAD0 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3041 D1:CAD4 CA E9 B2 D1     jp  z,i6502NextLoad
 3042 D1:CAD8 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3043 D1:CADC -  -  -  -  
 3044 D1:CADC -  -  -  -  ;branch on Z=1
 3045 D1:CADC -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3046 D1:CADC -  -  -  -  inst6502_beq:
 3047 D1:CADC ED 33 02 -      ADDCYC(2)
 3048 D1:CADF DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3049 D1:CAE3 CA E9 B2 D1     jp  z,i6502NextLoad
 3050 D1:CAE7 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3051 D1:CAEB -  -  -  -  
 3052 D1:CAEB -  -  -  -  ;branch on N=1
 3053 D1:CAEB -  -  -  -  ;relative	BMI oper	30	2	2**
 3054 D1:CAEB -  -  -  -  inst6502_bmi:
 3055 D1:CAEB ED 33 02 -      ADDCYC(2)
 3056 D1:CAEE DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3057 D1:CAF2 CA E9 B2 D1     jp  z,i6502NextLoad
 3058 D1:CAF6 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3059 D1:CAFA -  -  -  -  
 3060 D1:CAFA -  -  -  -  
 3061 D1:CAFA -  -  -  -  ;branch on Z=0
 3062 D1:CAFA -  -  -  -  ;relative	BNE oper	D0	2	2**
 3063 D1:CAFA -  -  -  -  inst6502_bne:
 3064 D1:CAFA ED 33 02 -      ADDCYC(2)
 3065 D1:CAFD DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3066 D1:CB01 C2 E9 B2 D1     jp  nz,i6502NextLoad
 3067 D1:CB05 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3068 D1:CB09 -  -  -  -  
 3069 D1:CB09 -  -  -  -  ;branch on N=0
 3070 D1:CB09 -  -  -  -  ;relative	BPL oper	10	2	2**
 3071 D1:CB09 -  -  -  -  inst6502_bpl:
 3072 D1:CB09 ED 33 02 -      ADDCYC(2)
 3073 D1:CB0C DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3074 D1:CB10 C2 E9 B2 D1     jp  nz,i6502NextLoad
 3075 D1:CB14 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3076 D1:CB18 -  -  -  -  
 3077 D1:CB18 -  -  -  -  ;branch on V=0
 3078 D1:CB18 -  -  -  -  ;relative	BVC oper	50	2	2**
 3079 D1:CB18 -  -  -  -  inst6502_bvc:
 3080 D1:CB18 ED 33 02 -      ADDCYC(2)
 3081 D1:CB1B DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3082 D1:CB1F C2 E9 B2 D1     jp  nz,i6502NextLoad
 3083 D1:CB23 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3084 D1:CB27 -  -  -  -  
 3085 D1:CB27 -  -  -  -  ;branch on V=1
 3086 D1:CB27 -  -  -  -  ;relative	BVS oper	70	2	2**
 3087 D1:CB27 -  -  -  -  inst6502_bvs:
 3088 D1:CB27 ED 33 02 -      ADDCYC(2)
 3089 D1:CB2A DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3090 D1:CB2E CA E9 B2 D1     jp  z,i6502NextLoad
 3091 D1:CB32 C3 A5 B5 D1     jp  subroutine6502_take_branch
 3092 D1:CB36 -  -  -  -  
 3093 D1:CB36 -  -  -  -  ;-----------------------------------------------------------------------------
 3094 D1:CB36 -  -  -  -  ;-----------------------------------------------------------------------------
 3095 D1:CB36 -  -  -  -  ;-----------------------------------------------------------------------------
 3096 D1:CB36 -  -  -  -  ;Instructions by type: Interrupts
 3097 D1:CB36 -  -  -  -  
 3098 D1:CB36 -  -  -  -  ;BRK - Force Break
 3099 D1:CB36 -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3100 D1:CB36 -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3101 D1:CB36 -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3102 D1:CB36 -  -  -  -  ;(identifying a reason for the break.)
 3103 D1:CB36 -  -  -  -  ;The status register will be pushed to the stack with the break
 3104 D1:CB36 -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3105 D1:CB36 -  -  -  -  ;instruction, the break flag will be ignored.
 3106 D1:CB36 -  -  -  -  ;The interrupt disable flag is not set automatically.
 3107 D1:CB36 -  -  -  -  ;
 3108 D1:CB36 -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3109 D1:CB36 -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3110 D1:CB36 -  -  -  -  ;implied	BRK	00	1	7  
 3111 D1:CB36 -  -  -  -  inst6502_brk:
 3112 D1:CB36 ED 33 07 -      ADDCYC(7)
 3113 D1:CB39 21 00 39 D0     ld  hl,STACKBASE
 3114 D1:CB3D DD 6E 03 -      ld  L,(ix+REGSP)
 3115 D1:CB40 52 DD 17 05     ld.s de,(ix+REGPC)
 3116 D1:CB44 13 -  -  -      inc de      ;that extra spacer.
 3117 D1:CB45 72 -  -  -      ld  (hl),d
 3118 D1:CB46 2D -  -  -      dec L
 3119 D1:CB47 73 -  -  -      ld  (hl),e
 3120 D1:CB48 2D -  -  -      dec L
 3121 D1:CB49 DD 7E 04 -      ld  a,(ix+REGSR)
 3122 D1:CB4C CB D7 -  -      set SF_INT,a
 3123 D1:CB4E 77 -  -  -      ld  (hl),a
 3124 D1:CB4F 2D -  -  -      dec L
 3125 D1:CB50 DD 75 03 -      ld  (ix+REGSP),L
 3126 D1:CB53 B7 -  -  -      WAS_NMI_TRIGGERED
 3127 D1:CB54 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3128 D1:CB58 28 04 -  -      jr  z,+_
 3129 D1:CB5A 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3130 D1:CB5E 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3131 D1:CB62 ED 27 -  -      ld  hl,(hl)
 3132 D1:CB64 09 -  -  -      add hl,bc
 3133 D1:CB65 ED 17 -  -      ld  de,(hl)
 3134 D1:CB67 52 DD 1F 05     ld.s (ix+REGPC),de
 3135 D1:CB6B C3 D3 B2 D1     jp  i6502FirstLoad
 3136 D1:CB6F -  -  -  -  
 3137 D1:CB6F -  -  -  -  ;RTI - Return from Interrupt
 3138 D1:CB6F -  -  -  -  ;The status register is pulled with the break flag
 3139 D1:CB6F -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3140 D1:CB6F -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3141 D1:CB6F -  -  -  -  ;                      from stack
 3142 D1:CB6F -  -  -  -  ;implied	RTI	40	1	6  
 3143 D1:CB6F -  -  -  -  inst6502_rti:
 3144 D1:CB6F 21 00 39 D0     ld  hl,STACKBASE
 3145 D1:CB73 DD 6E 03 -      ld  l,(ix+REGSP)
 3146 D1:CB76 2C -  -  -      inc l
 3147 D1:CB77 7E -  -  -      ld  a,(hl)
 3148 D1:CB78 2C -  -  -      inc l
 3149 D1:CB79 5E -  -  -      ld  e,(hl)
 3150 D1:CB7A 2C -  -  -      inc l
 3151 D1:CB7B 56 -  -  -      ld  d,(hl)
 3152 D1:CB7C DD 75 03 -      ld  (ix+REGSP),l
 3153 D1:CB7F 52 DD 1F 05     ld.s (ix+REGPC),de
 3154 D1:CB83 DD 46 04 -      ld  b,(ix+REGSR)
 3155 D1:CB86 A8 -  -  -      xor a,b
 3156 D1:CB87 E6 DF -  -      and a,%11011111
 3157 D1:CB89 A8 -  -  -      xor a,b
 3158 D1:CB8A DD 77 04 -      ld  (ix+REGSR),a
 3159 D1:CB8D ED 33 06 -      ADDCYC(6)
 3160 D1:CB90 C3 D3 B2 D1     jp  i6502FirstLoad
 3161 D1:CB94 -  -  -  -  
 3162 D1:CB94 -  -  -  -  
 3163 D1:CB94 -  -  -  -  
 3164 D1:CB94 -  -  -  -  ;-----------------------------------------------------------------------------
 3165 D1:CB94 -  -  -  -  ;-----------------------------------------------------------------------------
 3166 D1:CB94 -  -  -  -  ;-----------------------------------------------------------------------------
 3167 D1:CB94 -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3168 D1:CB94 -  -  -  -  
 3169 D1:CB94 -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3170 D1:CB94 -  -  -  -  inst6052_jmp_abs:
 3171 D1:CB94 7E -  -  -      ld  a,(hl)
 3172 D1:CB95 23 -  -  -      inc hl
 3173 D1:CB96 1C -  -  -      inc e
 3174 D1:CB97 20 0F -  -      jr  nz,+_
 3175 D1:CB99 DD 56 06 -      ld  d,(ix+REGPC+1)
 3176 D1:CB9C 14 -  -  -      inc d
 3177 D1:CB9D 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3178 D1:CB9F ED 5C -  -      mlt de
 3179 D1:CBA1 21 00 40 D0     ld  hl,PAGETABLE
 3180 D1:CBA5 19 -  -  -      add hl,de
 3181 D1:CBA6 ED 27 -  -      ld  hl,(hl)
 3182 D1:CBA8 DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3183 D1:CBAB 7E -  -  -      ld  a,(hl)
 3184 D1:CBAC DD 77 06 -      ld  (ix+REGPC+1),a
 3185 D1:CBAF ED 33 03 -      ADDCYC(3)
 3186 D1:CBB2 C3 D3 B2 D1     jp i6502FirstLoad
 3187 D1:CBB6 -  -  -  -  
 3188 D1:CBB6 -  -  -  -  
 3189 D1:CBB6 -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3190 D1:CBB6 -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3191 D1:CBB6 -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3192 D1:CBB6 -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3193 D1:CBB6 -  -  -  -  inst6502_jmp_indir:
 3194 D1:CBB6 ED 33 05 -      ADDCYC(5)
 3195 D1:CBB9 5E -  -  -      ld  e,(hl)
 3196 D1:CBBA 7B -  -  -      ld  a,e
 3197 D1:CBBB 23 -  -  -      inc hl
 3198 D1:CBBC 3C -  -  -      inc a
 3199 D1:CBBD 20 0F -  -      jr  nz,+_
 3200 D1:CBBF DD 46 06 -      ld  b,(ix+REGPC+1)
 3201 D1:CBC2 04 -  -  -      inc b
 3202 D1:CBC3 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3203 D1:CBC5 ED 4C -  -      mlt bc
 3204 D1:CBC7 21 00 40 D0     ld  hl,PAGETABLE
 3205 D1:CBCB 09 -  -  -      add hl,bc
 3206 D1:CBCC ED 27 -  -      ld  hl,(hl)
 3207 D1:CBCE 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3208 D1:CBCF 1C -  -  -      inc e
 3209 D1:CBD0 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3210 D1:CBD2 1D -  -  -      dec e
 3211 D1:CBD3 4B -  -  -      ld  c,e
 3212 D1:CBD4 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3213 D1:CBD6 ED 5C -  -      mlt de
 3214 D1:CBD8 21 00 40 D0     ld  hl,PAGETABLE
 3215 D1:CBDC 19 -  -  -      add hl,de
 3216 D1:CBDD ED 27 -  -      ld  hl,(hl)
 3217 D1:CBDF 16 00 -  -      ld  d,0
 3218 D1:CBE1 59 -  -  -      ld  e,c
 3219 D1:CBE2 19 -  -  -      add hl,de   ;full real address reconstructed.
 3220 D1:CBE3 ED 17 -  -      ld  de,(hl)
 3221 D1:CBE5 52 DD 1F 05     ld.s (ix+REGPC),de
 3222 D1:CBE9 C3 D3 B2 D1     jp  i6502FirstLoad
 3223 D1:CBED -  -  -  -  inst6502_jmp_indir_splitread:
 3224 D1:CBED -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3225 D1:CBED -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3226 D1:CBED 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3227 D1:CBEF ED 5C -  -      mlt de
 3228 D1:CBF1 21 00 40 D0     ld  hl,PAGETABLE
 3229 D1:CBF5 19 -  -  -      add hl,de
 3230 D1:CBF6 ED 27 -  -      ld  hl,(hl)
 3231 D1:CBF8 56 -  -  -      ld  d,(hl)
 3232 D1:CBF9 01 FF 00 00     ld  bc,255
 3233 D1:CBFD 09 -  -  -      add hl,bc
 3234 D1:CBFE 5E -  -  -      ld  e,(hl)
 3235 D1:CBFF 52 DD 1F 05     ld.s (ix+REGPC),de
 3236 D1:CC03 C3 D3 B2 D1     jp  i6502FirstLoad
 3237 D1:CC07 -  -  -  -  
 3238 D1:CC07 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3239 D1:CC07 -  -  -  -  ;    mlt de
 3240 D1:CC07 -  -  -  -  ;    ld  hl,PAGETABLE
 3241 D1:CC07 -  -  -  -  ;    add hl,de
 3242 D1:CC07 -  -  -  -  ;    ld  de,(hl) ;
 3243 D1:CC07 -  -  -  -  ;    ex  de,hl
 3244 D1:CC07 -  -  -  -  ;    ld  bc,255
 3245 D1:CC07 -  -  -  -  ;    add hl,bc
 3246 D1:CC07 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3247 D1:CC07 -  -  -  -  ;    ex  de,hl
 3248 D1:CC07 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3249 D1:CC07 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3250 D1:CC07 -  -  -  -  ;    ld  e,(hl)
 3251 D1:CC07 -  -  -  -  ;    ld  d,a
 3252 D1:CC07 -  -  -  -  ;    ld.s (ix+REGPC),de
 3253 D1:CC07 -  -  -  -  ;    jp  i6502FirstLoad
 3254 D1:CC07 -  -  -  -  
 3255 D1:CC07 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3256 D1:CC07 -  -  -  -  inst6502_jsr:
 3257 D1:CC07 DD 56 06 -      ld  d,(ix+REGPC+1)
 3258 D1:CC0A 4E -  -  -      ld  c,(hl)
 3259 D1:CC0B 23 -  -  -      inc hl
 3260 D1:CC0C 1C -  -  -      inc e
 3261 D1:CC0D 20 0E -  -      jr  nz,+_
 3262 D1:CC0F 14 -  -  -      inc d
 3263 D1:CC10 7A -  -  -      ld  a,d
 3264 D1:CC11 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3265 D1:CC13 ED 5C -  -      mlt de
 3266 D1:CC15 21 00 40 D0     ld  hl,PAGETABLE
 3267 D1:CC19 19 -  -  -      add hl,de
 3268 D1:CC1A ED 27 -  -      ld  hl,(hl)
 3269 D1:CC1C 57 -  -  -      ld  d,a
 3270 D1:CC1D 46 -  -  -  _:  ld  b,(hl)
 3271 D1:CC1E -  -  -  -      ;push de to 6502stack
 3272 D1:CC1E 21 00 39 D0     ld  hl,STACKBASE
 3273 D1:CC22 DD 6E 03 -      ld  l,(ix+REGSP)
 3274 D1:CC25 72 -  -  -      ld  (hl),d
 3275 D1:CC26 2D -  -  -      dec l
 3276 D1:CC27 73 -  -  -      ld  (hl),e
 3277 D1:CC28 2D -  -  -      dec l
 3278 D1:CC29 DD 75 03 -      ld  (ix+REGSP),l
 3279 D1:CC2C 52 DD 0F 05     ld.s (ix+REGPC),bc
 3280 D1:CC30 ED 33 06 -      ADDCYC(6)
 3281 D1:CC33 C3 D3 B2 D1     jp  i6502FirstLoad
 3282 D1:CC37 -  -  -  -  
 3283 D1:CC37 -  -  -  -  ;implied	RTS	60	1	6
 3284 D1:CC37 -  -  -  -  inst6502_rts:
 3285 D1:CC37 21 00 39 D0     ld  hl,STACKBASE
 3286 D1:CC3B DD 6E 03 -      ld  l,(ix+REGSP)
 3287 D1:CC3E 2C -  -  -      inc l
 3288 D1:CC3F 5E -  -  -      ld  e,(hl)
 3289 D1:CC40 2C -  -  -      inc l
 3290 D1:CC41 56 -  -  -      ld  d,(hl)
 3291 D1:CC42 DD 75 03 -      ld  (ix+REGSP),l
 3292 D1:CC45 52 DD 1F 05     ld.s (ix+REGPC),de
 3293 D1:CC49 ED 33 06 -      ADDCYC(6)
 3294 D1:CC4C C3 D3 B2 D1     jp  i6502FirstLoad
 3295 D1:CC50 -  -  -  -  
 3296 D1:CC50 -  -  -  -  
 3297 D1:CC50 -  -  -  -  ;-----------------------------------------------------------------------------
 3298 D1:CC50 -  -  -  -  ;-----------------------------------------------------------------------------
 3299 D1:CC50 -  -  -  -  ;-----------------------------------------------------------------------------
 3300 D1:CC50 -  -  -  -  ;Instructions by type: Miscellaneous
 3301 D1:CC50 -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3302 D1:CC50 -  -  -  -  ;
 3303 D1:CC50 -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3304 D1:CC50 -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3305 D1:CC50 -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3306 D1:CC50 -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3307 D1:CC50 -  -  -  -  ;any of the registers, other than the status register (SR).
 3308 D1:CC50 -  -  -  -  
 3309 D1:CC50 -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3310 D1:CC50 -  -  -  -  ;                                           M7	+	-	-	-	M6
 3311 D1:CC50 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3312 D1:CC50 -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3313 D1:CC50 -  -  -  -  inst6502_bit_zp:
 3314 D1:CC50 ED 33 03 -      ADDCYC(3)
 3315 D1:CC53 7E -  -  -      ld  a,(hl)
 3316 D1:CC54 01 00 38 D0     ld  bc,ZEROPAGE
 3317 D1:CC58 81 -  -  -      add a,c
 3318 D1:CC59 4F -  -  -      ld  c,a
 3319 D1:CC5A 0A -  -  -      ld  a,(bc)
 3320 D1:CC5B DD A6 00 -  _:  and a,(ix+REGA)
 3321 D1:CC5E CB 8F -  -      res SF_ZERO,a
 3322 D1:CC60 20 02 -  -      jr  nz,$+4
 3323 D1:CC62 CB CF -  -      set SF_ZERO,a
 3324 D1:CC64 DD 46 04 -      ld  b,(ix+REGSR)
 3325 D1:CC67 A8 -  -  -      xor a,b
 3326 D1:CC68 E6 C2 -  -      and a,%11000010
 3327 D1:CC6A A8 -  -  -      xor a,b
 3328 D1:CC6B DD 77 04 -      ld  (ix+REGSR),a
 3329 D1:CC6E C3 E9 B2 D1     jp  i6502NextLoad
 3330 D1:CC72 -  -  -  -  
 3331 D1:CC72 -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3332 D1:CC72 -  -  -  -  inst6502_bit_abs:
 3333 D1:CC72 ED 33 04 -      ADDCYC(4)
 3334 D1:CC75 CD 06 B5 D1     call subroutine6502_abs_split_start
 3335 D1:CC79 E5 -  -  -      push hl
 3336 D1:CC7A 50 -  -  -          ld  d,b
 3337 D1:CC7B 79 -  -  -          ld  a,c
 3338 D1:CC7C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3339 D1:CC7E ED 4C -  -          mlt bc
 3340 D1:CC80 21 00 40 D0         ld  hl,PAGETABLE
 3341 D1:CC84 09 -  -  -          add hl,bc
 3342 D1:CC85 ED 27 -  -          ld  hl,(hl)
 3343 D1:CC87 06 00 -  -          ld  b,0
 3344 D1:CC89 4F -  -  -          ld  c,a
 3345 D1:CC8A 09 -  -  -          add hl,bc   ;full address
 3346 D1:CC8B 7E -  -  -          READ_ACCESS
 3347 D1:CC8C E1 -  -  -      pop hl
 3348 D1:CC8D 18 CC -  -      jr  -_    
 3349 D1:CC8F -  -  -  -  
 3350 D1:CC8F -  -  -  -  ;NOP - No Operation
 3351 D1:CC8F -  -  -  -  ;implied	NOP	EA	1	2  
 3352 D1:CC8F -  -  -  -  inst6502_nop:
 3353 D1:CC8F ED 33 02 -      ADDCYC(2)
 3354 D1:CC92 C3 02 B3 D1     jp  i6502FinishLoad
 3355 D1:CC96 -  -  -  -  
 3356 D1:CC96 -  -  -  -  ;-----------------------------------------------------------------------------
 3357 D1:CC96 -  -  -  -  ;-----------------------------------------------------------------------------
 3358 D1:CC96 -  -  -  -  ;-----------------------------------------------------------------------------
 3359 D1:CC96 -  -  -  -  ;Instruction not mapped: Terminate emulation
 3360 D1:CC96 -  -  -  -  inst6502_:
 3361 D1:CC96 C9 -  -  -      ret
 3362 D1:CC97 -  -  -  -  
 3363 D1:CC97 -  -  -  -  inst6502_halt:
 3364 D1:CC97 18 FE -  -      jr $
 3365 D1:CC99 C3 02 B3 D1     jp i6502FinishLoad
 3366 D1:CC9D -  -  -  -  
 3367 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3368 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3369 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3370 D1:CC9D -  -  -  -  ;Instructions by type: Illegal Instructions
 3371 D1:CC9D -  -  -  -  
 3372 D1:CC9D -  -  -  -  
 3373 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3374 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3375 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3376 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3377 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3378 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3379 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3380 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3381 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3382 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3383 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3384 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3385 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3386 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3387 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3388 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3389 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3390 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3391 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3392 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3393 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3394 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3395 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3396 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3397 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3398 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3399 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3400 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3401 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3402 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3403 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3404 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3405 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3406 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3407 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3408 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3412 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3413 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3414 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3415 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3416 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3417 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3418 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3419 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3423 D1:CC9D -  -  -  -  ;-----------------------------------------------------------------------------
 3424 D1:CC9D -  -  -  -  
 3425 D1:CC9D -  -  -  -  inst6502_instruction_set:
 3426 D1:CC9D 36 CB D1 -  .dl	inst6502_brk					;00
 3427 D1:CCA0 D7 C3 D1 -  .dl	inst6502_ora_indx				;01
 3428 D1:CCA3 96 CC D1 -  .dl	inst6502_				;02
 3429 D1:CCA6 96 CC D1 -  .dl	inst6502_				;03
 3430 D1:CCA9 96 CC D1 -  .dl	inst6502_				;04
 3431 D1:CCAC CA C2 D1 -  .dl	inst6502_ora_zp					;05
 3432 D1:CCAF 82 C4 D1 -  .dl	inst6502_asl_zp					;06
 3433 D1:CCB2 96 CC D1 -  .dl	inst6502_				;07
 3434 D1:CCB5 5F BB D1 -  .dl	inst6502_php					;08
 3435 D1:CCB8 A9 C2 D1 -  .dl	inst6502_ora_imm				;09
 3436 D1:CCBB 5E C4 D1 -  .dl	inst6502_asl					;0A
 3437 D1:CCBE 96 CC D1 -  .dl	inst6502_				;0B
 3438 D1:CCC1 96 CC D1 -  .dl	inst6502_				;0C
 3439 D1:CCC4 1D C3 D1 -  .dl	inst6502_ora_abs				;0D
 3440 D1:CCC7 DB C4 D1 -  .dl	inst6502_asl_abs				;0E
 3441 D1:CCCA 96 CC D1 -  .dl	inst6502_				;0F
 3442 D1:CCCD 09 CB D1 -  .dl	inst6502_bpl					;10
 3443 D1:CCD0 17 C4 D1 -  .dl	inst6502_ora_indy				;11
 3444 D1:CCD3 97 CC D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3445 D1:CCD6 96 CC D1 -  .dl	inst6502_				;13
 3446 D1:CCD9 96 CC D1 -  .dl	inst6502_				;14
 3447 D1:CCDC F2 C2 D1 -  .dl	inst6502_ora_zpx				;15
 3448 D1:CCDF AD C4 D1 -  .dl	inst6502_asl_zpx				;16
 3449 D1:CCE2 96 CC D1 -  .dl	inst6502_				;17
 3450 D1:CCE5 76 C8 D1 -  .dl	inst6502_clc					;18
 3451 D1:CCE8 96 C3 D1 -  .dl	inst6502_ora_absy				;19
 3452 D1:CCEB 96 CC D1 -  .dl	inst6502_				;1A
 3453 D1:CCEE 96 CC D1 -  .dl	inst6502_				;1B
 3454 D1:CCF1 96 CC D1 -  .dl	inst6502_				;1C
 3455 D1:CCF4 55 C3 D1 -  .dl	inst6502_ora_absx				;1D
 3456 D1:CCF7 18 C5 D1 -  .dl	inst6502_asl_absx				;1E
 3457 D1:CCFA 96 CC D1 -  .dl	inst6502_				;1F
 3458 D1:CCFD 07 CC D1 -  .dl	inst6502_jsr					;20
 3459 D1:CD00 6D C0 D1 -  .dl	inst6502_and_indx				;21
 3460 D1:CD03 96 CC D1 -  .dl	inst6502_				;22
 3461 D1:CD06 96 CC D1 -  .dl	inst6502_				;23
 3462 D1:CD09 50 CC D1 -  .dl	inst6502_bit_zp					;24
 3463 D1:CD0C 60 BF D1 -  .dl	inst6502_and_zp					;25
 3464 D1:CD0F 82 C6 D1 -  .dl	inst6502_rol_zp					;26
 3465 D1:CD12 96 CC D1 -  .dl	inst6502_				;27
 3466 D1:CD15 9A BB D1 -  .dl	inst6502_plp					;28
 3467 D1:CD18 3F BF D1 -  .dl	inst6502_and_imm				;29
 3468 D1:CD1B 5A C6 D1 -  .dl	inst6502_rol					;2A
 3469 D1:CD1E 96 CC D1 -  .dl	inst6502_				;2B
 3470 D1:CD21 72 CC D1 -  .dl	inst6502_bit_abs				;2C
 3471 D1:CD24 B3 BF D1 -  .dl	inst6502_and_abs				;2D
 3472 D1:CD27 E1 C6 D1 -  .dl	inst6502_rol_abs				;2E
 3473 D1:CD2A 96 CC D1 -  .dl	inst6502_				;2F
 3474 D1:CD2D EB CA D1 -  .dl	inst6502_bmi					;30
 3475 D1:CD30 AD C0 D1 -  .dl	inst6502_and_indy				;31
 3476 D1:CD33 96 CC D1 -  .dl	inst6502_				;32
 3477 D1:CD36 96 CC D1 -  .dl	inst6502_				;33
 3478 D1:CD39 96 CC D1 -  .dl	inst6502_				;34
 3479 D1:CD3C 88 BF D1 -  .dl	inst6502_and_zpx				;35
 3480 D1:CD3F B0 C6 D1 -  .dl	inst6502_rol_zpx				;36
 3481 D1:CD42 96 CC D1 -  .dl	inst6502_						;37
 3482 D1:CD45 96 C8 D1 -  .dl	inst6502_sec					;38
 3483 D1:CD48 2C C0 D1 -  .dl	inst6502_and_absy				;39
 3484 D1:CD4B 96 CC D1 -  .dl	inst6502_			;3A
 3485 D1:CD4E 96 CC D1 -  .dl	inst6502_			;3B
 3486 D1:CD51 96 CC D1 -  .dl	inst6502_			;3C
 3487 D1:CD54 EB BF D1 -  .dl	inst6502_and_absx				;3D
 3488 D1:CD57 21 C7 D1 -  .dl	inst6502_rol_absx				;3E
 3489 D1:CD5A 96 CC D1 -  .dl	inst6502_			;3F
 3490 D1:CD5D 37 CC D1 -  .dl	inst6502_rts					;40
 3491 D1:CD60 22 C2 D1 -  .dl	inst6502_eor_indx				;41
 3492 D1:CD63 96 CC D1 -  .dl	inst6502_			;42
 3493 D1:CD66 96 CC D1 -  .dl	inst6502_			;43
 3494 D1:CD69 96 CC D1 -  .dl	inst6502_			;44
 3495 D1:CD6C 15 C1 D1 -  .dl	inst6502_eor_zp					;45
 3496 D1:CD6F 80 C5 D1 -  .dl	inst6502_lsr_zp					;46
 3497 D1:CD72 96 CC D1 -  .dl	inst6502_			;47
 3498 D1:CD75 4C BB D1 -  .dl	inst6502_pha					;48
 3499 D1:CD78 F4 C0 D1 -  .dl	inst6502_eor_imm				;49
 3500 D1:CD7B 5C C5 D1 -  .dl	inst6502_lsr					;4A
 3501 D1:CD7E 96 CC D1 -  .dl	inst6502_			;4B
 3502 D1:CD81 94 CB D1 -  .dl	inst6052_jmp_abs				;4C
 3503 D1:CD84 68 C1 D1 -  .dl	inst6502_eor_abs				;4D
 3504 D1:CD87 D9 C5 D1 -  .dl	inst6502_lsr_abs				;4E
 3505 D1:CD8A 96 CC D1 -  .dl	inst6502_			;4F
 3506 D1:CD8D 18 CB D1 -  .dl	inst6502_bvc					;50
 3507 D1:CD90 62 C2 D1 -  .dl	inst6502_eor_indy				;51
 3508 D1:CD93 96 CC D1 -  .dl	inst6502_			;52
 3509 D1:CD96 96 CC D1 -  .dl	inst6502_			;53
 3510 D1:CD99 96 CC D1 -  .dl	inst6502_			;54
 3511 D1:CD9C 3D C1 D1 -  .dl	inst6502_eor_zpx				;55
 3512 D1:CD9F AB C5 D1 -  .dl	inst6502_lsr_zpx				;56
 3513 D1:CDA2 96 CC D1 -  .dl	inst6502_			;57
 3514 D1:CDA5 86 C8 D1 -  .dl	inst6502_cli					;58
 3515 D1:CDA8 E1 C1 D1 -  .dl	inst6502_eor_absy				;59
 3516 D1:CDAB 96 CC D1 -  .dl	inst6502_			;5A
 3517 D1:CDAE 96 CC D1 -  .dl	inst6502_			;5B
 3518 D1:CDB1 96 CC D1 -  .dl	inst6502_			;5C
 3519 D1:CDB4 A0 C1 D1 -  .dl	inst6502_eor_absx				;5D
 3520 D1:CDB7 16 C6 D1 -  .dl	inst6502_lsr_absx				;5E
 3521 D1:CDBA 96 CC D1 -  .dl	inst6502_			;5F
 3522 D1:CDBD 37 CC D1 -  .dl	inst6502_rts					;60
 3523 D1:CDC0 FA BD D1 -  .dl	inst6502_adc_indx				;61
 3524 D1:CDC3 96 CC D1 -  .dl	inst6502_			;62
 3525 D1:CDC6 96 CC D1 -  .dl	inst6502_			;63
 3526 D1:CDC9 96 CC D1 -  .dl	inst6502_			;64
 3527 D1:CDCC 65 BD D1 -  .dl	inst6502_adc_zp					;65
 3528 D1:CDCF 90 C7 D1 -  .dl	inst6502_ror_zp					;66
 3529 D1:CDD2 96 CC D1 -  .dl	inst6502_			;67
 3530 D1:CDD5 74 BB D1 -  .dl	inst6502_pla					;68
 3531 D1:CDD8 5D BD D1 -  .dl	inst6502_adc_imm				;69
 3532 D1:CDDB 68 C7 D1 -  .dl	inst6502_ror					;6A
 3533 D1:CDDE 96 CC D1 -  .dl	inst6502_			;6B
 3534 D1:CDE1 B6 CB D1 -  .dl	inst6502_jmp_indir				;6C
 3535 D1:CDE4 88 BD D1 -  .dl	inst6502_adc_abs				;6D
 3536 D1:CDE7 EF C7 D1 -  .dl	inst6502_ror_abs				;6E
 3537 D1:CDEA 96 CC D1 -  .dl	inst6502_			;6F
 3538 D1:CDED 27 CB D1 -  .dl	inst6502_bvs					;70
 3539 D1:CDF0 22 BE D1 -  .dl	inst6502_adc_indy				;71
 3540 D1:CDF3 96 CC D1 -  .dl	inst6502_			;72
 3541 D1:CDF6 96 CC D1 -  .dl	inst6502_			;73
 3542 D1:CDF9 96 CC D1 -  .dl	inst6502_			;74
 3543 D1:CDFC 75 BD D1 -  .dl	inst6502_adc_zpx				;75
 3544 D1:CDFF BE C7 D1 -  .dl	inst6502_ror_zpx				;76
 3545 D1:CE02 96 CC D1 -  .dl	inst6502_			;77
 3546 D1:CE05 A6 C8 D1 -  .dl	inst6502_sei					;78
 3547 D1:CE08 D1 BD D1 -  .dl	inst6502_adc_absy				;79
 3548 D1:CE0B 96 CC D1 -  .dl	inst6502_			;7A
 3549 D1:CE0E 96 CC D1 -  .dl	inst6502_			;7B
 3550 D1:CE11 96 CC D1 -  .dl	inst6502_			;7C
 3551 D1:CE14 A8 BD D1 -  .dl	inst6502_adc_absx				;7D
 3552 D1:CE17 2F C8 D1 -  .dl	inst6502_ror_absx				;7E
 3553 D1:CE1A 96 CC D1 -  .dl	inst6502_			;7F
 3554 D1:CE1D 96 CC D1 -  .dl	inst6502_			;80
 3555 D1:CE20 B4 B9 D1 -  .dl	inst6502_sta_indx				;81
 3556 D1:CE23 96 CC D1 -  .dl	inst6502_			;82
 3557 D1:CE26 96 CC D1 -  .dl	inst6502_			;83
 3558 D1:CE29 56 BA D1 -  .dl	inst6502_sty_zp					;84
 3559 D1:CE2C 19 B9 D1 -  .dl	inst6502_sta_zp					;85
 3560 D1:CE2F 0D BA D1 -  .dl	inst6502_stx_zp					;86
 3561 D1:CE32 96 CC D1 -  .dl	inst6502_			;87
 3562 D1:CE35 90 BC D1 -  .dl	inst6502_dey					;88
 3563 D1:CE38 96 CC D1 -  .dl	inst6502_			;89
 3564 D1:CE3B FF BA D1 -  .dl	inst6502_txa					;8A
 3565 D1:CE3E 96 CC D1 -  .dl	inst6502_			;8B
 3566 D1:CE41 7D BA D1 -  .dl	inst6502_sty_abs				;8C
 3567 D1:CE44 40 B9 D1 -  .dl	inst6502_sta_abs				;8D
 3568 D1:CE47 34 BA D1 -  .dl	inst6502_stx_abs				;8E
 3569 D1:CE4A 96 CC D1 -  .dl	inst6502_			;8F
 3570 D1:CE4D BE CA D1 -  .dl	inst6502_bcc					;90
 3571 D1:CE50 DE B9 D1 -  .dl	inst6502_sta_indy				;91
 3572 D1:CE53 96 CC D1 -  .dl	inst6502_			;92
 3573 D1:CE56 96 CC D1 -  .dl	inst6502_			;93
 3574 D1:CE59 68 BA D1 -  .dl	inst6502_sty_zpx				;94
 3575 D1:CE5C 2B B9 D1 -  .dl	inst6502_sta_zpx				;95
 3576 D1:CE5F 1F BA D1 -  .dl	inst6502_stx_zpy				;96
 3577 D1:CE62 96 CC D1 -  .dl	inst6502_			;97
 3578 D1:CE65 2C BB D1 -  .dl	inst6502_tya					;98
 3579 D1:CE68 8B B9 D1 -  .dl	inst6502_sta_absy				;99
 3580 D1:CE6B 1F BB D1 -  .dl	inst6502_txs					;9A
 3581 D1:CE6E 96 CC D1 -  .dl	inst6502_			;9B
 3582 D1:CE71 96 CC D1 -  .dl	inst6502_			;9C
 3583 D1:CE74 62 B9 D1 -  .dl	inst6502_sta_absx				;9D
 3584 D1:CE77 96 CC D1 -  .dl	inst6502_			;9E
 3585 D1:CE7A 96 CC D1 -  .dl	inst6502_			;9F
 3586 D1:CE7D 3B B8 D1 -  .dl	inst6502_ldy_imm				;A0
 3587 D1:CE80 DC B6 D1 -  .dl	inst6502_lda_indx				;A1
 3588 D1:CE83 5D B7 D1 -  .dl	inst6502_ldx_imm				;A2
 3589 D1:CE86 96 CC D1 -  .dl	inst6502_			;A3
 3590 D1:CE89 59 B8 D1 -  .dl	inst6502_ldy_zp					;A4
 3591 D1:CE8C DE B5 D1 -  .dl	inst6502_lda_zp					;A5
 3592 D1:CE8F 7B B7 D1 -  .dl	inst6502_ldx_zp					;A6
 3593 D1:CE92 96 CC D1 -  .dl	inst6502_			;A7
 3594 D1:CE95 BF BA D1 -  .dl	inst6502_tay					;A8
 3595 D1:CE98 C0 B5 D1 -  .dl	inst6502_lda_imm				;A9
 3596 D1:CE9B 9F BA D1 -  .dl	inst6502_tax					;AA
 3597 D1:CE9E 96 CC D1 -  .dl	inst6502_			;AB
 3598 D1:CEA1 A6 B8 D1 -  .dl	inst6502_ldy_abs				;AC
 3599 D1:CEA4 2B B6 D1 -  .dl	inst6502_lda_abs				;AD
 3600 D1:CEA7 C8 B7 D1 -  .dl	inst6502_ldx_abs				;AE
 3601 D1:CEAA 96 CC D1 -  .dl	inst6502_			;AF
 3602 D1:CEAD CD CA D1 -  .dl	inst6502_bcs					;B0
 3603 D1:CEB0 19 B7 D1 -  .dl	inst6502_lda_indy				;B1
 3604 D1:CEB3 96 CC D1 -  .dl	inst6502_			;B2
 3605 D1:CEB6 96 CC D1 -  .dl	inst6502_			;B3
 3606 D1:CEB9 7E B8 D1 -  .dl	inst6502_ldy_zpx				;B4
 3607 D1:CEBC 03 B6 D1 -  .dl	inst6502_lda_zpx				;B5
 3608 D1:CEBF A0 B7 D1 -  .dl	inst6502_ldx_zpy				;B6
 3609 D1:CEC2 96 CC D1 -  .dl	inst6502_			;B7
 3610 D1:CEC5 8E C8 D1 -  .dl	inst6502_clv					;B8
 3611 D1:CEC8 9E B6 D1 -  .dl	inst6502_lda_absy				;B9
 3612 D1:CECB DF BA D1 -  .dl	inst6502_tsx					;BA
 3613 D1:CECE 96 CC D1 -  .dl	inst6502_			;BB
 3614 D1:CED1 DB B8 D1 -  .dl	inst6502_ldy_absx				;BC
 3615 D1:CED4 60 B6 D1 -  .dl	inst6502_lda_absx				;BD
 3616 D1:CED7 FD B7 D1 -  .dl	inst6502_ldx_absy				;BE
 3617 D1:CEDA 96 CC D1 -  .dl	inst6502_			;BF
 3618 D1:CEDD 30 CA D1 -  .dl	inst6502_cpy_imm				;C0
 3619 D1:CEE0 4B C9 D1 -  .dl	inst6502_cmp_indx				;C1
 3620 D1:CEE3 96 CC D1 -  .dl	inst6502_			;C2
 3621 D1:CEE6 96 CC D1 -  .dl	inst6502_			;C3
 3622 D1:CEE9 54 CA D1 -  .dl	inst6502_cpy_zp					;C4
 3623 D1:CEEC B6 C8 D1 -  .dl	inst6502_cmp_zp					;C5
 3624 D1:CEEF B4 BB D1 -  .dl	inst6502_dec_zp					;C6
 3625 D1:CEF2 96 CC D1 -  .dl	inst6502_			;C7
 3626 D1:CEF5 9A BC D1 -  .dl	inst6502_iny					;C8
 3627 D1:CEF8 AE C8 D1 -  .dl	inst6502_cmp_imm				;C9
 3628 D1:CEFB 72 BC D1 -  .dl	inst6502_dex					;CA
 3629 D1:CEFE 96 CC D1 -  .dl	inst6502_			;CB
 3630 D1:CF01 81 CA D1 -  .dl	inst6502_cpy_abs				;CC
 3631 D1:CF04 D9 C8 D1 -  .dl	inst6502_cmp_abs				;CD
 3632 D1:CF07 FF BB D1 -  .dl	inst6502_dec_abs				;CE
 3633 D1:CF0A 96 CC D1 -  .dl	inst6502_			;CF
 3634 D1:CF0D FA CA D1 -  .dl	inst6502_bne					;D0
 3635 D1:CF10 73 C9 D1 -  .dl	inst6502_cmp_indy				;D1
 3636 D1:CF13 96 CC D1 -  .dl	inst6502_			;D2
 3637 D1:CF16 96 CC D1 -  .dl	inst6502_			;D3
 3638 D1:CF19 96 CC D1 -  .dl	inst6502_			;D4
 3639 D1:CF1C C6 C8 D1 -  .dl	inst6502_cmp_zpx				;D5
 3640 D1:CF1F D8 BB D1 -  .dl	inst6502_dec_zpx				;D6
 3641 D1:CF22 96 CC D1 -  .dl	inst6502_			;D7
 3642 D1:CF25 7E C8 D1 -  .dl	inst6502_cld					;D8
 3643 D1:CF28 22 C9 D1 -  .dl	inst6502_cmp_absy				;D9
 3644 D1:CF2B 96 CC D1 -  .dl	inst6502_			;DA
 3645 D1:CF2E 96 CC D1 -  .dl	inst6502_			;DB
 3646 D1:CF31 96 CC D1 -  .dl	inst6502_			;DC
 3647 D1:CF34 F9 C8 D1 -  .dl	inst6502_cmp_absx				;DD
 3648 D1:CF37 35 BC D1 -  .dl	inst6502_dec_absx				;DE
 3649 D1:CF3A 96 CC D1 -  .dl	inst6502_			;DF
 3650 D1:CF3D A2 C9 D1 -  .dl	inst6502_cpx_imm				;E0
 3651 D1:CF40 EB BE D1 -  .dl	inst6502_sbc_indx				;E1
 3652 D1:CF43 96 CC D1 -  .dl	inst6502_			;E2
 3653 D1:CF46 96 CC D1 -  .dl	inst6502_			;E3
 3654 D1:CF49 C6 C9 D1 -  .dl	inst6502_cpx_zp					;E4
 3655 D1:CF4C 56 BE D1 -  .dl	inst6502_sbc_zp					;E5
 3656 D1:CF4F 9F BC D1 -  .dl	inst6502_inc_zp					;E6
 3657 D1:CF52 96 CC D1 -  .dl	inst6502_			;E7
 3658 D1:CF55 95 BC D1 -  .dl	inst6502_inx					;E8
 3659 D1:CF58 4E BE D1 -  .dl	inst6502_sbc_imm				;E9
 3660 D1:CF5B 8F CC D1 -  .dl	inst6502_nop					;EA
 3661 D1:CF5E 96 CC D1 -  .dl	inst6502_			;EB
 3662 D1:CF61 F3 C9 D1 -  .dl	inst6502_cpx_abs				;EC
 3663 D1:CF64 79 BE D1 -  .dl	inst6502_sbc_abs				;ED
 3664 D1:CF67 EA BC D1 -  .dl	inst6502_inc_abs				;EE
 3665 D1:CF6A 96 CC D1 -  .dl	inst6502_			;EF
 3666 D1:CF6D DC CA D1 -  .dl	inst6502_beq					;F0
 3667 D1:CF70 13 BF D1 -  .dl	inst6502_sbc_indy				;F1
 3668 D1:CF73 96 CC D1 -  .dl	inst6502_			;F2
 3669 D1:CF76 96 CC D1 -  .dl	inst6502_			;F3
 3670 D1:CF79 96 CC D1 -  .dl	inst6502_			;F4
 3671 D1:CF7C 66 BE D1 -  .dl	inst6502_sbc_zpx				;F5
 3672 D1:CF7F C3 BC D1 -  .dl	inst6502_inc_zpx				;F6
 3673 D1:CF82 96 CC D1 -  .dl	inst6502_			;F7
 3674 D1:CF85 9E C8 D1 -  .dl	inst6502_sed					;F8
 3675 D1:CF88 C2 BE D1 -  .dl	inst6502_sbc_absy				;F9
 3676 D1:CF8B 96 CC D1 -  .dl	inst6502_			;FA
 3677 D1:CF8E 96 CC D1 -  .dl	inst6502_			;FB
 3678 D1:CF91 96 CC D1 -  .dl	inst6502_			;FC
 3679 D1:CF94 99 BE D1 -  .dl	inst6502_sbc_absx				;FD
 3680 D1:CF97 20 BD D1 -  .dl	inst6502_inc_absx				;FE
 3681 D1:CF9A 96 CC D1 -  .dl	inst6502_			;FF
 3682 D1:CF9D -  -  -  -  
 3683 D1:CF9D -  -  -  -  
 3684 D1:CF9D -  -  -  -  
 3685 D1:CF9D -  -  -  -  
 3686 D1:CF9D -  -  -  -  
 3687 D1:CF9D -  -  -  -  
 3688 D1:CF9D -  -  -  -  
 3689 D1:CF9D -  -  -  -  
 3690 D1:CF9D -  -  -  -  
 3691 D1:CF9D -  -  -  -  
 3692 D1:CF9D -  -  -  -  
 3693 D1:CF9D -  -  -  -  
 3694 D1:CF9D -  -  -  -  
Listing for file "main.z80"
  612 D1:CF9D -  -  -  -  .echo "Main program size: ",$-programStart
