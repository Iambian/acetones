    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD 7F AE D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 21 00 00 D4     ld  hl,screenBuf1
   44 D1:A899 11 01 00 D4     ld  de,screenBuf1+1
   45 D1:A89D 01 FF 57 02     ld  bc,(2*240*320)-1
   46 D1:A8A1 36 00 -  -      ld  (hl),$00
   47 D1:A8A3 ED B0 -  -      ldir
   48 D1:A8A5 -  -  -  -  
   49 D1:A8A5 -  -  -  -      ;Makes sure all non-ROM areas have a mapping
   50 D1:A8A5 21 00 33 D0     ld  hl,scrap_mapping
   51 D1:A8A9 01 01 80 00     ld  bc,$008001
   52 D1:A8AD 1E 00 -  -      ld  e,0
   53 D1:A8AF CD F9 B5 D1     call i6502_map_pages
   54 D1:A8B3 -  -  -  -  
   55 D1:A8B3 -  -  -  -  
   56 D1:A8B3 -  -  -  -      ;load reset vectors
   57 D1:A8B3 21 9F A8 D1     ld  hl,testVectors
   58 D1:A8B7 01 01 01 00     ld  bc,$000101
   59 D1:A8BB 1E FF -  -      ld  e,$FF
   60 D1:A8BD CD F9 B5 D1     call i6502_map_pages
   61 D1:A8C1 -  -  -  -      ;load program ROM to lowmem
   62 D1:A8C1 21 9F A9 D1     ld  hl,testCode
   63 D1:A8C5 01 08 20 00     ld  bc,$002008
   64 D1:A8C9 1E 80 -  -      ld  e,$80
   65 D1:A8CB CD F9 B5 D1     call i6502_map_pages
   66 D1:A8CF -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   67 D1:A8CF -  -  -  -      ;memory to screen.
   68 D1:A8CF 21 00 50 D0     ld  hl,NAMETABLE1
   69 D1:A8D3 01 04 20 00     ld  bc,$002004
   70 D1:A8D7 1E 40 -  -      ld  e,$40
   71 D1:A8D9 CD F9 B5 D1     call i6502_map_pages
   72 D1:A8DD -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   73 D1:A8DD -  -  -  -      ;start the emulation.
   74 D1:A8DD -  -  -  -      ;jr $
   75 D1:A8DD CD D2 AE D1     call clearTextBuf
   76 D1:A8E1 3E 01 -  -      ld  a,1
   77 D1:A8E3 CD 1F AF D1     call setLineStart
   78 D1:A8E7 CD 28 AF D1     call setCurLine
   79 D1:A8EB 21 25 AA D1     ld  hl,text001
   80 D1:A8EF CD 4A AF D1     call printString
   81 D1:A8F3 FD 21 93 AA 
              D1 -  -  -      ld  iy,firstFileHeader
   82 D1:A8F8 01 00 00 00     ld  bc,0
   83 D1:A8FC FD 4E FF -      ld  c,(iy-1)
   84 D1:A8FF CD FA AD D1     call vatTraverse
   85 D1:A903 DA B0 AA D1     jp  c,err_noContainersFound
   86 D1:A907 D5 -  -  -      push de
   87 D1:A908 21 3C AA D1         ld  hl,text003
   88 D1:A90C CD 4A AF D1         call printString
   89 D1:A910 DD 46 FA -          ld  b,(ix-6)
   90 D1:A913 ED 22 F9 -          lea hl,ix-7
   91 D1:A916 7E -  -  -  _:      ld  a,(hl)
   92 D1:A917 2B -  -  -          dec hl
   93 D1:A918 E5 -  -  -          push hl
   94 D1:A919 C5 -  -  -              push bc
   95 D1:A91A CD 60 AF D1                 call PrintBigFont
   96 D1:A91E C1 -  -  -              pop bc
   97 D1:A91F E1 -  -  -          pop hl
   98 D1:A920 10 F4 -  -          djnz -_
   99 D1:A922 CD 33 AF D1         call newLine
  100 D1:A926 D1 -  -  -      pop de
  101 D1:A927 CD C9 AB D1     call loadROMFile
  102 D1:A92B -  -  -  -  
  103 D1:A92B -  -  -  -      ;REMOVE THE FOLLOWING BLOCK WHEN DONE TESTING NESTEST
  104 D1:A92B -  -  -  -      ;
  105 D1:A92B -  -  -  -      ;
  106 D1:A92B 21 1C AA D1     ld  hl,timings_file
  107 D1:A92F CD 20 03 02     call _Mov9ToOP1
  108 D1:A933 CD 0C 05 02     call _ChkFindSym
  109 D1:A937 DA 5E A9 D1     jp  c,endCurrentRun
  110 D1:A93B CD 98 1F 02     call _ChkInRam
  111 D1:A93F EB -  -  -      ex  de,hl
  112 D1:A940 30 08 -  -      jr  nc,+_
  113 D1:A942 11 09 00 00     ld  de,9
  114 D1:A946 19 -  -  -      add hl,de
  115 D1:A947 5E -  -  -      ld  e,(hl)
  116 D1:A948 19 -  -  -      add hl,de
  117 D1:A949 23 -  -  -      inc hl
  118 D1:A94A 5E -  -  -  _:  ld  e,(hl)
  119 D1:A94B 23 -  -  -      inc hl
  120 D1:A94C 56 -  -  -      ld  d,(hl)
  121 D1:A94D 23 -  -  -      inc hl
  122 D1:A94E 22 1F 34 D0     ld  (timings_base),hl
  123 D1:A952 -  -  -  -      ;
  124 D1:A952 -  -  -  -      ;
  125 D1:A952 -  -  -  -      ;
  126 D1:A952 -  -  -  -  
  127 D1:A952 -  -  -  -  
  128 D1:A952 21 49 AA D1     ld  hl,text004
  129 D1:A956 CD 4A AF D1     call printString
  130 D1:A95A -  -  -  -  
  131 D1:A95A -  -  -  -      ;jr $
  132 D1:A95A -  -  -  -  #ifdef COREDEBUG
  133 D1:A95A                 call dbg_resetScreen
  134 D1:A95A             #endif
  135 D1:A95A CD 3F B3 D1     call i6502Init
  136 D1:A95E -  -  -  -  
  137 D1:A95E -  -  -  -  ;    call clearTextBuf
  138 D1:A95E -  -  -  -  ;    ld  hl,helloWorld
  139 D1:A95E -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  140 D1:A95E -  -  -  -  ;    ld  bc,13
  141 D1:A95E -  -  -  -  ;    ldir
  142 D1:A95E -  -  -  -  
  143 D1:A95E -  -  -  -  endCurrentRun:
  144 D1:A95E CD A4 D5 D1     call dbg_prepNextLine
  145 D1:A962 CD 33 AF D1     call newLine
  146 D1:A966 21 6B AA D1     ld  hl,text005
  147 D1:A96A CD 4A AF D1     call printString
  148 D1:A96E -  -  -  -  
  149 D1:A96E -  -  -  -      ;call printTextBuf
  150 D1:A96E CD 56 AE D1     call fastCopy
  151 D1:A972 00 -  -  -      nop
  152 D1:A973 CD 10 AA D1     call waituntilnewkeypress
  153 D1:A977 CD 08 AA D1     call waituntilkeyrelease
  154 D1:A97B -  -  -  -  
  155 D1:A97B -  -  -  -      ;
  156 D1:A97B -  -  -  -      ;
  157 D1:A97B -  -  -  -      ;
  158 D1:A97B -  -  -  -  programExit:
  159 D1:A97B CD 71 AE D1     call stopGfx
  160 D1:A97F ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  161 D1:A984 3A FF 31 D0     ld  a,(save_mbase)
  162 D1:A988 ED 6D -  -      ld  MB,a
  163 D1:A98A FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  164 D1:A98F C9 -  -  -      ret
  165 D1:A990 -  -  -  -  
  166 D1:A990 -  -  -  -  
  167 D1:A990 -  -  -  -  testFilename:
  168 D1:A990 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  169 D1:A999 -  -  -  -  
  170 D1:A999 -  -  -  -  
  171 D1:A999 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  172 D1:A999 -  -  -  -  testVectors .equ $-(256-6)
  173 D1:A999 00 80 -  -  .dw $8000
  174 D1:A99B 00 80 -  -  .dw $8000
  175 D1:A99D 00 80 -  -  .dw $8000
  176 D1:A99F -  -  -  -  testCode:
  177 D1:A99F A9 00 AA A8 .db $A9,$00,$AA,$A8
  178 D1:A9A3 BD 14 80 -  .db $BD,$14,$80
  179 D1:A9A6 C9 00 -  -  .db $C9,$00
  180 D1:A9A8 F0 08 -  -  .db $F0,$08
  181 D1:A9AA 99 21 40 -  .db $99,$21,$40
  182 D1:A9AD E8 C8 -  -  .db $E8,$C8
  183 D1:A9AF -  -  -  -  ;.db $12
  184 D1:A9AF 4C 04 80 02 .db $4C,$04,$80,$02
  185 D1:A9B3 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  186 D1:A9BC 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  187 D1:A9C1 -  -  -  -  
  188 D1:A9C1 -  -  -  -  
  189 D1:A9C1 A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  190 D1:A9D0 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  191 D1:A9E0 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  192 D1:A9E1 -  -  -  -  
  193 D1:A9E1 -  -  -  -  helloWorld:
  194 D1:A9E1 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  195 D1:A9EF -  -  -  -  
  196 D1:A9EF -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  197 D1:A9EF -  -  -  -  ;find yet another hardware reference for something I already did.
  198 D1:A9EF -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  199 D1:A9EF -  -  -  -  ;what we're looking for. Here, we output the same sort of
  200 D1:A9EF -  -  -  -  ;game keys that I've used basically all my programming life.
  201 D1:A9EF -  -  -  -  ;Anyhoo. We'll be using the following:
  202 D1:A9EF -  -  -  -  ;kbitDown	equ 00h
  203 D1:A9EF -  -  -  -  ;kbitLeft	equ 01h
  204 D1:A9EF -  -  -  -  ;kbitRight	equ 02h
  205 D1:A9EF -  -  -  -  ;kbitUp		equ 03h
  206 D1:A9EF -  -  -  -  ;kbitYequ equ 04h
  207 D1:A9EF -  -  -  -  ;kbit2nd		equ 05h
  208 D1:A9EF -  -  -  -  ;kbitMode	equ 06h
  209 D1:A9EF -  -  -  -  ;kbitDel		equ 07h
  210 D1:A9EF -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  211 D1:A9EF -  -  -  -  
  212 D1:A9EF -  -  -  -  getkbd_adl:
  213 D1:A9EF DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  214 D1:A9F4 ED 22 00 -  	lea hl,ix+0
  215 D1:A9F7 36 02 -  -  	ld  (hl),keyModeScanOnce
  216 D1:A9F9 AF -  -  -  	xor a
  217 D1:A9FA BE -  -  -  _:  cp  (hl)
  218 D1:A9FB 20 FD -  -  	jr  nz,-_
  219 D1:A9FD DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  220 D1:AA00 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  221 D1:AA03 AD -  -  -  	xor L
  222 D1:AA04 E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  223 D1:AA06 AD -  -  -  	xor L
  224 D1:AA07 C9 -  -  -  	ret
  225 D1:AA08 -  -  -  -  
  226 D1:AA08 -  -  -  -  
  227 D1:AA08 -  -  -  -  waituntilkeyrelease:
  228 D1:AA08 CD EF A9 D1     call getkbd_adl
  229 D1:AA0C B7 -  -  -      or  a,a
  230 D1:AA0D 20 F9 -  -      jr  nz,waituntilkeyrelease
  231 D1:AA0F C9 -  -  -  	ret
  232 D1:AA10 -  -  -  -  
  233 D1:AA10 -  -  -  -  waituntilnewkeypress:
  234 D1:AA10 CD 08 AA D1     call waituntilkeyrelease
  235 D1:AA14 CD EF A9 D1 _:  call getkbd_adl
  236 D1:AA18 B7 -  -  -  	or  a,a
  237 D1:AA19 28 F9 -  -  	jr  z,-_
  238 D1:AA1B C9 -  -  -      ret
  239 D1:AA1C -  -  -  -  
  240 D1:AA1C -  -  -  -  timings_file:
  241 D1:AA1C 15 74 69 6D 
              69 6E 67 73 
              00 -  -  -  .db AppVarObj,"timings",0
  242 D1:AA25 -  -  -  -  
  243 D1:AA25 -  -  -  -  text001:
  244 D1:AA25 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  245 D1:AA3C -  -  -  -  text003:
  246 D1:AA3C 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  247 D1:AA49 -  -  -  -  text004:
  248 D1:AA49 52 4F 4D 46 
              69 6C 65 20 
              6C 6F 61 64 
              65 64 20 61 
              6E 64 20 72 
              65 61 64 79 
              20 74 6F 20 
              72 75 6E 2E 
              0A 00 -  -  .db "ROMFile loaded and ready to run.\n",0
  249 D1:AA6B -  -  -  -  text005:
  250 D1:AA6B -  -  -  -  ;    0123456789012345678901234567890123456789
  251 D1:AA6B 43 50 55 20 
              45 78 65 63 
              75 74 69 6F 
              6E 20 48 61 
              6C 74 65 64 
              20 20 20 20 
              20 20 20 20 
              20 20 20 20 
              20 20 20 20 
              20 20 00 -  .db "CPU Execution Halted                  ",0
  252 D1:AA92 -  -  -  -  
  253 D1:AA92 -  -  -  -  
  254 D1:AA92 07 -  -  -  .db 7
  255 D1:AA93 -  -  -  -  firstFileHeader:
  256 D1:AA93 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  257 D1:AA9A -  -  -  -  
  258 D1:AA9A -  -  -  -  err_:
  259 D1:AA9A -  -  -  -  
  260 D1:AA9A -  -  -  -  err_err:
  261 D1:AA9A E1 -  -  -      pop hl
  262 D1:AA9B CD 4A AF D1     call printString
  263 D1:AA9F -  -  -  -  err_err_quit:
  264 D1:AA9F CD 56 AE D1     call fastCopy
  265 D1:AAA3 00 -  -  -      nop
  266 D1:AAA4 CD 10 AA D1     call waituntilnewkeypress
  267 D1:AAA8 CD 08 AA D1     call waituntilkeyrelease
  268 D1:AAAC C3 7B A9 D1     jp programExit
  269 D1:AAB0 -  -  -  -  
  270 D1:AAB0 -  -  -  -  err_noContainersFound:
  271 D1:AAB0 CD 9A AA D1     call err_err
  272 D1:AAB4 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  273 D1:AAD3 -  -  -  -  
  274 D1:AAD3 -  -  -  -  err_missingFiles:
  275 D1:AAD3 F5 -  -  -      push af
  276 D1:AAD4 21 E5 AA D1         ld  hl,err_missingFiles_str
  277 D1:AAD8 CD 4A AF D1         call printString
  278 D1:AADC F1 -  -  -      pop af
  279 D1:AADD CD 90 AF D1     call printSmallNumPair
  280 D1:AAE1 C3 9F AA D1     jp err_err_quit
  281 D1:AAE5 -  -  -  -  err_missingFiles_str:
  282 D1:AAE5 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  283 D1:AAFF -  -  -  -  
  284 D1:AAFF -  -  -  -  err_tooManyFiles:
  285 D1:AAFF CD 9A AA D1     call err_err
  286 D1:AB03 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  287 D1:AB19 -  -  -  -  
  288 D1:AB19 -  -  -  -  err_PRGROMTooLarge:
  289 D1:AB19 CD 9A AA D1     call err_err
  290 D1:AB1D 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  291 D1:AB30 -  -  -  -  err_CHRROMTooLarge:
  292 D1:AB30 CD 9A AA D1     call err_err
  293 D1:AB34 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  294 D1:AB47 -  -  -  -  
  295 D1:AB47 -  -  -  -  err_missingROMDetected:
  296 D1:AB47 CD 9A AA D1     call err_err
  297 D1:AB4B 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  298 D1:AB67 -  -  -  -  
  299 D1:AB67 -  -  -  -  err_ROMHeaderDamaged:
  300 D1:AB67 CD 9A AA D1     call err_err
  301 D1:AB6B 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  302 D1:AB84 -  -  -  -  
  303 D1:AB84 -  -  -  -  err_MapperOutOfRange:
  304 D1:AB84 CD 9A AA D1     call err_err
  305 D1:AB88 4D 61 70 70 
              65 72 20 73 
              70 65 63 69 
              66 69 65 64 
              20 6F 75 74 
              20 6F 66 20 
              72 61 6E 67 
              65 2E 00 -  .db "Mapper specified out of range.",0
  306 D1:ABA7 -  -  -  -  
  307 D1:ABA7 -  -  -  -  err_CHRROMNotFound:
  308 D1:ABA7 CD 9A AA D1     call err_err
  309 D1:ABAB 43 48 52 5F 
              52 4F 4D 20 
              6E 6F 74 20 
              66 6F 75 6E 
              64 20 69 6E 
              73 69 64 65 
              20 66 69 6C 
              65 00 -  -  .db "CHR_ROM not found inside file",0
  310 D1:ABC9 -  -  -  -  
  311 D1:ABC9 -  -  -  -  
  312 D1:ABC9 -  -  -  -  ;Input: DE = Address of first file after the container header signature
  313 D1:ABC9 -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  314 D1:ABC9 -  -  -  -  ;Destroys: All registers.
  315 D1:ABC9 -  -  -  -  loadROMFile:
  316 D1:ABC9 EB -  -  -      ex  de,hl
  317 D1:ABCA AF -  -  -      xor a,a
  318 D1:ABCB 32 08 34 D0     ld  (missing_files),a
  319 D1:ABCF BE -  -  -  _:  cp  (hl)    ;
  320 D1:ABD0 23 -  -  -      inc hl      ;
  321 D1:ABD1 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  322 D1:ABD3 22 05 34 D0     ld  (basefile_sig),hl
  323 D1:ABD7 01 10 00 00     ld  bc,SIZEOF_INTEGRITY_HASH
  324 D1:ABDB 09 -  -  -      add hl,bc
  325 D1:ABDC 7E -  -  -      ld  a,(hl)
  326 D1:ABDD FE 01 -  -      cp  a,MAXNUMFILES
  327 D1:ABDF D2 FF AA D1     jp  nc,err_tooManyFiles
  328 D1:ABE3 32 04 34 D0     ld  (inputNumFiles),a
  329 D1:ABE7 47 -  -  -      ld  b,a
  330 D1:ABE8 -  -  -  -  ;    ld  c,SIZEOF_INTEGRITY_HASH     ;c already set to this value from earlier.
  331 D1:ABE8 ED 4C -  -      mlt bc
  332 D1:ABEA 23 -  -  -      inc hl
  333 D1:ABEB E5 -  -  -      push hl
  334 D1:ABEC 09 -  -  -          add hl,bc
  335 D1:ABED FD 21 22 34 
              D0 -  -  -          ld  iy,FILETABLE
  336 D1:ABF2 4E -  -  -          ld  c,(hl)
  337 D1:ABF3 23 -  -  -          inc hl
  338 D1:ABF4 46 -  -  -          ld  b,(hl)
  339 D1:ABF5 23 -  -  -          inc hl
  340 D1:ABF6 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  341 D1:ABFA FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  342 D1:ABFD E1 -  -  -      pop hl
  343 D1:ABFE 3C -  -  -      inc a
  344 D1:ABFF 3D -  -  -      dec a
  345 D1:AC00 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  346 D1:AC02 -  -  -  -      ;If more than one file, fill FILETABLE.
  347 D1:AC02 -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  348 D1:AC02 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  349 D1:AC05 47 -  -  -      ld  b,a
  350 D1:AC06 -  -  -  -  loadROMFile_multiFileLoadLoop:
  351 D1:AC06 C5 -  -  -      push bc
  352 D1:AC07 FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  353 D1:AC0A 01 10 00 00         ld  bc,16
  354 D1:AC0E 11 EA AD D1         ld  de,loadROMFile_tempSigHash
  355 D1:AC12 ED B0 -  -          ldir
  356 D1:AC14 E5 -  -  -          push hl
  357 D1:AC15 FD E5 -  -              push iy
  358 D1:AC17 01 17 00 00                 ld  bc,23
  359 D1:AC1B FD 21 E3 AD 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  360 D1:AC20 CD FA AD D1                 call vatTraverse    ;returns DE @ datasection size if found
  361 D1:AC24 30 05 -  -                  jr  nc,+_
  362 D1:AC26 21 08 34 D0                 ld  hl,missing_files
  363 D1:AC2A 34 -  -  -                  inc (hl)
  364 D1:AC2B FD E1 -  -  _:          pop iy
  365 D1:AC2D EB -  -  -              ex  de,hl
  366 D1:AC2E 5E -  -  -              ld  e,(hl)
  367 D1:AC2F 23 -  -  -              inc hl
  368 D1:AC30 56 -  -  -              ld  d,(hl)
  369 D1:AC31 23 -  -  -              inc hl
  370 D1:AC32 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  371 D1:AC36 FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  372 D1:AC39 E1 -  -  -          pop hl
  373 D1:AC3A C1 -  -  -      pop bc
  374 D1:AC3B ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  375 D1:AC3E 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  376 D1:AC40 3A 08 34 D0     ld  a,(missing_files)
  377 D1:AC44 B7 -  -  -      or  a,a
  378 D1:AC45 C2 D3 AA D1     jp  nz,err_missingFiles
  379 D1:AC49 -  -  -  -  loadROMFile_singleFileLoad:
  380 D1:AC49 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  381 D1:AC49 3A 04 34 D0     ld  a,(inputNumFiles)
  382 D1:AC4D 3C -  -  -      inc a
  383 D1:AC4E 47 -  -  -      ld  b,a
  384 D1:AC4F 21 00 00 00     ld  hl,0
  385 D1:AC53 DD 21 22 34 
              D0 -  -  -      ld  ix,FILETABLE
  386 D1:AC58 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  387 D1:AC5C 19 -  -  -      add hl,de
  388 D1:AC5D ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  389 D1:AC60 10 F6 -  -      djnz -_
  390 D1:AC62 01 F0 FF FF     ld  bc,-16
  391 D1:AC66 09 -  -  -      add hl,bc   ;subtract INES header
  392 D1:AC67 22 09 34 D0     ld  (total_rom_size),hl
  393 D1:AC6B -  -  -  -      ;Verify that the file actually contains an INES header.
  394 D1:AC6B -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  395 D1:AC6B DD 2A 24 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  396 D1:AC70 DD 27 00 -      ld  hl,(ix+0)
  397 D1:AC73 11 4E 45 53     ld  de,$53454E         ;4E 45 53 == "NES"
  398 D1:AC77 B7 -  -  -      or  a,a
  399 D1:AC78 ED 52 -  -      sbc hl,de   ;Note: add does not affect zero flag. Can't test this via -DE
  400 D1:AC7A C2 67 AB D1 _:  jp  nz,err_ROMHeaderDamaged
  401 D1:AC7E DD 7E 03 -      ld  a,(ix+3)
  402 D1:AC81 FE 1A -  -      cp  a,$1A
  403 D1:AC83 20 F5 -  -      jr  nz,-_   ;19
  404 D1:AC85 -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  405 D1:AC85 -  -  -  -      ;Note: The below line is optimized from...
  406 D1:AC85 DD 2A 24 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  407 D1:AC8A -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  408 D1:AC8A -  -  -  -      ;these here just in case there's ever a question about it.
  409 D1:AC8A -  -  -  -  ;    ld  ix,FILETABLE
  410 D1:AC8A -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  411 D1:AC8A DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  412 D1:AC8D DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  413 D1:AC90 26 00 -  -      ld  h,0
  414 D1:AC92 54 -  -  -      ld  d,h
  415 D1:AC93 DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  416 D1:AC96 E6 0C -  -      and a,%00001100
  417 D1:AC98 FE 08 -  -      cp  a,%00001000
  418 D1:AC9A 20 1B -  -      jr  nz,+_
  419 D1:AC9C DD 7E 09 -      ld  a,(ix+9)
  420 D1:AC9F 47 -  -  -      ld  b,a
  421 D1:ACA0 E6 0F -  -      and a,$0F
  422 D1:ACA2 FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  423 D1:ACA4 D2 19 AB D1     jp  nc,err_PRGROMTooLarge
  424 D1:ACA8 67 -  -  -      ld  h,a
  425 D1:ACA9 78 -  -  -      ld  a,b
  426 D1:ACAA E6 F0 -  -      and a,$F0
  427 D1:ACAC 07 -  -  -      rlca
  428 D1:ACAD 07 -  -  -      rlca
  429 D1:ACAE 07 -  -  -      rlca
  430 D1:ACAF 07 -  -  -      rlca
  431 D1:ACB0 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  432 D1:ACB2 D2 30 AB D1     jp  nc,err_CHRROMTooLarge
  433 D1:ACB6 57 -  -  -      ld  d,a
  434 D1:ACB7 AF -  -  -  _:  xor a,a
  435 D1:ACB8 32 0C 34 D0     ld  (prg_rom_size),a
  436 D1:ACBC 32 0F 34 D0     ld  (chr_rom_size),a
  437 D1:ACC0 29 -  -  -      add hl,hl   ;x2
  438 D1:ACC1 29 -  -  -      add hl,hl   ;x4
  439 D1:ACC2 29 -  -  -      add hl,hl   ;x8
  440 D1:ACC3 29 -  -  -      add hl,hl   ;x16
  441 D1:ACC4 29 -  -  -      add hl,hl   ;x32
  442 D1:ACC5 29 -  -  -      add hl,hl   ;x64
  443 D1:ACC6 52 22 0D 34 
              D0 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  444 D1:ACCB EB -  -  -      ex  de,hl
  445 D1:ACCC 29 -  -  -      add hl,hl   ;x2
  446 D1:ACCD 29 -  -  -      add hl,hl   ;x4
  447 D1:ACCE 29 -  -  -      add hl,hl   ;x8
  448 D1:ACCF 29 -  -  -      add hl,hl   ;x16
  449 D1:ACD0 29 -  -  -      add hl,hl   ;x32
  450 D1:ACD1 52 22 10 34 
              D0 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  451 D1:ACD6 2A 0F 34 D0     ld  hl,(chr_rom_size)
  452 D1:ACDA ED 5B 0C 34 
              D0 -  -  -      ld  de,(prg_rom_size)
  453 D1:ACDF 19 -  -  -      add hl,de
  454 D1:ACE0 ED 5B 09 34 
              D0 -  -  -      ld  de,(total_rom_size)
  455 D1:ACE5 B7 -  -  -      or  a,a
  456 D1:ACE6 ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  457 D1:ACE8 28 04 -  -      jr  z,+_
  458 D1:ACEA D2 47 AB D1     jp  nc,err_missingROMDetected
  459 D1:ACEE -  -  -  -  _:  ;Find trainer, PRG, and CHR base addresses
  460 D1:ACEE ED 22 10 -      lea hl,ix+16
  461 D1:ACF1 22 18 34 D0     ld  (trainer_base),hl   ;whether it exists or not.
  462 D1:ACF5 11 00 00 00     ld  de,0
  463 D1:ACF9 DD CB 06 56     bit 2,(ix+6)
  464 D1:ACFD 28 04 -  -      jr  z,+_
  465 D1:ACFF 11 00 02 00     ld  de,512
  466 D1:AD03 19 -  -  -  _:  add hl,de
  467 D1:AD04 22 18 34 D0     ld  (prg_rom_base),hl
  468 D1:AD08 FD 21 22 34 
              D0 -  -  -      ld  iy,FILETABLE
  469 D1:AD0D 52 FD 27 00     ld.s hl,(iy+FILE_SIZE_OFFSET)
  470 D1:AD11 B7 -  -  -      or  a,a
  471 D1:AD12 ED 52 -  -      sbc hl,de   ;less possible trainer
  472 D1:AD14 11 10 00 00     ld  de,16
  473 D1:AD18 ED 52 -  -      sbc hl,de   ;less iNES header. Remaining is now size of current file.
  474 D1:AD1A EB -  -  -      ex  de,hl   ;curfilesize is now in DE
  475 D1:AD1B 2A 0C 34 D0     ld  hl,(prg_rom_size)   ;keep subtracting filesize from this until carry.
  476 D1:AD1F B7 -  -  -      or  a,a
  477 D1:AD20 ED 52 -  -      sbc hl,de   ;if carry, prg_rom end is inside this file. Undo: HL is offset.
  478 D1:AD22 0E 00 -  -      ld  c,0     ;0th file current
  479 D1:AD24 38 1D -  -      jr  c,loadROMFile_locatedCHRROM
  480 D1:AD26 3A 04 34 D0     ld  a,(inputNumFiles)
  481 D1:AD2A B7 -  -  -      or  a,a
  482 D1:AD2B 28 12 -  -      jr  z,loadROMFile_noCHRROMFound
  483 D1:AD2D 47 -  -  -      ld  b,a
  484 D1:AD2E ED 33 08 -  _:  lea iy,iy+FILETABLE_STRIDE
  485 D1:AD31 52 ED 5B 00 
              00 00 -  -      ld.s de,(FILE_SIZE_OFFSET)
  486 D1:AD37 0C -  -  -      inc c
  487 D1:AD38 B7 -  -  -      or  a,a
  488 D1:AD39 ED 52 -  -      sbc hl,de   ;
  489 D1:AD3B 38 06 -  -      jr  c,loadROMFile_locatedCHRROM
  490 D1:AD3D 10 EF -  -      djnz -_
  491 D1:AD3F -  -  -  -  loadROMFile_noCHRROMFound:
  492 D1:AD3F C3 A7 AB D1     jp  err_CHRROMNotFound
  493 D1:AD43 -  -  -  -  loadROMFile_locatedCHRROM:
  494 D1:AD43 19 -  -  -      add hl,de       ;Undid subtract. HL is now offset in current file
  495 D1:AD44 FD 17 02 -      ld  de,(iy+FILE_ADR_OFFSET) ;so get address inside that file.
  496 D1:AD47 19 -  -  -      add hl,de
  497 D1:AD48 79 -  -  -      ld  a,c
  498 D1:AD49 22 1B 34 D0     ld  (chr_rom_base),hl
  499 D1:AD4D 32 1E 34 D0     ld  (chr_rom_base_file),a
  500 D1:AD51 -  -  -  -      ;Detect mapper and run its initializer
  501 D1:AD51 DD 7E 06 -      ld  a,(ix+6)
  502 D1:AD54 DD 46 07 -      ld  b,(ix+7)
  503 D1:AD57 07 -  -  -      rlca
  504 D1:AD58 07 -  -  -      rlca
  505 D1:AD59 07 -  -  -      rlca
  506 D1:AD5A 07 -  -  -      rlca
  507 D1:AD5B A8 -  -  -      xor a,b
  508 D1:AD5C E6 0F -  -      and a,$0F
  509 D1:AD5E A8 -  -  -      xor a,b
  510 D1:AD5F 52 EB -  -      ex.s de,hl  ;clears HLU,DEU
  511 D1:AD61 5F -  -  -      ld  e,a
  512 D1:AD62 21 12 34 D0     ld  hl,submapper
  513 D1:AD66 36 00 -  -      ld  (hl),0
  514 D1:AD68 78 -  -  -      ld  a,b
  515 D1:AD69 E6 0C -  -      and a,%00001100
  516 D1:AD6B FE 08 -  -      cp  a,%00001000
  517 D1:AD6D 3E 00 -  -      ld  a,0
  518 D1:AD6F 20 0E -  -      jr  nz,+_
  519 D1:AD71 DD 46 08 -      ld  b,(ix+8)
  520 D1:AD74 78 -  -  -      ld  a,b
  521 D1:AD75 07 -  -  -      rlca
  522 D1:AD76 07 -  -  -      rlca
  523 D1:AD77 07 -  -  -      rlca
  524 D1:AD78 07 -  -  -      rlca
  525 D1:AD79 E6 0F -  -      and a,$0F
  526 D1:AD7B 77 -  -  -      ld  (hl),a
  527 D1:AD7C 78 -  -  -      ld  a,b
  528 D1:AD7D E6 0F -  -      and a,$0F
  529 D1:AD7F 57 -  -  -  _:  ld  d,a
  530 D1:AD80 ED 53 14 34 
              D0 -  -  -      ld  (mapper_id),de
  531 D1:AD85 21 FF FF FF     ld  hl,-NUMBER_OF_MAPPERS
  532 D1:AD89 19 -  -  -      add hl,de
  533 D1:AD8A DA 84 AB D1     jp  c,err_MapperOutOfRange
  534 D1:AD8E ED 62 -  -      sbc hl,hl
  535 D1:AD90 19 -  -  -      add hl,de               ;hl=de. both are mapper IDs
  536 D1:AD91 2E 09 -  -      ld  L,MAPPER_STRIDE
  537 D1:AD93 55 -  -  -      ld  d,L
  538 D1:AD94 ED 6C -  -      mlt hl                  ;high byte multiply
  539 D1:AD96 65 -  -  -      ld  h,L
  540 D1:AD97 2E 00 -  -      ld  L,0
  541 D1:AD99 ED 5C -  -      mlt de                  ;low byte multiply
  542 D1:AD9B 19 -  -  -      add hl,de               ;This is the best 16bit * 8bit I know to do.
  543 D1:AD9C 11 A8 AD D1     ld  de,mapper_table
  544 D1:ADA0 19 -  -  -      add hl,de
  545 D1:ADA1 22 15 34 D0     ld  (mapper_adr_base),hl
  546 D1:ADA5 ED 27 -  -      ld  hl,(hl)
  547 D1:ADA7 E9 -  -  -      jp  (hl)
  548 D1:ADA8 -  -  -  -  
  549 D1:ADA8 -  -  -  -  mapper_table:   ;entries 9 wide
  550 D1:ADA8 B1 AD D1 -  .dl mapper0_init
  551 D1:ADAB DF AD D1 -  .dl mapper0_read
  552 D1:ADAE E1 AD D1 -  .dl mapper0_write
  553 D1:ADB1 -  -  -  -  
  554 D1:ADB1 -  -  -  -  mapper0_init:
  555 D1:ADB1 -  -  -  -      ;map trainer, if exist
  556 D1:ADB1 DD CB 06 56     bit 2,(ix+6)
  557 D1:ADB5 28 0D -  -      jr  z,+_
  558 D1:ADB7 2A 18 34 D0     ld  hl,(trainer_base)
  559 D1:ADBB 1E 70 -  -      ld  e,$70
  560 D1:ADBD 0E 02 -  -      ld  c,2
  561 D1:ADBF 41 -  -  -      ld  b,c
  562 D1:ADC0 CD F9 B5 D1     call i6502_map_pages
  563 D1:ADC4 2A 0C 34 D0 _:  ld  hl,(prg_rom_size)
  564 D1:ADC8 11 FF BF FF     ld  de,-(16384+1)
  565 D1:ADCC 19 -  -  -      add hl,de   ;carry if more than 1 16KB segment
  566 D1:ADCD 2A 18 34 D0     ld  hl,(prg_rom_base)
  567 D1:ADD1 -  -  -  -      ;jr  $
  568 D1:ADD1 06 80 -  -      ld  b,$80
  569 D1:ADD3 58 -  -  -      ld  e,b
  570 D1:ADD4 0E 40 -  -      ld  c,$40
  571 D1:ADD6 30 02 -  -      jr  nc,+_
  572 D1:ADD8 CB 21 -  -      sla c
  573 D1:ADDA CD F9 B5 D1 _:  call i6502_map_pages
  574 D1:ADDE C9 -  -  -      ret
  575 D1:ADDF -  -  -  -  
  576 D1:ADDF -  -  -  -  
  577 D1:ADDF -  -  -  -  mapper0_read:
  578 D1:ADDF 7E -  -  -      ld  a,(hl)
  579 D1:ADE0 C9 -  -  -      ret
  580 D1:ADE1 -  -  -  -  mapper0_write:
  581 D1:ADE1 70 -  -  -      ld  (hl),b
  582 D1:ADE2 C9 -  -  -      ret
  583 D1:ADE3 -  -  -  -  
  584 D1:ADE3 -  -  -  -  
  585 D1:ADE3 -  -  -  -  
  586 D1:ADE3 -  -  -  -  
  587 D1:ADE3 -  -  -  -  
  588 D1:ADE3 -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  589 D1:ADE3 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  590 D1:ADEA -  -  -  -  loadROMFile_tempSigHash:
  591 D1:ADEA 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  592 D1:ADFA -  -  -  -  
  593 D1:ADFA -  -  -  -  
  594 D1:ADFA -  -  -  -  ;Input: IY = locationOfSignature. 
  595 D1:ADFA -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  596 D1:ADFA -  -  -  -  ;Output: carry=1: Variable not found.
  597 D1:ADFA -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  598 D1:ADFA -  -  -  -  ;        IX=location of current variable's VAT location.
  599 D1:ADFA -  -  -  -  ;Destroys: All registers not in use.
  600 D1:ADFA -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  601 D1:ADFA -  -  -  -  
  602 D1:ADFA -  -  -  -  ;To continue searching:
  603 D1:ADFA -  -  -  -  ;call vatTraverse_continue with the following inputs:
  604 D1:ADFA -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  605 D1:ADFA -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  606 D1:ADFA -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  607 D1:ADFA -  -  -  -  vatTraverse:
  608 D1:ADFA -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  609 D1:ADFA DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  610 D1:ADFF -  -  -  -  vatTraverse_loop:
  611 D1:ADFF 2A 9A 25 D0     ld  hl,(pTemp)
  612 D1:AE03 ED 12 00 -      lea de,ix+0
  613 D1:AE06 B7 -  -  -      or  a,a
  614 D1:AE07 ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  615 D1:AE09 3F -  -  -      ccf
  616 D1:AE0A D8 -  -  -      ret c
  617 D1:AE0B 1A -  -  -      ld  a,(de)
  618 D1:AE0C E6 1F -  -      and a,$1F
  619 D1:AE0E FE 15 -  -      cp  a,AppVarObj
  620 D1:AE10 20 34 -  -      jr  nz,vatTraverse_skip
  621 D1:AE12 DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  622 D1:AE15 DD 5E FD -      ld  e,(ix-3)
  623 D1:AE18 DD 56 FC -      ld  d,(ix-4)
  624 D1:AE1B CD 98 1F 02     call _ChkInRam
  625 D1:AE1F EB -  -  -      ex  de,hl
  626 D1:AE20 30 08 -  -      jr  nc,+_
  627 D1:AE22 11 09 00 00     ld  de,9
  628 D1:AE26 19 -  -  -      add hl,de
  629 D1:AE27 5E -  -  -      ld  e,(hl)
  630 D1:AE28 19 -  -  -      add hl,de
  631 D1:AE29 23 -  -  -      inc hl
  632 D1:AE2A 5E -  -  -  _:  ld  e,(hl)
  633 D1:AE2B 23 -  -  -      inc hl
  634 D1:AE2C 56 -  -  -      ld  d,(hl)
  635 D1:AE2D 23 -  -  -      inc hl
  636 D1:AE2E EB -  -  -      ex  de,hl
  637 D1:AE2F B7 -  -  -      or  a,a
  638 D1:AE30 ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  639 D1:AE32 38 12 -  -      jr  c,vatTraverse_skip
  640 D1:AE34 ED 23 00 -      lea hl,iy+0
  641 D1:AE37 C5 -  -  -      push bc
  642 D1:AE38 1A -  -  -  _:      ld  a,(de)
  643 D1:AE39 13 -  -  -          inc de
  644 D1:AE3A ED A1 -  -          cpi
  645 D1:AE3C 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  646 D1:AE3E EA 38 AE D1         jp  pe,-_
  647 D1:AE42 C1 -  -  -      pop bc
  648 D1:AE43 B7 -  -  -      or  a,a
  649 D1:AE44 C9 -  -  -      ret         ;NC. DE = past the signature.
  650 D1:AE45 -  -  -  -  vatTraverse_sigNoMatch:
  651 D1:AE45 C1 -  -  -      pop bc
  652 D1:AE46 -  -  -  -  vatTraverse_continue:
  653 D1:AE46 -  -  -  -  vatTraverse_skip:
  654 D1:AE46 3E 07 -  -      ld  a,7
  655 D1:AE48 11 FF FF FF     ld  de,-1
  656 D1:AE4C DD 86 FA -      add a,(ix-6)
  657 D1:AE4F ED 44 -  -      neg
  658 D1:AE51 5F -  -  -      ld  e,a
  659 D1:AE52 DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  660 D1:AE54 18 A9 -  -      jr  vatTraverse_loop
  661 D1:AE56 -  -  -  -  
  662 D1:AE56 -  -  -  -  
  663 D1:AE56 -  -  -  -  
  664 D1:AE56 -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:AE56 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:AE56 -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:AE56 -  -  -  -  
    3 D1:AE56 -  -  -  -  ;Various Parts Contributed by
    4 D1:AE56 -  -  -  -  ;- BrandonW
    5 D1:AE56 -  -  -  -  ;- calc84
    6 D1:AE56 -  -  -  -  ;- MateoConLechuga
    7 D1:AE56 -  -  -  -  ;- Runer112
    8 D1:AE56 -  -  -  -  ;- tr1p1ea
    9 D1:AE56 -  -  -  -  ;- Kerm Martian
   10 D1:AE56 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:AE56 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:AE56 -  -  -  -  ;
    6 D1:AE56 -  -  -  -  ;
    7 D1:AE56 -  -  -  -  ;
    8 D1:AE56 -  -  -  -  
    9 D1:AE56 -  -  -  -  DEBUG_PRINT_START_CYCLE .equ 9000
   10 D1:AE56 -  -  -  -  DEBUG_STEP_START_CYCLE  .equ 26485
   11 D1:AE56 -  -  -  -  
   12 D1:AE56 -  -  -  -  
   13 D1:AE56 -  -  -  -  
   14 D1:AE56 -  -  -  -  FONTFGCOLOR .EQU $FF
   15 D1:AE56 -  -  -  -  FONTBGCOLOR .EQU $00
   16 D1:AE56 -  -  -  -  
   17 D1:AE56 -  -  -  -  screenBuf1      .equ vRam
   18 D1:AE56 -  -  -  -  screenBuf2      .equ vRam+(320*240)
   19 D1:AE56 -  -  -  -  ;DO NOT MOVE THESE.
   20 D1:AE56 -  -  -  -  xPos                .equ $D031F6
   21 D1:AE56 -  -  -  -  yPos                .equ $D031F7
   22 D1:AE56 -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   23 D1:AE56 -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   24 D1:AE56 -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   25 D1:AE56 -  -  -  -  save_mbase          .equ $D031FF        ;
   26 D1:AE56 -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   27 D1:AE56 -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   28 D1:AE56 -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   29 D1:AE56 -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   30 D1:AE56 -  -  -  -  
   31 D1:AE56 -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   32 D1:AE56 -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   33 D1:AE56 -  -  -  -  
   34 D1:AE56 -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   35 D1:AE56 -  -  -  -  BASETABLE_STRIDE    .equ 8
   36 D1:AE56 -  -  -  -  PAGETABLE_OFFSET    .equ 0
   37 D1:AE56 -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   38 D1:AE56 -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   39 D1:AE56 -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   40 D1:AE56 -  -  -  -  
   41 D1:AE56 -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   42 D1:AE56 -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   43 D1:AE56 -  -  -  -  
   44 D1:AE56 -  -  -  -  ;saferam1 1024 bytes storage
   45 D1:AE56 -  -  -  -  ;
   46 D1:AE56 -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   47 D1:AE56 -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   48 D1:AE56 -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   49 D1:AE56 -  -  -  -  basefile_sig        .equ inputNumFiles+1    ;3b pointer to 16b hash
   50 D1:AE56 -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   51 D1:AE56 -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   52 D1:AE56 -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   53 D1:AE56 -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   54 D1:AE56 -  -  -  -  submapper           .equ chr_rom_size+3     ;1b. iNES2 thing. Not often used.
   55 D1:AE56 -  -  -  -  ines_flag_6         .equ submapper+1        ;1b. Flags that a mapper may need.
   56 D1:AE56 -  -  -  -  mapper_id           .equ ines_flag_6+1      ;3b. Convenience load for 12 bits
   57 D1:AE56 -  -  -  -  mapper_adr_base     .equ mapper_id+1        ;3b. Used to load mapper
   58 D1:AE56 -  -  -  -  trainer_base        .equ mapper_adr_base+3  ;3b. If exist, starts here
   59 D1:AE56 -  -  -  -  prg_rom_base        .equ mapper_adr_base+3  ;3b. Adjusted in case of trainer.
   60 D1:AE56 -  -  -  -  chr_rom_base        .equ prg_rom_base+3     ;3b. Located somewhere.
   61 D1:AE56 -  -  -  -  chr_rom_base_file   .equ chr_rom_base+3     ;1b. Nonzero if not in first file.
   62 D1:AE56 -  -  -  -  timings_base        .equ chr_rom_base_file+1    ;3b. Current pointer to timings
   63 D1:AE56 -  -  -  -  
   64 D1:AE56 -  -  -  -  SIZEOF_INTEGRITY_HASH    .equ 16
   65 D1:AE56 -  -  -  -  MAXPRGROM_HINIB     .equ 1
   66 D1:AE56 -  -  -  -  MAXCHRROM_HINIB     .equ 3
   67 D1:AE56 -  -  -  -  NUMBER_OF_MAPPERS   .equ 1
   68 D1:AE56 -  -  -  -  MAPPER_STRIDE       .equ 9
   69 D1:AE56 -  -  -  -  
   70 D1:AE56 -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   71 D1:AE56 -  -  -  -  FILETABLE_STRIDE    .equ 8
   72 D1:AE56 -  -  -  -  FILETABLE           .equ timings_base+3   ;(MAXNUMFILES*FILETABLE_STRIDE)b
   73 D1:AE56 -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   74 D1:AE56 -  -  -  -  FILE_ADR_OFFSET     .equ 2
   75 D1:AE56 -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   76 D1:AE56 -  -  -  -  
   77 D1:AE56 -  -  -  -  
   78 D1:AE56 -  -  -  -  ;
   79 D1:AE56 -  -  -  -  ;
   80 D1:AE56 -  -  -  -  
   81 D1:AE56 -  -  -  -  ;Undefine this to speed up core process by losing debug state
   82 D1:AE56 -  -  -  -  #define COREDEBUG
   83 D1:AE56 -  -  -  -  
   84 D1:AE56 -  -  -  -  ;core memory
   85 D1:AE56 -  -  -  -  #define REGA 0
   86 D1:AE56 -  -  -  -  #define REGX 1
   87 D1:AE56 -  -  -  -  #define REGY 2
   88 D1:AE56 -  -  -  -  #define REGSP 3
   89 D1:AE56 -  -  -  -  #define REGSR 4
   90 D1:AE56 -  -  -  -  #define REGPC 5
   91 D1:AE56 -  -  -  -  #define CYCLES_REMAIN 8
   92 D1:AE56 -  -  -  -  #define CYCLES_CURRENT 11
   93 D1:AE56 -  -  -  -  #define CURRENT_OPCODES 14
   94 D1:AE56 -  -  -  -  ;flag IDs
   95 D1:AE56 -  -  -  -  #define SF_NEG 7
   96 D1:AE56 -  -  -  -  #define SF_OVER 6 
   97 D1:AE56 -  -  -  -  #define SF_RESERVED 5 
   98 D1:AE56 -  -  -  -  #define SF_BRK 4
   99 D1:AE56 -  -  -  -  #define SF_DEC 3
  100 D1:AE56 -  -  -  -  #define SF_INT 2
  101 D1:AE56 -  -  -  -  #define SF_ZERO 1
  102 D1:AE56 -  -  -  -  #define SF_CARRY 0
  103 D1:AE56 -  -  -  -  
  104 D1:AE56 -  -  -  -  #macro ADDCYC(X)
  105 D1:AE56                 #if (x < 1)
  106 D1:AE56                     nop
  107 D1:AE56                 #elif (X = 1)
  108 D1:AE56                     inc iy
  109 D1:AE56                 #else
  110 D1:AE56                     lea iy,iy+X
  111 D1:AE56                 #endif
  112 D1:AE56             #endmacro
  113 D1:AE56 -  -  -  -  
  114 D1:AE56 -  -  -  -  ;
  115 D1:AE56 -  -  -  -  ;
  116 D1:AE56 -  -  -  -  ;
  117 D1:AE56 -  -  -  -  #endif
  118 D1:AE56 -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:AE56 -  -  -  -  
    4 D1:AE56 -  -  -  -  ;Function list:
    5 D1:AE56 -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:AE56 -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:AE56 -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:AE56 -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:AE56 -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:AE56 -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:AE56 -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:AE56 -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:AE56 -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:AE56 -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:AE56 -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:AE56 -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:AE56 -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:AE56 -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:AE56 -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into HL= screen buffer address.
   20 D1:AE56 -  -  -  -  ; calculateScreenPtrDE - Converts E=xPos,D=yPos into HL= screen buffer address.
   21 D1:AE56 -  -  -  -  ;
   22 D1:AE56 -  -  -  -  ;
   23 D1:AE56 -  -  -  -  ;
   24 D1:AE56 -  -  -  -  ;
   25 D1:AE56 -  -  -  -  ;
   26 D1:AE56 -  -  -  -  ;
   27 D1:AE56 -  -  -  -  ;
   28 D1:AE56 -  -  -  -  
   29 D1:AE56 -  -  -  -  
   30 D1:AE56 -  -  -  -  
   31 D1:AE56 -  -  -  -  
   32 D1:AE56 -  -  -  -  ;-----------------------------------------------------------------------------
   33 D1:AE56 -  -  -  -  ;Screen hardware interface stuff
   34 D1:AE56 -  -  -  -  
   35 D1:AE56 -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   36 D1:AE56 -  -  -  -  fastCopy:
   37 D1:AE56 11 00 00 D4     ld  de,screenBuf1
   38 D1:AE5A 2A 10 00 E3     ld  hl,(mpLcdBase)
   39 D1:AE5E 22 00 34 D0     ld  (curScreenBuf),hl
   40 D1:AE62 B7 -  -  -      or  a,a
   41 D1:AE63 ED 52 -  -      sbc hl,de
   42 D1:AE65 EB -  -  -      ex  de,hl
   43 D1:AE66 20 04 -  -      jr  nz,+_
   44 D1:AE68 21 00 2C D5     ld  hl,screenBuf2
   45 D1:AE6C 22 10 00 E3 _:  ld  (mpLcdBase),hl
   46 D1:AE70 C9 -  -  -      ret
   47 D1:AE71 -  -  -  -  
   48 D1:AE71 -  -  -  -  stopGfx:
   49 D1:AE71 CD 74 03 00     call _boot_ClearVRAM
   50 D1:AE75 11 2D 09 00     ld  de,lcdNormalMode
   51 D1:AE79 01 00 00 D4     ld  bc,screenBuf1
   52 D1:AE7D 18 0C -  -      jr  configureScreen
   53 D1:AE7F -  -  -  -  
   54 D1:AE7F -  -  -  -  startGfx:
   55 D1:AE7F CD 74 03 00     call _boot_ClearVRAM
   56 D1:AE83 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   57 D1:AE87 01 00 00 D4     ld  bc,screenBuf1
   58 D1:AE8B -  -  -  -  configureScreen:
   59 D1:AE8B 21 10 00 E3     ld  hl,mpLcdBase
   60 D1:AE8F ED 0F -  -      ld  (hl),bc
   61 D1:AE91 2E 18 -  -      ld  L,lcdCtrl
   62 D1:AE93 ED 1F -  -      ld  (hl),de
   63 D1:AE95 2E 01 -  -      ld  L,lcdTiming0 + 1
   64 D1:AE97 01 08 00 00     ld  bc,8
   65 D1:AE9B 11 CA AE D1     ld  de,screenSettings
   66 D1:AE9F 1A -  -  -  _:  ld  a,(de)
   67 D1:AEA0 ED A0 -  -      ldi
   68 D1:AEA2 2B -  -  -      dec hl
   69 D1:AEA3 77 -  -  -      ld  (hl),a
   70 D1:AEA4 23 -  -  -      inc hl
   71 D1:AEA5 EA 9F AE D1     jp  pe,-_
   72 D1:AEA9 21 00 2C D5     ld  hl,screenBuf2
   73 D1:AEAD 22 00 34 D0     ld  (curScreenBuf),hl
   74 D1:AEB1 -  -  -  -  ;Also copied from graphx
   75 D1:AEB1 -  -  -  -  setDefaultPalette:
   76 D1:AEB1 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   77 D1:AEB5 43 -  -  -  	ld	b,e			        ; b = 0
   78 D1:AEB6 78 -  -  -  _:	ld	a,b
   79 D1:AEB7 0F -  -  -  	rrca
   80 D1:AEB8 A8 -  -  -  	xor	a,b
   81 D1:AEB9 E6 E0 -  -  	and	a,224
   82 D1:AEBB A8 -  -  -  	xor	a,b
   83 D1:AEBC 12 -  -  -  	ld	(de),a
   84 D1:AEBD 13 -  -  -  	inc	de
   85 D1:AEBE 78 -  -  -  	ld	a,b
   86 D1:AEBF 17 -  -  -  	rla
   87 D1:AEC0 17 -  -  -  	rla
   88 D1:AEC1 17 -  -  -  	rla
   89 D1:AEC2 78 -  -  -  	ld	a,b
   90 D1:AEC3 1F -  -  -  	rra
   91 D1:AEC4 12 -  -  -  	ld	(de),a
   92 D1:AEC5 13 -  -  -  	inc	de
   93 D1:AEC6 04 -  -  -  	inc	b
   94 D1:AEC7 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   95 D1:AEC9 C9 -  -  -  	ret
   96 D1:AECA -  -  -  -  
   97 D1:AECA -  -  -  -  screenSettings:
   98 D1:AECA -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   99 D1:AECA -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
  100 D1:AECA 07 -  -  -  	.db	7					; HSW
  101 D1:AECB 57 -  -  -  	.db	87					; HFP
  102 D1:AECC 3F -  -  -  	.db	63					; HBP
  103 D1:AECD 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  104 D1:AECF B3 -  -  -  	.db	179					; VFP
  105 D1:AED0 00 -  -  -  	.db	0					; VBP
  106 D1:AED1 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  107 D1:AED2 -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  108 D1:AED2 -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  109 D1:AED2 -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  110 D1:AED2 -  -  -  -  ; Hz = 48000000/CC = 60
  111 D1:AED2 -  -  -  -  
  112 D1:AED2 -  -  -  -  
  113 D1:AED2 -  -  -  -  ;-----------------------------------------------------------------------------
  114 D1:AED2 -  -  -  -  ; Text Rendering
  115 D1:AED2 -  -  -  -  
  116 D1:AED2 -  -  -  -  clearTextBuf:
  117 D1:AED2 21 00 50 D0     ld  hl,NAMETABLE1
  118 D1:AED6 11 01 50 D0     ld  de,NAMETABLE1+1
  119 D1:AEDA 01 FF 03 00     ld  bc,1023
  120 D1:AEDE 36 20 -  -      ld  (hl),' '
  121 D1:AEE0 ED B0 -  -      ldir
  122 D1:AEE2 C9 -  -  -      ret
  123 D1:AEE3 -  -  -  -  
  124 D1:AEE3 -  -  -  -  printTextBuf:
  125 D1:AEE3 2A F6 31 D0     ld  hl,(xPos)
  126 D1:AEE7 22 17 AF D1     ld  (printTextBuf_smcPosRecovery),hl
  127 D1:AEEB 21 00 50 D0     ld  hl,NAMETABLE1
  128 D1:AEEF AF -  -  -      xor a,a
  129 D1:AEF0 32 F7 31 D0     ld  (yPos),a
  130 D1:AEF4 0E 1E -  -      ld  c,30
  131 D1:AEF6 3E 08 -  -  _:  ld  a,8
  132 D1:AEF8 32 F6 31 D0     ld  (xPos),a
  133 D1:AEFC 06 20 -  -      ld  b,$20
  134 D1:AEFE 7E -  -  -  _:  ld  a,(hl)
  135 D1:AEFF 23 -  -  -      inc hl
  136 D1:AF00 C5 -  -  -      push bc
  137 D1:AF01 E5 -  -  -          push hl
  138 D1:AF02 CD 60 AF D1             call printBigFont
  139 D1:AF06 E1 -  -  -          pop hl
  140 D1:AF07 C1 -  -  -      pop bc
  141 D1:AF08 10 F4 -  -      djnz -_
  142 D1:AF0A 3A F7 31 D0     ld  a,(yPos)
  143 D1:AF0E 3C -  -  -      inc a
  144 D1:AF0F 32 F7 31 D0     ld  (yPos),a
  145 D1:AF13 0D -  -  -      dec  c
  146 D1:AF14 20 E0 -  -      jr  nz,--_
  147 D1:AF16 -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  148 D1:AF16 21 00 00 00     ld  hl,0
  149 D1:AF1A 22 F6 31 D0     ld  (xPos),hl
  150 D1:AF1E C9 -  -  -      ret
  151 D1:AF1F -  -  -  -  
  152 D1:AF1F -  -  -  -  ;A=column to start on
  153 D1:AF1F -  -  -  -  setLineStart:
  154 D1:AF1F 32 F6 31 D0     ld  (xPos),a
  155 D1:AF23 32 03 34 D0     ld  (linestart),a
  156 D1:AF27 C9 -  -  -      ret
  157 D1:AF28 -  -  -  -  
  158 D1:AF28 -  -  -  -  ;A=row to start on
  159 D1:AF28 -  -  -  -  setCurLine:
  160 D1:AF28 32 F7 31 D0     ld  (yPos),a
  161 D1:AF2C C9 -  -  -      ret
  162 D1:AF2D -  -  -  -  
  163 D1:AF2D -  -  -  -  newPage:
  164 D1:AF2D 3E FF -  -      ld  a,$FF
  165 D1:AF2F 32 F7 31 D0     ld  (yPos),a
  166 D1:AF33 -  -  -  -  newLine:
  167 D1:AF33 3A 03 34 D0     ld  a,(linestart)
  168 D1:AF37 32 F6 31 D0     ld  (xPos),a
  169 D1:AF3B 3A F7 31 D0     ld  a,(yPos)
  170 D1:AF3F 3C -  -  -      inc a
  171 D1:AF40 FE 1E -  -      cp  30
  172 D1:AF42 38 01 -  -      jr  c,+_
  173 D1:AF44 AF -  -  -      xor a,a
  174 D1:AF45 32 F7 31 D0 _:  ld  (yPos),a
  175 D1:AF49 C9 -  -  -      ret
  176 D1:AF4A -  -  -  -  
  177 D1:AF4A -  -  -  -      
  178 D1:AF4A -  -  -  -      
  179 D1:AF4A -  -  -  -  
  180 D1:AF4A -  -  -  -  ;HL=address to string
  181 D1:AF4A -  -  -  -  printString:
  182 D1:AF4A 7E -  -  -      ld  a,(hl)
  183 D1:AF4B 23 -  -  -      inc hl
  184 D1:AF4C B7 -  -  -      or  a,a
  185 D1:AF4D C8 -  -  -      ret z
  186 D1:AF4E FE 0A -  -      cp  a,'\n'
  187 D1:AF50 20 06 -  -      jr nz,+_
  188 D1:AF52 CD 33 AF D1     call newLine
  189 D1:AF56 18 F2 -  -      jr  printString
  190 D1:AF58 E5 -  -  -  _:  push hl
  191 D1:AF59 CD 60 AF D1         call printBigFont
  192 D1:AF5D E1 -  -  -      pop hl
  193 D1:AF5E 18 EA -  -      jr printString
  194 D1:AF60 -  -  -  -  
  195 D1:AF60 -  -  -  -  
  196 D1:AF60 -  -  -  -  ;in: A=chrToPrint
  197 D1:AF60 -  -  -  -  printBigFont:
  198 D1:AF60 CD F5 AF D1     call calculateScreenPtr
  199 D1:AF64 EB -  -  -      ex  de,hl
  200 D1:AF65 6F -  -  -      ld  L,a
  201 D1:AF66 26 08 -  -      ld  H,8
  202 D1:AF68 ED 6C -  -      mlt hl
  203 D1:AF6A 01 0F AF D1     ld  bc,graphx_textdata
  204 D1:AF6E 09 -  -  -      add hl,bc
  205 D1:AF6F EB -  -  -      ex  de,hl
  206 D1:AF70 0E 08 -  -      ld  c,8
  207 D1:AF72 06 08 -  -  _:  ld  b,8
  208 D1:AF74 1A -  -  -      ld  a,(de)
  209 D1:AF75 87 -  -  -  _:  add a,a
  210 D1:AF76 -  -  -  -  fontBGColor_var .equ $+1
  211 D1:AF76 36 00 -  -      ld  (hl),FONTBGCOLOR
  212 D1:AF78 30 02 -  -      jr  nc,$+4
  213 D1:AF7A -  -  -  -  fontFGColor_var .equ $+1
  214 D1:AF7A 36 FF -  -      ld  (hl),FONTFGCOLOR
  215 D1:AF7C 23 -  -  -      inc hl
  216 D1:AF7D 10 F6 -  -      djnz -_
  217 D1:AF7F 79 -  -  -      ld  a,c
  218 D1:AF80 01 38 01 00     ld  bc,320-8
  219 D1:AF84 09 -  -  -      add hl,bc
  220 D1:AF85 4F -  -  -      ld  c,a
  221 D1:AF86 13 -  -  -      inc de
  222 D1:AF87 0D -  -  -      dec c
  223 D1:AF88 20 E8 -  -      jr  nz,--_
  224 D1:AF8A 21 F6 31 D0     ld  hl,xPos
  225 D1:AF8E 34 -  -  -      inc (hl)
  226 D1:AF8F C9 -  -  -      ret
  227 D1:AF90 -  -  -  -  
  228 D1:AF90 -  -  -  -  ;A= 0-255 numeric value to display as hex
  229 D1:AF90 -  -  -  -  printSmallNumPair:
  230 D1:AF90 CD F5 AF D1     call calculateScreenPtr
  231 D1:AF94 F5 -  -  -      push af
  232 D1:AF95 1F -  -  -          rra
  233 D1:AF96 1F -  -  -          rra
  234 D1:AF97 1F -  -  -          rra
  235 D1:AF98 1F -  -  -          rra
  236 D1:AF99 CD A8 AF D1         call +_
  237 D1:AF9D F1 -  -  -      pop af
  238 D1:AF9E CD A8 AF D1     call +_
  239 D1:AFA2 21 F6 31 D0     ld  hl,xPos
  240 D1:AFA6 34 -  -  -      inc (hl)
  241 D1:AFA7 C9 -  -  -      ret
  242 D1:AFA8 E6 0F -  -  _:  and a,$0F
  243 D1:AFAA 01 40 01 00     ld  bc,320
  244 D1:AFAE 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  245 D1:AFAF EB -  -  -      ex  de,hl
  246 D1:AFB0 6F -  -  -      ld  L,a
  247 D1:AFB1 26 03 -  -      ld  H,3
  248 D1:AFB3 ED 6C -  -      mlt hl
  249 D1:AFB5 01 0F B3 D1     ld  bc,SmallHexFont
  250 D1:AFB9 09 -  -  -      add hl,bc
  251 D1:AFBA EB -  -  -      ex  de,hl
  252 D1:AFBB 0E 03 -  -      ld  c,3
  253 D1:AFBD 18 14 -  -      jr  printSmallNumPair_2ndHalf
  254 D1:AFBF -  -  -  -  printSmallNumPair_1stHalf:
  255 D1:AFBF 1A -  -  -      ld  a,(de)
  256 D1:AFC0 06 04 -  -      ld  b,4
  257 D1:AFC2 87 -  -  -  _:  add a,a
  258 D1:AFC3 -  -  -  -  smallFontBGColor_var .equ $+1
  259 D1:AFC3 36 00 -  -      ld  (hl),FONTBGCOLOR
  260 D1:AFC5 30 02 -  -      jr  nc,$+4
  261 D1:AFC7 -  -  -  -  smallFontFGColor_var .equ $+1
  262 D1:AFC7 36 FF -  -      ld  (hl),FONTFGCOLOR
  263 D1:AFC9 23 -  -  -      inc hl
  264 D1:AFCA 10 F6 -  -      djnz -_
  265 D1:AFCC 79 -  -  -      ld  a,c
  266 D1:AFCD 01 3C 01 00     ld  bc,320-4
  267 D1:AFD1 09 -  -  -      add hl,bc
  268 D1:AFD2 4F -  -  -      ld  c,a
  269 D1:AFD3 -  -  -  -  printSmallNumPair_2ndHalf:
  270 D1:AFD3 1A -  -  -      ld  a,(de)
  271 D1:AFD4 07 -  -  -      rlca
  272 D1:AFD5 07 -  -  -      rlca
  273 D1:AFD6 07 -  -  -      rlca
  274 D1:AFD7 07 -  -  -      rlca
  275 D1:AFD8 06 04 -  -      ld  b,4
  276 D1:AFDA 87 -  -  -  _:  add a,a
  277 D1:AFDB 36 00 -  -      ld  (hl),FONTBGCOLOR
  278 D1:AFDD 30 02 -  -      jr  nc,$+4
  279 D1:AFDF 36 FF -  -      ld  (hl),FONTFGCOLOR
  280 D1:AFE1 23 -  -  -      inc hl
  281 D1:AFE2 10 F6 -  -      djnz -_
  282 D1:AFE4 13 -  -  -      inc de
  283 D1:AFE5 79 -  -  -      ld  a,c
  284 D1:AFE6 01 3C 01 00     ld  bc,320-4
  285 D1:AFEA 09 -  -  -      add hl,bc
  286 D1:AFEB 4F -  -  -      ld  c,a
  287 D1:AFEC 0D -  -  -      dec c
  288 D1:AFED 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  289 D1:AFEF 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  290 D1:AFF3 09 -  -  -      add hl,bc
  291 D1:AFF4 C9 -  -  -      ret
  292 D1:AFF5 -  -  -  -  
  293 D1:AFF5 -  -  -  -  calculateScreenPtr:
  294 D1:AFF5 -  -  -  -      ;xcoord: x * 8 
  295 D1:AFF5 -  -  -  -      ;ycoord: 320 * 8 * y
  296 D1:AFF5 -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  297 D1:AFF5 ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  298 D1:AFFA -  -  -  -  calculateScreenPtrDE:
  299 D1:AFFA 6A -  -  -      ld  L,d     ;yPos
  300 D1:AFFB 26 A0 -  -      ld  h,160
  301 D1:AFFD ED 6C -  -      mlt hl
  302 D1:AFFF 29 -  -  -      add hl,hl
  303 D1:B000 16 01 -  -      ld  d,1
  304 D1:B002 ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  305 D1:B004 19 -  -  -      add hl,de
  306 D1:B005 29 -  -  -      add hl,hl
  307 D1:B006 29 -  -  -      add hl,hl
  308 D1:B007 29 -  -  -      add hl,hl
  309 D1:B008 ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  310 D1:B00D 19 -  -  -      add hl,de
  311 D1:B00E C9 -  -  -      ret
  312 D1:B00F -  -  -  -  
  313 D1:B00F -  -  -  -  
  314 D1:B00F -  -  -  -  
  315 D1:B00F -  -  -  -  
  316 D1:B00F -  -  -  -  
  317 D1:B00F -  -  -  -  
  318 D1:B00F -  -  -  -  
  319 D1:B00F -  -  -  -  
  320 D1:B00F -  -  -  -  
  321 D1:B00F -  -  -  -  ;-----------------------------------------------------------------------------
  322 D1:B00F -  -  -  -  ; Data Section
  323 D1:B00F -  -  -  -  
  324 D1:B00F -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  325 D1:B00F 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  326 D1:B017 C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  327 D1:B01F D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  328 D1:B027 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  329 D1:B02F 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  330 D1:B037 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  331 D1:B03F 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  332 D1:B047 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  333 D1:B04F 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  334 D1:B057 C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  335 D1:B05F 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  336 D1:B067 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  337 D1:B06F 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  338 D1:B077 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  339 D1:B07F 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  340 D1:B087 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  341 D1:B08F 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  342 D1:B097 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  343 D1:B09F 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  344 D1:B0A7 FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  345 D1:B0AF 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  346 D1:B0B7 FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  347 D1:B0BF 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  348 D1:B0C7 FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  349 D1:B0CF 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  350 D1:B0D7 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  351 D1:B0DF 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  352 D1:B0E7 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  353 D1:B0EF 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  354 D1:B0F7 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  355 D1:B0FF C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  356 D1:B107 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  357 D1:B10F 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  358 D1:B117 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  359 D1:B11F FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  360 D1:B127 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  361 D1:B12F F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  362 D1:B137 FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  363 D1:B13F FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  364 D1:B147 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  365 D1:B14F C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  366 D1:B157 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  367 D1:B15F 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  368 D1:B167 C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  369 D1:B16F C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  370 D1:B177 C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  371 D1:B17F C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  372 D1:B187 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  373 D1:B18F FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  374 D1:B197 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  375 D1:B19F FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  376 D1:B1A7 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  377 D1:B1AF FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  378 D1:B1B7 C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  379 D1:B1BF C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  380 D1:B1C7 C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  381 D1:B1CF C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  382 D1:B1D7 C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  383 D1:B1DF FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  384 D1:B1E7 F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  385 D1:B1EF C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  386 D1:B1F7 F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  387 D1:B1FF 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  388 D1:B207 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  389 D1:B20F C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  390 D1:B217 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  391 D1:B21F C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  392 D1:B227 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  393 D1:B22F 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  394 D1:B237 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  395 D1:B23F 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  396 D1:B247 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  397 D1:B24F C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  398 D1:B257 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  399 D1:B25F 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  400 D1:B267 C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  401 D1:B26F 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  402 D1:B277 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  403 D1:B27F 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  404 D1:B287 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  405 D1:B28F 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  406 D1:B297 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  407 D1:B29F 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  408 D1:B2A7 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  409 D1:B2AF 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  410 D1:B2B7 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  411 D1:B2BF 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  412 D1:B2C7 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  413 D1:B2CF 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  414 D1:B2D7 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  415 D1:B2DF 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  416 D1:B2E7 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  417 D1:B2EF C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  418 D1:B2F7 E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  419 D1:B2FF 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  420 D1:B307 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  421 D1:B30F -  -  -  -  
  422 D1:B30F -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  423 D1:B30F -  -  -  -  ;whose format was copied from a (then-)authorized source
  424 D1:B30F -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  425 D1:B30F -  -  -  -  SmallHexFont:
  426 D1:B30F 4E AA AE -  .db $4E,$AA,$AE				;zero
  427 D1:B312 44 C4 4E -  .db $44,$C4,$4E				;one
  428 D1:B315 4C 24 8E -  .db $4C,$24,$8E				;two
  429 D1:B318 4C 24 2C -  .db $4C,$24,$2C				;three
  430 D1:B31B 48 AE 22 -  .db $48,$AE,$22				;four
  431 D1:B31E 4E 8C 2C -  .db $4E,$8C,$2C				;five
  432 D1:B321 46 8E AE -  .db $46,$8E,$AE				;six
  433 D1:B324 4E 24 88 -  .db $4E,$24,$88				;seven
  434 D1:B327 4E AE AE -  .db $4E,$AE,$AE				;eight
  435 D1:B32A 4E AE 2C -  .db $4E,$AE,$2C				;nine
  436 D1:B32D 44 AE AA -  .db $44,$AE,$AA				;A
  437 D1:B330 4C AC AC -  .db $4C,$AC,$AC				;B
  438 D1:B333 46 88 86 -  .db $46,$88,$86				;C
  439 D1:B336 4C AA AC -  .db $4C,$AA,$AC				;D
  440 D1:B339 4E 8C 8E -  .db $4E,$8C,$8E				;E
  441 D1:B33C 4E 8C 88 -  .db $4E,$8C,$88				;F
  442 D1:B33F -  -  -  -  
  443 D1:B33F -  -  -  -  
  444 D1:B33F -  -  -  -  
Listing for file "main.z80"
  665 D1:B33F -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B33F -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B33F -  -  -  -  
    3 D1:B33F -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B33F -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B33F -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B33F -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B33F -  -  -  -  ;
    8 D1:B33F -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B33F -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B33F -  -  -  -  ;
   11 D1:B33F -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B33F -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B33F -  -  -  -  ;
   14 D1:B33F -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B33F -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B33F -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B33F -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B33F -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B33F -  -  -  -  
   20 D1:B33F -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B33F -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+6 \ set SF_OVER,b
   22 D1:B33F -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B33F -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B33F -  -  -  -  
   25 D1:B33F -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ rlc a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B33F -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ rlc a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B33F -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ rlc a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B33F -  -  -  -  
   29 D1:B33F -  -  -  -  
   30 D1:B33F -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B33F -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B33F -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B33F -  -  -  -  
   34 D1:B33F -  -  -  -  
   35 D1:B33F -  -  -  -  
   36 D1:B33F -  -  -  -  
   37 D1:B33F -  -  -  -  ;=============================================================================
   38 D1:B33F -  -  -  -  ;=============================================================================
   39 D1:B33F -  -  -  -  ;=============================================================================
   40 D1:B33F -  -  -  -  ;=============================================================================
   41 D1:B33F -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B33F -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B33F -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B33F -  -  -  -  i6502Init:
   45 D1:B33F -  -  -  -      ;
   46 D1:B33F -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B33F -  -  -  -      ;
   48 D1:B33F 21 00 38 D0     ld  hl,main_ram
   49 D1:B343 01 08 20 00     ld  bc,$002008
   50 D1:B347 1E 00 -  -      ld  e,$00
   51 D1:B349 CD F9 B5 D1     call i6502_map_pages
   52 D1:B34D 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B351 01 01 20 00     ld  bc,$002001
   54 D1:B355 1E 20 -  -      ld  e,$20
   55 D1:B357 CD F9 B5 D1     call i6502_map_pages
   56 D1:B35B FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B360 ED 22 80 -      lea hl,ix-128
   58 D1:B363 ED 12 81 -      lea de,ix-127
   59 D1:B366 01 FF 00 00     ld  bc,255
   60 D1:B36A 36 00 -  -      ld  (hl),$00
   61 D1:B36C ED B0 -  -      ldir
   62 D1:B36E CD E0 B5 D1     call i6502_load_instruction_set
   63 D1:B372 -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   64 D1:B372 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   65 D1:B376 ED 27 -  -      ld  hl,(hl)
   66 D1:B378 11 FC 00 00     ld  de,$0000FC
   67 D1:B37C 19 -  -  -      add hl,de
   68 D1:B37D DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   69 D1:B382 -  -  -  -      ;jp inst6502_jsr
   70 D1:B382 -  -  -  -      ;Manual loading below. Uncomment "jp inst6502_jsr" to return to original.
   71 D1:B382 -  -  -  -      ;Settings below is to run nestest CPU-only test. The reset vector above
   72 D1:B382 -  -  -  -      ;requires a working PPU (and probably APU) to be present.
   73 D1:B382 DD 36 04 24     ld  (ix+REGSR),$24      ;because that's what the log wants?
   74 D1:B386 21 00 C0 00     ld  hl,$C000
   75 D1:B38A DD 2F 05 -      ld  (ix+REGPC),HL
   76 D1:B38D FD 21 07 00 
              00 -  -  -      ld  iy,7
   77 D1:B392 -  -  -  -  
   78 D1:B392 -  -  -  -  i6502FirstLoad:
   79 D1:B392 52 DD 17 05     ld.s de,(ix+REGPC)
   80 D1:B396 7B -  -  -      ld  a,e
   81 D1:B397 1E 08 -  -      ld  e,BASETABLE_STRIDE
   82 D1:B399 ED 5C -  -      mlt de
   83 D1:B39B 21 00 40 D0     ld  hl,PAGETABLE
   84 D1:B39F 19 -  -  -      add hl,de
   85 D1:B3A0 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   86 D1:B3A2 16 00 -  -      ld  d,0
   87 D1:B3A4 5F -  -  -      ld  e,a
   88 D1:B3A5 19 -  -  -      add hl,de       ;resolve final address
   89 D1:B3A6 18 19 -  -      jr  i6502FinishLoad
   90 D1:B3A8 -  -  -  -  i6502NextLoad:
   91 D1:B3A8 23 -  -  -      inc hl
   92 D1:B3A9 1C -  -  -      inc e
   93 D1:B3AA 20 15 -  -      jr  nz,i6502FinishLoad
   94 D1:B3AC DD 56 06 -      ld  d,(ix+REGPC+1)
   95 D1:B3AF 14 -  -  -      inc d
   96 D1:B3B0 52 DD 1F 05     ld.s (ix+REGPC),de
   97 D1:B3B4 1E 08 -  -      ld  e,BASETABLE_STRIDE
   98 D1:B3B6 ED 5C -  -      mlt de
   99 D1:B3B8 21 00 40 D0     ld  hl,PAGETABLE
  100 D1:B3BC 19 -  -  -      add hl,de
  101 D1:B3BD ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
  102 D1:B3BF 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
  103 D1:B3C1 -  -  -  -  i6502FinishLoad:
  104 D1:B3C1 7E -  -  -      ld  a,(hl)
  105 D1:B3C2 -  -  -  -  #ifdef COREDEBUG
  106 D1:B3C2 DD 77 0E -      ld  (ix+CURRENT_OPCODES+0),a
  107 D1:B3C5 DD 73 05 -      ld  (ix+REGPC+0),e
  108 D1:B3C8 -  -  -  -  #endif
  109 D1:B3C8 23 -  -  -      inc hl
  110 D1:B3C9 1C -  -  -      inc e
  111 D1:B3CA 20 15 -  -      jr  nz,i6502PrepNextPage
  112 D1:B3CC DD 56 06 -      ld  d,(ix+REGPC+1)
  113 D1:B3CF 14 -  -  -      inc d
  114 D1:B3D0 52 DD 1F 05     ld.s (ix+REGPC),de
  115 D1:B3D4 1E 08 -  -      ld  e,BASETABLE_STRIDE
  116 D1:B3D6 ED 5C -  -      mlt de
  117 D1:B3D8 21 00 40 D0     ld  hl,PAGETABLE
  118 D1:B3DC 19 -  -  -      add hl,de
  119 D1:B3DD ED 27 -  -      ld  hl,(hl)
  120 D1:B3DF 1E 00 -  -      ld  e,0
  121 D1:B3E1 -  -  -  -  i6502PrepNextPage:
  122 D1:B3E1 -  -  -  -  #ifdef COREDEBUG
  123 D1:B3E1 F5 -  -  -      push af
  124 D1:B3E2 7E -  -  -          ld  a,(hl)
  125 D1:B3E3 DD 77 0F -          ld  (ix+CURRENT_OPCODES+1),a
  126 D1:B3E6 D5 -  -  -          push de
  127 D1:B3E7 E5 -  -  -              push hl
  128 D1:B3E8 DD E5 -  -                  push ix
  129 D1:B3EA 23 -  -  -                      inc hl
  130 D1:B3EB 1C -  -  -                      inc e
  131 D1:B3EC 20 0F -  -                      jr  nz,+_
  132 D1:B3EE DD 56 06 -                      ld  d,(ix+REGPC+1)
  133 D1:B3F1 14 -  -  -                      inc d
  134 D1:B3F2 1E 08 -  -                      ld  e,BASETABLE_STRIDE
  135 D1:B3F4 ED 5C -  -                      mlt de
  136 D1:B3F6 21 00 40 D0                     ld  hl,PAGETABLE
  137 D1:B3FA 19 -  -  -                      add hl,de
  138 D1:B3FB ED 27 -  -                      ld  hl,(hl)
  139 D1:B3FD 7E -  -  -  _:                  ld  a,(hl)
  140 D1:B3FE DD 77 10 -                      ld  (ix+CURRENT_OPCODES+2),a
  141 D1:B401 ED 22 00 -                      lea hl,ix
  142 D1:B404 11 80 32 D0                     ld  de,core_memory_ix
  143 D1:B408 B7 -  -  -                      or  a,a
  144 D1:B409 ED 52 -  -                      sbc hl,de
  145 D1:B40B 20 FE -  -                      jr  nz,$    ;halt program if IX is not core_memory_ix
  146 D1:B40D -  -  -  -                      ;jr $
  147 D1:B40D FD E5 -  -                      push iy
  148 D1:B40F CD E8 D5 D1                         call dbg_printLine
  149 D1:B413 FD E1 -  -                      pop iy
  150 D1:B415 DD 31 0B -                      ld  iy,(ix+CYCLES_CURRENT)  ;remove when done with timings
  151 D1:B418 ED 23 00 -                      lea hl,iy+0
  152 D1:B41B 11 75 67 00                     ld  de,DEBUG_STEP_START_CYCLE
  153 D1:B41F B7 -  -  -                      or  a,a
  154 D1:B420 ED 52 -  -                      sbc hl,de
  155 D1:B422 D4 10 AA D1                     call nc,waituntilnewkeypress
  156 D1:B426 DD E1 -  -                  pop ix
  157 D1:B428 E1 -  -  -              pop hl
  158 D1:B429 D1 -  -  -          pop de
  159 D1:B42A F1 -  -  -      pop af
  160 D1:B42B -  -  -  -  #endif
  161 D1:B42B E5 -  -  -      push hl
  162 D1:B42C 67 -  -  -          ld  h,a
  163 D1:B42D 2E 08 -  -          ld  l,BASETABLE_STRIDE
  164 D1:B42F ED 6C -  -          mlt hl
  165 D1:B431 01 04 40 D0         ld  bc,JUMPTABLE
  166 D1:B435 09 -  -  -          add hl,bc
  167 D1:B436 ED 27 -  -          ld  hl,(hl)     ;jumptable
  168 D1:B438 E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  169 D1:B439 C9 -  -  -      ret
  170 D1:B43A -  -  -  -  
  171 D1:B43A -  -  -  -  
  172 D1:B43A -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  173 D1:B43A -  -  -  -  ;   JP i6502FinishLoad
  174 D1:B43A -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  175 D1:B43A -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  176 D1:B43A -  -  -  -  ;   JP i6502NextLoad
  177 D1:B43A -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  178 D1:B43A -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  179 D1:B43A -  -  -  -  ;   JP i6502FinishLoad
  180 D1:B43A -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  181 D1:B43A -  -  -  -  
  182 D1:B43A -  -  -  -  
  183 D1:B43A -  -  -  -  ;-----------------------------------------------------------------------------    
  184 D1:B43A -  -  -  -  ;-----------------------------------------------------------------------------    
  185 D1:B43A -  -  -  -  
  186 D1:B43A -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  187 D1:B43A -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  188 D1:B43A -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  189 D1:B43A -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  190 D1:B43A -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  191 D1:B43A -  -  -  -  
  192 D1:B43A -  -  -  -  ;-----------------------------------------------------------------------------    
  193 D1:B43A -  -  -  -  ;-----------------------------------------------------------------------------    
  194 D1:B43A -  -  -  -  outline6502_imm:
  195 D1:B43A 7E -  -  -      ld  a,(hl)  ;oper uses A
  196 D1:B43B -  -  -  -      ;oper
  197 D1:B43B DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  198 D1:B44F ED 33 02 -      ADDCYC(2)
  199 D1:B452 C3 A8 B3 D1     jp i6502NextLoad
  200 D1:B456 -  -  -  -  
  201 D1:B456 -  -  -  -  outline6502_abs:
  202 D1:B456 4E -  -  -      ld  c,(hl)
  203 D1:B457 23 -  -  -      inc hl
  204 D1:B458 1C -  -  -      inc e
  205 D1:B459 20 15 -  -      jr nz,+_
  206 D1:B45B DD 56 06 -      ld  d,(ix+REGPC+1)
  207 D1:B45E 14 -  -  -      inc d
  208 D1:B45F 52 DD 1F 05     ld.s (ix+REGPC),de
  209 D1:B463 1E 08 -  -      ld  e,BASETABLE_STRIDE
  210 D1:B465 ED 5C -  -      mlt de
  211 D1:B467 21 00 40 D0     ld  hl,PAGETABLE
  212 D1:B46B 19 -  -  -      add hl,de
  213 D1:B46C ED 27 -  -      ld  hl,(hl) ;
  214 D1:B46E 1E 00 -  -      ld  e,0
  215 D1:B470 46 -  -  -  _:  ld  b,(hl)
  216 D1:B471 E5 -  -  -      push hl
  217 D1:B472 50 -  -  -          ld  d,b
  218 D1:B473 79 -  -  -          ld  a,c
  219 D1:B474 0E 08 -  -          ld  c,BASETABLE_STRIDE
  220 D1:B476 ED 4C -  -          mlt bc
  221 D1:B478 21 00 40 D0         ld  hl,PAGETABLE
  222 D1:B47C 09 -  -  -          add hl,bc
  223 D1:B47D ED 27 -  -          ld  hl,(hl)
  224 D1:B47F 06 00 -  -          ld  b,0
  225 D1:B481 4F -  -  -          ld  c,a
  226 D1:B482 09 -  -  -          add hl,bc   ;full address
  227 D1:B483 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  228 D1:B483 7E -  -  -          ld  a,(hl)  ;oper uses A
  229 D1:B484 -  -  -  -          ;oper
  230 D1:B484 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  231 D1:B498 ED 33 03 -      ADDCYC(3)
  232 D1:B49B E1 -  -  -      pop hl
  233 D1:B49C C3 A8 B3 D1     jp i6502NextLoad
  234 D1:B4A0 -  -  -  -  
  235 D1:B4A0 -  -  -  -  outline6502_zeropage:
  236 D1:B4A0 7E -  -  -      ld  a,(hl)
  237 D1:B4A1 01 00 38 D0     ld  bc,ZEROPAGE
  238 D1:B4A5 81 -  -  -      add a,c
  239 D1:B4A6 4F -  -  -      ld  c,a
  240 D1:B4A7 0A -  -  -      ld  a,(bc)      ;oper uses A
  241 D1:B4A8 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  242 D1:B4A8 -  -  -  -      ;oper
  243 D1:B4A8 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  244 D1:B4BC ED 33 03 -      ADDCYC(3)
  245 D1:B4BF C3 A8 B3 D1     jp i6502NextLoad
  246 D1:B4C3 -  -  -  -  
  247 D1:B4C3 -  -  -  -  
  248 D1:B4C3 -  -  -  -  ;Note: has same split start as abs
  249 D1:B4C3 -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  250 D1:B4C3 4E -  -  -      ld  c,(hl)
  251 D1:B4C4 23 -  -  -      inc hl
  252 D1:B4C5 1C -  -  -      inc e
  253 D1:B4C6 20 15 -  -      jr nz,+_
  254 D1:B4C8 DD 56 06 -      ld  d,(ix+REGPC+1)
  255 D1:B4CB 14 -  -  -      inc d
  256 D1:B4CC 52 DD 1F 05     ld.s (ix+REGPC),de
  257 D1:B4D0 1E 08 -  -      ld  e,BASETABLE_STRIDE
  258 D1:B4D2 ED 5C -  -      mlt de
  259 D1:B4D4 21 00 40 D0     ld  hl,PAGETABLE
  260 D1:B4D8 19 -  -  -      add hl,de
  261 D1:B4D9 ED 27 -  -      ld  hl,(hl) ;
  262 D1:B4DB 1E 00 -  -      ld  e,0
  263 D1:B4DD 46 -  -  -  _:  ld  b,(hl)
  264 D1:B4DE E5 -  -  -      push hl
  265 D1:B4DF 50 -  -  -          ld  d,b
  266 D1:B4E0 79 -  -  -          ld  a,c
  267 D1:B4E1 0E 08 -  -          ld  c,BASETABLE_STRIDE
  268 D1:B4E3 ED 4C -  -          mlt bc
  269 D1:B4E5 21 00 40 D0         ld  hl,PAGETABLE
  270 D1:B4E9 09 -  -  -          add hl,bc
  271 D1:B4EA ED 27 -  -          ld  hl,(hl)
  272 D1:B4EC 06 00 -  -          ld  b,0
  273 D1:B4EE 4F -  -  -          ld  c,a
  274 D1:B4EF DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  275 D1:B4F2 81 -  -  -          add a,c
  276 D1:B4F3 30 04 -  -          jr  nc,+_
  277 D1:B4F5 04 -  -  -          inc b
  278 D1:B4F6 14 -  -  -          inc d
  279 D1:B4F7 FD 23 -  -          ADDCYC(1)
  280 D1:B4F9 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  281 D1:B4F9 09 -  -  -          add hl,bc   ;full address
  282 D1:B4FA 7E -  -  -          ld  a,(hl)  ;oper uses A
  283 D1:B4FB -  -  -  -          ;oper
  284 D1:B4FB DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  285 D1:B50F ED 33 04 -      ADDCYC(4)
  286 D1:B512 E1 -  -  -      pop hl
  287 D1:B513 C3 A8 B3 D1     jp i6502NextLoad
  288 D1:B517 -  -  -  -  
  289 D1:B517 -  -  -  -  
  290 D1:B517 -  -  -  -  outline6502_zpx:
  291 D1:B517 7E -  -  -      ld  a,(hl)
  292 D1:B518 01 00 38 D0     ld  bc,ZEROPAGE
  293 D1:B51C 81 -  -  -      add a,c
  294 D1:B51D DD 86 01 -      add a,(ix+REGX)
  295 D1:B520 4F -  -  -      ld  c,a
  296 D1:B521 0A -  -  -      ld  a,(bc)      ;oper uses A
  297 D1:B522 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  298 D1:B522 -  -  -  -      ;oper
  299 D1:B522 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  300 D1:B536 ED 33 04 -      ADDCYC(4)
  301 D1:B539 C3 A8 B3 D1     jp i6502NextLoad
  302 D1:B53D -  -  -  -      
  303 D1:B53D -  -  -  -  outline6502_zpy:
  304 D1:B53D 7E -  -  -      ld  a,(hl)
  305 D1:B53E 01 00 38 D0     ld  bc,ZEROPAGE
  306 D1:B542 81 -  -  -      add a,c
  307 D1:B543 DD 86 02 -      add a,(ix+REGY)
  308 D1:B546 4F -  -  -      ld  c,a
  309 D1:B547 0A -  -  -      ld  a,(bc)      ;oper uses A
  310 D1:B548 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  311 D1:B548 -  -  -  -      ;oper
  312 D1:B548 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  313 D1:B55C ED 33 04 -      ADDCYC(4)
  314 D1:B55F C3 A8 B3 D1     jp i6502NextLoad
  315 D1:B563 -  -  -  -  
  316 D1:B563 -  -  -  -  outline6502_preidx_indir:
  317 D1:B563 E5 -  -  -      push hl
  318 D1:B564 7E -  -  -          ld  a,(hl)
  319 D1:B565 21 00 38 D0         ld  hl,ZEROPAGE
  320 D1:B569 85 -  -  -          add a,L
  321 D1:B56A DD 86 01 -          add a,(ix+REGX)
  322 D1:B56D 6F -  -  -          ld  L,a
  323 D1:B56E 7E -  -  -          ld  a,(hl)
  324 D1:B56F 2C -  -  -          inc L
  325 D1:B570 56 -  -  -          ld  d,(hl)
  326 D1:B571 42 -  -  -          ld  b,d
  327 D1:B572 0E 08 -  -          ld  c,BASETABLE_STRIDE
  328 D1:B574 ED 4C -  -          mlt bc
  329 D1:B576 21 00 40 D0         ld  hl,PAGETABLE
  330 D1:B57A 09 -  -  -          add hl,bc
  331 D1:B57B ED 27 -  -          ld  hl,(hl)
  332 D1:B57D 06 00 -  -          ld  b,0
  333 D1:B57F 4F -  -  -          ld  c,a
  334 D1:B580 09 -  -  -          add hl,bc
  335 D1:B581 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  336 D1:B581 7E -  -  -          ld  a,(hl)  ;oper uses A.
  337 D1:B582 -  -  -  -          ;oper
  338 D1:B582 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  339 D1:B596 ED 33 06 -          ADDCYC(6)
  340 D1:B599 E1 -  -  -      pop hl
  341 D1:B59A C3 A8 B3 D1     jp i6502NextLoad
  342 D1:B59E -  -  -  -  
  343 D1:B59E -  -  -  -  outline6502_postidx_indir:
  344 D1:B59E E5 -  -  -      push hl
  345 D1:B59F 7E -  -  -          ld  a,(hl)
  346 D1:B5A0 21 00 38 D0         ld  hl,ZEROPAGE
  347 D1:B5A4 85 -  -  -          add a,L
  348 D1:B5A5 6F -  -  -          ld  L,a
  349 D1:B5A6 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  350 D1:B5A7 2C -  -  -          inc L
  351 D1:B5A8 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  352 D1:B5AB 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  353 D1:B5AC 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  354 D1:B5AE FD 23 -  -          ADDCYC(1)
  355 D1:B5B0 24 -  -  -          inc h
  356 D1:B5B1 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  357 D1:B5B2 2E 08 -  -          ld  L,BASETABLE_STRIDE
  358 D1:B5B4 ED 6C -  -          mlt hl          ;23.
  359 D1:B5B6 01 00 40 D0         ld  bc,PAGETABLE
  360 D1:B5BA 09 -  -  -          add hl,bc
  361 D1:B5BB ED 27 -  -          ld  hl,(hl)     ;address get.
  362 D1:B5BD 01 00 00 00         ld  bc,0
  363 D1:B5C1 4F -  -  -          ld  c,a
  364 D1:B5C2 09 -  -  -          add hl,bc       ;Full address get.
  365 D1:B5C3 7E -  -  -          ld  a,(hl)
  366 D1:B5C4 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  367 D1:B5C4 -  -  -  -          ;oper
  368 D1:B5C4 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  369 D1:B5D8 ED 33 05 -          ADDCYC(5)
  370 D1:B5DB E1 -  -  -      pop hl
  371 D1:B5DC C3 A8 B3 D1     jp i6502NextLoad
  372 D1:B5E0 -  -  -  -  
  373 D1:B5E0 -  -  -  -  ;-----------------------------------------------------------------------------
  374 D1:B5E0 -  -  -  -  ;-----------------------------------------------------------------------------
  375 D1:B5E0 -  -  -  -  ;-----------------------------------------------------------------------------
  376 D1:B5E0 -  -  -  -  
  377 D1:B5E0 -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  378 D1:B5E0 -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  379 D1:B5E0 -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  380 D1:B5E0 -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  381 D1:B5E0 -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  382 D1:B5E0 -  -  -  -  
  383 D1:B5E0 -  -  -  -  ;-----------------------------------------------------------------------------
  384 D1:B5E0 -  -  -  -  
  385 D1:B5E0 -  -  -  -  i6502_load_instruction_set:
  386 D1:B5E0 DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  387 D1:B5E5 21 4F CE D1     ld  hl,inst6502_instruction_set
  388 D1:B5E9 06 00 -  -      ld  b,0
  389 D1:B5EB ED 17 -  -  _:  ld  de,(hl)
  390 D1:B5ED DD 1F 00 -      ld  (ix+0),de
  391 D1:B5F0 23 -  -  -      inc hl
  392 D1:B5F1 23 -  -  -      inc hl
  393 D1:B5F2 23 -  -  -      inc hl
  394 D1:B5F3 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  395 D1:B5F6 10 F3 -  -      djnz -_
  396 D1:B5F8 C9 -  -  -      ret
  397 D1:B5F9 -  -  -  -  
  398 D1:B5F9 -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  399 D1:B5F9 -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  400 D1:B5F9 -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  401 D1:B5F9 -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  402 D1:B5F9 -  -  -  -  i6502_map_pages:
  403 D1:B5F9 16 08 -  -      ld  d,BASETABLE_STRIDE
  404 D1:B5FB ED 5C -  -      mlt de
  405 D1:B5FD DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  406 D1:B602 DD 19 -  -      add ix,de
  407 D1:B604 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  408 D1:B605 11 00 01 00     ld  de,256
  409 D1:B609 E5 -  -  -      push hl
  410 D1:B60A FD E1 -  -      pop iy
  411 D1:B60C 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  412 D1:B60D DD 2F 00 -  _:  ld  (ix+0),hl
  413 D1:B610 19 -  -  -      add hl,de                   ;next page z80
  414 D1:B611 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  415 D1:B614 3D -  -  -      dec a
  416 D1:B615 C8 -  -  -      ret z
  417 D1:B616 10 F5 -  -      djnz -_
  418 D1:B618 ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  419 D1:B61B 18 EF -  -      jr --_
  420 D1:B61D -  -  -  -  
  421 D1:B61D -  -  -  -  
  422 D1:B61D -  -  -  -  subroutine6502_abs_split_start:
  423 D1:B61D 4E -  -  -      ld  c,(hl)
  424 D1:B61E 23 -  -  -      inc hl
  425 D1:B61F 1C -  -  -      inc e
  426 D1:B620 20 15 -  -      jr nz,+_
  427 D1:B622 DD 56 06 -      ld  d,(ix+REGPC+1)
  428 D1:B625 14 -  -  -      inc d
  429 D1:B626 52 DD 1F 05     ld.s (ix+REGPC),de
  430 D1:B62A 1E 08 -  -      ld  e,BASETABLE_STRIDE
  431 D1:B62C ED 5C -  -      mlt de
  432 D1:B62E 21 00 40 D0     ld  hl,PAGETABLE
  433 D1:B632 19 -  -  -      add hl,de
  434 D1:B633 ED 27 -  -      ld  hl,(hl) ;
  435 D1:B635 1E 00 -  -      ld  e,0
  436 D1:B637 46 -  -  -  _:  ld  b,(hl)
  437 D1:B638 C9 -  -  -      ret
  438 D1:B639 -  -  -  -  
  439 D1:B639 -  -  -  -  subroutine6502_adc_combined_end:
  440 D1:B639 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  441 D1:B63C 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  442 D1:B63D DD 7E 00 -      ld  a,(ix+REGA)
  443 D1:B640 89 -  -  -      adc a,c
  444 D1:B641 DD 77 00 -      ld  (ix+REGA),a
  445 D1:B644 DD 46 04 CB 
              B0 E2 4F B6 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 CB 07 
              CB 88 20 02 
              CB C8 CB B8 
              30 02 CB F8 
              DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  446 D1:B666 C3 A8 B3 D1     jp i6502NextLoad
  447 D1:B66A -  -  -  -  
  448 D1:B66A -  -  -  -  subroutine6502_sbc_combined_end:
  449 D1:B66A DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  450 D1:B66D 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  451 D1:B66E DD 7E 00 -      ld  a,(ix+REGA)
  452 D1:B671 3F -  -  -      ccf
  453 D1:B672 99 -  -  -      sbc a,c
  454 D1:B673 3F -  -  -      ccf
  455 D1:B674 DD 77 00 -      ld  (ix+REGA),a
  456 D1:B677 DD 46 04 CB 
              B0 E2 82 B6 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 CB 07 
              CB 88 20 02 
              CB C8 CB B8 
              30 02 CB F8 
              DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  457 D1:B699 C3 A8 B3 D1     jp i6502NextLoad
  458 D1:B69D -  -  -  -  
  459 D1:B69D -  -  -  -  subroutine6502_cmp_combined_end:
  460 D1:B69D DD 7E 00 -      ld  a,(ix+REGA)
  461 D1:B6A0 90 -  -  -      sub a,b
  462 D1:B6A1 3F -  -  -      ccf     ;because the 6502 is strange like that.
  463 D1:B6A2 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  464 D1:B6BC C3 A8 B3 D1     jp i6502NextLoad
  465 D1:B6C0 -  -  -  -  
  466 D1:B6C0 -  -  -  -  subroutine6502_take_branch:
  467 D1:B6C0 FD 23 -  -      ADDCYC(1)
  468 D1:B6C2 7E -  -  -      ld  a,(hl)  ;offset byte
  469 D1:B6C3 6F -  -  -      ld  L,a
  470 D1:B6C4 87 -  -  -      add a,a
  471 D1:B6C5 9F -  -  -      sbc a,a
  472 D1:B6C6 67 -  -  -      ld  H,a     ;sign-extending offset byte
  473 D1:B6C7 DD 56 06 -      ld  d,(ix+REGPC+1)
  474 D1:B6CA 13 -  -  -      inc de
  475 D1:B6CB 52 19 -  -      add.s hl,de
  476 D1:B6CD 7C -  -  -      ld  a,h
  477 D1:B6CE BA -  -  -      cp  d       ;is high byte the same?
  478 D1:B6CF 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  479 D1:B6D1 FD 23 -  -      ADDCYC(1)
  480 D1:B6D3 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  481 D1:B6D7 C3 92 B3 D1     jp  i6502FirstLoad
  482 D1:B6DB -  -  -  -  
  483 D1:B6DB -  -  -  -  
  484 D1:B6DB -  -  -  -  ;-----------------------------------------------------------------------------
  485 D1:B6DB -  -  -  -  
  486 D1:B6DB -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  487 D1:B6DB -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  488 D1:B6DB -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  489 D1:B6DB -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  490 D1:B6DB -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  491 D1:B6DB -  -  -  -  
  492 D1:B6DB -  -  -  -  ;-----------------------------------------------------------------------------
  493 D1:B6DB -  -  -  -  
  494 D1:B6DB -  -  -  -  ;-----------------------------------------------------------------------------
  495 D1:B6DB -  -  -  -  ;-----------------------------------------------------------------------------
  496 D1:B6DB -  -  -  -  ;-----------------------------------------------------------------------------
  497 D1:B6DB -  -  -  -  ;Instructions by type: Transfer Instructions
  498 D1:B6DB -  -  -  -  ;LDA - Load Accumulator with Memory
  499 D1:B6DB -  -  -  -  ;    M -> A
  500 D1:B6DB -  -  -  -  ;    N	Z	C	I	D	V
  501 D1:B6DB -  -  -  -  ;    +	+	-	-	-	-
  502 D1:B6DB -  -  -  -  
  503 D1:B6DB -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  504 D1:B6DB -  -  -  -  ;immediate	LDA #oper	A9	2	2
  505 D1:B6DB -  -  -  -  inst6502_lda_imm:
  506 D1:B6DB 7E -  -  -      ld  a,(hl)
  507 D1:B6DC DD 77 00 -      ld  (ix+REGA),a
  508 D1:B6DF DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  509 D1:B6F3 ED 33 02 -      ADDCYC(2)
  510 D1:B6F6 C3 A8 B3 D1     jp i6502NextLoad
  511 D1:B6FA -  -  -  -  
  512 D1:B6FA -  -  -  -  ;zeropage	LDA oper	A5	2	3
  513 D1:B6FA -  -  -  -  inst6502_lda_zp:
  514 D1:B6FA 7E -  -  -      ld  a,(hl)
  515 D1:B6FB 01 00 38 D0     ld  bc,ZEROPAGE
  516 D1:B6FF 81 -  -  -      add a,c
  517 D1:B700 4F -  -  -      ld  c,a
  518 D1:B701 0A -  -  -      ld  a,(bc)
  519 D1:B702 DD 77 00 -      ld  (ix+REGA),a
  520 D1:B705 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  521 D1:B719 ED 33 03 -      ADDCYC(3)
  522 D1:B71C C3 A8 B3 D1     jp i6502NextLoad
  523 D1:B720 -  -  -  -  
  524 D1:B720 -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  525 D1:B720 -  -  -  -  inst6502_lda_zpx:
  526 D1:B720 7E -  -  -      ld  a,(hl)
  527 D1:B721 01 00 38 D0     ld  bc,ZEROPAGE
  528 D1:B725 81 -  -  -      add a,c
  529 D1:B726 DD 86 01 -      add a,(ix+REGX)
  530 D1:B729 4F -  -  -      ld  c,a
  531 D1:B72A 0A -  -  -      ld  a,(bc)
  532 D1:B72B DD 77 00 -      ld  (ix+REGA),a
  533 D1:B72E DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  534 D1:B742 ED 33 04 -      ADDCYC(4)
  535 D1:B745 C3 A8 B3 D1     jp i6502NextLoad
  536 D1:B749 -  -  -  -  
  537 D1:B749 -  -  -  -  ;absolute	LDA oper	AD	3	4
  538 D1:B749 -  -  -  -  inst6502_lda_abs:
  539 D1:B749 CD 1D B6 D1     call subroutine6502_abs_split_start
  540 D1:B74D E5 -  -  -      push hl
  541 D1:B74E 50 -  -  -          ld  d,b
  542 D1:B74F 79 -  -  -          ld  a,c
  543 D1:B750 0E 08 -  -          ld  c,BASETABLE_STRIDE
  544 D1:B752 ED 4C -  -          mlt bc
  545 D1:B754 21 00 40 D0         ld  hl,PAGETABLE
  546 D1:B758 09 -  -  -          add hl,bc
  547 D1:B759 ED 27 -  -          ld  hl,(hl)
  548 D1:B75B 06 00 -  -          ld  b,0
  549 D1:B75D 4F -  -  -          ld  c,a
  550 D1:B75E 09 -  -  -          add hl,bc   ;full address
  551 D1:B75F 7E -  -  -          READ_ACCESS
  552 D1:B760 DD 77 00 -          ld (ix+REGA),a
  553 D1:B763 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  554 D1:B777 ED 33 04 -          ADDCYC(4)
  555 D1:B77A E1 -  -  -      pop hl
  556 D1:B77B C3 A8 B3 D1     jp i6502NextLoad
  557 D1:B77F -  -  -  -  
  558 D1:B77F -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  559 D1:B77F -  -  -  -  inst6502_lda_absx:
  560 D1:B77F CD 1D B6 D1     call subroutine6502_abs_split_start
  561 D1:B783 E5 -  -  -      push hl
  562 D1:B784 50 -  -  -          ld  d,b
  563 D1:B785 79 -  -  -          ld  a,c
  564 D1:B786 0E 08 -  -          ld  c,BASETABLE_STRIDE
  565 D1:B788 ED 4C -  -          mlt bc
  566 D1:B78A 21 00 40 D0         ld  hl,PAGETABLE
  567 D1:B78E 09 -  -  -          add hl,bc
  568 D1:B78F ED 27 -  -          ld  hl,(hl)
  569 D1:B791 06 00 -  -          ld  b,0
  570 D1:B793 DD 86 01 -          add a,(ix+REGX)
  571 D1:B796 4F -  -  -          ld  c,a
  572 D1:B797 30 04 -  -          jr  nc,+_
  573 D1:B799 FD 23 -  -          ADDCYC(1)
  574 D1:B79B 04 -  -  -          inc b
  575 D1:B79C 14 -  -  -          inc d
  576 D1:B79D 09 -  -  -  _:      add hl,bc   ;full address
  577 D1:B79E 7E -  -  -          READ_ACCESS
  578 D1:B79F DD 77 00 -          ld (ix+REGA),a
  579 D1:B7A2 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  580 D1:B7B6 ED 33 04 -          ADDCYC(4)
  581 D1:B7B9 E1 -  -  -      pop hl
  582 D1:B7BA C3 A8 B3 D1     jp i6502NextLoad
  583 D1:B7BE -  -  -  -  
  584 D1:B7BE -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  585 D1:B7BE -  -  -  -  inst6502_lda_absy:
  586 D1:B7BE CD 1D B6 D1     call subroutine6502_abs_split_start
  587 D1:B7C2 E5 -  -  -      push hl
  588 D1:B7C3 50 -  -  -          ld  d,b
  589 D1:B7C4 79 -  -  -          ld  a,c
  590 D1:B7C5 0E 08 -  -          ld  c,BASETABLE_STRIDE
  591 D1:B7C7 ED 4C -  -          mlt bc
  592 D1:B7C9 21 00 40 D0         ld  hl,PAGETABLE
  593 D1:B7CD 09 -  -  -          add hl,bc
  594 D1:B7CE ED 27 -  -          ld  hl,(hl)
  595 D1:B7D0 06 00 -  -          ld  b,0
  596 D1:B7D2 DD 86 02 -          add a,(ix+REGY)
  597 D1:B7D5 4F -  -  -          ld  c,a
  598 D1:B7D6 30 04 -  -          jr  nc,+_
  599 D1:B7D8 FD 23 -  -          ADDCYC(1)
  600 D1:B7DA 04 -  -  -          inc b
  601 D1:B7DB 14 -  -  -          inc d
  602 D1:B7DC 09 -  -  -  _:      add hl,bc   ;full address
  603 D1:B7DD 7E -  -  -          READ_ACCESS
  604 D1:B7DE DD 77 00 -          ld (ix+REGA),a
  605 D1:B7E1 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  606 D1:B7F5 ED 33 04 -          ADDCYC(4)
  607 D1:B7F8 E1 -  -  -      pop hl
  608 D1:B7F9 C3 A8 B3 D1     jp i6502NextLoad
  609 D1:B7FD -  -  -  -  
  610 D1:B7FD -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  611 D1:B7FD -  -  -  -  inst6502_lda_indx:
  612 D1:B7FD E5 -  -  -      push hl
  613 D1:B7FE 7E -  -  -          ld  a,(hl)
  614 D1:B7FF 21 00 38 D0         ld  hl,ZEROPAGE
  615 D1:B803 85 -  -  -          add a,L
  616 D1:B804 DD 86 01 -          add a,(ix+REGX)
  617 D1:B807 6F -  -  -          ld  L,a
  618 D1:B808 7E -  -  -          ld  a,(hl)
  619 D1:B809 2C -  -  -          inc L
  620 D1:B80A 56 -  -  -          ld  d,(hl)
  621 D1:B80B 42 -  -  -          ld  b,d
  622 D1:B80C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  623 D1:B80E ED 4C -  -          mlt bc
  624 D1:B810 21 00 40 D0         ld  hl,PAGETABLE
  625 D1:B814 09 -  -  -          add hl,bc
  626 D1:B815 ED 27 -  -          ld  hl,(hl)
  627 D1:B817 06 00 -  -          ld  b,0
  628 D1:B819 4F -  -  -          ld  c,a
  629 D1:B81A 09 -  -  -          add hl,bc
  630 D1:B81B 7E -  -  -          READ_ACCESS
  631 D1:B81C DD 77 00 -          ld (ix+REGA),a
  632 D1:B81F DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  633 D1:B833 ED 33 06 -          ADDCYC(6)
  634 D1:B836 E1 -  -  -      pop hl
  635 D1:B837 C3 A8 B3 D1     jp i6502NextLoad
  636 D1:B83B -  -  -  -  
  637 D1:B83B -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  638 D1:B83B -  -  -  -  inst6502_lda_indy:
  639 D1:B83B E5 -  -  -      push hl
  640 D1:B83C 7E -  -  -          ld  a,(hl)
  641 D1:B83D 21 00 38 D0         ld  hl,ZEROPAGE
  642 D1:B841 85 -  -  -          add a,L
  643 D1:B842 6F -  -  -          ld  L,a
  644 D1:B843 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  645 D1:B844 2C -  -  -          inc L
  646 D1:B845 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  647 D1:B848 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  648 D1:B849 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  649 D1:B84B FD 23 -  -          ADDCYC(1)
  650 D1:B84D 24 -  -  -          inc h
  651 D1:B84E 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  652 D1:B84F 2E 08 -  -          ld  L,BASETABLE_STRIDE
  653 D1:B851 ED 6C -  -          mlt hl          ;23.
  654 D1:B853 01 00 40 D0         ld  bc,PAGETABLE
  655 D1:B857 09 -  -  -          add hl,bc
  656 D1:B858 ED 27 -  -          ld  hl,(hl)     ;address get.
  657 D1:B85A 01 00 00 00         ld  bc,0
  658 D1:B85E 4F -  -  -          ld  c,a
  659 D1:B85F 09 -  -  -          add hl,bc       ;Full address get.
  660 D1:B860 7E -  -  -          READ_ACCESS
  661 D1:B861 DD 77 00 -          ld  (ix+REGA),a
  662 D1:B864 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  663 D1:B878 ED 33 05 -          ADDCYC(5)
  664 D1:B87B E1 -  -  -      pop hl
  665 D1:B87C C3 A8 B3 D1     jp i6502NextLoad
  666 D1:B880 -  -  -  -  
  667 D1:B880 -  -  -  -  ;-----------------------------------------------------------------------------
  668 D1:B880 -  -  -  -  ;LDX - Load Index X with Memory
  669 D1:B880 -  -  -  -  ;    M -> X
  670 D1:B880 -  -  -  -  ;    N	Z	C	I	D	V
  671 D1:B880 -  -  -  -  ;    +	+	-	-	-	-
  672 D1:B880 -  -  -  -  
  673 D1:B880 -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  674 D1:B880 -  -  -  -  inst6502_ldx_imm:
  675 D1:B880 7E -  -  -      ld  a,(hl)
  676 D1:B881 DD 77 01 -      ld  (ix+REGX),a
  677 D1:B884 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  678 D1:B898 ED 33 02 -      ADDCYC(2)
  679 D1:B89B C3 A8 B3 D1     jp i6502NextLoad
  680 D1:B89F -  -  -  -  
  681 D1:B89F -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  682 D1:B89F -  -  -  -  inst6502_ldx_zp:
  683 D1:B89F 7E -  -  -      ld  a,(hl)
  684 D1:B8A0 01 00 38 D0     ld  bc,ZEROPAGE
  685 D1:B8A4 81 -  -  -      add a,c
  686 D1:B8A5 4F -  -  -      ld  c,a
  687 D1:B8A6 0A -  -  -      ld  a,(bc)
  688 D1:B8A7 DD 77 01 -      ld  (ix+REGX),a
  689 D1:B8AA DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  690 D1:B8BE ED 33 03 -      ADDCYC(3)
  691 D1:B8C1 C3 A8 B3 D1     jp i6502NextLoad
  692 D1:B8C5 -  -  -  -  
  693 D1:B8C5 -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  694 D1:B8C5 -  -  -  -  inst6502_ldx_zpy:
  695 D1:B8C5 7E -  -  -      ld  a,(hl)
  696 D1:B8C6 01 00 38 D0     ld  bc,ZEROPAGE
  697 D1:B8CA 81 -  -  -      add a,c
  698 D1:B8CB DD 86 02 -      add a,(ix+REGY)
  699 D1:B8CE 4F -  -  -      ld  c,a
  700 D1:B8CF 0A -  -  -      ld  a,(bc)
  701 D1:B8D0 DD 77 01 -      ld  (ix+REGX),a
  702 D1:B8D3 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  703 D1:B8E7 ED 33 04 -      ADDCYC(4)
  704 D1:B8EA C3 A8 B3 D1     jp i6502NextLoad
  705 D1:B8EE -  -  -  -  
  706 D1:B8EE -  -  -  -  ;absolute	LDX oper	AE	3	4  
  707 D1:B8EE -  -  -  -  inst6502_ldx_abs:
  708 D1:B8EE CD 1D B6 D1     call subroutine6502_abs_split_start
  709 D1:B8F2 E5 -  -  -      push hl
  710 D1:B8F3 50 -  -  -          ld  d,b
  711 D1:B8F4 79 -  -  -          ld  a,c
  712 D1:B8F5 0E 08 -  -          ld  c,BASETABLE_STRIDE
  713 D1:B8F7 ED 4C -  -          mlt bc
  714 D1:B8F9 21 00 40 D0         ld  hl,PAGETABLE
  715 D1:B8FD 09 -  -  -          add hl,bc
  716 D1:B8FE ED 27 -  -          ld  hl,(hl)
  717 D1:B900 06 00 -  -          ld  b,0
  718 D1:B902 4F -  -  -          ld  c,a
  719 D1:B903 09 -  -  -          add hl,bc   ;full address
  720 D1:B904 7E -  -  -          READ_ACCESS
  721 D1:B905 DD 77 01 -          ld (ix+REGX),a
  722 D1:B908 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  723 D1:B91C ED 33 04 -          ADDCYC(4)
  724 D1:B91F E1 -  -  -      pop hl
  725 D1:B920 C3 A8 B3 D1     jp i6502NextLoad
  726 D1:B924 -  -  -  -  
  727 D1:B924 -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  728 D1:B924 -  -  -  -  inst6502_ldx_absy:
  729 D1:B924 CD 1D B6 D1     call subroutine6502_abs_split_start
  730 D1:B928 E5 -  -  -      push hl
  731 D1:B929 50 -  -  -          ld  d,b
  732 D1:B92A 79 -  -  -          ld  a,c
  733 D1:B92B 0E 08 -  -          ld  c,BASETABLE_STRIDE
  734 D1:B92D ED 4C -  -          mlt bc
  735 D1:B92F 21 00 40 D0         ld  hl,PAGETABLE
  736 D1:B933 09 -  -  -          add hl,bc
  737 D1:B934 ED 27 -  -          ld  hl,(hl)
  738 D1:B936 06 00 -  -          ld  b,0
  739 D1:B938 DD 86 02 -          add a,(ix+REGY)
  740 D1:B93B 4F -  -  -          ld  c,a
  741 D1:B93C 30 04 -  -          jr  nc,+_
  742 D1:B93E FD 23 -  -          ADDCYC(1)
  743 D1:B940 04 -  -  -          inc b
  744 D1:B941 14 -  -  -          inc d
  745 D1:B942 09 -  -  -  _:      add hl,bc   ;full address
  746 D1:B943 7E -  -  -          READ_ACCESS
  747 D1:B944 DD 77 01 -          ld (ix+REGX),a
  748 D1:B947 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  749 D1:B95B ED 33 04 -          ADDCYC(4)
  750 D1:B95E E1 -  -  -      pop hl
  751 D1:B95F C3 A8 B3 D1     jp i6502NextLoad
  752 D1:B963 -  -  -  -  
  753 D1:B963 -  -  -  -  ;-----------------------------------------------------------------------------
  754 D1:B963 -  -  -  -  ;LDY -  Load Index Y with Memory
  755 D1:B963 -  -  -  -  ;    M -> Y
  756 D1:B963 -  -  -  -  ;    N	Z	C	I	D	V
  757 D1:B963 -  -  -  -  ;    +	+	-	-	-	-
  758 D1:B963 -  -  -  -  
  759 D1:B963 -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  760 D1:B963 -  -  -  -  inst6502_ldy_imm:
  761 D1:B963 7E -  -  -      ld  a,(hl)
  762 D1:B964 DD 77 02 -      ld  (ix+REGY),a
  763 D1:B967 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  764 D1:B97B ED 33 02 -      ADDCYC(2)
  765 D1:B97E C3 A8 B3 D1     jp i6502NextLoad
  766 D1:B982 -  -  -  -  
  767 D1:B982 -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  768 D1:B982 -  -  -  -  inst6502_ldy_zp:
  769 D1:B982 7E -  -  -      ld  a,(hl)
  770 D1:B983 01 00 38 D0     ld  bc,ZEROPAGE
  771 D1:B987 81 -  -  -      add a,c
  772 D1:B988 4F -  -  -      ld  c,a
  773 D1:B989 0A -  -  -      ld  a,(bc)
  774 D1:B98A DD 77 02 -      ld  (ix+REGY),a
  775 D1:B98D DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  776 D1:B9A1 ED 33 03 -      ADDCYC(3)
  777 D1:B9A4 C3 A8 B3 D1     jp i6502NextLoad
  778 D1:B9A8 -  -  -  -  
  779 D1:B9A8 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  780 D1:B9A8 -  -  -  -  inst6502_ldy_zpx:
  781 D1:B9A8 7E -  -  -      ld  a,(hl)
  782 D1:B9A9 01 00 38 D0     ld  bc,ZEROPAGE
  783 D1:B9AD 81 -  -  -      add a,c
  784 D1:B9AE DD 86 01 -      add a,(ix+REGX)
  785 D1:B9B1 4F -  -  -      ld  c,a
  786 D1:B9B2 0A -  -  -      ld  a,(bc)
  787 D1:B9B3 DD 77 02 -      ld  (ix+REGY),a
  788 D1:B9B6 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  789 D1:B9CA ED 33 04 -      ADDCYC(4)
  790 D1:B9CD C3 A8 B3 D1     jp i6502NextLoad
  791 D1:B9D1 -  -  -  -  
  792 D1:B9D1 -  -  -  -  ;absolute	LDY oper	AC	3	4  
  793 D1:B9D1 -  -  -  -  inst6502_ldy_abs:
  794 D1:B9D1 CD 1D B6 D1     call subroutine6502_abs_split_start
  795 D1:B9D5 E5 -  -  -      push hl
  796 D1:B9D6 50 -  -  -          ld  d,b
  797 D1:B9D7 79 -  -  -          ld  a,c
  798 D1:B9D8 0E 08 -  -          ld  c,BASETABLE_STRIDE
  799 D1:B9DA ED 4C -  -          mlt bc
  800 D1:B9DC 21 00 40 D0         ld  hl,PAGETABLE
  801 D1:B9E0 09 -  -  -          add hl,bc
  802 D1:B9E1 ED 27 -  -          ld  hl,(hl)
  803 D1:B9E3 06 00 -  -          ld  b,0
  804 D1:B9E5 4F -  -  -          ld  c,a
  805 D1:B9E6 09 -  -  -          add hl,bc   ;full address
  806 D1:B9E7 7E -  -  -          READ_ACCESS
  807 D1:B9E8 DD 77 02 -          ld (ix+REGY),a
  808 D1:B9EB DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  809 D1:B9FF ED 33 04 -          ADDCYC(4)
  810 D1:BA02 E1 -  -  -      pop hl
  811 D1:BA03 C3 A8 B3 D1     jp i6502NextLoad
  812 D1:BA07 -  -  -  -  
  813 D1:BA07 -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  814 D1:BA07 -  -  -  -  inst6502_ldy_absx:
  815 D1:BA07 CD 1D B6 D1     call subroutine6502_abs_split_start
  816 D1:BA0B E5 -  -  -      push hl
  817 D1:BA0C 50 -  -  -          ld  d,b
  818 D1:BA0D 79 -  -  -          ld  a,c
  819 D1:BA0E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  820 D1:BA10 ED 4C -  -          mlt bc
  821 D1:BA12 21 00 40 D0         ld  hl,PAGETABLE
  822 D1:BA16 09 -  -  -          add hl,bc
  823 D1:BA17 ED 27 -  -          ld  hl,(hl)
  824 D1:BA19 06 00 -  -          ld  b,0
  825 D1:BA1B DD 86 01 -          add a,(ix+REGX)
  826 D1:BA1E 4F -  -  -          ld  c,a
  827 D1:BA1F 30 04 -  -          jr  nc,+_
  828 D1:BA21 FD 23 -  -          ADDCYC(1)
  829 D1:BA23 04 -  -  -          inc b
  830 D1:BA24 14 -  -  -          inc d
  831 D1:BA25 09 -  -  -  _:      add hl,bc   ;full address
  832 D1:BA26 7E -  -  -          READ_ACCESS
  833 D1:BA27 DD 77 02 -          ld (ix+REGY),a
  834 D1:BA2A DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  835 D1:BA3E ED 33 04 -          ADDCYC(4)
  836 D1:BA41 E1 -  -  -      pop hl
  837 D1:BA42 C3 A8 B3 D1     jp i6502NextLoad
  838 D1:BA46 -  -  -  -  
  839 D1:BA46 -  -  -  -  ;-----------------------------------------------------------------------------
  840 D1:BA46 -  -  -  -  ;STA - Store Accumulator in Memory
  841 D1:BA46 -  -  -  -  ;    A -> M
  842 D1:BA46 -  -  -  -  ;    N	Z	C	I	D	V
  843 D1:BA46 -  -  -  -  ;    -	-	-	-	-	-
  844 D1:BA46 -  -  -  -  
  845 D1:BA46 -  -  -  -  ;zeropage	STA oper	85	2	3  
  846 D1:BA46 -  -  -  -  inst6502_sta_zp:
  847 D1:BA46 7E -  -  -      ld  a,(hl)
  848 D1:BA47 01 00 38 D0     ld  bc,ZEROPAGE
  849 D1:BA4B 81 -  -  -      add a,c
  850 D1:BA4C 4F -  -  -      ld  c,a
  851 D1:BA4D DD 7E 00 -      ld  a,(ix+REGA)
  852 D1:BA50 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  853 D1:BA51 ED 33 03 -      ADDCYC(3)
  854 D1:BA54 C3 A8 B3 D1     jp i6502NextLoad
  855 D1:BA58 -  -  -  -  
  856 D1:BA58 -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  857 D1:BA58 -  -  -  -  inst6502_sta_zpx:
  858 D1:BA58 7E -  -  -      ld  a,(hl)
  859 D1:BA59 01 00 38 D0     ld  bc,ZEROPAGE
  860 D1:BA5D 81 -  -  -      add a,c
  861 D1:BA5E DD 86 01 -      add a,(ix+REGX)
  862 D1:BA61 4F -  -  -      ld  c,a
  863 D1:BA62 DD 7E 00 -      ld  a,(ix+REGA)
  864 D1:BA65 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  865 D1:BA66 ED 33 04 -      ADDCYC(4)
  866 D1:BA69 C3 A8 B3 D1     jp i6502NextLoad
  867 D1:BA6D -  -  -  -  
  868 D1:BA6D -  -  -  -  ;absolute	STA oper	8D	3	4
  869 D1:BA6D -  -  -  -  inst6502_sta_abs:
  870 D1:BA6D CD 1D B6 D1     call subroutine6502_abs_split_start
  871 D1:BA71 E5 -  -  -      push hl
  872 D1:BA72 50 -  -  -          ld  d,b
  873 D1:BA73 79 -  -  -          ld  a,c
  874 D1:BA74 0E 08 -  -          ld  c,BASETABLE_STRIDE
  875 D1:BA76 ED 4C -  -          mlt bc
  876 D1:BA78 21 00 40 D0         ld  hl,PAGETABLE
  877 D1:BA7C 09 -  -  -          add hl,bc
  878 D1:BA7D ED 27 -  -          ld  hl,(hl)
  879 D1:BA7F 06 00 -  -          ld  b,0
  880 D1:BA81 4F -  -  -          ld  c,a
  881 D1:BA82 09 -  -  -          add hl,bc   ;full address
  882 D1:BA83 DD 46 00 -          ld  b,(ix+REGA)
  883 D1:BA86 70 -  -  -          WRITE_ACCESS
  884 D1:BA87 ED 33 04 -          ADDCYC(4)
  885 D1:BA8A E1 -  -  -      pop hl
  886 D1:BA8B C3 A8 B3 D1     jp i6502NextLoad
  887 D1:BA8F -  -  -  -  
  888 D1:BA8F -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  889 D1:BA8F -  -  -  -  inst6502_sta_absx:
  890 D1:BA8F CD 1D B6 D1     call subroutine6502_abs_split_start
  891 D1:BA93 E5 -  -  -      push hl
  892 D1:BA94 50 -  -  -          ld  d,b
  893 D1:BA95 79 -  -  -          ld  a,c
  894 D1:BA96 0E 08 -  -          ld  c,BASETABLE_STRIDE
  895 D1:BA98 ED 4C -  -          mlt bc
  896 D1:BA9A 21 00 40 D0         ld  hl,PAGETABLE
  897 D1:BA9E 09 -  -  -          add hl,bc
  898 D1:BA9F ED 27 -  -          ld  hl,(hl)
  899 D1:BAA1 06 00 -  -          ld  b,0
  900 D1:BAA3 DD 86 01 -          add a,(ix+REGX)
  901 D1:BAA6 4F -  -  -          ld  c,a
  902 D1:BAA7 30 02 -  -          jr  nc,+_
  903 D1:BAA9 04 -  -  -          inc b
  904 D1:BAAA 14 -  -  -          inc d
  905 D1:BAAB 09 -  -  -  _:      add hl,bc   ;full address
  906 D1:BAAC DD 46 00 -          ld  b,(ix+REGA)
  907 D1:BAAF 70 -  -  -          WRITE_ACCESS
  908 D1:BAB0 ED 33 05 -          ADDCYC(5)
  909 D1:BAB3 E1 -  -  -      pop hl
  910 D1:BAB4 C3 A8 B3 D1     jp i6502NextLoad
  911 D1:BAB8 -  -  -  -  
  912 D1:BAB8 -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  913 D1:BAB8 -  -  -  -  inst6502_sta_absy:
  914 D1:BAB8 CD 1D B6 D1     call subroutine6502_abs_split_start
  915 D1:BABC E5 -  -  -      push hl
  916 D1:BABD 50 -  -  -          ld  d,b
  917 D1:BABE 79 -  -  -          ld  a,c
  918 D1:BABF 0E 08 -  -          ld  c,BASETABLE_STRIDE
  919 D1:BAC1 ED 4C -  -          mlt bc
  920 D1:BAC3 21 00 40 D0         ld  hl,PAGETABLE
  921 D1:BAC7 09 -  -  -          add hl,bc
  922 D1:BAC8 ED 27 -  -          ld  hl,(hl)
  923 D1:BACA 06 00 -  -          ld  b,0
  924 D1:BACC DD 86 02 -          add a,(ix+REGY)
  925 D1:BACF 4F -  -  -          ld  c,a
  926 D1:BAD0 30 02 -  -          jr  nc,+_
  927 D1:BAD2 04 -  -  -          inc b
  928 D1:BAD3 14 -  -  -          inc d
  929 D1:BAD4 09 -  -  -  _:      add hl,bc   ;full address
  930 D1:BAD5 DD 46 00 -          ld  b,(ix+REGA)
  931 D1:BAD8 70 -  -  -          WRITE_ACCESS
  932 D1:BAD9 ED 33 05 -          ADDCYC(5)
  933 D1:BADC E1 -  -  -      pop hl
  934 D1:BADD C3 A8 B3 D1     jp i6502NextLoad
  935 D1:BAE1 -  -  -  -  
  936 D1:BAE1 -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  937 D1:BAE1 -  -  -  -  inst6502_sta_indx:
  938 D1:BAE1 E5 -  -  -      push hl
  939 D1:BAE2 7E -  -  -          ld  a,(hl)
  940 D1:BAE3 21 00 38 D0         ld  hl,ZEROPAGE
  941 D1:BAE7 85 -  -  -          add a,L
  942 D1:BAE8 DD 86 01 -          add a,(ix+REGX)
  943 D1:BAEB 6F -  -  -          ld  L,a
  944 D1:BAEC 7E -  -  -          ld  a,(hl)
  945 D1:BAED 2C -  -  -          inc L
  946 D1:BAEE 56 -  -  -          ld  d,(hl)
  947 D1:BAEF 42 -  -  -          ld  b,d
  948 D1:BAF0 0E 08 -  -          ld  c,BASETABLE_STRIDE
  949 D1:BAF2 ED 4C -  -          mlt bc
  950 D1:BAF4 21 00 40 D0         ld  hl,PAGETABLE
  951 D1:BAF8 09 -  -  -          add hl,bc
  952 D1:BAF9 ED 27 -  -          ld  hl,(hl)
  953 D1:BAFB 06 00 -  -          ld  b,0
  954 D1:BAFD 4F -  -  -          ld  c,a
  955 D1:BAFE 09 -  -  -          add hl,bc
  956 D1:BAFF DD 46 00 -          ld  b,(ix+REGA)
  957 D1:BB02 70 -  -  -          WRITE_ACCESS
  958 D1:BB03 ED 33 06 -          ADDCYC(6)
  959 D1:BB06 E1 -  -  -      pop hl
  960 D1:BB07 C3 A8 B3 D1     jp i6502NextLoad
  961 D1:BB0B -  -  -  -  
  962 D1:BB0B -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  963 D1:BB0B -  -  -  -  inst6502_sta_indy:
  964 D1:BB0B E5 -  -  -      push hl
  965 D1:BB0C 7E -  -  -          ld  a,(hl)
  966 D1:BB0D 21 00 38 D0         ld  hl,ZEROPAGE
  967 D1:BB11 85 -  -  -          add a,L
  968 D1:BB12 6F -  -  -          ld  L,a
  969 D1:BB13 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  970 D1:BB14 2C -  -  -          inc L
  971 D1:BB15 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  972 D1:BB18 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  973 D1:BB19 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  974 D1:BB1B 24 -  -  -          inc h
  975 D1:BB1C 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  976 D1:BB1D 2E 08 -  -          ld  L,BASETABLE_STRIDE
  977 D1:BB1F ED 6C -  -          mlt hl          ;23.
  978 D1:BB21 01 00 40 D0         ld  bc,PAGETABLE
  979 D1:BB25 09 -  -  -          add hl,bc
  980 D1:BB26 ED 27 -  -          ld  hl,(hl)     ;address get.
  981 D1:BB28 01 00 00 00         ld  bc,0
  982 D1:BB2C 4F -  -  -          ld  c,a
  983 D1:BB2D 09 -  -  -          add hl,bc       ;Full address get.
  984 D1:BB2E DD 46 00 -          ld  b,(ix+REGA)
  985 D1:BB31 70 -  -  -          WRITE_ACCESS
  986 D1:BB32 ED 33 06 -          ADDCYC(6)
  987 D1:BB35 E1 -  -  -      pop hl
  988 D1:BB36 C3 A8 B3 D1     jp i6502NextLoad
  989 D1:BB3A -  -  -  -  
  990 D1:BB3A -  -  -  -  ;-----------------------------------------------------------------------------
  991 D1:BB3A -  -  -  -  ;STX - Store Index X in Memory
  992 D1:BB3A -  -  -  -  ;    X -> M
  993 D1:BB3A -  -  -  -  ;    N	Z	C	I	D	V
  994 D1:BB3A -  -  -  -  ;    -	-	-	-	-	-
  995 D1:BB3A -  -  -  -  
  996 D1:BB3A -  -  -  -  ;zeropage	STX oper	86	2	3  
  997 D1:BB3A -  -  -  -  inst6502_stx_zp:
  998 D1:BB3A 7E -  -  -      ld  a,(hl)
  999 D1:BB3B 01 00 38 D0     ld  bc,ZEROPAGE
 1000 D1:BB3F 81 -  -  -      add a,c
 1001 D1:BB40 4F -  -  -      ld  c,a
 1002 D1:BB41 DD 7E 01 -      ld  a,(ix+REGX)
 1003 D1:BB44 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1004 D1:BB45 ED 33 03 -      ADDCYC(3)
 1005 D1:BB48 C3 A8 B3 D1     jp i6502NextLoad
 1006 D1:BB4C -  -  -  -  
 1007 D1:BB4C -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
 1008 D1:BB4C -  -  -  -  inst6502_stx_zpy:
 1009 D1:BB4C 7E -  -  -      ld  a,(hl)
 1010 D1:BB4D 01 00 38 D0     ld  bc,ZEROPAGE
 1011 D1:BB51 81 -  -  -      add a,c
 1012 D1:BB52 DD 86 02 -      add a,(ix+REGY)
 1013 D1:BB55 4F -  -  -      ld  c,a
 1014 D1:BB56 DD 7E 01 -      ld  a,(ix+REGX)
 1015 D1:BB59 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1016 D1:BB5A ED 33 04 -      ADDCYC(4)
 1017 D1:BB5D C3 A8 B3 D1     jp i6502NextLoad
 1018 D1:BB61 -  -  -  -  
 1019 D1:BB61 -  -  -  -  ;absolute	STX oper	8E	3	4  
 1020 D1:BB61 -  -  -  -  inst6502_stx_abs:
 1021 D1:BB61 CD 1D B6 D1     call subroutine6502_abs_split_start
 1022 D1:BB65 E5 -  -  -      push hl
 1023 D1:BB66 50 -  -  -          ld  d,b
 1024 D1:BB67 79 -  -  -          ld  a,c
 1025 D1:BB68 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1026 D1:BB6A ED 4C -  -          mlt bc
 1027 D1:BB6C 21 00 40 D0         ld  hl,PAGETABLE
 1028 D1:BB70 09 -  -  -          add hl,bc
 1029 D1:BB71 ED 27 -  -          ld  hl,(hl)
 1030 D1:BB73 06 00 -  -          ld  b,0
 1031 D1:BB75 4F -  -  -          ld  c,a
 1032 D1:BB76 09 -  -  -          add hl,bc   ;full address
 1033 D1:BB77 DD 46 01 -          ld  b,(ix+REGX)
 1034 D1:BB7A 70 -  -  -          WRITE_ACCESS
 1035 D1:BB7B ED 33 04 -          ADDCYC(4)
 1036 D1:BB7E E1 -  -  -      pop hl
 1037 D1:BB7F C3 A8 B3 D1     jp i6502NextLoad
 1038 D1:BB83 -  -  -  -  
 1039 D1:BB83 -  -  -  -  ;-----------------------------------------------------------------------------
 1040 D1:BB83 -  -  -  -  ;STY - Store Index Y in Memory
 1041 D1:BB83 -  -  -  -  ;    Y -> M
 1042 D1:BB83 -  -  -  -  ;    N	Z	C	I	D	V
 1043 D1:BB83 -  -  -  -  ;    -	-	-	-	-	-
 1044 D1:BB83 -  -  -  -  
 1045 D1:BB83 -  -  -  -  ;zeropage	STY oper	84	2	3  
 1046 D1:BB83 -  -  -  -  inst6502_sty_zp:
 1047 D1:BB83 7E -  -  -      ld  a,(hl)
 1048 D1:BB84 01 00 38 D0     ld  bc,ZEROPAGE
 1049 D1:BB88 81 -  -  -      add a,c
 1050 D1:BB89 4F -  -  -      ld  c,a
 1051 D1:BB8A DD 7E 02 -      ld  a,(ix+REGY)
 1052 D1:BB8D 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1053 D1:BB8E ED 33 03 -      ADDCYC(3)
 1054 D1:BB91 C3 A8 B3 D1     jp i6502NextLoad
 1055 D1:BB95 -  -  -  -  
 1056 D1:BB95 -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1057 D1:BB95 -  -  -  -  inst6502_sty_zpx:
 1058 D1:BB95 7E -  -  -      ld  a,(hl)
 1059 D1:BB96 01 00 38 D0     ld  bc,ZEROPAGE
 1060 D1:BB9A 81 -  -  -      add a,c
 1061 D1:BB9B DD 86 01 -      add a,(ix+REGX)
 1062 D1:BB9E 4F -  -  -      ld  c,a
 1063 D1:BB9F DD 7E 02 -      ld  a,(ix+REGY)
 1064 D1:BBA2 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1065 D1:BBA3 ED 33 04 -      ADDCYC(4)
 1066 D1:BBA6 C3 A8 B3 D1     jp i6502NextLoad
 1067 D1:BBAA -  -  -  -  
 1068 D1:BBAA -  -  -  -  ;absolute	STY oper	8C	3	4  
 1069 D1:BBAA -  -  -  -  inst6502_sty_abs:
 1070 D1:BBAA CD 1D B6 D1     call subroutine6502_abs_split_start
 1071 D1:BBAE E5 -  -  -      push hl
 1072 D1:BBAF 50 -  -  -          ld  d,b
 1073 D1:BBB0 79 -  -  -          ld  a,c
 1074 D1:BBB1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1075 D1:BBB3 ED 4C -  -          mlt bc
 1076 D1:BBB5 21 00 40 D0         ld  hl,PAGETABLE
 1077 D1:BBB9 09 -  -  -          add hl,bc
 1078 D1:BBBA ED 27 -  -          ld  hl,(hl)
 1079 D1:BBBC 06 00 -  -          ld  b,0
 1080 D1:BBBE 4F -  -  -          ld  c,a
 1081 D1:BBBF 09 -  -  -          add hl,bc   ;full address
 1082 D1:BBC0 DD 46 02 -          ld  b,(ix+REGY)
 1083 D1:BBC3 70 -  -  -          WRITE_ACCESS
 1084 D1:BBC4 ED 33 04 -          ADDCYC(4)
 1085 D1:BBC7 E1 -  -  -      pop hl
 1086 D1:BBC8 C3 A8 B3 D1     jp i6502NextLoad
 1087 D1:BBCC -  -  -  -  
 1088 D1:BBCC -  -  -  -  ;-----------------------------------------------------------------------------
 1089 D1:BBCC -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1090 D1:BBCC -  -  -  -  ;N	Z	C	I	D	V
 1091 D1:BBCC -  -  -  -  ;+	+	-	-	-	-
 1092 D1:BBCC -  -  -  -  ;implied	TAX	AA	1	2
 1093 D1:BBCC -  -  -  -  inst6502_tax:
 1094 D1:BBCC DD 7E 00 -      ld  a,(ix+REGA)
 1095 D1:BBCF DD 77 01 -      ld  (ix+REGX),a
 1096 D1:BBD2 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1097 D1:BBE6 ED 33 02 -      ADDCYC(2)
 1098 D1:BBE9 C3 C1 B3 D1     jp i6502FinishLoad
 1099 D1:BBED -  -  -  -  
 1100 D1:BBED -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1101 D1:BBED -  -  -  -  ;N	Z	C	I	D	V
 1102 D1:BBED -  -  -  -  ;+	+	-	-	-	-
 1103 D1:BBED -  -  -  -  ;implied	TAY	A8	1	2
 1104 D1:BBED -  -  -  -  inst6502_tay:
 1105 D1:BBED DD 7E 00 -      ld  a,(ix+REGA)
 1106 D1:BBF0 DD 77 02 -      ld  (ix+REGY),a
 1107 D1:BBF3 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1108 D1:BC07 ED 33 02 -      ADDCYC(2)
 1109 D1:BC0A C3 C1 B3 D1     jp i6502FinishLoad
 1110 D1:BC0E -  -  -  -  
 1111 D1:BC0E -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1112 D1:BC0E -  -  -  -  ;N	Z	C	I	D	V
 1113 D1:BC0E -  -  -  -  ;+	+	-	-	-	-
 1114 D1:BC0E -  -  -  -  ;implied	TSX	BA	1	2
 1115 D1:BC0E -  -  -  -  inst6502_tsx:
 1116 D1:BC0E DD 7E 03 -      ld  a,(ix+REGSP)
 1117 D1:BC11 DD 77 01 -      ld  (ix+REGX),a
 1118 D1:BC14 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1119 D1:BC28 ED 33 02 -      ADDCYC(2)
 1120 D1:BC2B C3 C1 B3 D1     jp i6502FinishLoad
 1121 D1:BC2F -  -  -  -  
 1122 D1:BC2F -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1123 D1:BC2F -  -  -  -  ;N	Z	C	I	D	V
 1124 D1:BC2F -  -  -  -  ;+	+	-	-	-	-
 1125 D1:BC2F -  -  -  -  ;implied	TXA	8A	1	2
 1126 D1:BC2F -  -  -  -  inst6502_txa:
 1127 D1:BC2F DD 7E 01 -      ld  a,(ix+REGX)
 1128 D1:BC32 DD 77 00 -      ld  (ix+REGA),a
 1129 D1:BC35 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1130 D1:BC49 ED 33 02 -      ADDCYC(2)
 1131 D1:BC4C C3 C1 B3 D1     jp i6502FinishLoad
 1132 D1:BC50 -  -  -  -  
 1133 D1:BC50 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1134 D1:BC50 -  -  -  -  ;N	Z	C	I	D	V
 1135 D1:BC50 -  -  -  -  ;-	-	-	-	-	-
 1136 D1:BC50 -  -  -  -  ;implied	TXS	9A	1	2
 1137 D1:BC50 -  -  -  -  inst6502_txs:
 1138 D1:BC50 DD 7E 01 -      ld  a,(ix+REGX)
 1139 D1:BC53 DD 77 03 -      ld  (ix+REGSP),a
 1140 D1:BC56 ED 33 02 -      ADDCYC(2)
 1141 D1:BC59 C3 C1 B3 D1     jp i6502FinishLoad
 1142 D1:BC5D -  -  -  -  
 1143 D1:BC5D -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1144 D1:BC5D -  -  -  -  ;N	Z	C	I	D	V
 1145 D1:BC5D -  -  -  -  ;+	+	-	-	-	-
 1146 D1:BC5D -  -  -  -  ;implied	TYA	98	1	2
 1147 D1:BC5D -  -  -  -  inst6502_tya:
 1148 D1:BC5D DD 7E 02 -      ld  a,(ix+REGY)
 1149 D1:BC60 DD 77 00 -      ld  (ix+REGA),a
 1150 D1:BC63 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1151 D1:BC77 ED 33 02 -      ADDCYC(2)
 1152 D1:BC7A C3 C1 B3 D1     jp i6502FinishLoad
 1153 D1:BC7E -  -  -  -  
 1154 D1:BC7E -  -  -  -  ;-----------------------------------------------------------------------------
 1155 D1:BC7E -  -  -  -  ;-----------------------------------------------------------------------------
 1156 D1:BC7E -  -  -  -  ;-----------------------------------------------------------------------------
 1157 D1:BC7E -  -  -  -  ;Instructions by type: Stack Instructions
 1158 D1:BC7E -  -  -  -  ;PHA - Push Accumulator on Stack
 1159 D1:BC7E -  -  -  -  ;    push A
 1160 D1:BC7E -  -  -  -  ;    N	Z	C	I	D	V
 1161 D1:BC7E -  -  -  -  ;    -	-	-	-	-	-
 1162 D1:BC7E -  -  -  -  ;implied	PHA	48	1	3 
 1163 D1:BC7E -  -  -  -  inst6502_pha:
 1164 D1:BC7E ED 33 03 -      ADDCYC(3)
 1165 D1:BC81 DD 7E 00 -      ld  a,(ix+REGA)
 1166 D1:BC84 01 00 39 D0     ld  bc,STACKBASE
 1167 D1:BC88 DD 4E 03 -      ld  c,(ix+REGSP)
 1168 D1:BC8B 02 -  -  -      ld  (bc),a
 1169 D1:BC8C 0D -  -  -      dec c
 1170 D1:BC8D DD 71 03 -      ld  (ix+REGSP),c
 1171 D1:BC90 C3 C1 B3 D1     jp i6502FinishLoad
 1172 D1:BC94 -  -  -  -  
 1173 D1:BC94 -  -  -  -  ;PHP - Push Processor Status on Stack
 1174 D1:BC94 -  -  -  -  ;    The status register will be pushed with the break
 1175 D1:BC94 -  -  -  -  ;    flag and bit 5 set to 1.
 1176 D1:BC94 -  -  -  -  ;    push SR
 1177 D1:BC94 -  -  -  -  ;    N	Z	C	I	D	V
 1178 D1:BC94 -  -  -  -  ;    -	-	-	-	-	-
 1179 D1:BC94 -  -  -  -  ;implied	PHP	08	1	3  
 1180 D1:BC94 -  -  -  -  inst6502_php:
 1181 D1:BC94 ED 33 03 -      ADDCYC(3)
 1182 D1:BC97 DD 7E 04 -      ld  a,(ix+REGSR)
 1183 D1:BC9A F6 30 -  -      or  a,%00110000
 1184 D1:BC9C 01 00 39 D0     ld  bc,STACKBASE
 1185 D1:BCA0 DD 4E 03 -      ld  c,(ix+REGSP)
 1186 D1:BCA3 02 -  -  -      ld  (bc),a
 1187 D1:BCA4 0D -  -  -      dec c
 1188 D1:BCA5 DD 71 03 -      ld  (ix+REGSP),c
 1189 D1:BCA8 C3 C1 B3 D1     jp i6502FinishLoad
 1190 D1:BCAC -  -  -  -  
 1191 D1:BCAC -  -  -  -  
 1192 D1:BCAC -  -  -  -  
 1193 D1:BCAC -  -  -  -  ;PLA - Pull Accumulator from Stack
 1194 D1:BCAC -  -  -  -  ;    pull A
 1195 D1:BCAC -  -  -  -  ;    N	Z	C	I	D	V
 1196 D1:BCAC -  -  -  -  ;    +	+	-	-	-	-
 1197 D1:BCAC -  -  -  -  ;implied	PLA	68	1	4  
 1198 D1:BCAC -  -  -  -  inst6502_pla:
 1199 D1:BCAC ED 33 04 -      ADDCYC(4)
 1200 D1:BCAF 01 00 39 D0     ld  bc,STACKBASE
 1201 D1:BCB3 DD 4E 03 -      ld  c,(ix+REGSP)
 1202 D1:BCB6 0C -  -  -      inc c
 1203 D1:BCB7 0A -  -  -      ld  a,(bc)
 1204 D1:BCB8 DD 71 03 -      ld  (ix+REGSP),c
 1205 D1:BCBB DD 77 00 -      ld  (ix+REGA),a
 1206 D1:BCBE DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1207 D1:BCD2 C3 C1 B3 D1     jp i6502FinishLoad
 1208 D1:BCD6 -  -  -  -  
 1209 D1:BCD6 -  -  -  -  ;PLP - Pull Processor Status from Stack
 1210 D1:BCD6 -  -  -  -  ;    The status register will be pulled with the break
 1211 D1:BCD6 -  -  -  -  ;    flag and bit 5 ignored.
 1212 D1:BCD6 -  -  -  -  ;    pull SR
 1213 D1:BCD6 -  -  -  -  ;    N	Z	C	I	D	V
 1214 D1:BCD6 -  -  -  -  ;    from stack
 1215 D1:BCD6 -  -  -  -  ;implied	PLP	28	1	4  
 1216 D1:BCD6 -  -  -  -  inst6502_plp:
 1217 D1:BCD6 ED 33 04 -      ADDCYC(4)
 1218 D1:BCD9 01 00 39 D0     ld  bc,STACKBASE
 1219 D1:BCDD DD 4E 03 -      ld  c,(ix+REGSP)
 1220 D1:BCE0 0C -  -  -      inc c
 1221 D1:BCE1 0A -  -  -      ld  a,(bc)
 1222 D1:BCE2 DD 71 03 -      ld  (ix+REGSP),c
 1223 D1:BCE5 DD 46 04 -      ld  b,(ix+REGSR)
 1224 D1:BCE8 A8 -  -  -      xor a,b
 1225 D1:BCE9 E6 CF -  -      and a,%11001111
 1226 D1:BCEB A8 -  -  -      xor a,b
 1227 D1:BCEC DD 77 04 -      ld  (ix+REGSR),a
 1228 D1:BCEF C3 C1 B3 D1     jp i6502FinishLoad
 1229 D1:BCF3 -  -  -  -  
 1230 D1:BCF3 -  -  -  -  
 1231 D1:BCF3 -  -  -  -  ;-----------------------------------------------------------------------------
 1232 D1:BCF3 -  -  -  -  ;-----------------------------------------------------------------------------
 1233 D1:BCF3 -  -  -  -  ;-----------------------------------------------------------------------------
 1234 D1:BCF3 -  -  -  -  ;Instructions by type: Decrements and Increments
 1235 D1:BCF3 -  -  -  -  
 1236 D1:BCF3 -  -  -  -  ;DEC -  Decrement Memory by One
 1237 D1:BCF3 -  -  -  -  ;    M - 1 -> M
 1238 D1:BCF3 -  -  -  -  ;    N	Z	C	I	D	V
 1239 D1:BCF3 -  -  -  -  ;    +	+	-	-	-	-
 1240 D1:BCF3 -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1241 D1:BCF3 -  -  -  -  
 1242 D1:BCF3 -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1243 D1:BCF3 -  -  -  -  inst6502_dec_zp:
 1244 D1:BCF3 7E -  -  -      ld  a,(hl)
 1245 D1:BCF4 01 00 38 D0     ld  bc,ZEROPAGE
 1246 D1:BCF8 81 -  -  -      add a,c
 1247 D1:BCF9 4F -  -  -      ld  c,a
 1248 D1:BCFA 0A -  -  -      ld  a,(bc)
 1249 D1:BCFB 3D -  -  -      dec a
 1250 D1:BCFC 02 -  -  -      ld  (bc),a
 1251 D1:BCFD DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1252 D1:BD11 ED 33 05 -      ADDCYC(5)
 1253 D1:BD14 C3 A8 B3 D1     jp i6502NextLoad
 1254 D1:BD18 -  -  -  -  
 1255 D1:BD18 -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1256 D1:BD18 -  -  -  -  inst6502_dec_zpx:
 1257 D1:BD18 7E -  -  -      ld  a,(hl)
 1258 D1:BD19 01 00 38 D0     ld  bc,ZEROPAGE
 1259 D1:BD1D 81 -  -  -      add a,c
 1260 D1:BD1E DD 86 01 -      add a,(ix+REGX)
 1261 D1:BD21 4F -  -  -      ld  c,a
 1262 D1:BD22 0A -  -  -      ld  a,(bc)
 1263 D1:BD23 3D -  -  -      dec a
 1264 D1:BD24 02 -  -  -      ld  (bc),a
 1265 D1:BD25 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1266 D1:BD39 ED 33 06 -      ADDCYC(6)
 1267 D1:BD3C C3 A8 B3 D1     jp i6502NextLoad
 1268 D1:BD40 -  -  -  -  
 1269 D1:BD40 -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1270 D1:BD40 -  -  -  -  inst6502_dec_abs:
 1271 D1:BD40 CD 1D B6 D1     call subroutine6502_abs_split_start
 1272 D1:BD44 E5 -  -  -      push hl
 1273 D1:BD45 50 -  -  -          ld  d,b
 1274 D1:BD46 79 -  -  -          ld  a,c
 1275 D1:BD47 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1276 D1:BD49 ED 4C -  -          mlt bc
 1277 D1:BD4B 21 00 40 D0         ld  hl,PAGETABLE
 1278 D1:BD4F 09 -  -  -          add hl,bc
 1279 D1:BD50 ED 27 -  -          ld  hl,(hl)
 1280 D1:BD52 06 00 -  -          ld  b,0
 1281 D1:BD54 4F -  -  -          ld  c,a
 1282 D1:BD55 09 -  -  -          add hl,bc   ;full address
 1283 D1:BD56 7E -  -  -          READ_ACCESS
 1284 D1:BD57 3D -  -  -          dec a
 1285 D1:BD58 47 -  -  -          ld  b,a
 1286 D1:BD59 -  -  -  -          ;
 1287 D1:BD59 DD 7E 04 -          ld  a,(ix+REGSR)
 1288 D1:BD5C CB 8F -  -          res SF_ZERO,a
 1289 D1:BD5E 20 02 -  -          jr  nz,$+4
 1290 D1:BD60 CB CF -  -          set SF_ZERO,a
 1291 D1:BD62 CB BF -  -          res SF_NEG,a
 1292 D1:BD64 F2 6A BD D1         jp  p,$+6
 1293 D1:BD68 CB FF -  -          set SF_NEG,a
 1294 D1:BD6A DD 77 04 -          ld  (ix+REGSR),a
 1295 D1:BD6D -  -  -  -          ;
 1296 D1:BD6D 70 -  -  -          WRITE_ACCESS
 1297 D1:BD6E ED 33 06 -          ADDCYC(6)
 1298 D1:BD71 E1 -  -  -      pop hl
 1299 D1:BD72 C3 A8 B3 D1     jp i6502NextLoad
 1300 D1:BD76 -  -  -  -  
 1301 D1:BD76 -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1302 D1:BD76 -  -  -  -  inst6502_dec_absx:
 1303 D1:BD76 CD 1D B6 D1     call subroutine6502_abs_split_start
 1304 D1:BD7A E5 -  -  -      push hl
 1305 D1:BD7B 50 -  -  -          ld  d,b
 1306 D1:BD7C 79 -  -  -          ld  a,c
 1307 D1:BD7D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1308 D1:BD7F ED 4C -  -          mlt bc
 1309 D1:BD81 21 00 40 D0         ld  hl,PAGETABLE
 1310 D1:BD85 09 -  -  -          add hl,bc
 1311 D1:BD86 ED 27 -  -          ld  hl,(hl)
 1312 D1:BD88 06 00 -  -          ld  b,0
 1313 D1:BD8A DD 86 01 -          add a,(ix+REGX)
 1314 D1:BD8D 4F -  -  -          ld  c,a
 1315 D1:BD8E 30 02 -  -          jr  nc,+_
 1316 D1:BD90 04 -  -  -          inc b
 1317 D1:BD91 14 -  -  -          inc d
 1318 D1:BD92 09 -  -  -  _:      add hl,bc   ;full address
 1319 D1:BD93 7E -  -  -          READ_ACCESS
 1320 D1:BD94 3D -  -  -          dec a
 1321 D1:BD95 47 -  -  -          ld  b,a
 1322 D1:BD96 -  -  -  -          ;
 1323 D1:BD96 DD 7E 04 -          ld  a,(ix+REGSR)
 1324 D1:BD99 CB 8F -  -          res SF_ZERO,a
 1325 D1:BD9B 20 02 -  -          jr  nz,$+4
 1326 D1:BD9D CB CF -  -          set SF_ZERO,a
 1327 D1:BD9F CB BF -  -          res SF_NEG,a
 1328 D1:BDA1 F2 A7 BD D1         jp  p,$+6
 1329 D1:BDA5 CB FF -  -          set SF_NEG,a
 1330 D1:BDA7 DD 77 04 -          ld  (ix+REGSR),a
 1331 D1:BDAA -  -  -  -          ;
 1332 D1:BDAA 70 -  -  -          WRITE_ACCESS
 1333 D1:BDAB ED 33 07 -          ADDCYC(7)
 1334 D1:BDAE E1 -  -  -      pop hl
 1335 D1:BDAF C3 A8 B3 D1     jp i6502NextLoad
 1336 D1:BDB3 -  -  -  -  
 1337 D1:BDB3 -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1338 D1:BDB3 -  -  -  -  ;Flags altered: NZ
 1339 D1:BDB3 -  -  -  -  ;implied	DEX	CA	1	2  
 1340 D1:BDB3 -  -  -  -  inst6502_dex:
 1341 D1:BDB3 DD 35 01 -      dec (ix+REGX)
 1342 D1:BDB6 DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1343 D1:BDB9 CB 8F -  -      res SF_ZERO,a
 1344 D1:BDBB 20 02 -  -      jr  nz,$+4
 1345 D1:BDBD CB CF -  -      set SF_ZERO,a
 1346 D1:BDBF CB BF -  -      res SF_NEG,a
 1347 D1:BDC1 F2 C7 BD D1     jp  p,$+6
 1348 D1:BDC5 CB FF -  -      set SF_NEG,a
 1349 D1:BDC7 DD 77 04 -      ld  (ix+REGSR),a
 1350 D1:BDCA ED 33 02 -      ADDCYC(2)
 1351 D1:BDCD C3 C1 B3 D1     jp i6502FinishLoad
 1352 D1:BDD1 -  -  -  -  
 1353 D1:BDD1 -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1354 D1:BDD1 -  -  -  -  ;Flags altered: NZ
 1355 D1:BDD1 -  -  -  -  ;implied	DEY	88	1	2  
 1356 D1:BDD1 -  -  -  -  inst6502_dey:
 1357 D1:BDD1 DD 35 02 -      dec (ix+REGY)
 1358 D1:BDD4 18 E0 -  -      jr  -_
 1359 D1:BDD6 -  -  -  -  
 1360 D1:BDD6 -  -  -  -  
 1361 D1:BDD6 -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1362 D1:BDD6 -  -  -  -  ;Flags altered: NZ
 1363 D1:BDD6 -  -  -  -  ;implied	INX	E8	1	2  
 1364 D1:BDD6 -  -  -  -  inst6502_inx:
 1365 D1:BDD6 DD 34 01 -      inc (ix+REGX)
 1366 D1:BDD9 18 DB -  -      jr  -_
 1367 D1:BDDB -  -  -  -  
 1368 D1:BDDB -  -  -  -  
 1369 D1:BDDB -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1370 D1:BDDB -  -  -  -  ;Flags altered: NZ
 1371 D1:BDDB -  -  -  -  ;implied	INY	C8	1	2  
 1372 D1:BDDB -  -  -  -  inst6502_iny:
 1373 D1:BDDB DD 34 02 -      inc (ix+REGY)
 1374 D1:BDDE 18 D6 -  -      jr  -_
 1375 D1:BDE0 -  -  -  -  
 1376 D1:BDE0 -  -  -  -  
 1377 D1:BDE0 -  -  -  -  ;INC - Increment Memory by One
 1378 D1:BDE0 -  -  -  -  ;    M + 1 -> M
 1379 D1:BDE0 -  -  -  -  ;    N	Z	C	I	D	V
 1380 D1:BDE0 -  -  -  -  ;    +	+	-	-	-	-
 1381 D1:BDE0 -  -  -  -  
 1382 D1:BDE0 -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1383 D1:BDE0 -  -  -  -  inst6502_inc_zp:
 1384 D1:BDE0 7E -  -  -      ld  a,(hl)
 1385 D1:BDE1 01 00 38 D0     ld  bc,ZEROPAGE
 1386 D1:BDE5 81 -  -  -      add a,c
 1387 D1:BDE6 4F -  -  -      ld  c,a
 1388 D1:BDE7 0A -  -  -      ld  a,(bc)
 1389 D1:BDE8 3C -  -  -      inc a
 1390 D1:BDE9 02 -  -  -      ld  (bc),a
 1391 D1:BDEA DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1392 D1:BDFE ED 33 05 -      ADDCYC(5)
 1393 D1:BE01 C3 A8 B3 D1     jp i6502NextLoad
 1394 D1:BE05 -  -  -  -  
 1395 D1:BE05 -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1396 D1:BE05 -  -  -  -  inst6502_inc_zpx:
 1397 D1:BE05 7E -  -  -      ld  a,(hl)
 1398 D1:BE06 01 00 38 D0     ld  bc,ZEROPAGE
 1399 D1:BE0A 81 -  -  -      add a,c
 1400 D1:BE0B DD 86 01 -      add a,(ix+REGX)
 1401 D1:BE0E 4F -  -  -      ld  c,a
 1402 D1:BE0F 0A -  -  -      ld  a,(bc)
 1403 D1:BE10 3C -  -  -      inc a
 1404 D1:BE11 02 -  -  -      ld  (bc),a
 1405 D1:BE12 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1406 D1:BE26 ED 33 06 -      ADDCYC(6)
 1407 D1:BE29 C3 A8 B3 D1     jp i6502NextLoad
 1408 D1:BE2D -  -  -  -      
 1409 D1:BE2D -  -  -  -  ;absolute	INC oper	EE	3	6
 1410 D1:BE2D -  -  -  -  inst6502_inc_abs:
 1411 D1:BE2D CD 1D B6 D1     call subroutine6502_abs_split_start
 1412 D1:BE31 E5 -  -  -      push hl
 1413 D1:BE32 50 -  -  -          ld  d,b
 1414 D1:BE33 79 -  -  -          ld  a,c
 1415 D1:BE34 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1416 D1:BE36 ED 4C -  -          mlt bc
 1417 D1:BE38 21 00 40 D0         ld  hl,PAGETABLE
 1418 D1:BE3C 09 -  -  -          add hl,bc
 1419 D1:BE3D ED 27 -  -          ld  hl,(hl)
 1420 D1:BE3F 06 00 -  -          ld  b,0
 1421 D1:BE41 4F -  -  -          ld  c,a
 1422 D1:BE42 09 -  -  -          add hl,bc   ;full address
 1423 D1:BE43 7E -  -  -          READ_ACCESS
 1424 D1:BE44 3C -  -  -          inc a
 1425 D1:BE45 47 -  -  -          ld  b,a
 1426 D1:BE46 -  -  -  -          ;
 1427 D1:BE46 DD 7E 04 -          ld  a,(ix+REGSR)
 1428 D1:BE49 CB 8F -  -          res SF_ZERO,a
 1429 D1:BE4B 20 02 -  -          jr  nz,$+4
 1430 D1:BE4D CB CF -  -          set SF_ZERO,a
 1431 D1:BE4F CB BF -  -          res SF_NEG,a
 1432 D1:BE51 F2 57 BE D1         jp  p,$+6
 1433 D1:BE55 CB FF -  -          set SF_NEG,a
 1434 D1:BE57 DD 77 04 -          ld  (ix+REGSR),a
 1435 D1:BE5A -  -  -  -          ;
 1436 D1:BE5A 70 -  -  -          WRITE_ACCESS
 1437 D1:BE5B ED 33 06 -          ADDCYC(6)
 1438 D1:BE5E E1 -  -  -      pop hl
 1439 D1:BE5F C3 A8 B3 D1     jp i6502NextLoad
 1440 D1:BE63 -  -  -  -  
 1441 D1:BE63 -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1442 D1:BE63 -  -  -  -  inst6502_inc_absx:
 1443 D1:BE63 CD 1D B6 D1     call subroutine6502_abs_split_start
 1444 D1:BE67 E5 -  -  -      push hl
 1445 D1:BE68 50 -  -  -          ld  d,b
 1446 D1:BE69 79 -  -  -          ld  a,c
 1447 D1:BE6A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1448 D1:BE6C ED 4C -  -          mlt bc
 1449 D1:BE6E 21 00 40 D0         ld  hl,PAGETABLE
 1450 D1:BE72 09 -  -  -          add hl,bc
 1451 D1:BE73 ED 27 -  -          ld  hl,(hl)
 1452 D1:BE75 06 00 -  -          ld  b,0
 1453 D1:BE77 DD 86 01 -          add a,(ix+REGX)
 1454 D1:BE7A 4F -  -  -          ld  c,a
 1455 D1:BE7B 30 02 -  -          jr nc,+_
 1456 D1:BE7D 04 -  -  -          inc b
 1457 D1:BE7E 14 -  -  -          inc d
 1458 D1:BE7F 09 -  -  -  _:      add hl,bc   ;full address
 1459 D1:BE80 7E -  -  -          READ_ACCESS
 1460 D1:BE81 3C -  -  -          inc a
 1461 D1:BE82 47 -  -  -          ld  b,a
 1462 D1:BE83 -  -  -  -          ;
 1463 D1:BE83 DD 7E 04 -          ld  a,(ix+REGSR)
 1464 D1:BE86 CB 8F -  -          res SF_ZERO,a
 1465 D1:BE88 20 02 -  -          jr  nz,$+4
 1466 D1:BE8A CB CF -  -          set SF_ZERO,a
 1467 D1:BE8C CB BF -  -          res SF_NEG,a
 1468 D1:BE8E F2 94 BE D1         jp  p,$+6
 1469 D1:BE92 CB FF -  -          set SF_NEG,a
 1470 D1:BE94 DD 77 04 -          ld  (ix+REGSR),a
 1471 D1:BE97 -  -  -  -          ;
 1472 D1:BE97 70 -  -  -          WRITE_ACCESS
 1473 D1:BE98 ED 33 07 -          ADDCYC(7)
 1474 D1:BE9B E1 -  -  -      pop hl
 1475 D1:BE9C C3 A8 B3 D1     jp i6502NextLoad
 1476 D1:BEA0 -  -  -  -  
 1477 D1:BEA0 -  -  -  -  ;-----------------------------------------------------------------------------
 1478 D1:BEA0 -  -  -  -  ;-----------------------------------------------------------------------------
 1479 D1:BEA0 -  -  -  -  ;-----------------------------------------------------------------------------
 1480 D1:BEA0 -  -  -  -  ;Instructions by type: Arithmetic Operations
 1481 D1:BEA0 -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1482 D1:BEA0 -  -  -  -  ;    N	Z	C	I	D	V
 1483 D1:BEA0 -  -  -  -  ;    +	+	+	-	-	+
 1484 D1:BEA0 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1485 D1:BEA0 -  -  -  -  
 1486 D1:BEA0 -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1487 D1:BEA0 -  -  -  -  inst6502_adc_imm:
 1488 D1:BEA0 ED 33 02 -      ADDCYC(2)
 1489 D1:BEA3 4E -  -  -      ld  c,(hl)
 1490 D1:BEA4 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1491 D1:BEA8 -  -  -  -      
 1492 D1:BEA8 -  -  -  -  
 1493 D1:BEA8 -  -  -  -  ;zeropage	ADC oper	65	2	3
 1494 D1:BEA8 -  -  -  -  inst6502_adc_zp:
 1495 D1:BEA8 ED 33 03 -      ADDCYC(3)
 1496 D1:BEAB 7E -  -  -      ld  a,(hl)
 1497 D1:BEAC 01 00 38 D0     ld  bc,ZEROPAGE
 1498 D1:BEB0 81 -  -  -      add a,c
 1499 D1:BEB1 4F -  -  -      ld  c,a
 1500 D1:BEB2 0A -  -  -      ld  a,(bc)
 1501 D1:BEB3 4F -  -  -      ld  c,a
 1502 D1:BEB4 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1503 D1:BEB8 -  -  -  -  
 1504 D1:BEB8 -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1505 D1:BEB8 -  -  -  -  inst6502_adc_zpx:
 1506 D1:BEB8 ED 33 04 -      ADDCYC(4)
 1507 D1:BEBB 7E -  -  -      ld  a,(hl)
 1508 D1:BEBC DD 86 01 -      add a,(ix+REGX)
 1509 D1:BEBF 01 00 38 D0     ld  bc,ZEROPAGE
 1510 D1:BEC3 81 -  -  -      add a,c
 1511 D1:BEC4 4F -  -  -      ld  c,a
 1512 D1:BEC5 0A -  -  -      ld  a,(bc)
 1513 D1:BEC6 4F -  -  -      ld  c,a
 1514 D1:BEC7 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1515 D1:BECB -  -  -  -  
 1516 D1:BECB -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1517 D1:BECB -  -  -  -  inst6502_adc_abs:
 1518 D1:BECB ED 33 04 -      ADDCYC(4)
 1519 D1:BECE CD 1D B6 D1     call subroutine6502_abs_split_start
 1520 D1:BED2 E5 -  -  -      push hl
 1521 D1:BED3 50 -  -  -          ld  d,b
 1522 D1:BED4 79 -  -  -          ld  a,c
 1523 D1:BED5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1524 D1:BED7 ED 4C -  -          mlt bc
 1525 D1:BED9 21 00 40 D0         ld  hl,PAGETABLE
 1526 D1:BEDD 09 -  -  -          add hl,bc
 1527 D1:BEDE ED 27 -  -          ld  hl,(hl)
 1528 D1:BEE0 06 00 -  -          ld  b,0
 1529 D1:BEE2 4F -  -  -          ld  c,a
 1530 D1:BEE3 09 -  -  -          add hl,bc   ;full address
 1531 D1:BEE4 7E -  -  -          READ_ACCESS
 1532 D1:BEE5 E1 -  -  -      pop hl
 1533 D1:BEE6 4F -  -  -      ld  c,a
 1534 D1:BEE7 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1535 D1:BEEB -  -  -  -  
 1536 D1:BEEB -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1537 D1:BEEB -  -  -  -  inst6502_adc_absx:
 1538 D1:BEEB ED 33 04 -      ADDCYC(4)
 1539 D1:BEEE CD 1D B6 D1     call subroutine6502_abs_split_start
 1540 D1:BEF2 E5 -  -  -      push hl
 1541 D1:BEF3 50 -  -  -          ld  d,b
 1542 D1:BEF4 79 -  -  -          ld  a,c
 1543 D1:BEF5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1544 D1:BEF7 ED 4C -  -          mlt bc
 1545 D1:BEF9 21 00 40 D0         ld  hl,PAGETABLE
 1546 D1:BEFD 09 -  -  -          add hl,bc
 1547 D1:BEFE ED 27 -  -          ld  hl,(hl)
 1548 D1:BF00 06 00 -  -          ld  b,0
 1549 D1:BF02 DD 86 01 -          add a,(ix+REGX)
 1550 D1:BF05 4F -  -  -          ld  c,a
 1551 D1:BF06 30 04 -  -          jr  nc,+_
 1552 D1:BF08 FD 23 -  -          ADDCYC(1)
 1553 D1:BF0A 04 -  -  -          inc b
 1554 D1:BF0B 14 -  -  -          inc d
 1555 D1:BF0C 09 -  -  -  _:      add hl,bc   ;full address
 1556 D1:BF0D 7E -  -  -          READ_ACCESS
 1557 D1:BF0E E1 -  -  -      pop hl
 1558 D1:BF0F 4F -  -  -      ld  c,a
 1559 D1:BF10 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1560 D1:BF14 -  -  -  -  
 1561 D1:BF14 -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1562 D1:BF14 -  -  -  -  inst6502_adc_absy:
 1563 D1:BF14 ED 33 04 -      ADDCYC(4)
 1564 D1:BF17 CD 1D B6 D1     call subroutine6502_abs_split_start
 1565 D1:BF1B E5 -  -  -      push hl
 1566 D1:BF1C 50 -  -  -          ld  d,b
 1567 D1:BF1D 79 -  -  -          ld  a,c
 1568 D1:BF1E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1569 D1:BF20 ED 4C -  -          mlt bc
 1570 D1:BF22 21 00 40 D0         ld  hl,PAGETABLE
 1571 D1:BF26 09 -  -  -          add hl,bc
 1572 D1:BF27 ED 27 -  -          ld  hl,(hl)
 1573 D1:BF29 06 00 -  -          ld  b,0
 1574 D1:BF2B DD 86 02 -          add a,(ix+REGY)
 1575 D1:BF2E 4F -  -  -          ld  c,a
 1576 D1:BF2F 30 04 -  -          jr  nc,+_
 1577 D1:BF31 FD 23 -  -          ADDCYC(1)
 1578 D1:BF33 04 -  -  -          inc b
 1579 D1:BF34 14 -  -  -          inc d
 1580 D1:BF35 09 -  -  -  _:      add hl,bc   ;full address
 1581 D1:BF36 7E -  -  -          READ_ACCESS
 1582 D1:BF37 E1 -  -  -      pop hl
 1583 D1:BF38 4F -  -  -      ld  c,a
 1584 D1:BF39 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1585 D1:BF3D -  -  -  -  
 1586 D1:BF3D -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1587 D1:BF3D -  -  -  -  inst6502_adc_indx:
 1588 D1:BF3D ED 33 06 -      ADDCYC(6)
 1589 D1:BF40 E5 -  -  -      push hl
 1590 D1:BF41 7E -  -  -          ld  a,(hl)
 1591 D1:BF42 21 00 38 D0         ld  hl,ZEROPAGE
 1592 D1:BF46 85 -  -  -          add a,L
 1593 D1:BF47 DD 86 01 -          add a,(ix+REGX)
 1594 D1:BF4A 6F -  -  -          ld  L,a
 1595 D1:BF4B 7E -  -  -          ld  a,(hl)
 1596 D1:BF4C 2C -  -  -          inc L
 1597 D1:BF4D 56 -  -  -          ld  d,(hl)
 1598 D1:BF4E 42 -  -  -          ld  b,d
 1599 D1:BF4F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1600 D1:BF51 ED 4C -  -          mlt bc
 1601 D1:BF53 21 00 40 D0         ld  hl,PAGETABLE
 1602 D1:BF57 09 -  -  -          add hl,bc
 1603 D1:BF58 ED 27 -  -          ld  hl,(hl)
 1604 D1:BF5A 06 00 -  -          ld  b,0
 1605 D1:BF5C 4F -  -  -          ld  c,a
 1606 D1:BF5D 09 -  -  -          add hl,bc
 1607 D1:BF5E 7E -  -  -          READ_ACCESS
 1608 D1:BF5F E1 -  -  -      pop hl
 1609 D1:BF60 4F -  -  -      ld  c,a
 1610 D1:BF61 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1611 D1:BF65 -  -  -  -  
 1612 D1:BF65 -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1613 D1:BF65 -  -  -  -  inst6502_adc_indy:
 1614 D1:BF65 ED 33 05 -      ADDCYC(5)
 1615 D1:BF68 E5 -  -  -      push hl
 1616 D1:BF69 7E -  -  -          ld  a,(hl)
 1617 D1:BF6A 21 00 38 D0         ld  hl,ZEROPAGE
 1618 D1:BF6E 85 -  -  -          add a,L
 1619 D1:BF6F 6F -  -  -          ld  L,a
 1620 D1:BF70 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1621 D1:BF71 2C -  -  -          inc L
 1622 D1:BF72 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1623 D1:BF75 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1624 D1:BF76 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1625 D1:BF78 FD 23 -  -          ADDCYC(1)
 1626 D1:BF7A 24 -  -  -          inc h
 1627 D1:BF7B 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1628 D1:BF7C 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1629 D1:BF7E ED 6C -  -          mlt hl          ;23.
 1630 D1:BF80 01 00 40 D0         ld  bc,PAGETABLE
 1631 D1:BF84 09 -  -  -          add hl,bc
 1632 D1:BF85 ED 27 -  -          ld  hl,(hl)     ;address get.
 1633 D1:BF87 01 00 00 00         ld  bc,0
 1634 D1:BF8B 4F -  -  -          ld  c,a
 1635 D1:BF8C 09 -  -  -          add hl,bc       ;Full address get.
 1636 D1:BF8D 7E -  -  -          READ_ACCESS
 1637 D1:BF8E E1 -  -  -      pop hl
 1638 D1:BF8F 4F -  -  -      ld  c,a
 1639 D1:BF90 C3 39 B6 D1     jp  subroutine6502_adc_combined_end
 1640 D1:BF94 -  -  -  -  
 1641 D1:BF94 -  -  -  -  
 1642 D1:BF94 -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1643 D1:BF94 -  -  -  -  ;A - M - C̅ -> A
 1644 D1:BF94 -  -  -  -  ;N	Z	C	I	D	V
 1645 D1:BF94 -  -  -  -  ;+	+	+	-	-	+
 1646 D1:BF94 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1647 D1:BF94 -  -  -  -  
 1648 D1:BF94 -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1649 D1:BF94 -  -  -  -  inst6502_sbc_imm:
 1650 D1:BF94 ED 33 02 -      ADDCYC(2)
 1651 D1:BF97 4E -  -  -      ld  c,(hl)
 1652 D1:BF98 C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1653 D1:BF9C -  -  -  -  
 1654 D1:BF9C -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1655 D1:BF9C -  -  -  -  inst6502_sbc_zp:
 1656 D1:BF9C ED 33 03 -      ADDCYC(3)
 1657 D1:BF9F 7E -  -  -      ld  a,(hl)
 1658 D1:BFA0 01 00 38 D0     ld  bc,ZEROPAGE
 1659 D1:BFA4 81 -  -  -      add a,c
 1660 D1:BFA5 4F -  -  -      ld  c,a
 1661 D1:BFA6 0A -  -  -      ld  a,(bc)
 1662 D1:BFA7 4F -  -  -      ld  c,a
 1663 D1:BFA8 C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1664 D1:BFAC -  -  -  -  
 1665 D1:BFAC -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1666 D1:BFAC -  -  -  -  inst6502_sbc_zpx:
 1667 D1:BFAC ED 33 04 -      ADDCYC(4)
 1668 D1:BFAF 7E -  -  -      ld  a,(hl)
 1669 D1:BFB0 DD 86 01 -      add a,(ix+REGX)
 1670 D1:BFB3 01 00 38 D0     ld  bc,ZEROPAGE
 1671 D1:BFB7 81 -  -  -      add a,c
 1672 D1:BFB8 4F -  -  -      ld  c,a
 1673 D1:BFB9 0A -  -  -      ld  a,(bc)
 1674 D1:BFBA 4F -  -  -      ld  c,a
 1675 D1:BFBB C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1676 D1:BFBF -  -  -  -  
 1677 D1:BFBF -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1678 D1:BFBF -  -  -  -  inst6502_sbc_abs:
 1679 D1:BFBF ED 33 04 -      ADDCYC(4)
 1680 D1:BFC2 CD 1D B6 D1     call subroutine6502_abs_split_start
 1681 D1:BFC6 E5 -  -  -      push hl
 1682 D1:BFC7 50 -  -  -          ld  d,b
 1683 D1:BFC8 79 -  -  -          ld  a,c
 1684 D1:BFC9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1685 D1:BFCB ED 4C -  -          mlt bc
 1686 D1:BFCD 21 00 40 D0         ld  hl,PAGETABLE
 1687 D1:BFD1 09 -  -  -          add hl,bc
 1688 D1:BFD2 ED 27 -  -          ld  hl,(hl)
 1689 D1:BFD4 06 00 -  -          ld  b,0
 1690 D1:BFD6 4F -  -  -          ld  c,a
 1691 D1:BFD7 09 -  -  -          add hl,bc   ;full address
 1692 D1:BFD8 7E -  -  -          READ_ACCESS
 1693 D1:BFD9 E1 -  -  -      pop hl
 1694 D1:BFDA 4F -  -  -      ld  c,a
 1695 D1:BFDB C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1696 D1:BFDF -  -  -  -  
 1697 D1:BFDF -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1698 D1:BFDF -  -  -  -  inst6502_sbc_absx:
 1699 D1:BFDF ED 33 04 -      ADDCYC(4)
 1700 D1:BFE2 CD 1D B6 D1     call subroutine6502_abs_split_start
 1701 D1:BFE6 E5 -  -  -      push hl
 1702 D1:BFE7 50 -  -  -          ld  d,b
 1703 D1:BFE8 79 -  -  -          ld  a,c
 1704 D1:BFE9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1705 D1:BFEB ED 4C -  -          mlt bc
 1706 D1:BFED 21 00 40 D0         ld  hl,PAGETABLE
 1707 D1:BFF1 09 -  -  -          add hl,bc
 1708 D1:BFF2 ED 27 -  -          ld  hl,(hl)
 1709 D1:BFF4 06 00 -  -          ld  b,0
 1710 D1:BFF6 DD 86 01 -          add a,(ix+REGX)
 1711 D1:BFF9 4F -  -  -          ld  c,a
 1712 D1:BFFA 30 04 -  -          jr  nc,+_
 1713 D1:BFFC FD 23 -  -          ADDCYC(1)
 1714 D1:BFFE 04 -  -  -          inc b
 1715 D1:BFFF 14 -  -  -          inc d
 1716 D1:C000 09 -  -  -  _:      add hl,bc   ;full address
 1717 D1:C001 7E -  -  -          READ_ACCESS
 1718 D1:C002 E1 -  -  -      pop hl
 1719 D1:C003 4F -  -  -      ld  c,a
 1720 D1:C004 C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1721 D1:C008 -  -  -  -  
 1722 D1:C008 -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1723 D1:C008 -  -  -  -  inst6502_sbc_absy:
 1724 D1:C008 ED 33 04 -      ADDCYC(4)
 1725 D1:C00B CD 1D B6 D1     call subroutine6502_abs_split_start
 1726 D1:C00F E5 -  -  -      push hl
 1727 D1:C010 50 -  -  -          ld  d,b
 1728 D1:C011 79 -  -  -          ld  a,c
 1729 D1:C012 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1730 D1:C014 ED 4C -  -          mlt bc
 1731 D1:C016 21 00 40 D0         ld  hl,PAGETABLE
 1732 D1:C01A 09 -  -  -          add hl,bc
 1733 D1:C01B ED 27 -  -          ld  hl,(hl)
 1734 D1:C01D 06 00 -  -          ld  b,0
 1735 D1:C01F DD 86 02 -          add a,(ix+REGY)
 1736 D1:C022 4F -  -  -          ld  c,a
 1737 D1:C023 30 04 -  -          jr  nc,+_
 1738 D1:C025 FD 23 -  -          ADDCYC(1)
 1739 D1:C027 04 -  -  -          inc b
 1740 D1:C028 14 -  -  -          inc d
 1741 D1:C029 09 -  -  -  _:      add hl,bc   ;full address
 1742 D1:C02A 7E -  -  -          READ_ACCESS
 1743 D1:C02B E1 -  -  -      pop hl
 1744 D1:C02C 4F -  -  -      ld  c,a
 1745 D1:C02D C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1746 D1:C031 -  -  -  -  
 1747 D1:C031 -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1748 D1:C031 -  -  -  -  inst6502_sbc_indx:
 1749 D1:C031 ED 33 06 -      ADDCYC(6)
 1750 D1:C034 E5 -  -  -      push hl
 1751 D1:C035 7E -  -  -          ld  a,(hl)
 1752 D1:C036 21 00 38 D0         ld  hl,ZEROPAGE
 1753 D1:C03A 85 -  -  -          add a,L
 1754 D1:C03B DD 86 01 -          add a,(ix+REGX)
 1755 D1:C03E 6F -  -  -          ld  L,a
 1756 D1:C03F 7E -  -  -          ld  a,(hl)
 1757 D1:C040 2C -  -  -          inc L
 1758 D1:C041 56 -  -  -          ld  d,(hl)
 1759 D1:C042 42 -  -  -          ld  b,d
 1760 D1:C043 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1761 D1:C045 ED 4C -  -          mlt bc
 1762 D1:C047 21 00 40 D0         ld  hl,PAGETABLE
 1763 D1:C04B 09 -  -  -          add hl,bc
 1764 D1:C04C ED 27 -  -          ld  hl,(hl)
 1765 D1:C04E 06 00 -  -          ld  b,0
 1766 D1:C050 4F -  -  -          ld  c,a
 1767 D1:C051 09 -  -  -          add hl,bc
 1768 D1:C052 7E -  -  -          READ_ACCESS
 1769 D1:C053 E1 -  -  -      pop hl
 1770 D1:C054 4F -  -  -      ld  c,a
 1771 D1:C055 C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1772 D1:C059 -  -  -  -  
 1773 D1:C059 -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1774 D1:C059 -  -  -  -  inst6502_sbc_indy:
 1775 D1:C059 ED 33 05 -      ADDCYC(5)
 1776 D1:C05C E5 -  -  -      push hl
 1777 D1:C05D 7E -  -  -          ld  a,(hl)
 1778 D1:C05E 21 00 38 D0         ld  hl,ZEROPAGE
 1779 D1:C062 85 -  -  -          add a,L
 1780 D1:C063 6F -  -  -          ld  L,a
 1781 D1:C064 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1782 D1:C065 2C -  -  -          inc L
 1783 D1:C066 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1784 D1:C069 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1785 D1:C06A 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1786 D1:C06C FD 23 -  -          ADDCYC(1)
 1787 D1:C06E 24 -  -  -          inc h
 1788 D1:C06F 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1789 D1:C070 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1790 D1:C072 ED 6C -  -          mlt hl          ;23.
 1791 D1:C074 01 00 40 D0         ld  bc,PAGETABLE
 1792 D1:C078 09 -  -  -          add hl,bc
 1793 D1:C079 ED 27 -  -          ld  hl,(hl)     ;address get.
 1794 D1:C07B 01 00 00 00         ld  bc,0
 1795 D1:C07F 4F -  -  -          ld  c,a
 1796 D1:C080 09 -  -  -          add hl,bc       ;Full address get.
 1797 D1:C081 7E -  -  -          READ_ACCESS
 1798 D1:C082 E1 -  -  -      pop hl
 1799 D1:C083 4F -  -  -      ld  c,a
 1800 D1:C084 C3 6A B6 D1     jp  subroutine6502_sbc_combined_end
 1801 D1:C088 -  -  -  -  
 1802 D1:C088 -  -  -  -  
 1803 D1:C088 -  -  -  -  
 1804 D1:C088 -  -  -  -  ;-----------------------------------------------------------------------------
 1805 D1:C088 -  -  -  -  ;-----------------------------------------------------------------------------
 1806 D1:C088 -  -  -  -  ;-----------------------------------------------------------------------------
 1807 D1:C088 -  -  -  -  ;Instructions by type: Logical Operations
 1808 D1:C088 -  -  -  -  
 1809 D1:C088 -  -  -  -  ;AND - AND Memory with Accumulator
 1810 D1:C088 -  -  -  -  ;A AND M -> A
 1811 D1:C088 -  -  -  -  ;N	Z	C	I	D	V
 1812 D1:C088 -  -  -  -  ;+	+	-	-	-	-
 1813 D1:C088 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1814 D1:C088 -  -  -  -  
 1815 D1:C088 -  -  -  -  ;immediate	AND #oper	29	2	2  
 1816 D1:C088 -  -  -  -  inst6502_and_imm:
 1817 D1:C088 ED 33 02 -      ADDCYC(2)
 1818 D1:C08B 7E -  -  -      ld  a,(hl)
 1819 D1:C08C DD A6 00 -      and a,(ix+REGA)
 1820 D1:C08F DD 77 00 -      ld  (ix+REGA),A
 1821 D1:C092 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1822 D1:C0A6 C3 A8 B3 D1     jp i6502NextLoad
 1823 D1:C0AA -  -  -  -  
 1824 D1:C0AA -  -  -  -  ;zeropage	AND oper	25	2	3  
 1825 D1:C0AA -  -  -  -  inst6502_and_zp:
 1826 D1:C0AA ED 33 03 -      ADDCYC(3)
 1827 D1:C0AD 7E -  -  -      ld  a,(hl)
 1828 D1:C0AE 01 00 38 D0     ld  bc,ZEROPAGE
 1829 D1:C0B2 81 -  -  -      add a,c
 1830 D1:C0B3 4F -  -  -      ld  c,a
 1831 D1:C0B4 0A -  -  -      ld  a,(bc)
 1832 D1:C0B5 DD A6 00 -      and a,(ix+REGA)
 1833 D1:C0B8 DD 77 00 -      ld  (ix+REGA),A
 1834 D1:C0BB DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1835 D1:C0CF C3 A8 B3 D1     jp i6502NextLoad
 1836 D1:C0D3 -  -  -  -  
 1837 D1:C0D3 -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1838 D1:C0D3 -  -  -  -  inst6502_and_zpx:
 1839 D1:C0D3 ED 33 04 -      ADDCYC(4)
 1840 D1:C0D6 7E -  -  -      ld  a,(hl)
 1841 D1:C0D7 01 00 38 D0     ld  bc,ZEROPAGE
 1842 D1:C0DB 81 -  -  -      add a,c
 1843 D1:C0DC DD 86 01 -      add a,(ix+REGX)
 1844 D1:C0DF 4F -  -  -      ld  c,a
 1845 D1:C0E0 0A -  -  -      ld  a,(bc)
 1846 D1:C0E1 DD A6 00 -      and a,(ix+REGA)
 1847 D1:C0E4 DD 77 00 -      ld  (ix+REGA),A
 1848 D1:C0E7 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1849 D1:C0FB C3 A8 B3 D1     jp i6502NextLoad
 1850 D1:C0FF -  -  -  -  
 1851 D1:C0FF -  -  -  -  ;absolute	AND oper	2D	3	4  
 1852 D1:C0FF -  -  -  -  inst6502_and_abs:
 1853 D1:C0FF ED 33 04 -      ADDCYC(4)
 1854 D1:C102 CD 1D B6 D1     call subroutine6502_abs_split_start
 1855 D1:C106 E5 -  -  -      push hl
 1856 D1:C107 50 -  -  -          ld  d,b
 1857 D1:C108 79 -  -  -          ld  a,c
 1858 D1:C109 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1859 D1:C10B ED 4C -  -          mlt bc
 1860 D1:C10D 21 00 40 D0         ld  hl,PAGETABLE
 1861 D1:C111 09 -  -  -          add hl,bc
 1862 D1:C112 ED 27 -  -          ld  hl,(hl)
 1863 D1:C114 06 00 -  -          ld  b,0
 1864 D1:C116 4F -  -  -          ld  c,a
 1865 D1:C117 09 -  -  -          add hl,bc   ;full address
 1866 D1:C118 7E -  -  -          READ_ACCESS
 1867 D1:C119 E1 -  -  -      pop hl
 1868 D1:C11A DD A6 00 -      and a,(ix+REGA)
 1869 D1:C11D DD 77 00 -      ld  (ix+REGA),A
 1870 D1:C120 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1871 D1:C134 C3 A8 B3 D1     jp i6502NextLoad
 1872 D1:C138 -  -  -  -  
 1873 D1:C138 -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1874 D1:C138 -  -  -  -  inst6502_and_absx:
 1875 D1:C138 ED 33 04 -      ADDCYC(4)
 1876 D1:C13B CD 1D B6 D1     call subroutine6502_abs_split_start
 1877 D1:C13F E5 -  -  -      push hl
 1878 D1:C140 50 -  -  -          ld  d,b
 1879 D1:C141 79 -  -  -          ld  a,c
 1880 D1:C142 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1881 D1:C144 ED 4C -  -          mlt bc
 1882 D1:C146 21 00 40 D0         ld  hl,PAGETABLE
 1883 D1:C14A 09 -  -  -          add hl,bc
 1884 D1:C14B ED 27 -  -          ld  hl,(hl)
 1885 D1:C14D 06 00 -  -          ld  b,0
 1886 D1:C14F DD 86 01 -          add a,(ix+REGX)
 1887 D1:C152 4F -  -  -          ld  c,a
 1888 D1:C153 30 04 -  -          jr  nc,+_
 1889 D1:C155 04 -  -  -          inc b
 1890 D1:C156 14 -  -  -          inc d
 1891 D1:C157 FD 23 -  -          ADDCYC(1)
 1892 D1:C159 09 -  -  -  _:      add hl,bc   ;full address
 1893 D1:C15A 7E -  -  -          READ_ACCESS
 1894 D1:C15B E1 -  -  -      pop hl
 1895 D1:C15C DD A6 00 -      and a,(ix+REGA)
 1896 D1:C15F DD 77 00 -      ld  (ix+REGA),A
 1897 D1:C162 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1898 D1:C176 C3 A8 B3 D1     jp i6502NextLoad
 1899 D1:C17A -  -  -  -  
 1900 D1:C17A -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1901 D1:C17A -  -  -  -  inst6502_and_absy:
 1902 D1:C17A ED 33 04 -      ADDCYC(4)
 1903 D1:C17D CD 1D B6 D1     call subroutine6502_abs_split_start
 1904 D1:C181 E5 -  -  -      push hl
 1905 D1:C182 50 -  -  -          ld  d,b
 1906 D1:C183 79 -  -  -          ld  a,c
 1907 D1:C184 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1908 D1:C186 ED 4C -  -          mlt bc
 1909 D1:C188 21 00 40 D0         ld  hl,PAGETABLE
 1910 D1:C18C 09 -  -  -          add hl,bc
 1911 D1:C18D ED 27 -  -          ld  hl,(hl)
 1912 D1:C18F 06 00 -  -          ld  b,0
 1913 D1:C191 DD 86 02 -          add a,(ix+REGY)
 1914 D1:C194 4F -  -  -          ld  c,a
 1915 D1:C195 30 04 -  -          jr  nc,+_
 1916 D1:C197 04 -  -  -          inc b
 1917 D1:C198 14 -  -  -          inc d
 1918 D1:C199 FD 23 -  -          ADDCYC(1)
 1919 D1:C19B 09 -  -  -  _:      add hl,bc   ;full address
 1920 D1:C19C 7E -  -  -          READ_ACCESS
 1921 D1:C19D E1 -  -  -      pop hl
 1922 D1:C19E DD A6 00 -      and a,(ix+REGA)
 1923 D1:C1A1 DD 77 00 -      ld  (ix+REGA),A
 1924 D1:C1A4 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1925 D1:C1B8 C3 A8 B3 D1     jp i6502NextLoad
 1926 D1:C1BC -  -  -  -  
 1927 D1:C1BC -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1928 D1:C1BC -  -  -  -  inst6502_and_indx:
 1929 D1:C1BC ED 33 06 -      ADDCYC(6)
 1930 D1:C1BF E5 -  -  -      push hl
 1931 D1:C1C0 7E -  -  -          ld  a,(hl)
 1932 D1:C1C1 21 00 38 D0         ld  hl,ZEROPAGE
 1933 D1:C1C5 85 -  -  -          add a,L
 1934 D1:C1C6 DD 86 01 -          add a,(ix+REGX)
 1935 D1:C1C9 6F -  -  -          ld  L,a
 1936 D1:C1CA 7E -  -  -          ld  a,(hl)
 1937 D1:C1CB 2C -  -  -          inc L
 1938 D1:C1CC 56 -  -  -          ld  d,(hl)
 1939 D1:C1CD 42 -  -  -          ld  b,d
 1940 D1:C1CE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1941 D1:C1D0 ED 4C -  -          mlt bc
 1942 D1:C1D2 21 00 40 D0         ld  hl,PAGETABLE
 1943 D1:C1D6 09 -  -  -          add hl,bc
 1944 D1:C1D7 ED 27 -  -          ld  hl,(hl)
 1945 D1:C1D9 06 00 -  -          ld  b,0
 1946 D1:C1DB 4F -  -  -          ld  c,a
 1947 D1:C1DC 09 -  -  -          add hl,bc
 1948 D1:C1DD 7E -  -  -          READ_ACCESS
 1949 D1:C1DE E1 -  -  -      pop hl
 1950 D1:C1DF DD A6 00 -      and a,(ix+REGA)
 1951 D1:C1E2 DD 77 00 -      ld  (ix+REGA),A
 1952 D1:C1E5 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1953 D1:C1F9 C3 A8 B3 D1     jp i6502NextLoad
 1954 D1:C1FD -  -  -  -  
 1955 D1:C1FD -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1956 D1:C1FD -  -  -  -  inst6502_and_indy:
 1957 D1:C1FD ED 33 05 -      ADDCYC(5)
 1958 D1:C200 E5 -  -  -      push hl
 1959 D1:C201 7E -  -  -          ld  a,(hl)
 1960 D1:C202 21 00 38 D0         ld  hl,ZEROPAGE
 1961 D1:C206 85 -  -  -          add a,L
 1962 D1:C207 6F -  -  -          ld  L,a
 1963 D1:C208 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1964 D1:C209 2C -  -  -          inc L
 1965 D1:C20A DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1966 D1:C20D 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1967 D1:C20E 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1968 D1:C210 24 -  -  -          inc h
 1969 D1:C211 FD 23 -  -          ADDCYC(1)
 1970 D1:C213 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1971 D1:C214 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1972 D1:C216 ED 6C -  -          mlt hl          ;23.
 1973 D1:C218 01 00 40 D0         ld  bc,PAGETABLE
 1974 D1:C21C 09 -  -  -          add hl,bc
 1975 D1:C21D ED 27 -  -          ld  hl,(hl)     ;address get.
 1976 D1:C21F 01 00 00 00         ld  bc,0
 1977 D1:C223 4F -  -  -          ld  c,a
 1978 D1:C224 09 -  -  -          add hl,bc       ;Full address get.
 1979 D1:C225 7E -  -  -          READ_ACCESS
 1980 D1:C226 E1 -  -  -      pop hl
 1981 D1:C227 DD A6 00 -      and a,(ix+REGA)
 1982 D1:C22A DD 77 00 -      ld  (ix+REGA),A
 1983 D1:C22D DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1984 D1:C241 C3 A8 B3 D1     jp i6502NextLoad
 1985 D1:C245 -  -  -  -  
 1986 D1:C245 -  -  -  -  ;-----------------------------------------------------------------------------
 1987 D1:C245 -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1988 D1:C245 -  -  -  -  ;A EOR M -> A
 1989 D1:C245 -  -  -  -  ;N	Z	C	I	D	V
 1990 D1:C245 -  -  -  -  ;+	+	-	-	-	-
 1991 D1:C245 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1992 D1:C245 -  -  -  -  
 1993 D1:C245 -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1994 D1:C245 -  -  -  -  inst6502_eor_imm:
 1995 D1:C245 ED 33 02 -      ADDCYC(2)
 1996 D1:C248 7E -  -  -      ld  a,(hl)
 1997 D1:C249 DD AE 00 -      xor a,(ix+REGA)
 1998 D1:C24C DD 77 00 -      ld  (ix+REGA),A
 1999 D1:C24F DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2000 D1:C263 C3 A8 B3 D1     jp i6502NextLoad
 2001 D1:C267 -  -  -  -  
 2002 D1:C267 -  -  -  -  ;zeropage	EOR oper	45	2	3  
 2003 D1:C267 -  -  -  -  inst6502_eor_zp:
 2004 D1:C267 ED 33 03 -      ADDCYC(3)
 2005 D1:C26A 7E -  -  -      ld  a,(hl)
 2006 D1:C26B 01 00 38 D0     ld  bc,ZEROPAGE
 2007 D1:C26F 81 -  -  -      add a,c
 2008 D1:C270 4F -  -  -      ld  c,a
 2009 D1:C271 0A -  -  -      ld  a,(bc)
 2010 D1:C272 DD AE 00 -      xor a,(ix+REGA)
 2011 D1:C275 DD 77 00 -      ld  (ix+REGA),A
 2012 D1:C278 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2013 D1:C28C C3 A8 B3 D1     jp i6502NextLoad
 2014 D1:C290 -  -  -  -  
 2015 D1:C290 -  -  -  -  
 2016 D1:C290 -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 2017 D1:C290 -  -  -  -  inst6502_eor_zpx:
 2018 D1:C290 ED 33 04 -      ADDCYC(4)
 2019 D1:C293 7E -  -  -      ld  a,(hl)
 2020 D1:C294 01 00 38 D0     ld  bc,ZEROPAGE
 2021 D1:C298 81 -  -  -      add a,c
 2022 D1:C299 DD 86 01 -      add a,(ix+REGX)
 2023 D1:C29C 4F -  -  -      ld  c,a
 2024 D1:C29D 0A -  -  -      ld  a,(bc)
 2025 D1:C29E DD AE 00 -      xor a,(ix+REGA)
 2026 D1:C2A1 DD 77 00 -      ld  (ix+REGA),A
 2027 D1:C2A4 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2028 D1:C2B8 C3 A8 B3 D1     jp i6502NextLoad
 2029 D1:C2BC -  -  -  -  
 2030 D1:C2BC -  -  -  -  ;absolute	EOR oper	4D	3	4  
 2031 D1:C2BC -  -  -  -  inst6502_eor_abs:
 2032 D1:C2BC ED 33 04 -      ADDCYC(4)
 2033 D1:C2BF CD 1D B6 D1     call subroutine6502_abs_split_start
 2034 D1:C2C3 E5 -  -  -      push hl
 2035 D1:C2C4 50 -  -  -          ld  d,b
 2036 D1:C2C5 79 -  -  -          ld  a,c
 2037 D1:C2C6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2038 D1:C2C8 ED 4C -  -          mlt bc
 2039 D1:C2CA 21 00 40 D0         ld  hl,PAGETABLE
 2040 D1:C2CE 09 -  -  -          add hl,bc
 2041 D1:C2CF ED 27 -  -          ld  hl,(hl)
 2042 D1:C2D1 06 00 -  -          ld  b,0
 2043 D1:C2D3 4F -  -  -          ld  c,a
 2044 D1:C2D4 09 -  -  -          add hl,bc   ;full address
 2045 D1:C2D5 7E -  -  -          READ_ACCESS
 2046 D1:C2D6 E1 -  -  -      pop hl
 2047 D1:C2D7 DD AE 00 -      xor a,(ix+REGA)
 2048 D1:C2DA DD 77 00 -      ld  (ix+REGA),A
 2049 D1:C2DD DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2050 D1:C2F1 C3 A8 B3 D1     jp i6502NextLoad
 2051 D1:C2F5 -  -  -  -  
 2052 D1:C2F5 -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 2053 D1:C2F5 -  -  -  -  inst6502_eor_absx:
 2054 D1:C2F5 ED 33 04 -      ADDCYC(4)
 2055 D1:C2F8 CD 1D B6 D1     call subroutine6502_abs_split_start
 2056 D1:C2FC E5 -  -  -      push hl
 2057 D1:C2FD 50 -  -  -          ld  d,b
 2058 D1:C2FE 79 -  -  -          ld  a,c
 2059 D1:C2FF 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2060 D1:C301 ED 4C -  -          mlt bc
 2061 D1:C303 21 00 40 D0         ld  hl,PAGETABLE
 2062 D1:C307 09 -  -  -          add hl,bc
 2063 D1:C308 ED 27 -  -          ld  hl,(hl)
 2064 D1:C30A 06 00 -  -          ld  b,0
 2065 D1:C30C DD 86 01 -          add a,(ix+REGX)
 2066 D1:C30F 4F -  -  -          ld  c,a
 2067 D1:C310 30 04 -  -          jr  nc,+_
 2068 D1:C312 04 -  -  -          inc b
 2069 D1:C313 14 -  -  -          inc d
 2070 D1:C314 FD 23 -  -          ADDCYC(1)
 2071 D1:C316 09 -  -  -  _:      add hl,bc   ;full address
 2072 D1:C317 7E -  -  -          READ_ACCESS
 2073 D1:C318 E1 -  -  -      pop hl
 2074 D1:C319 DD AE 00 -      xor a,(ix+REGA)
 2075 D1:C31C DD 77 00 -      ld  (ix+REGA),A
 2076 D1:C31F DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2077 D1:C333 C3 A8 B3 D1     jp i6502NextLoad
 2078 D1:C337 -  -  -  -  
 2079 D1:C337 -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2080 D1:C337 -  -  -  -  inst6502_eor_absy:
 2081 D1:C337 ED 33 04 -      ADDCYC(4)
 2082 D1:C33A CD 1D B6 D1     call subroutine6502_abs_split_start
 2083 D1:C33E E5 -  -  -      push hl
 2084 D1:C33F 50 -  -  -          ld  d,b
 2085 D1:C340 79 -  -  -          ld  a,c
 2086 D1:C341 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2087 D1:C343 ED 4C -  -          mlt bc
 2088 D1:C345 21 00 40 D0         ld  hl,PAGETABLE
 2089 D1:C349 09 -  -  -          add hl,bc
 2090 D1:C34A ED 27 -  -          ld  hl,(hl)
 2091 D1:C34C 06 00 -  -          ld  b,0
 2092 D1:C34E DD 86 02 -          add a,(ix+REGY)
 2093 D1:C351 4F -  -  -          ld  c,a
 2094 D1:C352 30 04 -  -          jr  nc,+_
 2095 D1:C354 04 -  -  -          inc b
 2096 D1:C355 14 -  -  -          inc d
 2097 D1:C356 FD 23 -  -          ADDCYC(1)
 2098 D1:C358 09 -  -  -  _:      add hl,bc   ;full address
 2099 D1:C359 7E -  -  -          READ_ACCESS
 2100 D1:C35A E1 -  -  -      pop hl
 2101 D1:C35B DD AE 00 -      xor a,(ix+REGA)
 2102 D1:C35E DD 77 00 -      ld  (ix+REGA),A
 2103 D1:C361 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2104 D1:C375 C3 A8 B3 D1     jp i6502NextLoad
 2105 D1:C379 -  -  -  -  
 2106 D1:C379 -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2107 D1:C379 -  -  -  -  inst6502_eor_indx:
 2108 D1:C379 ED 33 06 -      ADDCYC(6)
 2109 D1:C37C E5 -  -  -      push hl
 2110 D1:C37D 7E -  -  -          ld  a,(hl)
 2111 D1:C37E 21 00 38 D0         ld  hl,ZEROPAGE
 2112 D1:C382 85 -  -  -          add a,L
 2113 D1:C383 DD 86 01 -          add a,(ix+REGX)
 2114 D1:C386 6F -  -  -          ld  L,a
 2115 D1:C387 7E -  -  -          ld  a,(hl)
 2116 D1:C388 2C -  -  -          inc L
 2117 D1:C389 56 -  -  -          ld  d,(hl)
 2118 D1:C38A 42 -  -  -          ld  b,d
 2119 D1:C38B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2120 D1:C38D ED 4C -  -          mlt bc
 2121 D1:C38F 21 00 40 D0         ld  hl,PAGETABLE
 2122 D1:C393 09 -  -  -          add hl,bc
 2123 D1:C394 ED 27 -  -          ld  hl,(hl)
 2124 D1:C396 06 00 -  -          ld  b,0
 2125 D1:C398 4F -  -  -          ld  c,a
 2126 D1:C399 09 -  -  -          add hl,bc
 2127 D1:C39A 7E -  -  -          READ_ACCESS
 2128 D1:C39B E1 -  -  -      pop hl
 2129 D1:C39C DD AE 00 -      xor a,(ix+REGA)
 2130 D1:C39F DD 77 00 -      ld  (ix+REGA),A
 2131 D1:C3A2 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2132 D1:C3B6 C3 A8 B3 D1     jp i6502NextLoad
 2133 D1:C3BA -  -  -  -  
 2134 D1:C3BA -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2135 D1:C3BA -  -  -  -  inst6502_eor_indy:
 2136 D1:C3BA ED 33 05 -      ADDCYC(5)
 2137 D1:C3BD E5 -  -  -      push hl
 2138 D1:C3BE 7E -  -  -          ld  a,(hl)
 2139 D1:C3BF 21 00 38 D0         ld  hl,ZEROPAGE
 2140 D1:C3C3 85 -  -  -          add a,L
 2141 D1:C3C4 6F -  -  -          ld  L,a
 2142 D1:C3C5 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2143 D1:C3C6 2C -  -  -          inc L
 2144 D1:C3C7 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2145 D1:C3CA 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2146 D1:C3CB 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2147 D1:C3CD 24 -  -  -          inc h
 2148 D1:C3CE FD 23 -  -          ADDCYC(1)
 2149 D1:C3D0 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2150 D1:C3D1 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2151 D1:C3D3 ED 6C -  -          mlt hl          ;23.
 2152 D1:C3D5 01 00 40 D0         ld  bc,PAGETABLE
 2153 D1:C3D9 09 -  -  -          add hl,bc
 2154 D1:C3DA ED 27 -  -          ld  hl,(hl)     ;address get.
 2155 D1:C3DC 01 00 00 00         ld  bc,0
 2156 D1:C3E0 4F -  -  -          ld  c,a
 2157 D1:C3E1 09 -  -  -          add hl,bc       ;Full address get.
 2158 D1:C3E2 7E -  -  -          READ_ACCESS
 2159 D1:C3E3 E1 -  -  -      pop hl
 2160 D1:C3E4 DD AE 00 -      xor a,(ix+REGA)
 2161 D1:C3E7 DD 77 00 -      ld  (ix+REGA),A
 2162 D1:C3EA DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2163 D1:C3FE C3 A8 B3 D1     jp i6502NextLoad
 2164 D1:C402 -  -  -  -  
 2165 D1:C402 -  -  -  -  ;-----------------------------------------------------------------------------
 2166 D1:C402 -  -  -  -  ;ORA - OR Memory with Accumulator
 2167 D1:C402 -  -  -  -  ;A OR M -> A
 2168 D1:C402 -  -  -  -  ;N	Z	C	I	D	V
 2169 D1:C402 -  -  -  -  ;+	+	-	-	-	-
 2170 D1:C402 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2171 D1:C402 -  -  -  -  
 2172 D1:C402 -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2173 D1:C402 -  -  -  -  inst6502_ora_imm:
 2174 D1:C402 ED 33 02 -      ADDCYC(2)
 2175 D1:C405 7E -  -  -      ld  a,(hl)
 2176 D1:C406 DD B6 00 -      or  a,(ix+REGA)
 2177 D1:C409 DD 77 00 -      ld  (ix+REGA),A
 2178 D1:C40C DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2179 D1:C420 C3 A8 B3 D1     jp i6502NextLoad
 2180 D1:C424 -  -  -  -  
 2181 D1:C424 -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2182 D1:C424 -  -  -  -  inst6502_ora_zp:
 2183 D1:C424 ED 33 03 -      ADDCYC(3)
 2184 D1:C427 7E -  -  -      ld  a,(hl)
 2185 D1:C428 01 00 38 D0     ld  bc,ZEROPAGE
 2186 D1:C42C 81 -  -  -      add a,c
 2187 D1:C42D 4F -  -  -      ld  c,a
 2188 D1:C42E 0A -  -  -      ld  a,(bc)
 2189 D1:C42F DD B6 00 -      or  a,(ix+REGA)
 2190 D1:C432 DD 77 00 -      ld  (ix+REGA),A
 2191 D1:C435 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2192 D1:C449 C3 A8 B3 D1     jp i6502NextLoad
 2193 D1:C44D -  -  -  -  
 2194 D1:C44D -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2195 D1:C44D -  -  -  -  inst6502_ora_zpx:
 2196 D1:C44D ED 33 04 -      ADDCYC(4)
 2197 D1:C450 7E -  -  -      ld  a,(hl)
 2198 D1:C451 01 00 38 D0     ld  bc,ZEROPAGE
 2199 D1:C455 81 -  -  -      add a,c
 2200 D1:C456 DD 86 01 -      add a,(ix+REGX)
 2201 D1:C459 4F -  -  -      ld  c,a
 2202 D1:C45A 0A -  -  -      ld  a,(bc)
 2203 D1:C45B DD B6 00 -      or  a,(ix+REGA)
 2204 D1:C45E DD 77 00 -      ld  (ix+REGA),A
 2205 D1:C461 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2206 D1:C475 C3 A8 B3 D1     jp i6502NextLoad
 2207 D1:C479 -  -  -  -  
 2208 D1:C479 -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2209 D1:C479 -  -  -  -  inst6502_ora_abs:
 2210 D1:C479 ED 33 04 -      ADDCYC(4)
 2211 D1:C47C CD 1D B6 D1     call subroutine6502_abs_split_start
 2212 D1:C480 E5 -  -  -      push hl
 2213 D1:C481 50 -  -  -          ld  d,b
 2214 D1:C482 79 -  -  -          ld  a,c
 2215 D1:C483 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2216 D1:C485 ED 4C -  -          mlt bc
 2217 D1:C487 21 00 40 D0         ld  hl,PAGETABLE
 2218 D1:C48B 09 -  -  -          add hl,bc
 2219 D1:C48C ED 27 -  -          ld  hl,(hl)
 2220 D1:C48E 06 00 -  -          ld  b,0
 2221 D1:C490 4F -  -  -          ld  c,a
 2222 D1:C491 09 -  -  -          add hl,bc   ;full address
 2223 D1:C492 7E -  -  -          READ_ACCESS
 2224 D1:C493 E1 -  -  -      pop hl
 2225 D1:C494 DD B6 00 -      or  a,(ix+REGA)
 2226 D1:C497 DD 77 00 -      ld  (ix+REGA),A
 2227 D1:C49A DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2228 D1:C4AE C3 A8 B3 D1     jp i6502NextLoad
 2229 D1:C4B2 -  -  -  -  
 2230 D1:C4B2 -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2231 D1:C4B2 -  -  -  -  inst6502_ora_absx:
 2232 D1:C4B2 ED 33 04 -      ADDCYC(4)
 2233 D1:C4B5 CD 1D B6 D1     call subroutine6502_abs_split_start
 2234 D1:C4B9 E5 -  -  -      push hl
 2235 D1:C4BA 50 -  -  -          ld  d,b
 2236 D1:C4BB 79 -  -  -          ld  a,c
 2237 D1:C4BC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2238 D1:C4BE ED 4C -  -          mlt bc
 2239 D1:C4C0 21 00 40 D0         ld  hl,PAGETABLE
 2240 D1:C4C4 09 -  -  -          add hl,bc
 2241 D1:C4C5 ED 27 -  -          ld  hl,(hl)
 2242 D1:C4C7 06 00 -  -          ld  b,0
 2243 D1:C4C9 DD 86 01 -          add a,(ix+REGX)
 2244 D1:C4CC 4F -  -  -          ld  c,a
 2245 D1:C4CD 30 04 -  -          jr  nc,+_
 2246 D1:C4CF 04 -  -  -          inc b
 2247 D1:C4D0 14 -  -  -          inc d
 2248 D1:C4D1 FD 23 -  -          ADDCYC(1)
 2249 D1:C4D3 09 -  -  -  _:      add hl,bc   ;full address
 2250 D1:C4D4 7E -  -  -          READ_ACCESS
 2251 D1:C4D5 E1 -  -  -      pop hl
 2252 D1:C4D6 DD B6 00 -      or  a,(ix+REGA)
 2253 D1:C4D9 DD 77 00 -      ld  (ix+REGA),A
 2254 D1:C4DC DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2255 D1:C4F0 C3 A8 B3 D1     jp i6502NextLoad
 2256 D1:C4F4 -  -  -  -  
 2257 D1:C4F4 -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2258 D1:C4F4 -  -  -  -  inst6502_ora_absy:
 2259 D1:C4F4 ED 33 04 -      ADDCYC(4)
 2260 D1:C4F7 CD 1D B6 D1     call subroutine6502_abs_split_start
 2261 D1:C4FB E5 -  -  -      push hl
 2262 D1:C4FC 50 -  -  -          ld  d,b
 2263 D1:C4FD 79 -  -  -          ld  a,c
 2264 D1:C4FE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2265 D1:C500 ED 4C -  -          mlt bc
 2266 D1:C502 21 00 40 D0         ld  hl,PAGETABLE
 2267 D1:C506 09 -  -  -          add hl,bc
 2268 D1:C507 ED 27 -  -          ld  hl,(hl)
 2269 D1:C509 06 00 -  -          ld  b,0
 2270 D1:C50B DD 86 02 -          add a,(ix+REGY)
 2271 D1:C50E 4F -  -  -          ld  c,a
 2272 D1:C50F 30 04 -  -          jr  nc,+_
 2273 D1:C511 04 -  -  -          inc b
 2274 D1:C512 14 -  -  -          inc d
 2275 D1:C513 FD 23 -  -          ADDCYC(1)
 2276 D1:C515 09 -  -  -  _:      add hl,bc   ;full address
 2277 D1:C516 7E -  -  -          READ_ACCESS
 2278 D1:C517 E1 -  -  -      pop hl
 2279 D1:C518 DD B6 00 -      or  a,(ix+REGA)
 2280 D1:C51B DD 77 00 -      ld  (ix+REGA),A
 2281 D1:C51E DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2282 D1:C532 C3 A8 B3 D1     jp i6502NextLoad
 2283 D1:C536 -  -  -  -  
 2284 D1:C536 -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2285 D1:C536 -  -  -  -  inst6502_ora_indx:
 2286 D1:C536 ED 33 06 -      ADDCYC(6)
 2287 D1:C539 E5 -  -  -      push hl
 2288 D1:C53A 7E -  -  -          ld  a,(hl)
 2289 D1:C53B 21 00 38 D0         ld  hl,ZEROPAGE
 2290 D1:C53F 85 -  -  -          add a,L
 2291 D1:C540 DD 86 01 -          add a,(ix+REGX)
 2292 D1:C543 6F -  -  -          ld  L,a
 2293 D1:C544 7E -  -  -          ld  a,(hl)
 2294 D1:C545 2C -  -  -          inc L
 2295 D1:C546 56 -  -  -          ld  d,(hl)
 2296 D1:C547 42 -  -  -          ld  b,d
 2297 D1:C548 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2298 D1:C54A ED 4C -  -          mlt bc
 2299 D1:C54C 21 00 40 D0         ld  hl,PAGETABLE
 2300 D1:C550 09 -  -  -          add hl,bc
 2301 D1:C551 ED 27 -  -          ld  hl,(hl)
 2302 D1:C553 06 00 -  -          ld  b,0
 2303 D1:C555 4F -  -  -          ld  c,a
 2304 D1:C556 09 -  -  -          add hl,bc
 2305 D1:C557 7E -  -  -          READ_ACCESS
 2306 D1:C558 E1 -  -  -      pop hl
 2307 D1:C559 DD B6 00 -      or  a,(ix+REGA)
 2308 D1:C55C DD 77 00 -      ld  (ix+REGA),A
 2309 D1:C55F DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2310 D1:C573 C3 A8 B3 D1     jp i6502NextLoad
 2311 D1:C577 -  -  -  -  
 2312 D1:C577 -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2313 D1:C577 -  -  -  -  inst6502_ora_indy:
 2314 D1:C577 ED 33 05 -      ADDCYC(5)
 2315 D1:C57A E5 -  -  -      push hl
 2316 D1:C57B 7E -  -  -          ld  a,(hl)
 2317 D1:C57C 21 00 38 D0         ld  hl,ZEROPAGE
 2318 D1:C580 85 -  -  -          add a,L
 2319 D1:C581 6F -  -  -          ld  L,a
 2320 D1:C582 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2321 D1:C583 2C -  -  -          inc L
 2322 D1:C584 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2323 D1:C587 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2324 D1:C588 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2325 D1:C58A 24 -  -  -          inc h
 2326 D1:C58B FD 23 -  -          ADDCYC(1)
 2327 D1:C58D 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2328 D1:C58E 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2329 D1:C590 ED 6C -  -          mlt hl          ;23.
 2330 D1:C592 01 00 40 D0         ld  bc,PAGETABLE
 2331 D1:C596 09 -  -  -          add hl,bc
 2332 D1:C597 ED 27 -  -          ld  hl,(hl)     ;address get.
 2333 D1:C599 01 00 00 00         ld  bc,0
 2334 D1:C59D 4F -  -  -          ld  c,a
 2335 D1:C59E 09 -  -  -          add hl,bc       ;Full address get.
 2336 D1:C59F 7E -  -  -          READ_ACCESS
 2337 D1:C5A0 E1 -  -  -      pop hl
 2338 D1:C5A1 DD B6 00 -      or  a,(ix+REGA)
 2339 D1:C5A4 DD 77 00 -      ld  (ix+REGA),A
 2340 D1:C5A7 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2341 D1:C5BB C3 A8 B3 D1     jp i6502NextLoad
 2342 D1:C5BF -  -  -  -  
 2343 D1:C5BF -  -  -  -  ;-----------------------------------------------------------------------------
 2344 D1:C5BF -  -  -  -  ;-----------------------------------------------------------------------------
 2345 D1:C5BF -  -  -  -  ;-----------------------------------------------------------------------------
 2346 D1:C5BF -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2347 D1:C5BF -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2348 D1:C5BF -  -  -  -  ;C <- [76543210] <- 0
 2349 D1:C5BF -  -  -  -  ;N	Z	C	I	D	V
 2350 D1:C5BF -  -  -  -  ;+	+	+	-	-	-
 2351 D1:C5BF -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2352 D1:C5BF -  -  -  -  
 2353 D1:C5BF -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2354 D1:C5BF -  -  -  -  inst6502_asl:
 2355 D1:C5BF ED 33 02 -      ADDCYC(2)
 2356 D1:C5C2 DD 7E 00 -      ld  a,(ix+REGA)
 2357 D1:C5C5 CB 27 -  -      sla a
 2358 D1:C5C7 DD 77 00 -      ld  (ix+REGA),a
 2359 D1:C5CA DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2360 D1:C5E4 C3 C1 B3 D1     jp i6502FinishLoad
 2361 D1:C5E8 -  -  -  -  
 2362 D1:C5E8 -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2363 D1:C5E8 -  -  -  -  inst6502_asl_zp:
 2364 D1:C5E8 ED 33 05 -      ADDCYC(5)
 2365 D1:C5EB 7E -  -  -      ld  a,(hl)
 2366 D1:C5EC 01 00 38 D0     ld  bc,ZEROPAGE
 2367 D1:C5F0 81 -  -  -      add a,c
 2368 D1:C5F1 4F -  -  -      ld  c,a
 2369 D1:C5F2 0A -  -  -      ld  a,(bc)
 2370 D1:C5F3 CB 27 -  -      sla a
 2371 D1:C5F5 02 -  -  -      ld  (bc),a
 2372 D1:C5F6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2373 D1:C610 C3 A8 B3 D1     jp i6502NextLoad
 2374 D1:C614 -  -  -  -  
 2375 D1:C614 -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2376 D1:C614 -  -  -  -  inst6502_asl_zpx:
 2377 D1:C614 ED 33 06 -      ADDCYC(6)
 2378 D1:C617 7E -  -  -      ld  a,(hl)
 2379 D1:C618 01 00 38 D0     ld  bc,ZEROPAGE
 2380 D1:C61C 81 -  -  -      add a,c
 2381 D1:C61D DD 86 01 -      add a,(ix+REGX)
 2382 D1:C620 4F -  -  -      ld  c,a
 2383 D1:C621 0A -  -  -      ld  a,(bc)
 2384 D1:C622 CB 27 -  -      sla a
 2385 D1:C624 02 -  -  -      ld  (bc),a
 2386 D1:C625 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2387 D1:C63F C3 A8 B3 D1     jp i6502NextLoad
 2388 D1:C643 -  -  -  -  
 2389 D1:C643 -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2390 D1:C643 -  -  -  -  inst6502_asl_abs:
 2391 D1:C643 ED 33 06 -      ADDCYC(6)
 2392 D1:C646 CD 1D B6 D1     call subroutine6502_abs_split_start
 2393 D1:C64A E5 -  -  -      push hl
 2394 D1:C64B 50 -  -  -          ld  d,b
 2395 D1:C64C 79 -  -  -          ld  a,c
 2396 D1:C64D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2397 D1:C64F ED 4C -  -          mlt bc
 2398 D1:C651 21 00 40 D0         ld  hl,PAGETABLE
 2399 D1:C655 09 -  -  -          add hl,bc
 2400 D1:C656 ED 27 -  -          ld  hl,(hl)
 2401 D1:C658 06 00 -  -          ld  b,0
 2402 D1:C65A 4F -  -  -          ld  c,a
 2403 D1:C65B 09 -  -  -          add hl,bc   ;full address
 2404 D1:C65C 7E -  -  -          READ_ACCESS
 2405 D1:C65D 7E -  -  -          ld  a,(hl)
 2406 D1:C65E CB 27 -  -          sla a
 2407 D1:C660 4F -  -  -          ld  c,a
 2408 D1:C661 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2409 D1:C67B 41 -  -  -          ld  b,c
 2410 D1:C67C 70 -  -  -          WRITE_ACCESS
 2411 D1:C67D E1 -  -  -      pop hl
 2412 D1:C67E C3 A8 B3 D1     jp i6502NextLoad
 2413 D1:C682 -  -  -  -  
 2414 D1:C682 -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2415 D1:C682 -  -  -  -  inst6502_asl_absx:
 2416 D1:C682 ED 33 07 -      ADDCYC(7)
 2417 D1:C685 CD 1D B6 D1     call subroutine6502_abs_split_start
 2418 D1:C689 E5 -  -  -      push hl
 2419 D1:C68A 50 -  -  -          ld  d,b
 2420 D1:C68B 79 -  -  -          ld  a,c
 2421 D1:C68C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2422 D1:C68E ED 4C -  -          mlt bc
 2423 D1:C690 21 00 40 D0         ld  hl,PAGETABLE
 2424 D1:C694 09 -  -  -          add hl,bc
 2425 D1:C695 ED 27 -  -          ld  hl,(hl)
 2426 D1:C697 06 00 -  -          ld  b,0
 2427 D1:C699 DD 86 01 -          add a,(ix+REGX)
 2428 D1:C69C 4F -  -  -          ld  c,a
 2429 D1:C69D 30 02 -  -          jr  nc,+_
 2430 D1:C69F 04 -  -  -          inc b
 2431 D1:C6A0 14 -  -  -          inc d
 2432 D1:C6A1 09 -  -  -  _:      add hl,bc   ;full address
 2433 D1:C6A2 7E -  -  -          READ_ACCESS
 2434 D1:C6A3 7E -  -  -          ld  a,(hl)
 2435 D1:C6A4 CB 27 -  -          sla a
 2436 D1:C6A6 4F -  -  -          ld  c,a
 2437 D1:C6A7 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2438 D1:C6C1 41 -  -  -          ld  b,c
 2439 D1:C6C2 70 -  -  -          WRITE_ACCESS
 2440 D1:C6C3 E1 -  -  -      pop hl
 2441 D1:C6C4 C3 A8 B3 D1     jp i6502NextLoad
 2442 D1:C6C8 -  -  -  -  
 2443 D1:C6C8 -  -  -  -  ;-----------------------------------------------------------------------------
 2444 D1:C6C8 -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2445 D1:C6C8 -  -  -  -  ;0 -> [76543210] -> C
 2446 D1:C6C8 -  -  -  -  ;N	Z	C	I	D	V
 2447 D1:C6C8 -  -  -  -  ;0	+	+	-	-	-
 2448 D1:C6C8 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2449 D1:C6C8 -  -  -  -  
 2450 D1:C6C8 -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2451 D1:C6C8 -  -  -  -  inst6502_lsr:
 2452 D1:C6C8 ED 33 02 -      ADDCYC(2)
 2453 D1:C6CB DD 7E 00 -      ld  a,(ix+REGA)
 2454 D1:C6CE CB 3F -  -      srl a
 2455 D1:C6D0 DD 77 00 -      ld  (ix+REGA),a
 2456 D1:C6D3 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2457 D1:C6ED C3 C1 B3 D1     jp i6502FinishLoad
 2458 D1:C6F1 -  -  -  -  
 2459 D1:C6F1 -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2460 D1:C6F1 -  -  -  -  inst6502_lsr_zp:
 2461 D1:C6F1 ED 33 05 -      ADDCYC(5)
 2462 D1:C6F4 7E -  -  -      ld  a,(hl)
 2463 D1:C6F5 01 00 38 D0     ld  bc,ZEROPAGE
 2464 D1:C6F9 81 -  -  -      add a,c
 2465 D1:C6FA 4F -  -  -      ld  c,a
 2466 D1:C6FB 0A -  -  -      ld  a,(bc)
 2467 D1:C6FC CB 3F -  -      srl a
 2468 D1:C6FE 02 -  -  -      ld  (bc),a
 2469 D1:C6FF DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2470 D1:C719 C3 A8 B3 D1     jp i6502NextLoad
 2471 D1:C71D -  -  -  -  
 2472 D1:C71D -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2473 D1:C71D -  -  -  -  inst6502_lsr_zpx:
 2474 D1:C71D ED 33 06 -      ADDCYC(6)
 2475 D1:C720 7E -  -  -      ld  a,(hl)
 2476 D1:C721 01 00 38 D0     ld  bc,ZEROPAGE
 2477 D1:C725 81 -  -  -      add a,c
 2478 D1:C726 DD 86 01 -      add a,(ix+REGX)
 2479 D1:C729 4F -  -  -      ld  c,a
 2480 D1:C72A 0A -  -  -      ld  a,(bc)
 2481 D1:C72B CB 3F -  -      srl a
 2482 D1:C72D 02 -  -  -      ld  (bc),a
 2483 D1:C72E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2484 D1:C748 C3 A8 B3 D1     jp i6502NextLoad
 2485 D1:C74C -  -  -  -      
 2486 D1:C74C -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2487 D1:C74C -  -  -  -  inst6502_lsr_abs:
 2488 D1:C74C ED 33 06 -      ADDCYC(6)
 2489 D1:C74F CD 1D B6 D1     call subroutine6502_abs_split_start
 2490 D1:C753 E5 -  -  -      push hl
 2491 D1:C754 50 -  -  -          ld  d,b
 2492 D1:C755 79 -  -  -          ld  a,c
 2493 D1:C756 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2494 D1:C758 ED 4C -  -          mlt bc
 2495 D1:C75A 21 00 40 D0         ld  hl,PAGETABLE
 2496 D1:C75E 09 -  -  -          add hl,bc
 2497 D1:C75F ED 27 -  -          ld  hl,(hl)
 2498 D1:C761 06 00 -  -          ld  b,0
 2499 D1:C763 4F -  -  -          ld  c,a
 2500 D1:C764 09 -  -  -          add hl,bc   ;full address
 2501 D1:C765 7E -  -  -          READ_ACCESS
 2502 D1:C766 7E -  -  -          ld  a,(hl)
 2503 D1:C767 CB 3F -  -          srl a
 2504 D1:C769 4F -  -  -          ld  c,a
 2505 D1:C76A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2506 D1:C784 41 -  -  -          ld  b,c
 2507 D1:C785 70 -  -  -          WRITE_ACCESS
 2508 D1:C786 E1 -  -  -      pop hl
 2509 D1:C787 C3 A8 B3 D1     jp i6502NextLoad
 2510 D1:C78B -  -  -  -  
 2511 D1:C78B -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2512 D1:C78B -  -  -  -  inst6502_lsr_absx:
 2513 D1:C78B ED 33 07 -      ADDCYC(7)
 2514 D1:C78E CD 1D B6 D1     call subroutine6502_abs_split_start
 2515 D1:C792 E5 -  -  -      push hl
 2516 D1:C793 50 -  -  -          ld  d,b
 2517 D1:C794 79 -  -  -          ld  a,c
 2518 D1:C795 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2519 D1:C797 ED 4C -  -          mlt bc
 2520 D1:C799 21 00 40 D0         ld  hl,PAGETABLE
 2521 D1:C79D 09 -  -  -          add hl,bc
 2522 D1:C79E ED 27 -  -          ld  hl,(hl)
 2523 D1:C7A0 06 00 -  -          ld  b,0
 2524 D1:C7A2 DD 86 01 -          add a,(ix+REGX)
 2525 D1:C7A5 4F -  -  -          ld  c,a
 2526 D1:C7A6 30 02 -  -          jr  nc,+_
 2527 D1:C7A8 04 -  -  -          inc b
 2528 D1:C7A9 14 -  -  -          inc d
 2529 D1:C7AA 09 -  -  -  _:      add hl,bc   ;full address
 2530 D1:C7AB 7E -  -  -          READ_ACCESS
 2531 D1:C7AC 7E -  -  -          ld  a,(hl)
 2532 D1:C7AD CB 3F -  -          srl a
 2533 D1:C7AF 4F -  -  -          ld  c,a
 2534 D1:C7B0 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2535 D1:C7CA 41 -  -  -          ld  b,c
 2536 D1:C7CB 70 -  -  -          WRITE_ACCESS
 2537 D1:C7CC E1 -  -  -      pop hl
 2538 D1:C7CD -  -  -  -  
 2539 D1:C7CD C3 A8 B3 D1     jp i6502NextLoad
 2540 D1:C7D1 -  -  -  -  
 2541 D1:C7D1 -  -  -  -  ;-----------------------------------------------------------------------------
 2542 D1:C7D1 -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2543 D1:C7D1 -  -  -  -  ;C <- [76543210] <- C
 2544 D1:C7D1 -  -  -  -  ;N	Z	C	I	D	V
 2545 D1:C7D1 -  -  -  -  ;+	+	+	-	-	-
 2546 D1:C7D1 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2547 D1:C7D1 -  -  -  -  
 2548 D1:C7D1 -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2549 D1:C7D1 -  -  -  -  inst6502_rol:
 2550 D1:C7D1 ED 33 02 -      ADDCYC(2)
 2551 D1:C7D4 DD 7E 04 -      ld  a,(ix+REGSR)
 2552 D1:C7D7 1F -  -  -      rra
 2553 D1:C7D8 DD CB 00 16     rl  (ix+REGA)
 2554 D1:C7DC DD 7E 00 -      ld  a,(ix+REGA)
 2555 D1:C7DF DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2556 D1:C7F9 C3 C1 B3 D1     jp i6502FinishLoad
 2557 D1:C7FD -  -  -  -  
 2558 D1:C7FD -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2559 D1:C7FD -  -  -  -  inst6502_rol_zp:
 2560 D1:C7FD ED 33 05 -      ADDCYC(5)
 2561 D1:C800 7E -  -  -      ld  a,(hl)
 2562 D1:C801 01 00 38 D0     ld  bc,ZEROPAGE
 2563 D1:C805 81 -  -  -      add a,c
 2564 D1:C806 4F -  -  -      ld  c,a
 2565 D1:C807 DD 7E 04 -      ld  a,(ix+REGSR)
 2566 D1:C80A 1F -  -  -      rra
 2567 D1:C80B 0A -  -  -      ld  a,(bc)
 2568 D1:C80C 17 -  -  -      rla
 2569 D1:C80D 02 -  -  -      ld  (bc),a
 2570 D1:C80E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2571 D1:C828 C3 A8 B3 D1     jp i6502NextLoad
 2572 D1:C82C -  -  -  -  
 2573 D1:C82C -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2574 D1:C82C -  -  -  -  inst6502_rol_zpx:
 2575 D1:C82C ED 33 06 -      ADDCYC(6)
 2576 D1:C82F 7E -  -  -      ld  a,(hl)
 2577 D1:C830 01 00 38 D0     ld  bc,ZEROPAGE
 2578 D1:C834 81 -  -  -      add a,c
 2579 D1:C835 DD 86 01 -      add a,(ix+REGX)
 2580 D1:C838 4F -  -  -      ld  c,a
 2581 D1:C839 DD 7E 04 -      ld  a,(ix+REGSR)
 2582 D1:C83C 1F -  -  -      rra
 2583 D1:C83D 0A -  -  -      ld  a,(bc)
 2584 D1:C83E 17 -  -  -      rla
 2585 D1:C83F 02 -  -  -      ld  (bc),a
 2586 D1:C840 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2587 D1:C85A C3 A8 B3 D1     jp i6502NextLoad
 2588 D1:C85E -  -  -  -  
 2589 D1:C85E -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2590 D1:C85E -  -  -  -  inst6502_rol_abs:
 2591 D1:C85E ED 33 06 -      ADDCYC(6)
 2592 D1:C861 CD 1D B6 D1     call subroutine6502_abs_split_start
 2593 D1:C865 E5 -  -  -      push hl
 2594 D1:C866 50 -  -  -          ld  d,b
 2595 D1:C867 79 -  -  -          ld  a,c
 2596 D1:C868 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2597 D1:C86A ED 4C -  -          mlt bc
 2598 D1:C86C 21 00 40 D0         ld  hl,PAGETABLE
 2599 D1:C870 09 -  -  -          add hl,bc
 2600 D1:C871 ED 27 -  -          ld  hl,(hl)
 2601 D1:C873 06 00 -  -          ld  b,0
 2602 D1:C875 4F -  -  -          ld  c,a
 2603 D1:C876 09 -  -  -          add hl,bc   ;full address
 2604 D1:C877 7E -  -  -          READ_ACCESS
 2605 D1:C878 DD 7E 04 -          ld  a,(ix+REGSR)
 2606 D1:C87B 1F -  -  -          rra
 2607 D1:C87C 7E -  -  -          ld  a,(hl)
 2608 D1:C87D 17 -  -  -          rla
 2609 D1:C87E 4F -  -  -          ld  c,a
 2610 D1:C87F DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2611 D1:C899 41 -  -  -          ld  b,c
 2612 D1:C89A 70 -  -  -          WRITE_ACCESS
 2613 D1:C89B E1 -  -  -      pop hl
 2614 D1:C89C C3 A8 B3 D1     jp i6502NextLoad
 2615 D1:C8A0 -  -  -  -  
 2616 D1:C8A0 -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2617 D1:C8A0 -  -  -  -  inst6502_rol_absx:
 2618 D1:C8A0 ED 33 07 -      ADDCYC(7)
 2619 D1:C8A3 CD 1D B6 D1     call subroutine6502_abs_split_start
 2620 D1:C8A7 E5 -  -  -      push hl
 2621 D1:C8A8 50 -  -  -          ld  d,b
 2622 D1:C8A9 79 -  -  -          ld  a,c
 2623 D1:C8AA 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2624 D1:C8AC ED 4C -  -          mlt bc
 2625 D1:C8AE 21 00 40 D0         ld  hl,PAGETABLE
 2626 D1:C8B2 09 -  -  -          add hl,bc
 2627 D1:C8B3 ED 27 -  -          ld  hl,(hl)
 2628 D1:C8B5 06 00 -  -          ld  b,0
 2629 D1:C8B7 DD 86 01 -          add a,(ix+REGX)
 2630 D1:C8BA 4F -  -  -          ld  c,a
 2631 D1:C8BB 30 02 -  -          jr  nc,+_
 2632 D1:C8BD 04 -  -  -          inc b
 2633 D1:C8BE 14 -  -  -          inc d
 2634 D1:C8BF 09 -  -  -  _:      add hl,bc   ;full address
 2635 D1:C8C0 7E -  -  -          READ_ACCESS
 2636 D1:C8C1 DD 7E 04 -          ld  a,(ix+REGSR)
 2637 D1:C8C4 1F -  -  -          rra
 2638 D1:C8C5 7E -  -  -          ld  a,(hl)
 2639 D1:C8C6 17 -  -  -          rla
 2640 D1:C8C7 4F -  -  -          ld  c,a
 2641 D1:C8C8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2642 D1:C8E2 41 -  -  -          ld  b,c
 2643 D1:C8E3 70 -  -  -          WRITE_ACCESS
 2644 D1:C8E4 E1 -  -  -      pop hl
 2645 D1:C8E5 C3 A8 B3 D1     jp i6502NextLoad
 2646 D1:C8E9 -  -  -  -  
 2647 D1:C8E9 -  -  -  -  ;-----------------------------------------------------------------------------
 2648 D1:C8E9 -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2649 D1:C8E9 -  -  -  -  ;C -> [76543210] -> C
 2650 D1:C8E9 -  -  -  -  ;N	Z	C	I	D	V
 2651 D1:C8E9 -  -  -  -  ;+	+	+	-	-	-
 2652 D1:C8E9 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2653 D1:C8E9 -  -  -  -  
 2654 D1:C8E9 -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2655 D1:C8E9 -  -  -  -  inst6502_ror:
 2656 D1:C8E9 ED 33 02 -      ADDCYC(2)
 2657 D1:C8EC DD 7E 04 -      ld  a,(ix+REGSR)
 2658 D1:C8EF 1F -  -  -      rra
 2659 D1:C8F0 DD CB 00 1E     rr  (ix+REGA)
 2660 D1:C8F4 DD 7E 00 -      ld  a,(ix+REGA)
 2661 D1:C8F7 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2662 D1:C911 C3 C1 B3 D1     jp i6502FinishLoad
 2663 D1:C915 -  -  -  -  
 2664 D1:C915 -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2665 D1:C915 -  -  -  -  inst6502_ror_zp:
 2666 D1:C915 ED 33 05 -      ADDCYC(5)
 2667 D1:C918 7E -  -  -      ld  a,(hl)
 2668 D1:C919 01 00 38 D0     ld  bc,ZEROPAGE
 2669 D1:C91D 81 -  -  -      add a,c
 2670 D1:C91E 4F -  -  -      ld  c,a
 2671 D1:C91F DD 7E 04 -      ld  a,(ix+REGSR)
 2672 D1:C922 1F -  -  -      rra
 2673 D1:C923 0A -  -  -      ld  a,(bc)
 2674 D1:C924 1F -  -  -      rra
 2675 D1:C925 02 -  -  -      ld  (bc),a
 2676 D1:C926 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2677 D1:C940 C3 A8 B3 D1     jp i6502NextLoad
 2678 D1:C944 -  -  -  -  
 2679 D1:C944 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2680 D1:C944 -  -  -  -  inst6502_ror_zpx:
 2681 D1:C944 ED 33 06 -      ADDCYC(6)
 2682 D1:C947 7E -  -  -      ld  a,(hl)
 2683 D1:C948 01 00 38 D0     ld  bc,ZEROPAGE
 2684 D1:C94C 81 -  -  -      add a,c
 2685 D1:C94D DD 86 01 -      add a,(ix+REGX)
 2686 D1:C950 4F -  -  -      ld  c,a
 2687 D1:C951 DD 7E 04 -      ld  a,(ix+REGSR)
 2688 D1:C954 1F -  -  -      rra
 2689 D1:C955 0A -  -  -      ld  a,(bc)
 2690 D1:C956 1F -  -  -      rra
 2691 D1:C957 02 -  -  -      ld  (bc),a
 2692 D1:C958 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2693 D1:C972 C3 A8 B3 D1     jp i6502NextLoad
 2694 D1:C976 -  -  -  -  
 2695 D1:C976 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2696 D1:C976 -  -  -  -  inst6502_ror_abs:
 2697 D1:C976 ED 33 06 -      ADDCYC(6)
 2698 D1:C979 CD 1D B6 D1     call subroutine6502_abs_split_start
 2699 D1:C97D E5 -  -  -      push hl
 2700 D1:C97E 50 -  -  -          ld  d,b
 2701 D1:C97F 79 -  -  -          ld  a,c
 2702 D1:C980 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2703 D1:C982 ED 4C -  -          mlt bc
 2704 D1:C984 21 00 40 D0         ld  hl,PAGETABLE
 2705 D1:C988 09 -  -  -          add hl,bc
 2706 D1:C989 ED 27 -  -          ld  hl,(hl)
 2707 D1:C98B 06 00 -  -          ld  b,0
 2708 D1:C98D 4F -  -  -          ld  c,a
 2709 D1:C98E 09 -  -  -          add hl,bc   ;full address
 2710 D1:C98F 7E -  -  -          READ_ACCESS
 2711 D1:C990 DD 7E 04 -          ld  a,(ix+REGSR)
 2712 D1:C993 1F -  -  -          rra
 2713 D1:C994 7E -  -  -          ld  a,(hl)
 2714 D1:C995 1F -  -  -          rra
 2715 D1:C996 4F -  -  -          ld  c,a
 2716 D1:C997 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2717 D1:C9B1 41 -  -  -          ld  b,c
 2718 D1:C9B2 70 -  -  -          WRITE_ACCESS
 2719 D1:C9B3 E1 -  -  -      pop hl
 2720 D1:C9B4 C3 A8 B3 D1     jp i6502NextLoad
 2721 D1:C9B8 -  -  -  -  
 2722 D1:C9B8 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2723 D1:C9B8 -  -  -  -  inst6502_ror_absx:
 2724 D1:C9B8 ED 33 07 -      ADDCYC(7)
 2725 D1:C9BB CD 1D B6 D1     call subroutine6502_abs_split_start
 2726 D1:C9BF E5 -  -  -      push hl
 2727 D1:C9C0 50 -  -  -          ld  d,b
 2728 D1:C9C1 79 -  -  -          ld  a,c
 2729 D1:C9C2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2730 D1:C9C4 ED 4C -  -          mlt bc
 2731 D1:C9C6 21 00 40 D0         ld  hl,PAGETABLE
 2732 D1:C9CA 09 -  -  -          add hl,bc
 2733 D1:C9CB ED 27 -  -          ld  hl,(hl)
 2734 D1:C9CD 06 00 -  -          ld  b,0
 2735 D1:C9CF DD 86 01 -          add a,(ix+REGX)
 2736 D1:C9D2 4F -  -  -          ld  c,a
 2737 D1:C9D3 30 02 -  -          jr  nc,+_
 2738 D1:C9D5 04 -  -  -          inc b
 2739 D1:C9D6 14 -  -  -          inc d
 2740 D1:C9D7 09 -  -  -  _:      add hl,bc   ;full address
 2741 D1:C9D8 7E -  -  -          READ_ACCESS
 2742 D1:C9D9 DD 7E 04 -          ld  a,(ix+REGSR)
 2743 D1:C9DC 1F -  -  -          rra
 2744 D1:C9DD 7E -  -  -          ld  a,(hl)
 2745 D1:C9DE 1F -  -  -          rra
 2746 D1:C9DF 4F -  -  -          ld  c,a
 2747 D1:C9E0 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -          FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2748 D1:C9FA 41 -  -  -          ld  b,c
 2749 D1:C9FB 70 -  -  -          WRITE_ACCESS
 2750 D1:C9FC E1 -  -  -      pop hl
 2751 D1:C9FD C3 A8 B3 D1     jp i6502NextLoad
 2752 D1:CA01 -  -  -  -  
 2753 D1:CA01 -  -  -  -  ;-----------------------------------------------------------------------------
 2754 D1:CA01 -  -  -  -  ;-----------------------------------------------------------------------------
 2755 D1:CA01 -  -  -  -  ;-----------------------------------------------------------------------------
 2756 D1:CA01 -  -  -  -  ;Instructions by type: Flag Instructions
 2757 D1:CA01 -  -  -  -  
 2758 D1:CA01 -  -  -  -  ;CLC - Clear Carry Flag
 2759 D1:CA01 -  -  -  -  ;0 -> C
 2760 D1:CA01 -  -  -  -  ;N	Z	C	I	D	V
 2761 D1:CA01 -  -  -  -  ;-	-	0	-	-	-
 2762 D1:CA01 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2763 D1:CA01 -  -  -  -  ;implied	CLC	18	1	2  
 2764 D1:CA01 -  -  -  -  inst6502_clc:
 2765 D1:CA01 ED 33 02 -      ADDCYC(2)
 2766 D1:CA04 DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2767 D1:CA08 C3 C1 B3 D1     jp  i6502FinishLoad
 2768 D1:CA0C -  -  -  -  
 2769 D1:CA0C -  -  -  -  ;CLD - Clear Decimal Mode
 2770 D1:CA0C -  -  -  -  ;0 -> D
 2771 D1:CA0C -  -  -  -  ;N	Z	C	I	D	V
 2772 D1:CA0C -  -  -  -  ;-	-	-	-	0	-
 2773 D1:CA0C -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2774 D1:CA0C -  -  -  -  ;implied	CLD	D8	1	2  
 2775 D1:CA0C -  -  -  -  inst6502_cld:
 2776 D1:CA0C ED 33 02 -      ADDCYC(2)
 2777 D1:CA0F DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2778 D1:CA13 C3 C1 B3 D1     jp  i6502FinishLoad
 2779 D1:CA17 -  -  -  -  
 2780 D1:CA17 -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2781 D1:CA17 -  -  -  -  ;0 -> I
 2782 D1:CA17 -  -  -  -  ;N	Z	C	I	D	V
 2783 D1:CA17 -  -  -  -  ;-	-	-	0	-	-
 2784 D1:CA17 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2785 D1:CA17 -  -  -  -  ;implied	CLI	58	1	2  
 2786 D1:CA17 -  -  -  -  inst6502_cli:
 2787 D1:CA17 ED 33 02 -      ADDCYC(2)
 2788 D1:CA1A DD CB 04 96     res SF_INT,(ix+REGSR)
 2789 D1:CA1E C3 C1 B3 D1     jp  i6502FinishLoad
 2790 D1:CA22 -  -  -  -  
 2791 D1:CA22 -  -  -  -  ;CLV - Clear Overflow Flag
 2792 D1:CA22 -  -  -  -  ;0 -> V
 2793 D1:CA22 -  -  -  -  ;N	Z	C	I	D	V
 2794 D1:CA22 -  -  -  -  ;-	-	-	-	-	0
 2795 D1:CA22 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2796 D1:CA22 -  -  -  -  ;implied	CLV	B8	1	2  
 2797 D1:CA22 -  -  -  -  inst6502_clv:
 2798 D1:CA22 ED 33 02 -      ADDCYC(2)
 2799 D1:CA25 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2800 D1:CA29 C3 C1 B3 D1     jp  i6502FinishLoad
 2801 D1:CA2D -  -  -  -  
 2802 D1:CA2D -  -  -  -  ;SEC - Set Carry Flag
 2803 D1:CA2D -  -  -  -  ;1 -> C
 2804 D1:CA2D -  -  -  -  ;N	Z	C	I	D	V
 2805 D1:CA2D -  -  -  -  ;-	-	1	-	-	-
 2806 D1:CA2D -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2807 D1:CA2D -  -  -  -  ;implied	SEC	38	1	2  
 2808 D1:CA2D -  -  -  -  inst6502_sec:
 2809 D1:CA2D ED 33 02 -      ADDCYC(2)
 2810 D1:CA30 DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2811 D1:CA34 C3 C1 B3 D1     jp  i6502FinishLoad
 2812 D1:CA38 -  -  -  -  
 2813 D1:CA38 -  -  -  -  ;SED - Set Decimal Flag
 2814 D1:CA38 -  -  -  -  ;1 -> D
 2815 D1:CA38 -  -  -  -  ;N	Z	C	I	D	V
 2816 D1:CA38 -  -  -  -  ;-	-	-	-	1	-
 2817 D1:CA38 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2818 D1:CA38 -  -  -  -  ;implied	SED	F8	1	2  
 2819 D1:CA38 -  -  -  -  inst6502_sed:
 2820 D1:CA38 ED 33 02 -      ADDCYC(2)
 2821 D1:CA3B DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2822 D1:CA3F C3 C1 B3 D1     jp  i6502FinishLoad
 2823 D1:CA43 -  -  -  -  
 2824 D1:CA43 -  -  -  -  ;SEI - Set Interrupt Disable Status
 2825 D1:CA43 -  -  -  -  ;1 -> I
 2826 D1:CA43 -  -  -  -  ;N	Z	C	I	D	V
 2827 D1:CA43 -  -  -  -  ;-	-	-	1	-	-
 2828 D1:CA43 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2829 D1:CA43 -  -  -  -  ;implied	SEI	78	1	2  
 2830 D1:CA43 -  -  -  -  inst6502_sei:
 2831 D1:CA43 ED 33 02 -      ADDCYC(2)
 2832 D1:CA46 DD CB 04 D6     set SF_INT,(ix+REGSR)
 2833 D1:CA4A C3 C1 B3 D1     jp  i6502FinishLoad
 2834 D1:CA4E -  -  -  -  
 2835 D1:CA4E -  -  -  -  ;-----------------------------------------------------------------------------
 2836 D1:CA4E -  -  -  -  ;-----------------------------------------------------------------------------
 2837 D1:CA4E -  -  -  -  ;-----------------------------------------------------------------------------
 2838 D1:CA4E -  -  -  -  ;Instructions by type: Comparisons
 2839 D1:CA4E -  -  -  -  
 2840 D1:CA4E -  -  -  -  ;CMP - Compare Memory with Accumulator
 2841 D1:CA4E -  -  -  -  ;A - M
 2842 D1:CA4E -  -  -  -  ;N	Z	C	I	D	V
 2843 D1:CA4E -  -  -  -  ;+	+	+	-	-	-
 2844 D1:CA4E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2845 D1:CA4E -  -  -  -  
 2846 D1:CA4E -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2847 D1:CA4E -  -  -  -  inst6502_cmp_imm:
 2848 D1:CA4E ED 33 02 -      ADDCYC(2)
 2849 D1:CA51 46 -  -  -      ld  b,(hl)
 2850 D1:CA52 C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2851 D1:CA56 -  -  -  -  
 2852 D1:CA56 -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2853 D1:CA56 -  -  -  -  inst6502_cmp_zp:
 2854 D1:CA56 ED 33 03 -      ADDCYC(3)
 2855 D1:CA59 7E -  -  -      ld  a,(hl)
 2856 D1:CA5A 01 00 38 D0     ld  bc,ZEROPAGE
 2857 D1:CA5E 81 -  -  -      add a,c
 2858 D1:CA5F 4F -  -  -      ld  c,a
 2859 D1:CA60 0A -  -  -      ld  a,(bc)
 2860 D1:CA61 47 -  -  -      ld  b,a
 2861 D1:CA62 C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2862 D1:CA66 -  -  -  -  
 2863 D1:CA66 -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2864 D1:CA66 -  -  -  -  inst6502_cmp_zpx:
 2865 D1:CA66 ED 33 04 -      ADDCYC(4)
 2866 D1:CA69 7E -  -  -      ld  a,(hl)
 2867 D1:CA6A 01 00 38 D0     ld  bc,ZEROPAGE
 2868 D1:CA6E 81 -  -  -      add a,c
 2869 D1:CA6F DD 86 01 -      add a,(ix+REGX)
 2870 D1:CA72 4F -  -  -      ld  c,a
 2871 D1:CA73 0A -  -  -      ld  a,(bc)
 2872 D1:CA74 47 -  -  -      ld  b,a
 2873 D1:CA75 C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2874 D1:CA79 -  -  -  -  
 2875 D1:CA79 -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2876 D1:CA79 -  -  -  -  inst6502_cmp_abs:
 2877 D1:CA79 ED 33 04 -      ADDCYC(4)
 2878 D1:CA7C CD 1D B6 D1     call subroutine6502_abs_split_start
 2879 D1:CA80 E5 -  -  -      push hl
 2880 D1:CA81 50 -  -  -          ld  d,b
 2881 D1:CA82 79 -  -  -          ld  a,c
 2882 D1:CA83 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2883 D1:CA85 ED 4C -  -          mlt bc
 2884 D1:CA87 21 00 40 D0         ld  hl,PAGETABLE
 2885 D1:CA8B 09 -  -  -          add hl,bc
 2886 D1:CA8C ED 27 -  -          ld  hl,(hl)
 2887 D1:CA8E 06 00 -  -          ld  b,0
 2888 D1:CA90 4F -  -  -          ld  c,a
 2889 D1:CA91 09 -  -  -          add hl,bc   ;full address
 2890 D1:CA92 7E -  -  -          READ_ACCESS
 2891 D1:CA93 E1 -  -  -      pop hl
 2892 D1:CA94 47 -  -  -      ld  b,a
 2893 D1:CA95 C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2894 D1:CA99 -  -  -  -  
 2895 D1:CA99 -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2896 D1:CA99 -  -  -  -  inst6502_cmp_absx:
 2897 D1:CA99 ED 33 04 -      ADDCYC(4)
 2898 D1:CA9C CD 1D B6 D1     call subroutine6502_abs_split_start
 2899 D1:CAA0 E5 -  -  -      push hl
 2900 D1:CAA1 50 -  -  -          ld  d,b
 2901 D1:CAA2 79 -  -  -          ld  a,c
 2902 D1:CAA3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2903 D1:CAA5 ED 4C -  -          mlt bc
 2904 D1:CAA7 21 00 40 D0         ld  hl,PAGETABLE
 2905 D1:CAAB 09 -  -  -          add hl,bc
 2906 D1:CAAC ED 27 -  -          ld  hl,(hl)
 2907 D1:CAAE 06 00 -  -          ld  b,0
 2908 D1:CAB0 DD 86 01 -          add a,(ix+REGX)
 2909 D1:CAB3 4F -  -  -          ld  c,a
 2910 D1:CAB4 30 04 -  -          jr  nc,+_
 2911 D1:CAB6 04 -  -  -          inc b
 2912 D1:CAB7 14 -  -  -          inc d
 2913 D1:CAB8 FD 23 -  -          ADDCYC(1)
 2914 D1:CABA 09 -  -  -  _:      add hl,bc   ;full address
 2915 D1:CABB 7E -  -  -          READ_ACCESS
 2916 D1:CABC E1 -  -  -      pop hl
 2917 D1:CABD 47 -  -  -      ld  b,a
 2918 D1:CABE C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2919 D1:CAC2 -  -  -  -  
 2920 D1:CAC2 -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2921 D1:CAC2 -  -  -  -  inst6502_cmp_absy:
 2922 D1:CAC2 ED 33 04 -      ADDCYC(4)
 2923 D1:CAC5 CD 1D B6 D1     call subroutine6502_abs_split_start
 2924 D1:CAC9 E5 -  -  -      push hl
 2925 D1:CACA 50 -  -  -          ld  d,b
 2926 D1:CACB 79 -  -  -          ld  a,c
 2927 D1:CACC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2928 D1:CACE ED 4C -  -          mlt bc
 2929 D1:CAD0 21 00 40 D0         ld  hl,PAGETABLE
 2930 D1:CAD4 09 -  -  -          add hl,bc
 2931 D1:CAD5 ED 27 -  -          ld  hl,(hl)
 2932 D1:CAD7 06 00 -  -          ld  b,0
 2933 D1:CAD9 DD 86 02 -          add a,(ix+REGY)
 2934 D1:CADC 4F -  -  -          ld  c,a
 2935 D1:CADD 30 04 -  -          jr  nc,+_
 2936 D1:CADF 04 -  -  -          inc b
 2937 D1:CAE0 14 -  -  -          inc d
 2938 D1:CAE1 FD 23 -  -          ADDCYC(1)
 2939 D1:CAE3 09 -  -  -  _:      add hl,bc   ;full address
 2940 D1:CAE4 7E -  -  -          READ_ACCESS
 2941 D1:CAE5 E1 -  -  -      pop hl
 2942 D1:CAE6 47 -  -  -      ld  b,a
 2943 D1:CAE7 C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2944 D1:CAEB -  -  -  -  
 2945 D1:CAEB -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2946 D1:CAEB -  -  -  -  inst6502_cmp_indx:
 2947 D1:CAEB ED 33 06 -      ADDCYC(6)
 2948 D1:CAEE E5 -  -  -      push hl
 2949 D1:CAEF 7E -  -  -          ld  a,(hl)
 2950 D1:CAF0 21 00 38 D0         ld  hl,ZEROPAGE
 2951 D1:CAF4 85 -  -  -          add a,L
 2952 D1:CAF5 DD 86 01 -          add a,(ix+REGX)
 2953 D1:CAF8 6F -  -  -          ld  L,a
 2954 D1:CAF9 7E -  -  -          ld  a,(hl)
 2955 D1:CAFA 2C -  -  -          inc L
 2956 D1:CAFB 56 -  -  -          ld  d,(hl)
 2957 D1:CAFC 42 -  -  -          ld  b,d
 2958 D1:CAFD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2959 D1:CAFF ED 4C -  -          mlt bc
 2960 D1:CB01 21 00 40 D0         ld  hl,PAGETABLE
 2961 D1:CB05 09 -  -  -          add hl,bc
 2962 D1:CB06 ED 27 -  -          ld  hl,(hl)
 2963 D1:CB08 06 00 -  -          ld  b,0
 2964 D1:CB0A 4F -  -  -          ld  c,a
 2965 D1:CB0B 09 -  -  -          add hl,bc
 2966 D1:CB0C 7E -  -  -          READ_ACCESS
 2967 D1:CB0D E1 -  -  -      pop hl
 2968 D1:CB0E 47 -  -  -      ld  b,a
 2969 D1:CB0F C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2970 D1:CB13 -  -  -  -  
 2971 D1:CB13 -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2972 D1:CB13 -  -  -  -  inst6502_cmp_indy:
 2973 D1:CB13 ED 33 05 -      ADDCYC(5)
 2974 D1:CB16 E5 -  -  -      push hl
 2975 D1:CB17 7E -  -  -          ld  a,(hl)
 2976 D1:CB18 21 00 38 D0         ld  hl,ZEROPAGE
 2977 D1:CB1C 85 -  -  -          add a,L
 2978 D1:CB1D 6F -  -  -          ld  L,a
 2979 D1:CB1E 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2980 D1:CB1F 2C -  -  -          inc L
 2981 D1:CB20 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2982 D1:CB23 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2983 D1:CB24 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2984 D1:CB26 24 -  -  -          inc h
 2985 D1:CB27 FD 23 -  -          ADDCYC(1)
 2986 D1:CB29 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2987 D1:CB2A 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2988 D1:CB2C ED 6C -  -          mlt hl          ;23.
 2989 D1:CB2E 01 00 40 D0         ld  bc,PAGETABLE
 2990 D1:CB32 09 -  -  -          add hl,bc
 2991 D1:CB33 ED 27 -  -          ld  hl,(hl)     ;address get.
 2992 D1:CB35 01 00 00 00         ld  bc,0
 2993 D1:CB39 4F -  -  -          ld  c,a
 2994 D1:CB3A 09 -  -  -          add hl,bc       ;Full address get.
 2995 D1:CB3B 7E -  -  -          READ_ACCESS
 2996 D1:CB3C E1 -  -  -      pop hl
 2997 D1:CB3D 47 -  -  -      ld  b,a
 2998 D1:CB3E C3 9D B6 D1     jp  subroutine6502_cmp_combined_end
 2999 D1:CB42 -  -  -  -  
 3000 D1:CB42 -  -  -  -  ;-----------------------------------------------------------------------------
 3001 D1:CB42 -  -  -  -  ;CPX - Compare Memory and Index X
 3002 D1:CB42 -  -  -  -  ;X - M
 3003 D1:CB42 -  -  -  -  ;N	Z	C	I	D	V
 3004 D1:CB42 -  -  -  -  ;+	+	+	-	-	-
 3005 D1:CB42 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3006 D1:CB42 -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 3007 D1:CB42 -  -  -  -  inst6502_cpx_imm:
 3008 D1:CB42 ED 33 02 -      ADDCYC(2)
 3009 D1:CB45 DD 7E 01 -      ld  a,(ix+REGX)
 3010 D1:CB48 96 -  -  -      sub a,(hl)
 3011 D1:CB49 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3012 D1:CB4A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3013 D1:CB64 C3 A8 B3 D1     jp  i6502NextLoad
 3014 D1:CB68 -  -  -  -  
 3015 D1:CB68 -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 3016 D1:CB68 -  -  -  -  inst6502_cpx_zp:
 3017 D1:CB68 ED 33 03 -      ADDCYC(3)
 3018 D1:CB6B 7E -  -  -      ld  a,(hl)
 3019 D1:CB6C 01 00 38 D0     ld  bc,ZEROPAGE
 3020 D1:CB70 81 -  -  -      add a,c
 3021 D1:CB71 4F -  -  -      ld  c,a
 3022 D1:CB72 0A -  -  -      ld  a,(bc)
 3023 D1:CB73 47 -  -  -      ld  b,a
 3024 D1:CB74 DD 7E 01 -      ld  a,(ix+REGX)
 3025 D1:CB77 90 -  -  -      sub a,b
 3026 D1:CB78 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3027 D1:CB79 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3028 D1:CB93 C3 A8 B3 D1     jp i6502NextLoad
 3029 D1:CB97 -  -  -  -  ;absolute	CPX oper	EC	3	4  
 3030 D1:CB97 -  -  -  -  inst6502_cpx_abs:
 3031 D1:CB97 ED 33 04 -      ADDCYC(4)
 3032 D1:CB9A CD 1D B6 D1     call subroutine6502_abs_split_start
 3033 D1:CB9E E5 -  -  -      push hl
 3034 D1:CB9F 50 -  -  -          ld  d,b
 3035 D1:CBA0 79 -  -  -          ld  a,c
 3036 D1:CBA1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3037 D1:CBA3 ED 4C -  -          mlt bc
 3038 D1:CBA5 21 00 40 D0         ld  hl,PAGETABLE
 3039 D1:CBA9 09 -  -  -          add hl,bc
 3040 D1:CBAA ED 27 -  -          ld  hl,(hl)
 3041 D1:CBAC 06 00 -  -          ld  b,0
 3042 D1:CBAE 4F -  -  -          ld  c,a
 3043 D1:CBAF 09 -  -  -          add hl,bc   ;full address
 3044 D1:CBB0 7E -  -  -          READ_ACCESS
 3045 D1:CBB1 E1 -  -  -      pop hl
 3046 D1:CBB2 47 -  -  -      ld  b,a
 3047 D1:CBB3 DD 7E 01 -      ld  a,(ix+REGX)
 3048 D1:CBB6 90 -  -  -      sub a,b
 3049 D1:CBB7 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3050 D1:CBB8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3051 D1:CBD2 C3 A8 B3 D1     jp i6502NextLoad
 3052 D1:CBD6 -  -  -  -  
 3053 D1:CBD6 -  -  -  -  ;-----------------------------------------------------------------------------
 3054 D1:CBD6 -  -  -  -  ;CPY - Compare Memory and Index Y
 3055 D1:CBD6 -  -  -  -  ;Y - M
 3056 D1:CBD6 -  -  -  -  ;N	Z	C	I	D	V
 3057 D1:CBD6 -  -  -  -  ;+	+	+	-	-	-
 3058 D1:CBD6 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3059 D1:CBD6 -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 3060 D1:CBD6 -  -  -  -  inst6502_cpy_imm:
 3061 D1:CBD6 ED 33 02 -      ADDCYC(2)
 3062 D1:CBD9 DD 7E 02 -      ld  a,(ix+REGY)
 3063 D1:CBDC 96 -  -  -      sub a,(hl)
 3064 D1:CBDD 3F -  -  -      ccf
 3065 D1:CBDE DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3066 D1:CBF8 C3 A8 B3 D1     jp  i6502NextLoad
 3067 D1:CBFC -  -  -  -  
 3068 D1:CBFC -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 3069 D1:CBFC -  -  -  -  inst6502_cpy_zp:
 3070 D1:CBFC ED 33 03 -      ADDCYC(3)
 3071 D1:CBFF 7E -  -  -      ld  a,(hl)
 3072 D1:CC00 01 00 38 D0     ld  bc,ZEROPAGE
 3073 D1:CC04 81 -  -  -      add a,c
 3074 D1:CC05 4F -  -  -      ld  c,a
 3075 D1:CC06 0A -  -  -      ld  a,(bc)
 3076 D1:CC07 47 -  -  -      ld  b,a
 3077 D1:CC08 DD 7E 02 -      ld  a,(ix+REGY)
 3078 D1:CC0B 90 -  -  -      sub a,b
 3079 D1:CC0C 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3080 D1:CC0D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3081 D1:CC27 C3 A8 B3 D1     jp i6502NextLoad
 3082 D1:CC2B -  -  -  -  
 3083 D1:CC2B -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3084 D1:CC2B -  -  -  -  inst6502_cpy_abs:
 3085 D1:CC2B ED 33 04 -      ADDCYC(4)
 3086 D1:CC2E CD 1D B6 D1     call subroutine6502_abs_split_start
 3087 D1:CC32 E5 -  -  -      push hl
 3088 D1:CC33 50 -  -  -          ld  d,b
 3089 D1:CC34 79 -  -  -          ld  a,c
 3090 D1:CC35 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3091 D1:CC37 ED 4C -  -          mlt bc
 3092 D1:CC39 21 00 40 D0         ld  hl,PAGETABLE
 3093 D1:CC3D 09 -  -  -          add hl,bc
 3094 D1:CC3E ED 27 -  -          ld  hl,(hl)
 3095 D1:CC40 06 00 -  -          ld  b,0
 3096 D1:CC42 4F -  -  -          ld  c,a
 3097 D1:CC43 09 -  -  -          add hl,bc   ;full address
 3098 D1:CC44 7E -  -  -          READ_ACCESS
 3099 D1:CC45 E1 -  -  -      pop hl
 3100 D1:CC46 47 -  -  -      ld  b,a
 3101 D1:CC47 DD 7E 02 -      ld  a,(ix+REGY)
 3102 D1:CC4A 90 -  -  -      sub a,b
 3103 D1:CC4B 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3104 D1:CC4C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 07 CB 88 
              20 02 CB C8 
              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3105 D1:CC66 C3 A8 B3 D1     jp i6502NextLoad
 3106 D1:CC6A -  -  -  -  
 3107 D1:CC6A -  -  -  -  
 3108 D1:CC6A -  -  -  -  ;-----------------------------------------------------------------------------
 3109 D1:CC6A -  -  -  -  ;-----------------------------------------------------------------------------
 3110 D1:CC6A -  -  -  -  ;-----------------------------------------------------------------------------
 3111 D1:CC6A -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3112 D1:CC6A -  -  -  -  
 3113 D1:CC6A -  -  -  -  ;branch on C=0
 3114 D1:CC6A -  -  -  -  ;relative	BCC oper	90	2	2**
 3115 D1:CC6A -  -  -  -  inst6502_bcc:
 3116 D1:CC6A ED 33 02 -      ADDCYC(2)
 3117 D1:CC6D DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3118 D1:CC71 C2 A8 B3 D1     jp  nz,i6502NextLoad
 3119 D1:CC75 C3 C0 B6 D1     jp  subroutine6502_take_branch
 3120 D1:CC79 -  -  -  -  
 3121 D1:CC79 -  -  -  -  ;branch on C=1
 3122 D1:CC79 -  -  -  -  ;relative	BCS oper	B0	2	2**
 3123 D1:CC79 -  -  -  -  inst6502_bcs:
 3124 D1:CC79 ED 33 02 -      ADDCYC(2)
 3125 D1:CC7C DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3126 D1:CC80 CA A8 B3 D1     jp  z,i6502NextLoad
 3127 D1:CC84 C3 C0 B6 D1     jp  subroutine6502_take_branch
 3128 D1:CC88 -  -  -  -  
 3129 D1:CC88 -  -  -  -  ;branch on Z=1
 3130 D1:CC88 -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3131 D1:CC88 -  -  -  -  inst6502_beq:
 3132 D1:CC88 ED 33 02 -      ADDCYC(2)
 3133 D1:CC8B DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3134 D1:CC8F CA A8 B3 D1     jp  z,i6502NextLoad
 3135 D1:CC93 C3 C0 B6 D1     jp  subroutine6502_take_branch
 3136 D1:CC97 -  -  -  -  
 3137 D1:CC97 -  -  -  -  ;branch on N=1
 3138 D1:CC97 -  -  -  -  ;relative	BMI oper	30	2	2**
 3139 D1:CC97 -  -  -  -  inst6502_bmi:
 3140 D1:CC97 ED 33 02 -      ADDCYC(2)
 3141 D1:CC9A DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3142 D1:CC9E CA A8 B3 D1     jp  z,i6502NextLoad
 3143 D1:CCA2 C3 C0 B6 D1     jp  subroutine6502_take_branch
 3144 D1:CCA6 -  -  -  -  
 3145 D1:CCA6 -  -  -  -  
 3146 D1:CCA6 -  -  -  -  ;branch on Z=0
 3147 D1:CCA6 -  -  -  -  ;relative	BNE oper	D0	2	2**
 3148 D1:CCA6 -  -  -  -  inst6502_bne:
 3149 D1:CCA6 ED 33 02 -      ADDCYC(2)
 3150 D1:CCA9 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3151 D1:CCAD C2 A8 B3 D1     jp  nz,i6502NextLoad
 3152 D1:CCB1 C3 C0 B6 D1     jp  subroutine6502_take_branch
 3153 D1:CCB5 -  -  -  -  
 3154 D1:CCB5 -  -  -  -  ;branch on N=0
 3155 D1:CCB5 -  -  -  -  ;relative	BPL oper	10	2	2**
 3156 D1:CCB5 -  -  -  -  inst6502_bpl:
 3157 D1:CCB5 ED 33 02 -      ADDCYC(2)
 3158 D1:CCB8 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3159 D1:CCBC C2 A8 B3 D1     jp  nz,i6502NextLoad
 3160 D1:CCC0 C3 C0 B6 D1     jp  subroutine6502_take_branch
 3161 D1:CCC4 -  -  -  -  
 3162 D1:CCC4 -  -  -  -  ;branch on V=0
 3163 D1:CCC4 -  -  -  -  ;relative	BVC oper	50	2	2**
 3164 D1:CCC4 -  -  -  -  inst6502_bvc:
 3165 D1:CCC4 ED 33 02 -      ADDCYC(2)
 3166 D1:CCC7 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3167 D1:CCCB C2 A8 B3 D1     jp  nz,i6502NextLoad
 3168 D1:CCCF C3 C0 B6 D1     jp  subroutine6502_take_branch
 3169 D1:CCD3 -  -  -  -  
 3170 D1:CCD3 -  -  -  -  ;branch on V=1
 3171 D1:CCD3 -  -  -  -  ;relative	BVS oper	70	2	2**
 3172 D1:CCD3 -  -  -  -  inst6502_bvs:
 3173 D1:CCD3 ED 33 02 -      ADDCYC(2)
 3174 D1:CCD6 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3175 D1:CCDA CA A8 B3 D1     jp  z,i6502NextLoad
 3176 D1:CCDE C3 C0 B6 D1     jp  subroutine6502_take_branch
 3177 D1:CCE2 -  -  -  -  
 3178 D1:CCE2 -  -  -  -  ;-----------------------------------------------------------------------------
 3179 D1:CCE2 -  -  -  -  ;-----------------------------------------------------------------------------
 3180 D1:CCE2 -  -  -  -  ;-----------------------------------------------------------------------------
 3181 D1:CCE2 -  -  -  -  ;Instructions by type: Interrupts
 3182 D1:CCE2 -  -  -  -  
 3183 D1:CCE2 -  -  -  -  ;BRK - Force Break
 3184 D1:CCE2 -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3185 D1:CCE2 -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3186 D1:CCE2 -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3187 D1:CCE2 -  -  -  -  ;(identifying a reason for the break.)
 3188 D1:CCE2 -  -  -  -  ;The status register will be pushed to the stack with the break
 3189 D1:CCE2 -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3190 D1:CCE2 -  -  -  -  ;instruction, the break flag will be ignored.
 3191 D1:CCE2 -  -  -  -  ;The interrupt disable flag is not set automatically.
 3192 D1:CCE2 -  -  -  -  ;
 3193 D1:CCE2 -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3194 D1:CCE2 -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3195 D1:CCE2 -  -  -  -  ;implied	BRK	00	1	7  
 3196 D1:CCE2 -  -  -  -  inst6502_brk:
 3197 D1:CCE2 ED 33 07 -      ADDCYC(7)
 3198 D1:CCE5 21 00 39 D0     ld  hl,STACKBASE
 3199 D1:CCE9 DD 6E 03 -      ld  L,(ix+REGSP)
 3200 D1:CCEC 52 DD 17 05     ld.s de,(ix+REGPC)
 3201 D1:CCF0 13 -  -  -      inc de      ;that extra spacer.
 3202 D1:CCF1 72 -  -  -      ld  (hl),d
 3203 D1:CCF2 2D -  -  -      dec L
 3204 D1:CCF3 73 -  -  -      ld  (hl),e
 3205 D1:CCF4 2D -  -  -      dec L
 3206 D1:CCF5 DD 7E 04 -      ld  a,(ix+REGSR)
 3207 D1:CCF8 CB D7 -  -      set SF_INT,a
 3208 D1:CCFA 77 -  -  -      ld  (hl),a
 3209 D1:CCFB 2D -  -  -      dec L
 3210 D1:CCFC DD 75 03 -      ld  (ix+REGSP),L
 3211 D1:CCFF B7 -  -  -      WAS_NMI_TRIGGERED
 3212 D1:CD00 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3213 D1:CD04 28 04 -  -      jr  z,+_
 3214 D1:CD06 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3215 D1:CD0A 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3216 D1:CD0E ED 27 -  -      ld  hl,(hl)
 3217 D1:CD10 09 -  -  -      add hl,bc
 3218 D1:CD11 ED 17 -  -      ld  de,(hl)
 3219 D1:CD13 52 DD 1F 05     ld.s (ix+REGPC),de
 3220 D1:CD17 C3 92 B3 D1     jp  i6502FirstLoad
 3221 D1:CD1B -  -  -  -  
 3222 D1:CD1B -  -  -  -  ;RTI - Return from Interrupt
 3223 D1:CD1B -  -  -  -  ;The status register is pulled with the break flag
 3224 D1:CD1B -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3225 D1:CD1B -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3226 D1:CD1B -  -  -  -  ;                      from stack
 3227 D1:CD1B -  -  -  -  ;implied	RTI	40	1	6  
 3228 D1:CD1B -  -  -  -  inst6502_rti:
 3229 D1:CD1B 21 00 39 D0     ld  hl,STACKBASE
 3230 D1:CD1F DD 6E 03 -      ld  l,(ix+REGSP)
 3231 D1:CD22 2C -  -  -      inc l
 3232 D1:CD23 7E -  -  -      ld  a,(hl)
 3233 D1:CD24 2C -  -  -      inc l
 3234 D1:CD25 5E -  -  -      ld  e,(hl)
 3235 D1:CD26 2C -  -  -      inc l
 3236 D1:CD27 56 -  -  -      ld  d,(hl)
 3237 D1:CD28 DD 75 03 -      ld  (ix+REGSP),l
 3238 D1:CD2B 52 DD 1F 05     ld.s (ix+REGPC),de
 3239 D1:CD2F DD 46 04 -      ld  b,(ix+REGSR)
 3240 D1:CD32 A8 -  -  -      xor a,b
 3241 D1:CD33 E6 DF -  -      and a,%11011111
 3242 D1:CD35 A8 -  -  -      xor a,b
 3243 D1:CD36 DD 77 04 -      ld  (ix+REGSR),a
 3244 D1:CD39 ED 33 06 -      ADDCYC(6)
 3245 D1:CD3C C3 92 B3 D1     jp  i6502FirstLoad
 3246 D1:CD40 -  -  -  -  
 3247 D1:CD40 -  -  -  -  
 3248 D1:CD40 -  -  -  -  
 3249 D1:CD40 -  -  -  -  ;-----------------------------------------------------------------------------
 3250 D1:CD40 -  -  -  -  ;-----------------------------------------------------------------------------
 3251 D1:CD40 -  -  -  -  ;-----------------------------------------------------------------------------
 3252 D1:CD40 -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3253 D1:CD40 -  -  -  -  
 3254 D1:CD40 -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3255 D1:CD40 -  -  -  -  inst6052_jmp_abs:
 3256 D1:CD40 7E -  -  -      ld  a,(hl)
 3257 D1:CD41 23 -  -  -      inc hl
 3258 D1:CD42 1C -  -  -      inc e
 3259 D1:CD43 20 0F -  -      jr  nz,+_
 3260 D1:CD45 DD 56 06 -      ld  d,(ix+REGPC+1)
 3261 D1:CD48 14 -  -  -      inc d
 3262 D1:CD49 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3263 D1:CD4B ED 5C -  -      mlt de
 3264 D1:CD4D 21 00 40 D0     ld  hl,PAGETABLE
 3265 D1:CD51 19 -  -  -      add hl,de
 3266 D1:CD52 ED 27 -  -      ld  hl,(hl)
 3267 D1:CD54 DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3268 D1:CD57 7E -  -  -      ld  a,(hl)
 3269 D1:CD58 DD 77 06 -      ld  (ix+REGPC+1),a
 3270 D1:CD5B ED 33 03 -      ADDCYC(3)
 3271 D1:CD5E C3 92 B3 D1     jp i6502FirstLoad
 3272 D1:CD62 -  -  -  -  
 3273 D1:CD62 -  -  -  -  
 3274 D1:CD62 -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3275 D1:CD62 -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3276 D1:CD62 -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3277 D1:CD62 -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3278 D1:CD62 -  -  -  -  inst6502_jmp_indir:
 3279 D1:CD62 ED 33 05 -      ADDCYC(5)
 3280 D1:CD65 5E -  -  -      ld  e,(hl)
 3281 D1:CD66 7B -  -  -      ld  a,e
 3282 D1:CD67 23 -  -  -      inc hl
 3283 D1:CD68 3C -  -  -      inc a
 3284 D1:CD69 20 0F -  -      jr  nz,+_
 3285 D1:CD6B DD 46 06 -      ld  b,(ix+REGPC+1)
 3286 D1:CD6E 04 -  -  -      inc b
 3287 D1:CD6F 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3288 D1:CD71 ED 4C -  -      mlt bc
 3289 D1:CD73 21 00 40 D0     ld  hl,PAGETABLE
 3290 D1:CD77 09 -  -  -      add hl,bc
 3291 D1:CD78 ED 27 -  -      ld  hl,(hl)
 3292 D1:CD7A 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3293 D1:CD7B 1C -  -  -      inc e
 3294 D1:CD7C 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3295 D1:CD7E 1D -  -  -      dec e
 3296 D1:CD7F 4B -  -  -      ld  c,e
 3297 D1:CD80 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3298 D1:CD82 ED 5C -  -      mlt de
 3299 D1:CD84 21 00 40 D0     ld  hl,PAGETABLE
 3300 D1:CD88 19 -  -  -      add hl,de
 3301 D1:CD89 ED 27 -  -      ld  hl,(hl)
 3302 D1:CD8B 16 00 -  -      ld  d,0
 3303 D1:CD8D 59 -  -  -      ld  e,c
 3304 D1:CD8E 19 -  -  -      add hl,de   ;full real address reconstructed.
 3305 D1:CD8F ED 17 -  -      ld  de,(hl)
 3306 D1:CD91 52 DD 1F 05     ld.s (ix+REGPC),de
 3307 D1:CD95 C3 92 B3 D1     jp  i6502FirstLoad
 3308 D1:CD99 -  -  -  -  inst6502_jmp_indir_splitread:
 3309 D1:CD99 -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3310 D1:CD99 -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3311 D1:CD99 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3312 D1:CD9B ED 5C -  -      mlt de
 3313 D1:CD9D 21 00 40 D0     ld  hl,PAGETABLE
 3314 D1:CDA1 19 -  -  -      add hl,de
 3315 D1:CDA2 ED 27 -  -      ld  hl,(hl)
 3316 D1:CDA4 56 -  -  -      ld  d,(hl)
 3317 D1:CDA5 01 FF 00 00     ld  bc,255
 3318 D1:CDA9 09 -  -  -      add hl,bc
 3319 D1:CDAA 5E -  -  -      ld  e,(hl)
 3320 D1:CDAB 52 DD 1F 05     ld.s (ix+REGPC),de
 3321 D1:CDAF C3 92 B3 D1     jp  i6502FirstLoad
 3322 D1:CDB3 -  -  -  -  
 3323 D1:CDB3 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3324 D1:CDB3 -  -  -  -  ;    mlt de
 3325 D1:CDB3 -  -  -  -  ;    ld  hl,PAGETABLE
 3326 D1:CDB3 -  -  -  -  ;    add hl,de
 3327 D1:CDB3 -  -  -  -  ;    ld  de,(hl) ;
 3328 D1:CDB3 -  -  -  -  ;    ex  de,hl
 3329 D1:CDB3 -  -  -  -  ;    ld  bc,255
 3330 D1:CDB3 -  -  -  -  ;    add hl,bc
 3331 D1:CDB3 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3332 D1:CDB3 -  -  -  -  ;    ex  de,hl
 3333 D1:CDB3 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3334 D1:CDB3 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3335 D1:CDB3 -  -  -  -  ;    ld  e,(hl)
 3336 D1:CDB3 -  -  -  -  ;    ld  d,a
 3337 D1:CDB3 -  -  -  -  ;    ld.s (ix+REGPC),de
 3338 D1:CDB3 -  -  -  -  ;    jp  i6502FirstLoad
 3339 D1:CDB3 -  -  -  -  
 3340 D1:CDB3 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3341 D1:CDB3 -  -  -  -  inst6502_jsr:
 3342 D1:CDB3 DD 56 06 -      ld  d,(ix+REGPC+1)
 3343 D1:CDB6 4E -  -  -      ld  c,(hl)
 3344 D1:CDB7 23 -  -  -      inc hl
 3345 D1:CDB8 1C -  -  -      inc e
 3346 D1:CDB9 20 10 -  -      jr  nz,+_
 3347 D1:CDBB 14 -  -  -      inc d
 3348 D1:CDBC 7A -  -  -      ld  a,d
 3349 D1:CDBD 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3350 D1:CDBF ED 5C -  -      mlt de
 3351 D1:CDC1 21 00 40 D0     ld  hl,PAGETABLE
 3352 D1:CDC5 19 -  -  -      add hl,de
 3353 D1:CDC6 ED 27 -  -      ld  hl,(hl)
 3354 D1:CDC8 57 -  -  -      ld  d,a
 3355 D1:CDC9 1E 00 -  -      ld  e,0
 3356 D1:CDCB 46 -  -  -  _:  ld  b,(hl)
 3357 D1:CDCC -  -  -  -      ;push de to 6502stack
 3358 D1:CDCC 21 00 39 D0     ld  hl,STACKBASE
 3359 D1:CDD0 DD 6E 03 -      ld  l,(ix+REGSP)
 3360 D1:CDD3 72 -  -  -      ld  (hl),d
 3361 D1:CDD4 2D -  -  -      dec l
 3362 D1:CDD5 73 -  -  -      ld  (hl),e
 3363 D1:CDD6 2D -  -  -      dec l
 3364 D1:CDD7 DD 75 03 -      ld  (ix+REGSP),l
 3365 D1:CDDA 52 DD 0F 05     ld.s (ix+REGPC),bc
 3366 D1:CDDE ED 33 06 -      ADDCYC(6)
 3367 D1:CDE1 C3 92 B3 D1     jp  i6502FirstLoad
 3368 D1:CDE5 -  -  -  -  
 3369 D1:CDE5 -  -  -  -  ;implied	RTS	60	1	6
 3370 D1:CDE5 -  -  -  -  inst6502_rts:
 3371 D1:CDE5 21 00 39 D0     ld  hl,STACKBASE
 3372 D1:CDE9 DD 6E 03 -      ld  l,(ix+REGSP)
 3373 D1:CDEC 2C -  -  -      inc l
 3374 D1:CDED 5E -  -  -      ld  e,(hl)
 3375 D1:CDEE 2C -  -  -      inc l
 3376 D1:CDEF 56 -  -  -      ld  d,(hl)
 3377 D1:CDF0 DD 75 03 -      ld  (ix+REGSP),l
 3378 D1:CDF3 13 -  -  -      inc de
 3379 D1:CDF4 52 DD 1F 05     ld.s (ix+REGPC),de
 3380 D1:CDF8 ED 33 06 -      ADDCYC(6)
 3381 D1:CDFB C3 92 B3 D1     jp  i6502FirstLoad
 3382 D1:CDFF -  -  -  -  
 3383 D1:CDFF -  -  -  -  
 3384 D1:CDFF -  -  -  -  ;-----------------------------------------------------------------------------
 3385 D1:CDFF -  -  -  -  ;-----------------------------------------------------------------------------
 3386 D1:CDFF -  -  -  -  ;-----------------------------------------------------------------------------
 3387 D1:CDFF -  -  -  -  ;Instructions by type: Miscellaneous
 3388 D1:CDFF -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3389 D1:CDFF -  -  -  -  ;
 3390 D1:CDFF -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3391 D1:CDFF -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3392 D1:CDFF -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3393 D1:CDFF -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3394 D1:CDFF -  -  -  -  ;any of the registers, other than the status register (SR).
 3395 D1:CDFF -  -  -  -  
 3396 D1:CDFF -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3397 D1:CDFF -  -  -  -  ;                                           M7	+	-	-	-	M6
 3398 D1:CDFF -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3399 D1:CDFF -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3400 D1:CDFF -  -  -  -  inst6502_bit_zp:
 3401 D1:CDFF ED 33 03 -      ADDCYC(3)
 3402 D1:CE02 7E -  -  -      ld  a,(hl)
 3403 D1:CE03 01 00 38 D0     ld  bc,ZEROPAGE
 3404 D1:CE07 81 -  -  -      add a,c
 3405 D1:CE08 4F -  -  -      ld  c,a
 3406 D1:CE09 0A -  -  -      ld  a,(bc)
 3407 D1:CE0A 4F -  -  -      ld  c,a
 3408 D1:CE0B DD A6 00 -  _:  and a,(ix+REGA)
 3409 D1:CE0E 79 -  -  -      ld  a,c     ;discard result, get bits from OPERANDs
 3410 D1:CE0F CB 8F -  -      res SF_ZERO,a
 3411 D1:CE11 20 02 -  -      jr  nz,$+4
 3412 D1:CE13 CB CF -  -      set SF_ZERO,a
 3413 D1:CE15 DD 46 04 -      ld  b,(ix+REGSR)    ;keep bits in flag other than NZ and V
 3414 D1:CE18 A8 -  -  -      xor a,b
 3415 D1:CE19 E6 C2 -  -      and a,%11000010     ;1=keepA, 0=discardA,keepB
 3416 D1:CE1B A8 -  -  -      xor a,b
 3417 D1:CE1C DD 77 04 -      ld  (ix+REGSR),a
 3418 D1:CE1F C3 A8 B3 D1     jp  i6502NextLoad
 3419 D1:CE23 -  -  -  -  
 3420 D1:CE23 -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3421 D1:CE23 -  -  -  -  inst6502_bit_abs:
 3422 D1:CE23 ED 33 04 -      ADDCYC(4)
 3423 D1:CE26 CD 1D B6 D1     call subroutine6502_abs_split_start
 3424 D1:CE2A E5 -  -  -      push hl
 3425 D1:CE2B 50 -  -  -          ld  d,b
 3426 D1:CE2C 79 -  -  -          ld  a,c
 3427 D1:CE2D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3428 D1:CE2F ED 4C -  -          mlt bc
 3429 D1:CE31 21 00 40 D0         ld  hl,PAGETABLE
 3430 D1:CE35 09 -  -  -          add hl,bc
 3431 D1:CE36 ED 27 -  -          ld  hl,(hl)
 3432 D1:CE38 06 00 -  -          ld  b,0
 3433 D1:CE3A 4F -  -  -          ld  c,a
 3434 D1:CE3B 09 -  -  -          add hl,bc   ;full address
 3435 D1:CE3C 7E -  -  -          READ_ACCESS
 3436 D1:CE3D 4F -  -  -          ld  c,a
 3437 D1:CE3E E1 -  -  -      pop hl
 3438 D1:CE3F 18 CA -  -      jr  -_    
 3439 D1:CE41 -  -  -  -  
 3440 D1:CE41 -  -  -  -  ;NOP - No Operation
 3441 D1:CE41 -  -  -  -  ;implied	NOP	EA	1	2  
 3442 D1:CE41 -  -  -  -  inst6502_nop:
 3443 D1:CE41 ED 33 02 -      ADDCYC(2)
 3444 D1:CE44 C3 C1 B3 D1     jp  i6502FinishLoad
 3445 D1:CE48 -  -  -  -  
 3446 D1:CE48 -  -  -  -  ;-----------------------------------------------------------------------------
 3447 D1:CE48 -  -  -  -  ;-----------------------------------------------------------------------------
 3448 D1:CE48 -  -  -  -  ;-----------------------------------------------------------------------------
 3449 D1:CE48 -  -  -  -  ;Instruction not mapped: Terminate emulation
 3450 D1:CE48 -  -  -  -  inst6502_:
 3451 D1:CE48 C9 -  -  -      ret
 3452 D1:CE49 -  -  -  -  
 3453 D1:CE49 -  -  -  -  inst6502_halt:
 3454 D1:CE49 18 FE -  -      jr $
 3455 D1:CE4B C3 C1 B3 D1     jp i6502FinishLoad
 3456 D1:CE4F -  -  -  -  
 3457 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3458 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3459 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3460 D1:CE4F -  -  -  -  ;Instructions by type: Illegal Instructions
 3461 D1:CE4F -  -  -  -  
 3462 D1:CE4F -  -  -  -  
 3463 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3464 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3465 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3466 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3467 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3468 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3469 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3470 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3471 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3472 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3473 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3474 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3475 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3476 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3477 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3478 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3479 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3480 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3481 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3482 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3483 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3484 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3485 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3486 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3487 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3488 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3489 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3490 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3491 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3492 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3493 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3494 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3495 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3496 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3497 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3498 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3499 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3500 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3501 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3502 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3503 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3504 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3505 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3506 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3507 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3508 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3509 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3510 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3511 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3512 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3513 D1:CE4F -  -  -  -  ;-----------------------------------------------------------------------------
 3514 D1:CE4F -  -  -  -  
 3515 D1:CE4F -  -  -  -  inst6502_instruction_set:
 3516 D1:CE4F E2 CC D1 -  .dl	inst6502_brk					;00
 3517 D1:CE52 36 C5 D1 -  .dl	inst6502_ora_indx				;01
 3518 D1:CE55 48 CE D1 -  .dl	inst6502_				;02
 3519 D1:CE58 48 CE D1 -  .dl	inst6502_				;03
 3520 D1:CE5B 48 CE D1 -  .dl	inst6502_				;04
 3521 D1:CE5E 24 C4 D1 -  .dl	inst6502_ora_zp					;05
 3522 D1:CE61 E8 C5 D1 -  .dl	inst6502_asl_zp					;06
 3523 D1:CE64 48 CE D1 -  .dl	inst6502_				;07
 3524 D1:CE67 94 BC D1 -  .dl	inst6502_php					;08
 3525 D1:CE6A 02 C4 D1 -  .dl	inst6502_ora_imm				;09
 3526 D1:CE6D BF C5 D1 -  .dl	inst6502_asl					;0A
 3527 D1:CE70 48 CE D1 -  .dl	inst6502_				;0B
 3528 D1:CE73 48 CE D1 -  .dl	inst6502_				;0C
 3529 D1:CE76 79 C4 D1 -  .dl	inst6502_ora_abs				;0D
 3530 D1:CE79 43 C6 D1 -  .dl	inst6502_asl_abs				;0E
 3531 D1:CE7C 48 CE D1 -  .dl	inst6502_				;0F
 3532 D1:CE7F B5 CC D1 -  .dl	inst6502_bpl					;10
 3533 D1:CE82 77 C5 D1 -  .dl	inst6502_ora_indy				;11
 3534 D1:CE85 49 CE D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3535 D1:CE88 48 CE D1 -  .dl	inst6502_				;13
 3536 D1:CE8B 48 CE D1 -  .dl	inst6502_				;14
 3537 D1:CE8E 4D C4 D1 -  .dl	inst6502_ora_zpx				;15
 3538 D1:CE91 14 C6 D1 -  .dl	inst6502_asl_zpx				;16
 3539 D1:CE94 48 CE D1 -  .dl	inst6502_				;17
 3540 D1:CE97 01 CA D1 -  .dl	inst6502_clc					;18
 3541 D1:CE9A F4 C4 D1 -  .dl	inst6502_ora_absy				;19
 3542 D1:CE9D 48 CE D1 -  .dl	inst6502_				;1A
 3543 D1:CEA0 48 CE D1 -  .dl	inst6502_				;1B
 3544 D1:CEA3 48 CE D1 -  .dl	inst6502_				;1C
 3545 D1:CEA6 B2 C4 D1 -  .dl	inst6502_ora_absx				;1D
 3546 D1:CEA9 82 C6 D1 -  .dl	inst6502_asl_absx				;1E
 3547 D1:CEAC 48 CE D1 -  .dl	inst6502_				;1F
 3548 D1:CEAF B3 CD D1 -  .dl	inst6502_jsr					;20
 3549 D1:CEB2 BC C1 D1 -  .dl	inst6502_and_indx				;21
 3550 D1:CEB5 48 CE D1 -  .dl	inst6502_				;22
 3551 D1:CEB8 48 CE D1 -  .dl	inst6502_				;23
 3552 D1:CEBB FF CD D1 -  .dl	inst6502_bit_zp					;24
 3553 D1:CEBE AA C0 D1 -  .dl	inst6502_and_zp					;25
 3554 D1:CEC1 FD C7 D1 -  .dl	inst6502_rol_zp					;26
 3555 D1:CEC4 48 CE D1 -  .dl	inst6502_				;27
 3556 D1:CEC7 D6 BC D1 -  .dl	inst6502_plp					;28
 3557 D1:CECA 88 C0 D1 -  .dl	inst6502_and_imm				;29
 3558 D1:CECD D1 C7 D1 -  .dl	inst6502_rol					;2A
 3559 D1:CED0 48 CE D1 -  .dl	inst6502_				;2B
 3560 D1:CED3 23 CE D1 -  .dl	inst6502_bit_abs				;2C
 3561 D1:CED6 FF C0 D1 -  .dl	inst6502_and_abs				;2D
 3562 D1:CED9 5E C8 D1 -  .dl	inst6502_rol_abs				;2E
 3563 D1:CEDC 48 CE D1 -  .dl	inst6502_				;2F
 3564 D1:CEDF 97 CC D1 -  .dl	inst6502_bmi					;30
 3565 D1:CEE2 FD C1 D1 -  .dl	inst6502_and_indy				;31
 3566 D1:CEE5 48 CE D1 -  .dl	inst6502_				;32
 3567 D1:CEE8 48 CE D1 -  .dl	inst6502_				;33
 3568 D1:CEEB 48 CE D1 -  .dl	inst6502_				;34
 3569 D1:CEEE D3 C0 D1 -  .dl	inst6502_and_zpx				;35
 3570 D1:CEF1 2C C8 D1 -  .dl	inst6502_rol_zpx				;36
 3571 D1:CEF4 48 CE D1 -  .dl	inst6502_						;37
 3572 D1:CEF7 2D CA D1 -  .dl	inst6502_sec					;38
 3573 D1:CEFA 7A C1 D1 -  .dl	inst6502_and_absy				;39
 3574 D1:CEFD 48 CE D1 -  .dl	inst6502_			;3A
 3575 D1:CF00 48 CE D1 -  .dl	inst6502_			;3B
 3576 D1:CF03 48 CE D1 -  .dl	inst6502_			;3C
 3577 D1:CF06 38 C1 D1 -  .dl	inst6502_and_absx				;3D
 3578 D1:CF09 A0 C8 D1 -  .dl	inst6502_rol_absx				;3E
 3579 D1:CF0C 48 CE D1 -  .dl	inst6502_			;3F
 3580 D1:CF0F 1B CD D1 -  .dl	inst6502_rti					;40
 3581 D1:CF12 79 C3 D1 -  .dl	inst6502_eor_indx				;41
 3582 D1:CF15 48 CE D1 -  .dl	inst6502_			;42
 3583 D1:CF18 48 CE D1 -  .dl	inst6502_			;43
 3584 D1:CF1B 48 CE D1 -  .dl	inst6502_			;44
 3585 D1:CF1E 67 C2 D1 -  .dl	inst6502_eor_zp					;45
 3586 D1:CF21 F1 C6 D1 -  .dl	inst6502_lsr_zp					;46
 3587 D1:CF24 48 CE D1 -  .dl	inst6502_			;47
 3588 D1:CF27 7E BC D1 -  .dl	inst6502_pha					;48
 3589 D1:CF2A 45 C2 D1 -  .dl	inst6502_eor_imm				;49
 3590 D1:CF2D C8 C6 D1 -  .dl	inst6502_lsr					;4A
 3591 D1:CF30 48 CE D1 -  .dl	inst6502_			;4B
 3592 D1:CF33 40 CD D1 -  .dl	inst6052_jmp_abs				;4C
 3593 D1:CF36 BC C2 D1 -  .dl	inst6502_eor_abs				;4D
 3594 D1:CF39 4C C7 D1 -  .dl	inst6502_lsr_abs				;4E
 3595 D1:CF3C 48 CE D1 -  .dl	inst6502_			;4F
 3596 D1:CF3F C4 CC D1 -  .dl	inst6502_bvc					;50
 3597 D1:CF42 BA C3 D1 -  .dl	inst6502_eor_indy				;51
 3598 D1:CF45 48 CE D1 -  .dl	inst6502_			;52
 3599 D1:CF48 48 CE D1 -  .dl	inst6502_			;53
 3600 D1:CF4B 48 CE D1 -  .dl	inst6502_			;54
 3601 D1:CF4E 90 C2 D1 -  .dl	inst6502_eor_zpx				;55
 3602 D1:CF51 1D C7 D1 -  .dl	inst6502_lsr_zpx				;56
 3603 D1:CF54 48 CE D1 -  .dl	inst6502_			;57
 3604 D1:CF57 17 CA D1 -  .dl	inst6502_cli					;58
 3605 D1:CF5A 37 C3 D1 -  .dl	inst6502_eor_absy				;59
 3606 D1:CF5D 48 CE D1 -  .dl	inst6502_			;5A
 3607 D1:CF60 48 CE D1 -  .dl	inst6502_			;5B
 3608 D1:CF63 48 CE D1 -  .dl	inst6502_			;5C
 3609 D1:CF66 F5 C2 D1 -  .dl	inst6502_eor_absx				;5D
 3610 D1:CF69 8B C7 D1 -  .dl	inst6502_lsr_absx				;5E
 3611 D1:CF6C 48 CE D1 -  .dl	inst6502_			;5F
 3612 D1:CF6F E5 CD D1 -  .dl	inst6502_rts					;60
 3613 D1:CF72 3D BF D1 -  .dl	inst6502_adc_indx				;61
 3614 D1:CF75 48 CE D1 -  .dl	inst6502_			;62
 3615 D1:CF78 48 CE D1 -  .dl	inst6502_			;63
 3616 D1:CF7B 48 CE D1 -  .dl	inst6502_			;64
 3617 D1:CF7E A8 BE D1 -  .dl	inst6502_adc_zp					;65
 3618 D1:CF81 15 C9 D1 -  .dl	inst6502_ror_zp					;66
 3619 D1:CF84 48 CE D1 -  .dl	inst6502_			;67
 3620 D1:CF87 AC BC D1 -  .dl	inst6502_pla					;68
 3621 D1:CF8A A0 BE D1 -  .dl	inst6502_adc_imm				;69
 3622 D1:CF8D E9 C8 D1 -  .dl	inst6502_ror					;6A
 3623 D1:CF90 48 CE D1 -  .dl	inst6502_			;6B
 3624 D1:CF93 62 CD D1 -  .dl	inst6502_jmp_indir				;6C
 3625 D1:CF96 CB BE D1 -  .dl	inst6502_adc_abs				;6D
 3626 D1:CF99 76 C9 D1 -  .dl	inst6502_ror_abs				;6E
 3627 D1:CF9C 48 CE D1 -  .dl	inst6502_			;6F
 3628 D1:CF9F D3 CC D1 -  .dl	inst6502_bvs					;70
 3629 D1:CFA2 65 BF D1 -  .dl	inst6502_adc_indy				;71
 3630 D1:CFA5 48 CE D1 -  .dl	inst6502_			;72
 3631 D1:CFA8 48 CE D1 -  .dl	inst6502_			;73
 3632 D1:CFAB 48 CE D1 -  .dl	inst6502_			;74
 3633 D1:CFAE B8 BE D1 -  .dl	inst6502_adc_zpx				;75
 3634 D1:CFB1 44 C9 D1 -  .dl	inst6502_ror_zpx				;76
 3635 D1:CFB4 48 CE D1 -  .dl	inst6502_			;77
 3636 D1:CFB7 43 CA D1 -  .dl	inst6502_sei					;78
 3637 D1:CFBA 14 BF D1 -  .dl	inst6502_adc_absy				;79
 3638 D1:CFBD 48 CE D1 -  .dl	inst6502_			;7A
 3639 D1:CFC0 48 CE D1 -  .dl	inst6502_			;7B
 3640 D1:CFC3 48 CE D1 -  .dl	inst6502_			;7C
 3641 D1:CFC6 EB BE D1 -  .dl	inst6502_adc_absx				;7D
 3642 D1:CFC9 B8 C9 D1 -  .dl	inst6502_ror_absx				;7E
 3643 D1:CFCC 48 CE D1 -  .dl	inst6502_			;7F
 3644 D1:CFCF 48 CE D1 -  .dl	inst6502_			;80
 3645 D1:CFD2 E1 BA D1 -  .dl	inst6502_sta_indx				;81
 3646 D1:CFD5 48 CE D1 -  .dl	inst6502_			;82
 3647 D1:CFD8 48 CE D1 -  .dl	inst6502_			;83
 3648 D1:CFDB 83 BB D1 -  .dl	inst6502_sty_zp					;84
 3649 D1:CFDE 46 BA D1 -  .dl	inst6502_sta_zp					;85
 3650 D1:CFE1 3A BB D1 -  .dl	inst6502_stx_zp					;86
 3651 D1:CFE4 48 CE D1 -  .dl	inst6502_			;87
 3652 D1:CFE7 D1 BD D1 -  .dl	inst6502_dey					;88
 3653 D1:CFEA 48 CE D1 -  .dl	inst6502_			;89
 3654 D1:CFED 2F BC D1 -  .dl	inst6502_txa					;8A
 3655 D1:CFF0 48 CE D1 -  .dl	inst6502_			;8B
 3656 D1:CFF3 AA BB D1 -  .dl	inst6502_sty_abs				;8C
 3657 D1:CFF6 6D BA D1 -  .dl	inst6502_sta_abs				;8D
 3658 D1:CFF9 61 BB D1 -  .dl	inst6502_stx_abs				;8E
 3659 D1:CFFC 48 CE D1 -  .dl	inst6502_			;8F
 3660 D1:CFFF 6A CC D1 -  .dl	inst6502_bcc					;90
 3661 D1:D002 0B BB D1 -  .dl	inst6502_sta_indy				;91
 3662 D1:D005 48 CE D1 -  .dl	inst6502_			;92
 3663 D1:D008 48 CE D1 -  .dl	inst6502_			;93
 3664 D1:D00B 95 BB D1 -  .dl	inst6502_sty_zpx				;94
 3665 D1:D00E 58 BA D1 -  .dl	inst6502_sta_zpx				;95
 3666 D1:D011 4C BB D1 -  .dl	inst6502_stx_zpy				;96
 3667 D1:D014 48 CE D1 -  .dl	inst6502_			;97
 3668 D1:D017 5D BC D1 -  .dl	inst6502_tya					;98
 3669 D1:D01A B8 BA D1 -  .dl	inst6502_sta_absy				;99
 3670 D1:D01D 50 BC D1 -  .dl	inst6502_txs					;9A
 3671 D1:D020 48 CE D1 -  .dl	inst6502_			;9B
 3672 D1:D023 48 CE D1 -  .dl	inst6502_			;9C
 3673 D1:D026 8F BA D1 -  .dl	inst6502_sta_absx				;9D
 3674 D1:D029 48 CE D1 -  .dl	inst6502_			;9E
 3675 D1:D02C 48 CE D1 -  .dl	inst6502_			;9F
 3676 D1:D02F 63 B9 D1 -  .dl	inst6502_ldy_imm				;A0
 3677 D1:D032 FD B7 D1 -  .dl	inst6502_lda_indx				;A1
 3678 D1:D035 80 B8 D1 -  .dl	inst6502_ldx_imm				;A2
 3679 D1:D038 48 CE D1 -  .dl	inst6502_			;A3
 3680 D1:D03B 82 B9 D1 -  .dl	inst6502_ldy_zp					;A4
 3681 D1:D03E FA B6 D1 -  .dl	inst6502_lda_zp					;A5
 3682 D1:D041 9F B8 D1 -  .dl	inst6502_ldx_zp					;A6
 3683 D1:D044 48 CE D1 -  .dl	inst6502_			;A7
 3684 D1:D047 ED BB D1 -  .dl	inst6502_tay					;A8
 3685 D1:D04A DB B6 D1 -  .dl	inst6502_lda_imm				;A9
 3686 D1:D04D CC BB D1 -  .dl	inst6502_tax					;AA
 3687 D1:D050 48 CE D1 -  .dl	inst6502_			;AB
 3688 D1:D053 D1 B9 D1 -  .dl	inst6502_ldy_abs				;AC
 3689 D1:D056 49 B7 D1 -  .dl	inst6502_lda_abs				;AD
 3690 D1:D059 EE B8 D1 -  .dl	inst6502_ldx_abs				;AE
 3691 D1:D05C 48 CE D1 -  .dl	inst6502_			;AF
 3692 D1:D05F 79 CC D1 -  .dl	inst6502_bcs					;B0
 3693 D1:D062 3B B8 D1 -  .dl	inst6502_lda_indy				;B1
 3694 D1:D065 48 CE D1 -  .dl	inst6502_			;B2
 3695 D1:D068 48 CE D1 -  .dl	inst6502_			;B3
 3696 D1:D06B A8 B9 D1 -  .dl	inst6502_ldy_zpx				;B4
 3697 D1:D06E 20 B7 D1 -  .dl	inst6502_lda_zpx				;B5
 3698 D1:D071 C5 B8 D1 -  .dl	inst6502_ldx_zpy				;B6
 3699 D1:D074 48 CE D1 -  .dl	inst6502_			;B7
 3700 D1:D077 22 CA D1 -  .dl	inst6502_clv					;B8
 3701 D1:D07A BE B7 D1 -  .dl	inst6502_lda_absy				;B9
 3702 D1:D07D 0E BC D1 -  .dl	inst6502_tsx					;BA
 3703 D1:D080 48 CE D1 -  .dl	inst6502_			;BB
 3704 D1:D083 07 BA D1 -  .dl	inst6502_ldy_absx				;BC
 3705 D1:D086 7F B7 D1 -  .dl	inst6502_lda_absx				;BD
 3706 D1:D089 24 B9 D1 -  .dl	inst6502_ldx_absy				;BE
 3707 D1:D08C 48 CE D1 -  .dl	inst6502_			;BF
 3708 D1:D08F D6 CB D1 -  .dl	inst6502_cpy_imm				;C0
 3709 D1:D092 EB CA D1 -  .dl	inst6502_cmp_indx				;C1
 3710 D1:D095 48 CE D1 -  .dl	inst6502_			;C2
 3711 D1:D098 48 CE D1 -  .dl	inst6502_			;C3
 3712 D1:D09B FC CB D1 -  .dl	inst6502_cpy_zp					;C4
 3713 D1:D09E 56 CA D1 -  .dl	inst6502_cmp_zp					;C5
 3714 D1:D0A1 F3 BC D1 -  .dl	inst6502_dec_zp					;C6
 3715 D1:D0A4 48 CE D1 -  .dl	inst6502_			;C7
 3716 D1:D0A7 DB BD D1 -  .dl	inst6502_iny					;C8
 3717 D1:D0AA 4E CA D1 -  .dl	inst6502_cmp_imm				;C9
 3718 D1:D0AD B3 BD D1 -  .dl	inst6502_dex					;CA
 3719 D1:D0B0 48 CE D1 -  .dl	inst6502_			;CB
 3720 D1:D0B3 2B CC D1 -  .dl	inst6502_cpy_abs				;CC
 3721 D1:D0B6 79 CA D1 -  .dl	inst6502_cmp_abs				;CD
 3722 D1:D0B9 40 BD D1 -  .dl	inst6502_dec_abs				;CE
 3723 D1:D0BC 48 CE D1 -  .dl	inst6502_			;CF
 3724 D1:D0BF A6 CC D1 -  .dl	inst6502_bne					;D0
 3725 D1:D0C2 13 CB D1 -  .dl	inst6502_cmp_indy				;D1
 3726 D1:D0C5 48 CE D1 -  .dl	inst6502_			;D2
 3727 D1:D0C8 48 CE D1 -  .dl	inst6502_			;D3
 3728 D1:D0CB 48 CE D1 -  .dl	inst6502_			;D4
 3729 D1:D0CE 66 CA D1 -  .dl	inst6502_cmp_zpx				;D5
 3730 D1:D0D1 18 BD D1 -  .dl	inst6502_dec_zpx				;D6
 3731 D1:D0D4 48 CE D1 -  .dl	inst6502_			;D7
 3732 D1:D0D7 0C CA D1 -  .dl	inst6502_cld					;D8
 3733 D1:D0DA C2 CA D1 -  .dl	inst6502_cmp_absy				;D9
 3734 D1:D0DD 48 CE D1 -  .dl	inst6502_			;DA
 3735 D1:D0E0 48 CE D1 -  .dl	inst6502_			;DB
 3736 D1:D0E3 48 CE D1 -  .dl	inst6502_			;DC
 3737 D1:D0E6 99 CA D1 -  .dl	inst6502_cmp_absx				;DD
 3738 D1:D0E9 76 BD D1 -  .dl	inst6502_dec_absx				;DE
 3739 D1:D0EC 48 CE D1 -  .dl	inst6502_			;DF
 3740 D1:D0EF 42 CB D1 -  .dl	inst6502_cpx_imm				;E0
 3741 D1:D0F2 31 C0 D1 -  .dl	inst6502_sbc_indx				;E1
 3742 D1:D0F5 48 CE D1 -  .dl	inst6502_			;E2
 3743 D1:D0F8 48 CE D1 -  .dl	inst6502_			;E3
 3744 D1:D0FB 68 CB D1 -  .dl	inst6502_cpx_zp					;E4
 3745 D1:D0FE 9C BF D1 -  .dl	inst6502_sbc_zp					;E5
 3746 D1:D101 E0 BD D1 -  .dl	inst6502_inc_zp					;E6
 3747 D1:D104 48 CE D1 -  .dl	inst6502_			;E7
 3748 D1:D107 D6 BD D1 -  .dl	inst6502_inx					;E8
 3749 D1:D10A 94 BF D1 -  .dl	inst6502_sbc_imm				;E9
 3750 D1:D10D 41 CE D1 -  .dl	inst6502_nop					;EA
 3751 D1:D110 48 CE D1 -  .dl	inst6502_			;EB
 3752 D1:D113 97 CB D1 -  .dl	inst6502_cpx_abs				;EC
 3753 D1:D116 BF BF D1 -  .dl	inst6502_sbc_abs				;ED
 3754 D1:D119 2D BE D1 -  .dl	inst6502_inc_abs				;EE
 3755 D1:D11C 48 CE D1 -  .dl	inst6502_			;EF
 3756 D1:D11F 88 CC D1 -  .dl	inst6502_beq					;F0
 3757 D1:D122 59 C0 D1 -  .dl	inst6502_sbc_indy				;F1
 3758 D1:D125 48 CE D1 -  .dl	inst6502_			;F2
 3759 D1:D128 48 CE D1 -  .dl	inst6502_			;F3
 3760 D1:D12B 48 CE D1 -  .dl	inst6502_			;F4
 3761 D1:D12E AC BF D1 -  .dl	inst6502_sbc_zpx				;F5
 3762 D1:D131 05 BE D1 -  .dl	inst6502_inc_zpx				;F6
 3763 D1:D134 48 CE D1 -  .dl	inst6502_			;F7
 3764 D1:D137 38 CA D1 -  .dl	inst6502_sed					;F8
 3765 D1:D13A 08 C0 D1 -  .dl	inst6502_sbc_absy				;F9
 3766 D1:D13D 48 CE D1 -  .dl	inst6502_			;FA
 3767 D1:D140 48 CE D1 -  .dl	inst6502_			;FB
 3768 D1:D143 48 CE D1 -  .dl	inst6502_			;FC
 3769 D1:D146 DF BF D1 -  .dl	inst6502_sbc_absx				;FD
 3770 D1:D149 63 BE D1 -  .dl	inst6502_inc_absx				;FE
 3771 D1:D14C 48 CE D1 -  .dl	inst6502_			;FF
 3772 D1:D14F -  -  -  -  
 3773 D1:D14F -  -  -  -  
 3774 D1:D14F -  -  -  -  
 3775 D1:D14F -  -  -  -  
 3776 D1:D14F -  -  -  -  
 3777 D1:D14F -  -  -  -  
 3778 D1:D14F -  -  -  -  
 3779 D1:D14F -  -  -  -  
 3780 D1:D14F -  -  -  -  
 3781 D1:D14F -  -  -  -  
 3782 D1:D14F -  -  -  -  
 3783 D1:D14F -  -  -  -  
 3784 D1:D14F -  -  -  -  
Listing for file "main.z80"
  666 D1:D14F -  -  -  -  #include "debug.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug.z80"
    1 D1:D14F -  -  -  -  ;This has all the tables needed to drive the debugger.
    2 D1:D14F -  -  -  -  #include "debug_itab.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug_itab.z80"
    1 D1:D14F -  -  -  -  inst6502_opcode_width_table:
    2 D1:D14F 01 -  -  -  .db 1    ;0: 
    3 D1:D150 02 -  -  -  .db 2    ;1: zpg,X
    4 D1:D151 03 -  -  -  .db 3    ;2: ind
    5 D1:D152 03 -  -  -  .db 3    ;3: abs
    6 D1:D153 03 -  -  -  .db 3    ;4: abs,X
    7 D1:D154 02 -  -  -  .db 2    ;5: X,ind
    8 D1:D155 01 -  -  -  .db 1    ;6: A
    9 D1:D156 02 -  -  -  .db 2    ;7: zpg
   10 D1:D157 02 -  -  -  .db 2    ;8: rel
   11 D1:D158 02 -  -  -  .db 2    ;9: #
   12 D1:D159 01 -  -  -  .db 1    ;10: impl
   13 D1:D15A 02 -  -  -  .db 2    ;11: ind,Y
   14 D1:D15B 03 -  -  -  .db 3    ;12: abs,Y
   15 D1:D15C 02 -  -  -  .db 2    ;13: zpg,Y
   16 D1:D15D -  -  -  -  
   17 D1:D15D -  -  -  -  
   18 D1:D15D -  -  -  -  ;Note: 1=1byteOper, 2=2byteOper, -=1byteRelOper. Other chrs are literal
   19 D1:D15D -  -  -  -  
   20 D1:D15D -  -  -  -  inst6502_disassembler:
   21 D1:D15D 01 -  -  -  .db 1,""  ;
   22 D1:D15E 04 31 2C 58 .db 4,"1,X"  ;
   23 D1:D162 04 28 32 29 .db 4,"(2)"  ;
   24 D1:D166 02 32 -  -  .db 2,"2"  ;
   25 D1:D168 04 32 2C 58 .db 4,"2,X"  ;
   26 D1:D16C 06 28 31 2C 
              58 29 -  -  .db 6,"(1,X)"  ;
   27 D1:D172 02 41 -  -  .db 2,"A"  ;
   28 D1:D174 02 31 -  -  .db 2,"1"  ;
   29 D1:D176 02 2D -  -  .db 2,"-"  ;
   30 D1:D178 03 23 31 -  .db 3,"#1"  ;
   31 D1:D17B 01 -  -  -  .db 1,""  ;
   32 D1:D17C 06 28 31 29 
              2C 59 -  -  .db 6,"(1),Y"  ;
   33 D1:D182 04 32 2C 59 .db 4,"2,Y"  ;
   34 D1:D186 04 31 2C 59 .db 4,"1,Y"  ;
   35 D1:D18A -  -  -  -  
   36 D1:D18A -  -  -  -  inst6502_disassembly_table:
   37 D1:D18A 42 52 4B 0A .db "BRK", 10     ;0x00
   38 D1:D18E 4F 52 41 05 .db "ORA", 5     ;0x01
   39 D1:D192 4A 41 4D 00 .db "JAM", 0     ;0x02
   40 D1:D196 53 4C 4F 05 .db "SLO", 5     ;0x03
   41 D1:D19A 4E 4F 50 07 .db "NOP", 7     ;0x04
   42 D1:D19E 4F 52 41 07 .db "ORA", 7     ;0x05
   43 D1:D1A2 41 53 4C 07 .db "ASL", 7     ;0x06
   44 D1:D1A6 53 4C 4F 07 .db "SLO", 7     ;0x07
   45 D1:D1AA 50 48 50 0A .db "PHP", 10     ;0x08
   46 D1:D1AE 4F 52 41 09 .db "ORA", 9     ;0x09
   47 D1:D1B2 41 53 4C 06 .db "ASL", 6     ;0x0A
   48 D1:D1B6 41 4E 43 09 .db "ANC", 9     ;0x0B
   49 D1:D1BA 4E 4F 50 03 .db "NOP", 3     ;0x0C
   50 D1:D1BE 4F 52 41 03 .db "ORA", 3     ;0x0D
   51 D1:D1C2 41 53 4C 03 .db "ASL", 3     ;0x0E
   52 D1:D1C6 53 4C 4F 03 .db "SLO", 3     ;0x0F
   53 D1:D1CA 42 50 4C 08 .db "BPL", 8     ;0x10
   54 D1:D1CE 4F 52 41 0B .db "ORA", 11     ;0x11
   55 D1:D1D2 4A 41 4D 00 .db "JAM", 0     ;0x12
   56 D1:D1D6 53 4C 4F 0B .db "SLO", 11     ;0x13
   57 D1:D1DA 4E 4F 50 01 .db "NOP", 1     ;0x14
   58 D1:D1DE 4F 52 41 01 .db "ORA", 1     ;0x15
   59 D1:D1E2 41 53 4C 01 .db "ASL", 1     ;0x16
   60 D1:D1E6 53 4C 4F 01 .db "SLO", 1     ;0x17
   61 D1:D1EA 43 4C 43 0A .db "CLC", 10     ;0x18
   62 D1:D1EE 4F 52 41 0C .db "ORA", 12     ;0x19
   63 D1:D1F2 4E 4F 50 0A .db "NOP", 10     ;0x1A
   64 D1:D1F6 53 4C 4F 0C .db "SLO", 12     ;0x1B
   65 D1:D1FA 4E 4F 50 04 .db "NOP", 4     ;0x1C
   66 D1:D1FE 4F 52 41 04 .db "ORA", 4     ;0x1D
   67 D1:D202 41 53 4C 04 .db "ASL", 4     ;0x1E
   68 D1:D206 53 4C 4F 04 .db "SLO", 4     ;0x1F
   69 D1:D20A 4A 53 52 03 .db "JSR", 3     ;0x20
   70 D1:D20E 41 4E 44 05 .db "AND", 5     ;0x21
   71 D1:D212 4A 41 4D 00 .db "JAM", 0     ;0x22
   72 D1:D216 52 4C 41 05 .db "RLA", 5     ;0x23
   73 D1:D21A 42 49 54 07 .db "BIT", 7     ;0x24
   74 D1:D21E 41 4E 44 07 .db "AND", 7     ;0x25
   75 D1:D222 52 4F 4C 07 .db "ROL", 7     ;0x26
   76 D1:D226 52 4C 41 07 .db "RLA", 7     ;0x27
   77 D1:D22A 50 4C 50 0A .db "PLP", 10     ;0x28
   78 D1:D22E 41 4E 44 09 .db "AND", 9     ;0x29
   79 D1:D232 52 4F 4C 06 .db "ROL", 6     ;0x2A
   80 D1:D236 41 4E 43 09 .db "ANC", 9     ;0x2B
   81 D1:D23A 42 49 54 03 .db "BIT", 3     ;0x2C
   82 D1:D23E 41 4E 44 03 .db "AND", 3     ;0x2D
   83 D1:D242 52 4F 4C 03 .db "ROL", 3     ;0x2E
   84 D1:D246 52 4C 41 03 .db "RLA", 3     ;0x2F
   85 D1:D24A 42 4D 49 08 .db "BMI", 8     ;0x30
   86 D1:D24E 41 4E 44 0B .db "AND", 11     ;0x31
   87 D1:D252 4A 41 4D 00 .db "JAM", 0     ;0x32
   88 D1:D256 52 4C 41 0B .db "RLA", 11     ;0x33
   89 D1:D25A 4E 4F 50 01 .db "NOP", 1     ;0x34
   90 D1:D25E 41 4E 44 01 .db "AND", 1     ;0x35
   91 D1:D262 52 4F 4C 01 .db "ROL", 1     ;0x36
   92 D1:D266 52 4C 41 01 .db "RLA", 1     ;0x37
   93 D1:D26A 53 45 43 0A .db "SEC", 10     ;0x38
   94 D1:D26E 41 4E 44 0C .db "AND", 12     ;0x39
   95 D1:D272 4E 4F 50 0A .db "NOP", 10     ;0x3A
   96 D1:D276 52 4C 41 0C .db "RLA", 12     ;0x3B
   97 D1:D27A 4E 4F 50 04 .db "NOP", 4     ;0x3C
   98 D1:D27E 41 4E 44 04 .db "AND", 4     ;0x3D
   99 D1:D282 52 4F 4C 04 .db "ROL", 4     ;0x3E
  100 D1:D286 52 4C 41 04 .db "RLA", 4     ;0x3F
  101 D1:D28A 52 54 49 0A .db "RTI", 10     ;0x40
  102 D1:D28E 45 4F 52 05 .db "EOR", 5     ;0x41
  103 D1:D292 4A 41 4D 00 .db "JAM", 0     ;0x42
  104 D1:D296 53 52 45 05 .db "SRE", 5     ;0x43
  105 D1:D29A 4E 4F 50 07 .db "NOP", 7     ;0x44
  106 D1:D29E 45 4F 52 07 .db "EOR", 7     ;0x45
  107 D1:D2A2 4C 53 52 07 .db "LSR", 7     ;0x46
  108 D1:D2A6 53 52 45 07 .db "SRE", 7     ;0x47
  109 D1:D2AA 50 48 41 0A .db "PHA", 10     ;0x48
  110 D1:D2AE 45 4F 52 09 .db "EOR", 9     ;0x49
  111 D1:D2B2 4C 53 52 06 .db "LSR", 6     ;0x4A
  112 D1:D2B6 41 4C 52 09 .db "ALR", 9     ;0x4B
  113 D1:D2BA 4A 4D 50 03 .db "JMP", 3     ;0x4C
  114 D1:D2BE 45 4F 52 03 .db "EOR", 3     ;0x4D
  115 D1:D2C2 4C 53 52 03 .db "LSR", 3     ;0x4E
  116 D1:D2C6 53 52 45 03 .db "SRE", 3     ;0x4F
  117 D1:D2CA 42 56 43 08 .db "BVC", 8     ;0x50
  118 D1:D2CE 45 4F 52 0B .db "EOR", 11     ;0x51
  119 D1:D2D2 4A 41 4D 00 .db "JAM", 0     ;0x52
  120 D1:D2D6 53 52 45 0B .db "SRE", 11     ;0x53
  121 D1:D2DA 4E 4F 50 01 .db "NOP", 1     ;0x54
  122 D1:D2DE 45 4F 52 01 .db "EOR", 1     ;0x55
  123 D1:D2E2 4C 53 52 01 .db "LSR", 1     ;0x56
  124 D1:D2E6 53 52 45 01 .db "SRE", 1     ;0x57
  125 D1:D2EA 43 4C 49 0A .db "CLI", 10     ;0x58
  126 D1:D2EE 45 4F 52 0C .db "EOR", 12     ;0x59
  127 D1:D2F2 4E 4F 50 0A .db "NOP", 10     ;0x5A
  128 D1:D2F6 53 52 45 0C .db "SRE", 12     ;0x5B
  129 D1:D2FA 4E 4F 50 04 .db "NOP", 4     ;0x5C
  130 D1:D2FE 45 4F 52 04 .db "EOR", 4     ;0x5D
  131 D1:D302 4C 53 52 04 .db "LSR", 4     ;0x5E
  132 D1:D306 53 52 45 04 .db "SRE", 4     ;0x5F
  133 D1:D30A 52 54 53 0A .db "RTS", 10     ;0x60
  134 D1:D30E 41 44 43 05 .db "ADC", 5     ;0x61
  135 D1:D312 4A 41 4D 00 .db "JAM", 0     ;0x62
  136 D1:D316 52 52 41 05 .db "RRA", 5     ;0x63
  137 D1:D31A 4E 4F 50 07 .db "NOP", 7     ;0x64
  138 D1:D31E 41 44 43 07 .db "ADC", 7     ;0x65
  139 D1:D322 52 4F 52 07 .db "ROR", 7     ;0x66
  140 D1:D326 52 52 41 07 .db "RRA", 7     ;0x67
  141 D1:D32A 50 4C 41 0A .db "PLA", 10     ;0x68
  142 D1:D32E 41 44 43 09 .db "ADC", 9     ;0x69
  143 D1:D332 52 4F 52 06 .db "ROR", 6     ;0x6A
  144 D1:D336 41 52 52 09 .db "ARR", 9     ;0x6B
  145 D1:D33A 4A 4D 50 02 .db "JMP", 2     ;0x6C
  146 D1:D33E 41 44 43 03 .db "ADC", 3     ;0x6D
  147 D1:D342 52 4F 52 03 .db "ROR", 3     ;0x6E
  148 D1:D346 52 52 41 03 .db "RRA", 3     ;0x6F
  149 D1:D34A 42 56 53 08 .db "BVS", 8     ;0x70
  150 D1:D34E 41 44 43 0B .db "ADC", 11     ;0x71
  151 D1:D352 4A 41 4D 00 .db "JAM", 0     ;0x72
  152 D1:D356 52 52 41 0B .db "RRA", 11     ;0x73
  153 D1:D35A 4E 4F 50 01 .db "NOP", 1     ;0x74
  154 D1:D35E 41 44 43 01 .db "ADC", 1     ;0x75
  155 D1:D362 52 4F 52 01 .db "ROR", 1     ;0x76
  156 D1:D366 52 52 41 01 .db "RRA", 1     ;0x77
  157 D1:D36A 53 45 49 0A .db "SEI", 10     ;0x78
  158 D1:D36E 41 44 43 0C .db "ADC", 12     ;0x79
  159 D1:D372 4E 4F 50 0A .db "NOP", 10     ;0x7A
  160 D1:D376 52 52 41 0C .db "RRA", 12     ;0x7B
  161 D1:D37A 4E 4F 50 04 .db "NOP", 4     ;0x7C
  162 D1:D37E 41 44 43 04 .db "ADC", 4     ;0x7D
  163 D1:D382 52 4F 52 04 .db "ROR", 4     ;0x7E
  164 D1:D386 52 52 41 04 .db "RRA", 4     ;0x7F
  165 D1:D38A 4E 4F 50 09 .db "NOP", 9     ;0x80
  166 D1:D38E 53 54 41 05 .db "STA", 5     ;0x81
  167 D1:D392 4E 4F 50 09 .db "NOP", 9     ;0x82
  168 D1:D396 53 41 58 05 .db "SAX", 5     ;0x83
  169 D1:D39A 53 54 59 07 .db "STY", 7     ;0x84
  170 D1:D39E 53 54 41 07 .db "STA", 7     ;0x85
  171 D1:D3A2 53 54 58 07 .db "STX", 7     ;0x86
  172 D1:D3A6 53 41 58 07 .db "SAX", 7     ;0x87
  173 D1:D3AA 44 45 59 0A .db "DEY", 10     ;0x88
  174 D1:D3AE 4E 4F 50 09 .db "NOP", 9     ;0x89
  175 D1:D3B2 54 58 41 0A .db "TXA", 10     ;0x8A
  176 D1:D3B6 41 4E 45 09 .db "ANE", 9     ;0x8B
  177 D1:D3BA 53 54 59 03 .db "STY", 3     ;0x8C
  178 D1:D3BE 53 54 41 03 .db "STA", 3     ;0x8D
  179 D1:D3C2 53 54 58 03 .db "STX", 3     ;0x8E
  180 D1:D3C6 53 41 58 03 .db "SAX", 3     ;0x8F
  181 D1:D3CA 42 43 43 08 .db "BCC", 8     ;0x90
  182 D1:D3CE 53 54 41 0B .db "STA", 11     ;0x91
  183 D1:D3D2 4A 41 4D 00 .db "JAM", 0     ;0x92
  184 D1:D3D6 53 48 41 0B .db "SHA", 11     ;0x93
  185 D1:D3DA 53 54 59 01 .db "STY", 1     ;0x94
  186 D1:D3DE 53 54 41 01 .db "STA", 1     ;0x95
  187 D1:D3E2 53 54 58 0D .db "STX", 13     ;0x96
  188 D1:D3E6 53 41 58 0D .db "SAX", 13     ;0x97
  189 D1:D3EA 54 59 41 0A .db "TYA", 10     ;0x98
  190 D1:D3EE 53 54 41 0C .db "STA", 12     ;0x99
  191 D1:D3F2 54 58 53 0A .db "TXS", 10     ;0x9A
  192 D1:D3F6 54 41 53 0C .db "TAS", 12     ;0x9B
  193 D1:D3FA 53 48 59 04 .db "SHY", 4     ;0x9C
  194 D1:D3FE 53 54 41 04 .db "STA", 4     ;0x9D
  195 D1:D402 53 48 58 0C .db "SHX", 12     ;0x9E
  196 D1:D406 53 48 41 0C .db "SHA", 12     ;0x9F
  197 D1:D40A 4C 44 59 09 .db "LDY", 9     ;0xA0
  198 D1:D40E 4C 44 41 05 .db "LDA", 5     ;0xA1
  199 D1:D412 4C 44 58 09 .db "LDX", 9     ;0xA2
  200 D1:D416 4C 41 58 05 .db "LAX", 5     ;0xA3
  201 D1:D41A 4C 44 59 07 .db "LDY", 7     ;0xA4
  202 D1:D41E 4C 44 41 07 .db "LDA", 7     ;0xA5
  203 D1:D422 4C 44 58 07 .db "LDX", 7     ;0xA6
  204 D1:D426 4C 41 58 07 .db "LAX", 7     ;0xA7
  205 D1:D42A 54 41 59 0A .db "TAY", 10     ;0xA8
  206 D1:D42E 4C 44 41 09 .db "LDA", 9     ;0xA9
  207 D1:D432 54 41 58 0A .db "TAX", 10     ;0xAA
  208 D1:D436 4C 58 41 09 .db "LXA", 9     ;0xAB
  209 D1:D43A 4C 44 59 03 .db "LDY", 3     ;0xAC
  210 D1:D43E 4C 44 41 03 .db "LDA", 3     ;0xAD
  211 D1:D442 4C 44 58 03 .db "LDX", 3     ;0xAE
  212 D1:D446 4C 41 58 03 .db "LAX", 3     ;0xAF
  213 D1:D44A 42 43 53 08 .db "BCS", 8     ;0xB0
  214 D1:D44E 4C 44 41 0B .db "LDA", 11     ;0xB1
  215 D1:D452 4A 41 4D 00 .db "JAM", 0     ;0xB2
  216 D1:D456 4C 41 58 0B .db "LAX", 11     ;0xB3
  217 D1:D45A 4C 44 59 01 .db "LDY", 1     ;0xB4
  218 D1:D45E 4C 44 41 01 .db "LDA", 1     ;0xB5
  219 D1:D462 4C 44 58 0D .db "LDX", 13     ;0xB6
  220 D1:D466 4C 41 58 0D .db "LAX", 13     ;0xB7
  221 D1:D46A 43 4C 56 0A .db "CLV", 10     ;0xB8
  222 D1:D46E 4C 44 41 0C .db "LDA", 12     ;0xB9
  223 D1:D472 54 53 58 0A .db "TSX", 10     ;0xBA
  224 D1:D476 4C 41 53 0C .db "LAS", 12     ;0xBB
  225 D1:D47A 4C 44 59 04 .db "LDY", 4     ;0xBC
  226 D1:D47E 4C 44 41 04 .db "LDA", 4     ;0xBD
  227 D1:D482 4C 44 58 0C .db "LDX", 12     ;0xBE
  228 D1:D486 4C 41 58 0C .db "LAX", 12     ;0xBF
  229 D1:D48A 43 50 59 09 .db "CPY", 9     ;0xC0
  230 D1:D48E 43 4D 50 05 .db "CMP", 5     ;0xC1
  231 D1:D492 4E 4F 50 09 .db "NOP", 9     ;0xC2
  232 D1:D496 44 43 50 05 .db "DCP", 5     ;0xC3
  233 D1:D49A 43 50 59 07 .db "CPY", 7     ;0xC4
  234 D1:D49E 43 4D 50 07 .db "CMP", 7     ;0xC5
  235 D1:D4A2 44 45 43 07 .db "DEC", 7     ;0xC6
  236 D1:D4A6 44 43 50 07 .db "DCP", 7     ;0xC7
  237 D1:D4AA 49 4E 59 0A .db "INY", 10     ;0xC8
  238 D1:D4AE 43 4D 50 09 .db "CMP", 9     ;0xC9
  239 D1:D4B2 44 45 58 0A .db "DEX", 10     ;0xCA
  240 D1:D4B6 53 42 58 09 .db "SBX", 9     ;0xCB
  241 D1:D4BA 43 50 59 03 .db "CPY", 3     ;0xCC
  242 D1:D4BE 43 4D 50 03 .db "CMP", 3     ;0xCD
  243 D1:D4C2 44 45 43 03 .db "DEC", 3     ;0xCE
  244 D1:D4C6 44 43 50 03 .db "DCP", 3     ;0xCF
  245 D1:D4CA 42 4E 45 08 .db "BNE", 8     ;0xD0
  246 D1:D4CE 43 4D 50 0B .db "CMP", 11     ;0xD1
  247 D1:D4D2 4A 41 4D 00 .db "JAM", 0     ;0xD2
  248 D1:D4D6 44 43 50 0B .db "DCP", 11     ;0xD3
  249 D1:D4DA 4E 4F 50 01 .db "NOP", 1     ;0xD4
  250 D1:D4DE 43 4D 50 01 .db "CMP", 1     ;0xD5
  251 D1:D4E2 44 45 43 01 .db "DEC", 1     ;0xD6
  252 D1:D4E6 44 43 50 01 .db "DCP", 1     ;0xD7
  253 D1:D4EA 43 4C 44 0A .db "CLD", 10     ;0xD8
  254 D1:D4EE 43 4D 50 0C .db "CMP", 12     ;0xD9
  255 D1:D4F2 4E 4F 50 0A .db "NOP", 10     ;0xDA
  256 D1:D4F6 44 43 50 0C .db "DCP", 12     ;0xDB
  257 D1:D4FA 4E 4F 50 04 .db "NOP", 4     ;0xDC
  258 D1:D4FE 43 4D 50 04 .db "CMP", 4     ;0xDD
  259 D1:D502 44 45 43 04 .db "DEC", 4     ;0xDE
  260 D1:D506 44 43 50 04 .db "DCP", 4     ;0xDF
  261 D1:D50A 43 50 58 09 .db "CPX", 9     ;0xE0
  262 D1:D50E 53 42 43 05 .db "SBC", 5     ;0xE1
  263 D1:D512 4E 4F 50 09 .db "NOP", 9     ;0xE2
  264 D1:D516 49 53 43 05 .db "ISC", 5     ;0xE3
  265 D1:D51A 43 50 58 07 .db "CPX", 7     ;0xE4
  266 D1:D51E 53 42 43 07 .db "SBC", 7     ;0xE5
  267 D1:D522 49 4E 43 07 .db "INC", 7     ;0xE6
  268 D1:D526 49 53 43 07 .db "ISC", 7     ;0xE7
  269 D1:D52A 49 4E 58 0A .db "INX", 10     ;0xE8
  270 D1:D52E 53 42 43 09 .db "SBC", 9     ;0xE9
  271 D1:D532 4E 4F 50 0A .db "NOP", 10     ;0xEA
  272 D1:D536 55 53 42 09 .db "USB", 9     ;0xEB
  273 D1:D53A 43 50 58 03 .db "CPX", 3     ;0xEC
  274 D1:D53E 53 42 43 03 .db "SBC", 3     ;0xED
  275 D1:D542 49 4E 43 03 .db "INC", 3     ;0xEE
  276 D1:D546 49 53 43 03 .db "ISC", 3     ;0xEF
  277 D1:D54A 42 45 51 08 .db "BEQ", 8     ;0xF0
  278 D1:D54E 53 42 43 0B .db "SBC", 11     ;0xF1
  279 D1:D552 4A 41 4D 00 .db "JAM", 0     ;0xF2
  280 D1:D556 49 53 43 0B .db "ISC", 11     ;0xF3
  281 D1:D55A 4E 4F 50 01 .db "NOP", 1     ;0xF4
  282 D1:D55E 53 42 43 01 .db "SBC", 1     ;0xF5
  283 D1:D562 49 4E 43 01 .db "INC", 1     ;0xF6
  284 D1:D566 49 53 43 01 .db "ISC", 1     ;0xF7
  285 D1:D56A 53 45 44 0A .db "SED", 10     ;0xF8
  286 D1:D56E 53 42 43 0C .db "SBC", 12     ;0xF9
  287 D1:D572 4E 4F 50 0A .db "NOP", 10     ;0xFA
  288 D1:D576 49 53 43 0C .db "ISC", 12     ;0xFB
  289 D1:D57A 4E 4F 50 04 .db "NOP", 4     ;0xFC
  290 D1:D57E 53 42 43 04 .db "SBC", 4     ;0xFD
  291 D1:D582 49 4E 43 04 .db "INC", 4     ;0xFE
  292 D1:D586 49 53 43 04 .db "ISC", 4     ;0xFF
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug.z80"
    3 D1:D58A -  -  -  -  
    4 D1:D58A -  -  -  -  
    5 D1:D58A -  -  -  -  ;You must assign a print character routine.
    6 D1:D58A -  -  -  -  ;You must also write all opcode bytes to operbuf or map operbuf to where written
    7 D1:D58A -  -  -  -  dbg_printChr    = PrintBigFont
    8 D1:D58A -  -  -  -  operbuf         = debugram
    9 D1:D58A -  -  -  -  
   10 D1:D58A -  -  -  -  
   11 D1:D58A -  -  -  -  dbg_resetScreen:
   12 D1:D58A 21 00 00 D4     ld  hl,screenBuf1
   13 D1:D58E 11 01 00 D4     ld  de,screenBuf1+1
   14 D1:D592 01 FF 57 02     ld  bc,(2*240*320)-1
   15 D1:D596 36 00 -  -      ld  (hl),$00
   16 D1:D598 ED B0 -  -      ldir
   17 D1:D59A AF -  -  -      xor a,a
   18 D1:D59B CD 1F AF D1     call setLineStart
   19 D1:D59F CD 28 AF D1     call setCurLine
   20 D1:D5A3 C9 -  -  -      ret
   21 D1:D5A4 -  -  -  -  
   22 D1:D5A4 -  -  -  -  dbg_prepNextLine:
   23 D1:D5A4 AF -  -  -      xor a,a
   24 D1:D5A5 32 F6 31 D0     ld  (xPos),a
   25 D1:D5A9 CD F5 AF D1     call calculateScreenPtr
   26 D1:D5AD EB -  -  -      ex  de,hl
   27 D1:D5AE 21 FF 2B D5     ld  hl,screenBuf2-1
   28 D1:D5B2 B7 -  -  -      or  a,a
   29 D1:D5B3 ED 52 -  -      sbc hl,de
   30 D1:D5B5 -  -  -  -  ;If C: DE in sb2. subtract to set in sb1.
   31 D1:D5B5 -  -  -  -  ;If NC: DE in sb1. add to set in sb2.
   32 D1:D5B5 21 00 2C 01     ld  hl,320*240
   33 D1:D5B9 30 04 -  -      jr  nc,+_
   34 D1:D5BB 21 00 D4 FE     ld  hl,-(320*240)+0
   35 D1:D5BF 19 -  -  -  _:  add hl,de   ;HL set to other buffer. DE points to current buffer.
   36 D1:D5C0 01 00 0A 00     ld  bc,320*8    ;copy one line from other buffer to current buffer.
   37 D1:D5C4 7E -  -  -  _:  ld  a,(hl)
   38 D1:D5C5 C6 01 -  -      add a,1     ;carry if $FF (white), NC if not
   39 D1:D5C7 9F -  -  -      sbc a,a     ;if carry, returns to $FF, else is black
   40 D1:D5C8 77 -  -  -      ld  (hl),a
   41 D1:D5C9 ED A0 -  -      ldi
   42 D1:D5CB EA C4 D5 D1     jp  pe,-_
   43 D1:D5CF 3A F7 31 D0     ld  a,(yPos)
   44 D1:D5D3 FE 1D -  -      cp  a,29
   45 D1:D5D5 20 06 -  -      jr  nz,+_
   46 D1:D5D7 21 00 D4 FE     ld  hl,-(320*240)
   47 D1:D5DB 19 -  -  -      add hl,de
   48 D1:D5DC EB -  -  -      ex de,hl        ;if bottom of screen, then reset DE to top of screen.
   49 D1:D5DD D5 -  -  -  _:  push de
   50 D1:D5DE E1 -  -  -      pop hl
   51 D1:D5DF 13 -  -  -      inc de
   52 D1:D5E0 71 -  -  -      ld  (hl),c
   53 D1:D5E1 01 BF 08 00     ld  bc,(320*7)-1    ;erase whole line below it to prepare for writing.
   54 D1:D5E5 ED B0 -  -      ldir
   55 D1:D5E7 C9 -  -  -      ret
   56 D1:D5E8 -  -  -  -  
   57 D1:D5E8 -  -  -  -  ;Input: ix = core_memory_ix 
   58 D1:D5E8 -  -  -  -  ;Output: Text onscreen
   59 D1:D5E8 -  -  -  -  dbg_printLine:
   60 D1:D5E8 E5 C5 D5 DD 
              E5 FD E5 F5     push hl \ push bc \ push de \ push ix \ push iy \ push af
   61 D1:D5F0 ED 23 00 -      lea hl,iy+0
   62 D1:D5F3 DD 2F 0B -      ld  (ix+CYCLES_CURRENT),hl
   63 D1:D5F6 11 28 23 00     ld  de,DEBUG_PRINT_START_CYCLE
   64 D1:D5FA B7 -  -  -      or  a,a
   65 D1:D5FB ED 52 -  -      sbc hl,de
   66 D1:D5FD DA 22 D7 D1     jp  c,dbg_printLine_noPrint
   67 D1:D601 -  -  -  -  
   68 D1:D601 3E 1A -  -      ld  a,$1A   ;blue
   69 D1:D603 32 77 AF D1     ld  (fontBGColor_var),a
   70 D1:D607 32 C4 AF D1     ld  (smallFontBGColor_var),a
   71 D1:D60B DD 27 0E -      ld  hl,(ix+CURRENT_OPCODES)
   72 D1:D60E 22 F9 31 D0     ld  (operbuf),hl
   73 D1:D612 CD A4 D5 D1     call dbg_prepNextLine
   74 D1:D616 CD 33 AF D1     call newLine
   75 D1:D61A DD 7E 06 -      ld  a,(ix+REGPC+1)
   76 D1:D61D CD 90 AF D1     call printSmallNumPair
   77 D1:D621 DD 7E 05 -      ld  a,(ix+REGPC+0)
   78 D1:D624 CD 90 AF D1     call printSmallNumPair
   79 D1:D628 3E 20 -  -      ld  a,' '
   80 D1:D62A CD 60 AF D1     call printBigFont
   81 D1:D62E -  -  -  -      ;
   82 D1:D62E 3E 41 -  -      ld  a,'A'
   83 D1:D630 CD 60 AF D1     call printBigFont
   84 D1:D634 DD 7E 00 -      ld  a,(ix+REGA)
   85 D1:D637 CD 90 AF D1     call printSmallNumPair
   86 D1:D63B 3E 20 -  -      ld  a,' '
   87 D1:D63D CD 60 AF D1     call printBigFont
   88 D1:D641 -  -  -  -      ;
   89 D1:D641 3E 58 -  -      ld  a,'X'
   90 D1:D643 CD 60 AF D1     call printBigFont
   91 D1:D647 DD 7E 01 -      ld  a,(ix+REGX)
   92 D1:D64A CD 90 AF D1     call printSmallNumPair
   93 D1:D64E 3E 20 -  -      ld  a,' '
   94 D1:D650 CD 60 AF D1     call printBigFont
   95 D1:D654 -  -  -  -      ;
   96 D1:D654 3E 59 -  -      ld  a,'Y'
   97 D1:D656 CD 60 AF D1     call printBigFont
   98 D1:D65A DD 7E 02 -      ld  a,(ix+REGY)
   99 D1:D65D CD 90 AF D1     call printSmallNumPair
  100 D1:D661 3E 20 -  -      ld  a,' '
  101 D1:D663 CD 60 AF D1     call printBigFont
  102 D1:D667 -  -  -  -      ;
  103 D1:D667 3E 53 -  -      ld  a,'S'
  104 D1:D669 CD 60 AF D1     call printBigFont
  105 D1:D66D DD 7E 03 -      ld  a,(ix+REGSP)
  106 D1:D670 CD 90 AF D1     call printSmallNumPair
  107 D1:D674 3E 20 -  -      ld  a,' '
  108 D1:D676 CD 60 AF D1     call printBigFont
  109 D1:D67A -  -  -  -      ;
  110 D1:D67A 3E 50 -  -      ld  a,'P'
  111 D1:D67C CD 60 AF D1     call printBigFont
  112 D1:D680 DD 7E 04 -      ld  a,(ix+REGSR)
  113 D1:D683 CD 90 AF D1     call printSmallNumPair
  114 D1:D687 3E 20 -  -      ld  a,' '
  115 D1:D689 CD 60 AF D1     call printBigFont
  116 D1:D68D -  -  -  -  
  117 D1:D68D -  -  -  -      ;
  118 D1:D68D -  -  -  -  ;    ld  hl,dbg_printLine_str001
  119 D1:D68D -  -  -  -  ;    call printString
  120 D1:D68D -  -  -  -  ;    ld  b,5
  121 D1:D68D -  -  -  -  ;    lea hl,ix+0
  122 D1:D68D -  -  -  -  ;_:  ld  a,(hl)
  123 D1:D68D -  -  -  -  ;    inc hl
  124 D1:D68D -  -  -  -  ;    push bc
  125 D1:D68D -  -  -  -  ;        push hl
  126 D1:D68D -  -  -  -  ;            call printSmallNumPair
  127 D1:D68D -  -  -  -  ;            ld  a,' '
  128 D1:D68D -  -  -  -  ;            call printBigFont
  129 D1:D68D -  -  -  -  ;        pop hl
  130 D1:D68D -  -  -  -  ;    pop bc
  131 D1:D68D -  -  -  -  ;    djnz -_
  132 D1:D68D -  -  -  -  
  133 D1:D68D DD 7E 0D -      ld  a,(ix+CYCLES_CURRENT+2)
  134 D1:D690 CD 90 AF D1     call printSmallNumPair
  135 D1:D694 DD 7E 0C -      ld  a,(ix+CYCLES_CURRENT+1)
  136 D1:D697 CD 90 AF D1     call printSmallNumPair
  137 D1:D69B DD 7E 0B -      ld  a,(ix+CYCLES_CURRENT+0)
  138 D1:D69E CD 90 AF D1     call printSmallNumPair
  139 D1:D6A2 3E 20 -  -      ld  a,' '
  140 D1:D6A4 CD 60 AF D1     call printBigFont
  141 D1:D6A8 2A F9 31 D0     ld  hl,(operbuf)
  142 D1:D6AC DD 2F 0E -      ld  (ix+CURRENT_OPCODES),hl
  143 D1:D6AF 7D -  -  -      ld  a,L
  144 D1:D6B0 CD 84 D7 D1     call dbg_getInstSize
  145 D1:D6B4 06 03 -  -      ld  b,3
  146 D1:D6B6 4F -  -  -      ld  c,a
  147 D1:D6B7 0C -  -  -      inc c
  148 D1:D6B8 ED 22 0E -      lea hl,ix+CURRENT_OPCODES
  149 D1:D6BB 7E -  -  -  _:  ld  a,(hl)
  150 D1:D6BC 23 -  -  -      inc hl
  151 D1:D6BD E5 -  -  -      push hl
  152 D1:D6BE 0D -  -  -          dec c
  153 D1:D6BF F2 C4 D6 D1         jp p,+_
  154 D1:D6C3 0C -  -  -          inc c   ;never let c go below zero.
  155 D1:D6C4 C5 -  -  -  _:      push bc
  156 D1:D6C5 28 06 -  -              jr  z,+_
  157 D1:D6C7 CD 90 AF D1             call printSmallNumPair
  158 D1:D6CB 18 06 -  -              jr ++_
  159 D1:D6CD 3E 20 -  -  _:          ld  a,' '
  160 D1:D6CF CD 60 AF D1             call printBigFont
  161 D1:D6D3 C1 -  -  -  _:      pop bc
  162 D1:D6D4 E1 -  -  -      pop hl
  163 D1:D6D5 10 E4 -  -      djnz ----_
  164 D1:D6D7 3E 20 -  -      ld  a,' '
  165 D1:D6D9 CD 60 AF D1     call printBigFont
  166 D1:D6DD CD 9C D7 D1     call dbg_printDisassembly
  167 D1:D6E1 -  -  -  -  
  168 D1:D6E1 -  -  -  -      ;
  169 D1:D6E1 -  -  -  -      ;Remove section below when done testing nestest for timings
  170 D1:D6E1 -  -  -  -      ;
  171 D1:D6E1 -  -  -  -  
  172 D1:D6E1 11 00 00 00     ld  de,0
  173 D1:D6E5 2A 1F 34 D0     ld  hl,(timings_base)
  174 D1:D6E9 5E -  -  -      ld  e,(hl)
  175 D1:D6EA 23 -  -  -      inc hl
  176 D1:D6EB 56 -  -  -      ld  d,(hl)
  177 D1:D6EC 23 -  -  -      inc hl
  178 D1:D6ED 22 1F 34 D0     ld  (timings_base),hl
  179 D1:D6F1 DD 27 0B -      ld  hl,(ix+CYCLES_CURRENT)
  180 D1:D6F4 B7 -  -  -      or  a,a
  181 D1:D6F5 ED 52 -  -      sbc hl,de
  182 D1:D6F7 28 13 -  -      jr  z,+_
  183 D1:D6F9 21 FF FF FF     ld  hl,-1
  184 D1:D6FD DD 2F 0B -      ld  (ix+CYCLES_CURRENT),hl  ;halt simulator
  185 D1:D700 CD 33 AF D1     call newLine
  186 D1:D704 21 6A D7 D1     ld  hl,dbg_printLine_timeMismatch
  187 D1:D708 CD 4A AF D1     call printString
  188 D1:D70C -  -  -  -  _:  ;
  189 D1:D70C -  -  -  -      ;End debug-debug section
  190 D1:D70C -  -  -  -      ;
  191 D1:D70C CD 56 AE D1     call fastCopy
  192 D1:D710 AF -  -  -      xor a,a     ;black
  193 D1:D711 32 77 AF D1     ld  (fontBGColor_var),a
  194 D1:D715 32 C4 AF D1     ld  (smallFontBGColor_var),a
  195 D1:D719 -  -  -  -  
  196 D1:D719 F1 FD E1 DD 
              E1 D1 C1 E1     pop af \ pop iy \ pop ix \ pop de \ pop bc \ pop hl
  197 D1:D721 -  -  -  -      ;push hl \ push bc \ push de \ push ix \ push iy \ push af
  198 D1:D721 C9 -  -  -      ret
  199 D1:D722 -  -  -  -  
  200 D1:D722 -  -  -  -  dbg_printLine_noPrint:
  201 D1:D722 -  -  -  -      ;also remove this when done timing debugging
  202 D1:D722 11 00 00 00     ld  de,0
  203 D1:D726 2A 1F 34 D0     ld  hl,(timings_base)
  204 D1:D72A 5E -  -  -      ld  e,(hl)
  205 D1:D72B 23 -  -  -      inc hl
  206 D1:D72C 56 -  -  -      ld  d,(hl)
  207 D1:D72D 23 -  -  -      inc hl
  208 D1:D72E 22 1F 34 D0     ld  (timings_base),hl
  209 D1:D732 DD 27 0B -      ld  hl,(ix+CYCLES_CURRENT)
  210 D1:D735 B7 -  -  -      or  a,a
  211 D1:D736 ED 52 -  -      sbc hl,de
  212 D1:D738 28 13 -  -      jr  z,+_
  213 D1:D73A 21 FF FF FF     ld  hl,-1
  214 D1:D73E DD 2F 0B -      ld  (ix+CYCLES_CURRENT),hl  ;halt simulator
  215 D1:D741 CD 33 AF D1     call newLine
  216 D1:D745 21 6A D7 D1     ld  hl,dbg_printLine_timeMismatch
  217 D1:D749 CD 4A AF D1     call printString
  218 D1:D74D -  -  -  -  _:  ;
  219 D1:D74D -  -  -  -      ;End debug-debug section
  220 D1:D74D -  -  -  -      ;
  221 D1:D74D CD 56 AE D1     call fastCopy
  222 D1:D751 AF -  -  -      xor a,a     ;black
  223 D1:D752 32 77 AF D1     ld  (fontBGColor_var),a
  224 D1:D756 32 C4 AF D1     ld  (smallFontBGColor_var),a
  225 D1:D75A F1 FD E1 DD 
              E1 D1 C1 E1     pop af \ pop iy \ pop ix \ pop de \ pop bc \ pop hl
  226 D1:D762 C9 -  -  -      ret
  227 D1:D763 -  -  -  -  
  228 D1:D763 -  -  -  -  dbg_printLine_str001:
  229 D1:D763 41 58 59 53 
              50 20 00 -  .db "AXYSP ",0
  230 D1:D76A -  -  -  -  dbg_printLine_timeMismatch:
  231 D1:D76A 43 50 55 20 
              54 65 73 74 
              20 74 69 6D 
              69 6E 67 20 
              6D 69 73 6D 
              61 74 63 68 
              2E 00 -  -  .db "CPU Test timing mismatch.",0
  232 D1:D784 -  -  -  -  
  233 D1:D784 -  -  -  -  
  234 D1:D784 -  -  -  -  
  235 D1:D784 -  -  -  -  
  236 D1:D784 -  -  -  -  
  237 D1:D784 -  -  -  -  
  238 D1:D784 -  -  -  -  ;A=instruction. Returns: A=size
  239 D1:D784 -  -  -  -  dbg_getInstSize:
  240 D1:D784 E5 D5 -  -      push hl \ push de
  241 D1:D786 57 -  -  -          ld  d,a
  242 D1:D787 1E 04 -  -          ld  e,4
  243 D1:D789 ED 5C -  -          mlt de
  244 D1:D78B 21 8D D1 D1         ld  hl,inst6502_disassembly_table+3
  245 D1:D78F 19 -  -  -          add hl,de
  246 D1:D790 16 00 -  -          ld  d,0
  247 D1:D792 5E -  -  -          ld  e,(hl)
  248 D1:D793 21 4F D1 D1         ld  hl,inst6502_opcode_width_table
  249 D1:D797 19 -  -  -          add hl,de
  250 D1:D798 7E -  -  -          ld  a,(hl)
  251 D1:D799 D1 E1 -  -      pop de \ pop hl
  252 D1:D79B C9 -  -  -      ret
  253 D1:D79C -  -  -  -  
  254 D1:D79C -  -  -  -  dbg_printDisassembly:
  255 D1:D79C F5 C5 D5 E5 
              DD E5 -  -      push af \ push bc \ push de \ push hl \ push ix
  256 D1:D7A2 -  -  -  -      ;find entry in disassembly table
  257 D1:D7A2 2A F9 31 D0     ld  hl,(operbuf)
  258 D1:D7A6 26 04 -  -      ld  H,4
  259 D1:D7A8 ED 6C -  -      mlt hl
  260 D1:D7AA 11 8A D1 D1     ld  de,inst6502_disassembly_table
  261 D1:D7AE 19 -  -  -      add hl,de
  262 D1:D7AF 06 03 -  -      ld  b,3
  263 D1:D7B1 7E -  -  -  _:  ld  a,(hl)
  264 D1:D7B2 23 -  -  -      inc hl
  265 D1:D7B3 CD 39 D8 D1     call dbg_printC
  266 D1:D7B7 10 F8 -  -      djnz -_
  267 D1:D7B9 3E 20 -  -      ld  a,' '
  268 D1:D7BB CD 39 D8 D1     call dbg_printC
  269 D1:D7BF 46 -  -  -      ld  b,(hl)
  270 D1:D7C0 04 -  -  -      inc b
  271 D1:D7C1 -  -  -  -      ;Instruction addressing mode in B. Now find text for that address mode.
  272 D1:D7C1 21 5D D1 D1     ld  hl,inst6502_disassembler
  273 D1:D7C5 11 00 00 00     ld  de,0
  274 D1:D7C9 5E -  -  -  _:  ld  e,(hl)
  275 D1:D7CA 19 -  -  -      add hl,de
  276 D1:D7CB 10 FC -  -      djnz -_
  277 D1:D7CD 1D -  -  -      dec e
  278 D1:D7CE 28 29 -  -      jr  z,dbg_printDisassembly_end  ;stop if text is zero-sized
  279 D1:D7D0 ED 52 -  -      sbc hl,de   ;rewind to start of text part of instruction. E is text length.
  280 D1:D7D2 43 -  -  -      ld  b,e
  281 D1:D7D3 -  -  -  -  dbg_printDisassembly_printOperandLoop:
  282 D1:D7D3 7E -  -  -      ld  a,(hl)
  283 D1:D7D4 23 -  -  -      inc hl
  284 D1:D7D5 FE 31 -  -      cp  a,'1'
  285 D1:D7D7 20 06 -  -      jr  nz,+_
  286 D1:D7D9 CD 1D D8 D1     call dbg_printOperand1
  287 D1:D7DD 18 18 -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  288 D1:D7DF FE 32 -  -  _:  cp  a,'2'
  289 D1:D7E1 20 06 -  -      jr  nz,+_
  290 D1:D7E3 CD 15 D8 D1     call dbg_printOperand2
  291 D1:D7E7 18 0E -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  292 D1:D7E9 FE 2D -  -  _:  cp  a,'-'
  293 D1:D7EB 20 06 -  -      jr  nz,+_
  294 D1:D7ED CD 00 D8 D1     call dbg_printRel1
  295 D1:D7F1 18 04 -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  296 D1:D7F3 CD 39 D8 D1 _:  call dbg_printC
  297 D1:D7F7 -  -  -  -  dbg_PrintDisassembly_printOperandFallthrough:
  298 D1:D7F7 10 DA -  -      djnz dbg_printDisassembly_printOperandLoop
  299 D1:D7F9 -  -  -  -  dbg_printDisassembly_end:
  300 D1:D7F9 DD E1 E1 D1 
              C1 F1 -  -      pop ix \ pop hl \ pop de \ pop bc \ pop af
  301 D1:D7FF C9 -  -  -      ret
  302 D1:D800 -  -  -  -  
  303 D1:D800 -  -  -  -  dbg_printRel1:
  304 D1:D800 3A FA 31 D0     ld  a,(operbuf+1)
  305 D1:D804 B7 -  -  -      or  a,a
  306 D1:D805 F2 13 D8 D1     jp  p,dbg_printRel1_skipNeg
  307 D1:D809 F5 -  -  -      push af
  308 D1:D80A 3E 2D -  -          ld   a,'-'
  309 D1:D80C CD 39 D8 D1         call dbg_printC
  310 D1:D810 F1 -  -  -      pop af
  311 D1:D811 ED 44 -  -      neg
  312 D1:D813 -  -  -  -  dbg_printRel1_skipNeg:
  313 D1:D813 18 0C -  -      jr dbg_printHex
  314 D1:D815 -  -  -  -  
  315 D1:D815 -  -  -  -  dbg_printOperand2:
  316 D1:D815 3A FB 31 D0     ld  a,(operbuf+2)
  317 D1:D819 CD 21 D8 D1     call dbg_printHex
  318 D1:D81D -  -  -  -  dbg_printOperand1:
  319 D1:D81D 3A FA 31 D0     ld  a,(operbuf+1)
  320 D1:D821 -  -  -  -  dbg_printHex:
  321 D1:D821 CD 26 D8 D1     call dispAHex
  322 D1:D825 C9 -  -  -      ret
  323 D1:D826 -  -  -  -  
  324 D1:D826 -  -  -  -  dispAHex:
  325 D1:D826 F5 -  -  -      push af
  326 D1:D827 CD 2E D8 D1         call +_
  327 D1:D82B F1 -  -  -      pop af
  328 D1:D82C 18 04 -  -      jr  ++_
  329 D1:D82E 1F -  -  -  _:  rra
  330 D1:D82F 1F -  -  -      rra
  331 D1:D830 1F -  -  -      rra
  332 D1:D831 1F -  -  -      rra
  333 D1:D832 F6 F0 -  -  _:  or  a,$F0
  334 D1:D834 27 -  -  -      daa
  335 D1:D835 C6 A0 -  -      add a,$A0
  336 D1:D837 CE 40 -  -      adc a,$40
  337 D1:D839 -  -  -  -  dbg_printC:
  338 D1:D839 E5 -  -  -      push hl
  339 D1:D83A C5 -  -  -          push bc
  340 D1:D83B CD 60 AF D1             call dbg_printChr
  341 D1:D83F C1 -  -  -          pop bc
  342 D1:D840 E1 -  -  -      pop hl
  343 D1:D841 C9 -  -  -      ret
Listing for file "main.z80"
  667 D1:D842 -  -  -  -  .echo "Main program size: ",$-programStart
