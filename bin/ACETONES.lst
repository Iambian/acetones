    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD 4F AE D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 21 00 00 D4     ld  hl,screenBuf1
   44 D1:A899 11 01 00 D4     ld  de,screenBuf1+1
   45 D1:A89D 01 FF 57 02     ld  bc,(2*240*320)-1
   46 D1:A8A1 36 00 -  -      ld  (hl),$00
   47 D1:A8A3 ED B0 -  -      ldir
   48 D1:A8A5 -  -  -  -  
   49 D1:A8A5 -  -  -  -      ;Makes sure all non-ROM areas have a mapping
   50 D1:A8A5 21 00 33 D0     ld  hl,scrap_mapping
   51 D1:A8A9 01 01 80 00     ld  bc,$008001
   52 D1:A8AD 1E 00 -  -      ld  e,0
   53 D1:A8AF CD B5 B5 D1     call i6502_map_pages
   54 D1:A8B3 -  -  -  -  
   55 D1:A8B3 -  -  -  -  
   56 D1:A8B3 -  -  -  -      ;load reset vectors
   57 D1:A8B3 21 78 A8 D1     ld  hl,testVectors
   58 D1:A8B7 01 01 01 00     ld  bc,$000101
   59 D1:A8BB 1E FF -  -      ld  e,$FF
   60 D1:A8BD CD B5 B5 D1     call i6502_map_pages
   61 D1:A8C1 -  -  -  -      ;load program ROM to lowmem
   62 D1:A8C1 21 78 A9 D1     ld  hl,testCode
   63 D1:A8C5 01 08 20 00     ld  bc,$002008
   64 D1:A8C9 1E 80 -  -      ld  e,$80
   65 D1:A8CB CD B5 B5 D1     call i6502_map_pages
   66 D1:A8CF -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   67 D1:A8CF -  -  -  -      ;memory to screen.
   68 D1:A8CF 21 00 50 D0     ld  hl,NAMETABLE1
   69 D1:A8D3 01 04 20 00     ld  bc,$002004
   70 D1:A8D7 1E 40 -  -      ld  e,$40
   71 D1:A8D9 CD B5 B5 D1     call i6502_map_pages
   72 D1:A8DD -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   73 D1:A8DD -  -  -  -      ;start the emulation.
   74 D1:A8DD -  -  -  -      ;jr $
   75 D1:A8DD CD A2 AE D1     call clearTextBuf
   76 D1:A8E1 3E 01 -  -      ld  a,1
   77 D1:A8E3 CD EF AE D1     call setLineStart
   78 D1:A8E7 CD F8 AE D1     call setCurLine
   79 D1:A8EB 21 F5 A9 D1     ld  hl,text001
   80 D1:A8EF CD 1A AF D1     call printString
   81 D1:A8F3 FD 21 63 AA 
              D1 -  -  -      ld  iy,firstFileHeader
   82 D1:A8F8 01 00 00 00     ld  bc,0
   83 D1:A8FC FD 4E FF -      ld  c,(iy-1)
   84 D1:A8FF CD CA AD D1     call vatTraverse
   85 D1:A903 DA 80 AA D1     jp  c,err_noContainersFound
   86 D1:A907 D5 -  -  -      push de
   87 D1:A908 21 0C AA D1         ld  hl,text003
   88 D1:A90C CD 1A AF D1         call printString
   89 D1:A910 DD 46 FA -          ld  b,(ix-6)
   90 D1:A913 ED 22 F9 -          lea hl,ix-7
   91 D1:A916 7E -  -  -  _:      ld  a,(hl)
   92 D1:A917 2B -  -  -          dec hl
   93 D1:A918 E5 -  -  -          push hl
   94 D1:A919 C5 -  -  -              push bc
   95 D1:A91A CD 30 AF D1                 call PrintBigFont
   96 D1:A91E C1 -  -  -              pop bc
   97 D1:A91F E1 -  -  -          pop hl
   98 D1:A920 10 F4 -  -          djnz -_
   99 D1:A922 CD 03 AF D1         call newLine
  100 D1:A926 D1 -  -  -      pop de
  101 D1:A927 CD 99 AB D1     call loadROMFile
  102 D1:A92B -  -  -  -  
  103 D1:A92B 21 19 AA D1     ld  hl,text004
  104 D1:A92F CD 1A AF D1     call printString
  105 D1:A933 -  -  -  -  
  106 D1:A933 -  -  -  -      ;jr $
  107 D1:A933 -  -  -  -  #ifdef COREDEBUG
  108 D1:A933                 call dbg_resetScreen
  109 D1:A933             #endif
  110 D1:A933 CD 0F B3 D1     call i6502Init
  111 D1:A937 -  -  -  -  
  112 D1:A937 -  -  -  -  ;    call clearTextBuf
  113 D1:A937 -  -  -  -  ;    ld  hl,helloWorld
  114 D1:A937 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  115 D1:A937 -  -  -  -  ;    ld  bc,13
  116 D1:A937 -  -  -  -  ;    ldir
  117 D1:A937 -  -  -  -  
  118 D1:A937 -  -  -  -  endCurrentRun:
  119 D1:A937 CD 03 D5 D1     call dbg_prepNextLine
  120 D1:A93B CD 03 AF D1     call newLine
  121 D1:A93F 21 3B AA D1     ld  hl,text005
  122 D1:A943 CD 1A AF D1     call printString
  123 D1:A947 -  -  -  -  
  124 D1:A947 -  -  -  -      ;call printTextBuf
  125 D1:A947 CD 26 AE D1     call fastCopy
  126 D1:A94B 00 -  -  -      nop
  127 D1:A94C CD E9 A9 D1     call waituntilnewkeypress
  128 D1:A950 CD E1 A9 D1     call waituntilkeyrelease
  129 D1:A954 -  -  -  -  
  130 D1:A954 -  -  -  -      ;
  131 D1:A954 -  -  -  -      ;
  132 D1:A954 -  -  -  -      ;
  133 D1:A954 -  -  -  -  programExit:
  134 D1:A954 CD 41 AE D1     call stopGfx
  135 D1:A958 ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  136 D1:A95D 3A FF 31 D0     ld  a,(save_mbase)
  137 D1:A961 ED 6D -  -      ld  MB,a
  138 D1:A963 FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  139 D1:A968 C9 -  -  -      ret
  140 D1:A969 -  -  -  -  
  141 D1:A969 -  -  -  -  
  142 D1:A969 -  -  -  -  testFilename:
  143 D1:A969 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  144 D1:A972 -  -  -  -  
  145 D1:A972 -  -  -  -  
  146 D1:A972 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  147 D1:A972 -  -  -  -  testVectors .equ $-(256-6)
  148 D1:A972 00 80 -  -  .dw $8000
  149 D1:A974 00 80 -  -  .dw $8000
  150 D1:A976 00 80 -  -  .dw $8000
  151 D1:A978 -  -  -  -  testCode:
  152 D1:A978 A9 00 AA A8 .db $A9,$00,$AA,$A8
  153 D1:A97C BD 14 80 -  .db $BD,$14,$80
  154 D1:A97F C9 00 -  -  .db $C9,$00
  155 D1:A981 F0 08 -  -  .db $F0,$08
  156 D1:A983 99 21 40 -  .db $99,$21,$40
  157 D1:A986 E8 C8 -  -  .db $E8,$C8
  158 D1:A988 -  -  -  -  ;.db $12
  159 D1:A988 4C 04 80 02 .db $4C,$04,$80,$02
  160 D1:A98C 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  161 D1:A995 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  162 D1:A99A -  -  -  -  
  163 D1:A99A -  -  -  -  
  164 D1:A99A A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  165 D1:A9A9 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  166 D1:A9B9 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  167 D1:A9BA -  -  -  -  
  168 D1:A9BA -  -  -  -  helloWorld:
  169 D1:A9BA 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  170 D1:A9C8 -  -  -  -  
  171 D1:A9C8 -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  172 D1:A9C8 -  -  -  -  ;find yet another hardware reference for something I already did.
  173 D1:A9C8 -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  174 D1:A9C8 -  -  -  -  ;what we're looking for. Here, we output the same sort of
  175 D1:A9C8 -  -  -  -  ;game keys that I've used basically all my programming life.
  176 D1:A9C8 -  -  -  -  ;Anyhoo. We'll be using the following:
  177 D1:A9C8 -  -  -  -  ;kbitDown	equ 00h
  178 D1:A9C8 -  -  -  -  ;kbitLeft	equ 01h
  179 D1:A9C8 -  -  -  -  ;kbitRight	equ 02h
  180 D1:A9C8 -  -  -  -  ;kbitUp		equ 03h
  181 D1:A9C8 -  -  -  -  ;kbitYequ equ 04h
  182 D1:A9C8 -  -  -  -  ;kbit2nd		equ 05h
  183 D1:A9C8 -  -  -  -  ;kbitMode	equ 06h
  184 D1:A9C8 -  -  -  -  ;kbitDel		equ 07h
  185 D1:A9C8 -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  186 D1:A9C8 -  -  -  -  
  187 D1:A9C8 -  -  -  -  getkbd_adl:
  188 D1:A9C8 DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  189 D1:A9CD ED 22 00 -  	lea hl,ix+0
  190 D1:A9D0 36 02 -  -  	ld  (hl),keyModeScanOnce
  191 D1:A9D2 AF -  -  -  	xor a
  192 D1:A9D3 BE -  -  -  _:  cp  (hl)
  193 D1:A9D4 20 FD -  -  	jr  nz,-_
  194 D1:A9D6 DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  195 D1:A9D9 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  196 D1:A9DC AD -  -  -  	xor L
  197 D1:A9DD E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  198 D1:A9DF AD -  -  -  	xor L
  199 D1:A9E0 C9 -  -  -  	ret
  200 D1:A9E1 -  -  -  -  
  201 D1:A9E1 -  -  -  -  
  202 D1:A9E1 -  -  -  -  waituntilkeyrelease:
  203 D1:A9E1 CD C8 A9 D1     call getkbd_adl
  204 D1:A9E5 B7 -  -  -      or  a,a
  205 D1:A9E6 20 F9 -  -      jr  nz,waituntilkeyrelease
  206 D1:A9E8 C9 -  -  -  	ret
  207 D1:A9E9 -  -  -  -  
  208 D1:A9E9 -  -  -  -  waituntilnewkeypress:
  209 D1:A9E9 CD E1 A9 D1     call waituntilkeyrelease
  210 D1:A9ED CD C8 A9 D1 _:  call getkbd_adl
  211 D1:A9F1 B7 -  -  -  	or  a,a
  212 D1:A9F2 28 F9 -  -  	jr  z,-_
  213 D1:A9F4 C9 -  -  -      ret
  214 D1:A9F5 -  -  -  -  
  215 D1:A9F5 -  -  -  -  
  216 D1:A9F5 -  -  -  -  text001:
  217 D1:A9F5 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  218 D1:AA0C -  -  -  -  text003:
  219 D1:AA0C 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  220 D1:AA19 -  -  -  -  text004:
  221 D1:AA19 52 4F 4D 46 
              69 6C 65 20 
              6C 6F 61 64 
              65 64 20 61 
              6E 64 20 72 
              65 61 64 79 
              20 74 6F 20 
              72 75 6E 2E 
              0A 00 -  -  .db "ROMFile loaded and ready to run.\n",0
  222 D1:AA3B -  -  -  -  text005:
  223 D1:AA3B -  -  -  -  ;    0123456789012345678901234567890123456789
  224 D1:AA3B 43 50 55 20 
              45 78 65 63 
              75 74 69 6F 
              6E 20 48 61 
              6C 74 65 64 
              20 20 20 20 
              20 20 20 20 
              20 20 20 20 
              20 20 20 20 
              20 20 00 -  .db "CPU Execution Halted                  ",0
  225 D1:AA62 -  -  -  -  
  226 D1:AA62 -  -  -  -  
  227 D1:AA62 07 -  -  -  .db 7
  228 D1:AA63 -  -  -  -  firstFileHeader:
  229 D1:AA63 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  230 D1:AA6A -  -  -  -  
  231 D1:AA6A -  -  -  -  err_:
  232 D1:AA6A -  -  -  -  
  233 D1:AA6A -  -  -  -  err_err:
  234 D1:AA6A E1 -  -  -      pop hl
  235 D1:AA6B CD 1A AF D1     call printString
  236 D1:AA6F -  -  -  -  err_err_quit:
  237 D1:AA6F CD 26 AE D1     call fastCopy
  238 D1:AA73 00 -  -  -      nop
  239 D1:AA74 CD E9 A9 D1     call waituntilnewkeypress
  240 D1:AA78 CD E1 A9 D1     call waituntilkeyrelease
  241 D1:AA7C C3 54 A9 D1     jp programExit
  242 D1:AA80 -  -  -  -  
  243 D1:AA80 -  -  -  -  err_noContainersFound:
  244 D1:AA80 CD 6A AA D1     call err_err
  245 D1:AA84 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  246 D1:AAA3 -  -  -  -  
  247 D1:AAA3 -  -  -  -  err_missingFiles:
  248 D1:AAA3 F5 -  -  -      push af
  249 D1:AAA4 21 B5 AA D1         ld  hl,err_missingFiles_str
  250 D1:AAA8 CD 1A AF D1         call printString
  251 D1:AAAC F1 -  -  -      pop af
  252 D1:AAAD CD 60 AF D1     call printSmallNumPair
  253 D1:AAB1 C3 6F AA D1     jp err_err_quit
  254 D1:AAB5 -  -  -  -  err_missingFiles_str:
  255 D1:AAB5 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  256 D1:AACF -  -  -  -  
  257 D1:AACF -  -  -  -  err_tooManyFiles:
  258 D1:AACF CD 6A AA D1     call err_err
  259 D1:AAD3 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  260 D1:AAE9 -  -  -  -  
  261 D1:AAE9 -  -  -  -  err_PRGROMTooLarge:
  262 D1:AAE9 CD 6A AA D1     call err_err
  263 D1:AAED 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  264 D1:AB00 -  -  -  -  err_CHRROMTooLarge:
  265 D1:AB00 CD 6A AA D1     call err_err
  266 D1:AB04 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  267 D1:AB17 -  -  -  -  
  268 D1:AB17 -  -  -  -  err_missingROMDetected:
  269 D1:AB17 CD 6A AA D1     call err_err
  270 D1:AB1B 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  271 D1:AB37 -  -  -  -  
  272 D1:AB37 -  -  -  -  err_ROMHeaderDamaged:
  273 D1:AB37 CD 6A AA D1     call err_err
  274 D1:AB3B 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  275 D1:AB54 -  -  -  -  
  276 D1:AB54 -  -  -  -  err_MapperOutOfRange:
  277 D1:AB54 CD 6A AA D1     call err_err
  278 D1:AB58 4D 61 70 70 
              65 72 20 73 
              70 65 63 69 
              66 69 65 64 
              20 6F 75 74 
              20 6F 66 20 
              72 61 6E 67 
              65 2E 00 -  .db "Mapper specified out of range.",0
  279 D1:AB77 -  -  -  -  
  280 D1:AB77 -  -  -  -  err_CHRROMNotFound:
  281 D1:AB77 CD 6A AA D1     call err_err
  282 D1:AB7B 43 48 52 5F 
              52 4F 4D 20 
              6E 6F 74 20 
              66 6F 75 6E 
              64 20 69 6E 
              73 69 64 65 
              20 66 69 6C 
              65 00 -  -  .db "CHR_ROM not found inside file",0
  283 D1:AB99 -  -  -  -  
  284 D1:AB99 -  -  -  -  
  285 D1:AB99 -  -  -  -  ;Input: DE = Address of first file after the container header signature
  286 D1:AB99 -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  287 D1:AB99 -  -  -  -  ;Destroys: All registers.
  288 D1:AB99 -  -  -  -  loadROMFile:
  289 D1:AB99 EB -  -  -      ex  de,hl
  290 D1:AB9A AF -  -  -      xor a,a
  291 D1:AB9B 32 08 34 D0     ld  (missing_files),a
  292 D1:AB9F BE -  -  -  _:  cp  (hl)    ;
  293 D1:ABA0 23 -  -  -      inc hl      ;
  294 D1:ABA1 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  295 D1:ABA3 22 05 34 D0     ld  (basefile_sig),hl
  296 D1:ABA7 01 10 00 00     ld  bc,SIZEOF_INTEGRITY_HASH
  297 D1:ABAB 09 -  -  -      add hl,bc
  298 D1:ABAC 7E -  -  -      ld  a,(hl)
  299 D1:ABAD FE 01 -  -      cp  a,MAXNUMFILES
  300 D1:ABAF D2 CF AA D1     jp  nc,err_tooManyFiles
  301 D1:ABB3 32 04 34 D0     ld  (inputNumFiles),a
  302 D1:ABB7 47 -  -  -      ld  b,a
  303 D1:ABB8 -  -  -  -  ;    ld  c,SIZEOF_INTEGRITY_HASH     ;c already set to this value from earlier.
  304 D1:ABB8 ED 4C -  -      mlt bc
  305 D1:ABBA 23 -  -  -      inc hl
  306 D1:ABBB E5 -  -  -      push hl
  307 D1:ABBC 09 -  -  -          add hl,bc
  308 D1:ABBD FD 21 21 34 
              D0 -  -  -          ld  iy,FILETABLE
  309 D1:ABC2 4E -  -  -          ld  c,(hl)
  310 D1:ABC3 23 -  -  -          inc hl
  311 D1:ABC4 46 -  -  -          ld  b,(hl)
  312 D1:ABC5 23 -  -  -          inc hl
  313 D1:ABC6 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  314 D1:ABCA FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  315 D1:ABCD E1 -  -  -      pop hl
  316 D1:ABCE 3C -  -  -      inc a
  317 D1:ABCF 3D -  -  -      dec a
  318 D1:ABD0 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  319 D1:ABD2 -  -  -  -      ;If more than one file, fill FILETABLE.
  320 D1:ABD2 -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  321 D1:ABD2 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  322 D1:ABD5 47 -  -  -      ld  b,a
  323 D1:ABD6 -  -  -  -  loadROMFile_multiFileLoadLoop:
  324 D1:ABD6 C5 -  -  -      push bc
  325 D1:ABD7 FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  326 D1:ABDA 01 10 00 00         ld  bc,16
  327 D1:ABDE 11 BA AD D1         ld  de,loadROMFile_tempSigHash
  328 D1:ABE2 ED B0 -  -          ldir
  329 D1:ABE4 E5 -  -  -          push hl
  330 D1:ABE5 FD E5 -  -              push iy
  331 D1:ABE7 01 17 00 00                 ld  bc,23
  332 D1:ABEB FD 21 B3 AD 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  333 D1:ABF0 CD CA AD D1                 call vatTraverse    ;returns DE @ datasection size if found
  334 D1:ABF4 30 05 -  -                  jr  nc,+_
  335 D1:ABF6 21 08 34 D0                 ld  hl,missing_files
  336 D1:ABFA 34 -  -  -                  inc (hl)
  337 D1:ABFB FD E1 -  -  _:          pop iy
  338 D1:ABFD EB -  -  -              ex  de,hl
  339 D1:ABFE 5E -  -  -              ld  e,(hl)
  340 D1:ABFF 23 -  -  -              inc hl
  341 D1:AC00 56 -  -  -              ld  d,(hl)
  342 D1:AC01 23 -  -  -              inc hl
  343 D1:AC02 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  344 D1:AC06 FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  345 D1:AC09 E1 -  -  -          pop hl
  346 D1:AC0A C1 -  -  -      pop bc
  347 D1:AC0B ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  348 D1:AC0E 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  349 D1:AC10 3A 08 34 D0     ld  a,(missing_files)
  350 D1:AC14 B7 -  -  -      or  a,a
  351 D1:AC15 C2 A3 AA D1     jp  nz,err_missingFiles
  352 D1:AC19 -  -  -  -  loadROMFile_singleFileLoad:
  353 D1:AC19 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  354 D1:AC19 3A 04 34 D0     ld  a,(inputNumFiles)
  355 D1:AC1D 3C -  -  -      inc a
  356 D1:AC1E 47 -  -  -      ld  b,a
  357 D1:AC1F 21 00 00 00     ld  hl,0
  358 D1:AC23 DD 21 21 34 
              D0 -  -  -      ld  ix,FILETABLE
  359 D1:AC28 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  360 D1:AC2C 19 -  -  -      add hl,de
  361 D1:AC2D ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  362 D1:AC30 10 F6 -  -      djnz -_
  363 D1:AC32 01 F0 FF FF     ld  bc,-16
  364 D1:AC36 09 -  -  -      add hl,bc   ;subtract INES header
  365 D1:AC37 22 09 34 D0     ld  (total_rom_size),hl
  366 D1:AC3B -  -  -  -      ;Verify that the file actually contains an INES header.
  367 D1:AC3B -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  368 D1:AC3B DD 2A 23 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  369 D1:AC40 DD 27 00 -      ld  hl,(ix+0)
  370 D1:AC43 11 4E 45 53     ld  de,$53454E         ;4E 45 53 == "NES"
  371 D1:AC47 B7 -  -  -      or  a,a
  372 D1:AC48 ED 52 -  -      sbc hl,de   ;Note: add does not affect zero flag. Can't test this via -DE
  373 D1:AC4A C2 37 AB D1 _:  jp  nz,err_ROMHeaderDamaged
  374 D1:AC4E DD 7E 03 -      ld  a,(ix+3)
  375 D1:AC51 FE 1A -  -      cp  a,$1A
  376 D1:AC53 20 F5 -  -      jr  nz,-_   ;19
  377 D1:AC55 -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  378 D1:AC55 -  -  -  -      ;Note: The below line is optimized from...
  379 D1:AC55 DD 2A 23 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  380 D1:AC5A -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  381 D1:AC5A -  -  -  -      ;these here just in case there's ever a question about it.
  382 D1:AC5A -  -  -  -  ;    ld  ix,FILETABLE
  383 D1:AC5A -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  384 D1:AC5A DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  385 D1:AC5D DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  386 D1:AC60 26 00 -  -      ld  h,0
  387 D1:AC62 54 -  -  -      ld  d,h
  388 D1:AC63 DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  389 D1:AC66 E6 0C -  -      and a,%00001100
  390 D1:AC68 FE 08 -  -      cp  a,%00001000
  391 D1:AC6A 20 1B -  -      jr  nz,+_
  392 D1:AC6C DD 7E 09 -      ld  a,(ix+9)
  393 D1:AC6F 47 -  -  -      ld  b,a
  394 D1:AC70 E6 0F -  -      and a,$0F
  395 D1:AC72 FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  396 D1:AC74 D2 E9 AA D1     jp  nc,err_PRGROMTooLarge
  397 D1:AC78 67 -  -  -      ld  h,a
  398 D1:AC79 78 -  -  -      ld  a,b
  399 D1:AC7A E6 F0 -  -      and a,$F0
  400 D1:AC7C 07 -  -  -      rlca
  401 D1:AC7D 07 -  -  -      rlca
  402 D1:AC7E 07 -  -  -      rlca
  403 D1:AC7F 07 -  -  -      rlca
  404 D1:AC80 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  405 D1:AC82 D2 00 AB D1     jp  nc,err_CHRROMTooLarge
  406 D1:AC86 57 -  -  -      ld  d,a
  407 D1:AC87 AF -  -  -  _:  xor a,a
  408 D1:AC88 32 0C 34 D0     ld  (prg_rom_size),a
  409 D1:AC8C 32 0F 34 D0     ld  (chr_rom_size),a
  410 D1:AC90 29 -  -  -      add hl,hl   ;x2
  411 D1:AC91 29 -  -  -      add hl,hl   ;x4
  412 D1:AC92 29 -  -  -      add hl,hl   ;x8
  413 D1:AC93 29 -  -  -      add hl,hl   ;x16
  414 D1:AC94 29 -  -  -      add hl,hl   ;x32
  415 D1:AC95 29 -  -  -      add hl,hl   ;x64
  416 D1:AC96 52 22 0D 34 
              D0 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  417 D1:AC9B EB -  -  -      ex  de,hl
  418 D1:AC9C 29 -  -  -      add hl,hl   ;x2
  419 D1:AC9D 29 -  -  -      add hl,hl   ;x4
  420 D1:AC9E 29 -  -  -      add hl,hl   ;x8
  421 D1:AC9F 29 -  -  -      add hl,hl   ;x16
  422 D1:ACA0 29 -  -  -      add hl,hl   ;x32
  423 D1:ACA1 52 22 10 34 
              D0 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  424 D1:ACA6 2A 0F 34 D0     ld  hl,(chr_rom_size)
  425 D1:ACAA ED 5B 0C 34 
              D0 -  -  -      ld  de,(prg_rom_size)
  426 D1:ACAF 19 -  -  -      add hl,de
  427 D1:ACB0 ED 5B 09 34 
              D0 -  -  -      ld  de,(total_rom_size)
  428 D1:ACB5 B7 -  -  -      or  a,a
  429 D1:ACB6 ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  430 D1:ACB8 28 04 -  -      jr  z,+_
  431 D1:ACBA D2 17 AB D1     jp  nc,err_missingROMDetected
  432 D1:ACBE -  -  -  -  _:  ;Find trainer, PRG, and CHR base addresses
  433 D1:ACBE ED 22 10 -      lea hl,ix+16
  434 D1:ACC1 22 18 34 D0     ld  (trainer_base),hl   ;whether it exists or not.
  435 D1:ACC5 11 00 00 00     ld  de,0
  436 D1:ACC9 DD CB 06 56     bit 2,(ix+6)
  437 D1:ACCD 28 04 -  -      jr  z,+_
  438 D1:ACCF 11 00 02 00     ld  de,512
  439 D1:ACD3 19 -  -  -  _:  add hl,de
  440 D1:ACD4 22 18 34 D0     ld  (prg_rom_base),hl
  441 D1:ACD8 FD 21 21 34 
              D0 -  -  -      ld  iy,FILETABLE
  442 D1:ACDD 52 FD 27 00     ld.s hl,(iy+FILE_SIZE_OFFSET)
  443 D1:ACE1 B7 -  -  -      or  a,a
  444 D1:ACE2 ED 52 -  -      sbc hl,de   ;less possible trainer
  445 D1:ACE4 11 10 00 00     ld  de,16
  446 D1:ACE8 ED 52 -  -      sbc hl,de   ;less iNES header. Remaining is now size of current file.
  447 D1:ACEA EB -  -  -      ex  de,hl   ;curfilesize is now in DE
  448 D1:ACEB 2A 0C 34 D0     ld  hl,(prg_rom_size)   ;keep subtracting filesize from this until carry.
  449 D1:ACEF B7 -  -  -      or  a,a
  450 D1:ACF0 ED 52 -  -      sbc hl,de   ;if carry, prg_rom end is inside this file. Undo: HL is offset.
  451 D1:ACF2 0E 00 -  -      ld  c,0     ;0th file current
  452 D1:ACF4 38 1D -  -      jr  c,loadROMFile_locatedCHRROM
  453 D1:ACF6 3A 04 34 D0     ld  a,(inputNumFiles)
  454 D1:ACFA B7 -  -  -      or  a,a
  455 D1:ACFB 28 12 -  -      jr  z,loadROMFile_noCHRROMFound
  456 D1:ACFD 47 -  -  -      ld  b,a
  457 D1:ACFE ED 33 08 -  _:  lea iy,iy+FILETABLE_STRIDE
  458 D1:AD01 52 ED 5B 00 
              00 00 -  -      ld.s de,(FILE_SIZE_OFFSET)
  459 D1:AD07 0C -  -  -      inc c
  460 D1:AD08 B7 -  -  -      or  a,a
  461 D1:AD09 ED 52 -  -      sbc hl,de   ;
  462 D1:AD0B 38 06 -  -      jr  c,loadROMFile_locatedCHRROM
  463 D1:AD0D 10 EF -  -      djnz -_
  464 D1:AD0F -  -  -  -  loadROMFile_noCHRROMFound:
  465 D1:AD0F C3 77 AB D1     jp  err_CHRROMNotFound
  466 D1:AD13 -  -  -  -  loadROMFile_locatedCHRROM:
  467 D1:AD13 19 -  -  -      add hl,de       ;Undid subtract. HL is now offset in current file
  468 D1:AD14 FD 17 02 -      ld  de,(iy+FILE_ADR_OFFSET) ;so get address inside that file.
  469 D1:AD17 19 -  -  -      add hl,de
  470 D1:AD18 79 -  -  -      ld  a,c
  471 D1:AD19 22 1B 34 D0     ld  (chr_rom_base),hl
  472 D1:AD1D 32 1E 34 D0     ld  (chr_rom_base_file),a
  473 D1:AD21 -  -  -  -      ;Detect mapper and run its initializer
  474 D1:AD21 DD 7E 06 -      ld  a,(ix+6)
  475 D1:AD24 DD 46 07 -      ld  b,(ix+7)
  476 D1:AD27 07 -  -  -      rlca
  477 D1:AD28 07 -  -  -      rlca
  478 D1:AD29 07 -  -  -      rlca
  479 D1:AD2A 07 -  -  -      rlca
  480 D1:AD2B A8 -  -  -      xor a,b
  481 D1:AD2C E6 0F -  -      and a,$0F
  482 D1:AD2E A8 -  -  -      xor a,b
  483 D1:AD2F 52 EB -  -      ex.s de,hl  ;clears HLU,DEU
  484 D1:AD31 5F -  -  -      ld  e,a
  485 D1:AD32 21 12 34 D0     ld  hl,submapper
  486 D1:AD36 36 00 -  -      ld  (hl),0
  487 D1:AD38 78 -  -  -      ld  a,b
  488 D1:AD39 E6 0C -  -      and a,%00001100
  489 D1:AD3B FE 08 -  -      cp  a,%00001000
  490 D1:AD3D 3E 00 -  -      ld  a,0
  491 D1:AD3F 20 0E -  -      jr  nz,+_
  492 D1:AD41 DD 46 08 -      ld  b,(ix+8)
  493 D1:AD44 78 -  -  -      ld  a,b
  494 D1:AD45 07 -  -  -      rlca
  495 D1:AD46 07 -  -  -      rlca
  496 D1:AD47 07 -  -  -      rlca
  497 D1:AD48 07 -  -  -      rlca
  498 D1:AD49 E6 0F -  -      and a,$0F
  499 D1:AD4B 77 -  -  -      ld  (hl),a
  500 D1:AD4C 78 -  -  -      ld  a,b
  501 D1:AD4D E6 0F -  -      and a,$0F
  502 D1:AD4F 57 -  -  -  _:  ld  d,a
  503 D1:AD50 ED 53 14 34 
              D0 -  -  -      ld  (mapper_id),de
  504 D1:AD55 21 FF FF FF     ld  hl,-NUMBER_OF_MAPPERS
  505 D1:AD59 19 -  -  -      add hl,de
  506 D1:AD5A DA 54 AB D1     jp  c,err_MapperOutOfRange
  507 D1:AD5E ED 62 -  -      sbc hl,hl
  508 D1:AD60 19 -  -  -      add hl,de               ;hl=de. both are mapper IDs
  509 D1:AD61 2E 09 -  -      ld  L,MAPPER_STRIDE
  510 D1:AD63 55 -  -  -      ld  d,L
  511 D1:AD64 ED 6C -  -      mlt hl                  ;high byte multiply
  512 D1:AD66 65 -  -  -      ld  h,L
  513 D1:AD67 2E 00 -  -      ld  L,0
  514 D1:AD69 ED 5C -  -      mlt de                  ;low byte multiply
  515 D1:AD6B 19 -  -  -      add hl,de               ;This is the best 16bit * 8bit I know to do.
  516 D1:AD6C 11 78 AD D1     ld  de,mapper_table
  517 D1:AD70 19 -  -  -      add hl,de
  518 D1:AD71 22 15 34 D0     ld  (mapper_adr_base),hl
  519 D1:AD75 ED 27 -  -      ld  hl,(hl)
  520 D1:AD77 E9 -  -  -      jp  (hl)
  521 D1:AD78 -  -  -  -  
  522 D1:AD78 -  -  -  -  mapper_table:   ;entries 9 wide
  523 D1:AD78 81 AD D1 -  .dl mapper0_init
  524 D1:AD7B AF AD D1 -  .dl mapper0_read
  525 D1:AD7E B1 AD D1 -  .dl mapper0_write
  526 D1:AD81 -  -  -  -  
  527 D1:AD81 -  -  -  -  mapper0_init:
  528 D1:AD81 -  -  -  -      ;map trainer, if exist
  529 D1:AD81 DD CB 06 56     bit 2,(ix+6)
  530 D1:AD85 28 0D -  -      jr  z,+_
  531 D1:AD87 2A 18 34 D0     ld  hl,(trainer_base)
  532 D1:AD8B 1E 70 -  -      ld  e,$70
  533 D1:AD8D 0E 02 -  -      ld  c,2
  534 D1:AD8F 41 -  -  -      ld  b,c
  535 D1:AD90 CD B5 B5 D1     call i6502_map_pages
  536 D1:AD94 2A 0C 34 D0 _:  ld  hl,(prg_rom_size)
  537 D1:AD98 11 FF BF FF     ld  de,-(16384+1)
  538 D1:AD9C 19 -  -  -      add hl,de   ;carry if more than 1 16KB segment
  539 D1:AD9D 2A 18 34 D0     ld  hl,(prg_rom_base)
  540 D1:ADA1 -  -  -  -      ;jr  $
  541 D1:ADA1 06 80 -  -      ld  b,$80
  542 D1:ADA3 58 -  -  -      ld  e,b
  543 D1:ADA4 0E 40 -  -      ld  c,$40
  544 D1:ADA6 30 02 -  -      jr  nc,+_
  545 D1:ADA8 CB 21 -  -      sla c
  546 D1:ADAA CD B5 B5 D1 _:  call i6502_map_pages
  547 D1:ADAE C9 -  -  -      ret
  548 D1:ADAF -  -  -  -  
  549 D1:ADAF -  -  -  -  
  550 D1:ADAF -  -  -  -  mapper0_read:
  551 D1:ADAF 7E -  -  -      ld  a,(hl)
  552 D1:ADB0 C9 -  -  -      ret
  553 D1:ADB1 -  -  -  -  mapper0_write:
  554 D1:ADB1 70 -  -  -      ld  (hl),b
  555 D1:ADB2 C9 -  -  -      ret
  556 D1:ADB3 -  -  -  -  
  557 D1:ADB3 -  -  -  -  
  558 D1:ADB3 -  -  -  -  
  559 D1:ADB3 -  -  -  -  
  560 D1:ADB3 -  -  -  -  
  561 D1:ADB3 -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  562 D1:ADB3 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  563 D1:ADBA -  -  -  -  loadROMFile_tempSigHash:
  564 D1:ADBA 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  565 D1:ADCA -  -  -  -  
  566 D1:ADCA -  -  -  -  
  567 D1:ADCA -  -  -  -  ;Input: IY = locationOfSignature. 
  568 D1:ADCA -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  569 D1:ADCA -  -  -  -  ;Output: carry=1: Variable not found.
  570 D1:ADCA -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  571 D1:ADCA -  -  -  -  ;        IX=location of current variable's VAT location.
  572 D1:ADCA -  -  -  -  ;Destroys: All registers not in use.
  573 D1:ADCA -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  574 D1:ADCA -  -  -  -  
  575 D1:ADCA -  -  -  -  ;To continue searching:
  576 D1:ADCA -  -  -  -  ;call vatTraverse_continue with the following inputs:
  577 D1:ADCA -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  578 D1:ADCA -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  579 D1:ADCA -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  580 D1:ADCA -  -  -  -  vatTraverse:
  581 D1:ADCA -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  582 D1:ADCA DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  583 D1:ADCF -  -  -  -  vatTraverse_loop:
  584 D1:ADCF 2A 9A 25 D0     ld  hl,(pTemp)
  585 D1:ADD3 ED 12 00 -      lea de,ix+0
  586 D1:ADD6 B7 -  -  -      or  a,a
  587 D1:ADD7 ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  588 D1:ADD9 3F -  -  -      ccf
  589 D1:ADDA D8 -  -  -      ret c
  590 D1:ADDB 1A -  -  -      ld  a,(de)
  591 D1:ADDC E6 1F -  -      and a,$1F
  592 D1:ADDE FE 15 -  -      cp  a,AppVarObj
  593 D1:ADE0 20 34 -  -      jr  nz,vatTraverse_skip
  594 D1:ADE2 DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  595 D1:ADE5 DD 5E FD -      ld  e,(ix-3)
  596 D1:ADE8 DD 56 FC -      ld  d,(ix-4)
  597 D1:ADEB CD 98 1F 02     call _ChkInRam
  598 D1:ADEF EB -  -  -      ex  de,hl
  599 D1:ADF0 30 08 -  -      jr  nc,+_
  600 D1:ADF2 11 09 00 00     ld  de,9
  601 D1:ADF6 19 -  -  -      add hl,de
  602 D1:ADF7 5E -  -  -      ld  e,(hl)
  603 D1:ADF8 19 -  -  -      add hl,de
  604 D1:ADF9 23 -  -  -      inc hl
  605 D1:ADFA 5E -  -  -  _:  ld  e,(hl)
  606 D1:ADFB 23 -  -  -      inc hl
  607 D1:ADFC 56 -  -  -      ld  d,(hl)
  608 D1:ADFD 23 -  -  -      inc hl
  609 D1:ADFE EB -  -  -      ex  de,hl
  610 D1:ADFF B7 -  -  -      or  a,a
  611 D1:AE00 ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  612 D1:AE02 38 12 -  -      jr  c,vatTraverse_skip
  613 D1:AE04 ED 23 00 -      lea hl,iy+0
  614 D1:AE07 C5 -  -  -      push bc
  615 D1:AE08 1A -  -  -  _:      ld  a,(de)
  616 D1:AE09 13 -  -  -          inc de
  617 D1:AE0A ED A1 -  -          cpi
  618 D1:AE0C 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  619 D1:AE0E EA 08 AE D1         jp  pe,-_
  620 D1:AE12 C1 -  -  -      pop bc
  621 D1:AE13 B7 -  -  -      or  a,a
  622 D1:AE14 C9 -  -  -      ret         ;NC. DE = past the signature.
  623 D1:AE15 -  -  -  -  vatTraverse_sigNoMatch:
  624 D1:AE15 C1 -  -  -      pop bc
  625 D1:AE16 -  -  -  -  vatTraverse_continue:
  626 D1:AE16 -  -  -  -  vatTraverse_skip:
  627 D1:AE16 3E 07 -  -      ld  a,7
  628 D1:AE18 11 FF FF FF     ld  de,-1
  629 D1:AE1C DD 86 FA -      add a,(ix-6)
  630 D1:AE1F ED 44 -  -      neg
  631 D1:AE21 5F -  -  -      ld  e,a
  632 D1:AE22 DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  633 D1:AE24 18 A9 -  -      jr  vatTraverse_loop
  634 D1:AE26 -  -  -  -  
  635 D1:AE26 -  -  -  -  
  636 D1:AE26 -  -  -  -  
  637 D1:AE26 -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:AE26 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:AE26 -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:AE26 -  -  -  -  
    3 D1:AE26 -  -  -  -  ;Various Parts Contributed by
    4 D1:AE26 -  -  -  -  ;- BrandonW
    5 D1:AE26 -  -  -  -  ;- calc84
    6 D1:AE26 -  -  -  -  ;- MateoConLechuga
    7 D1:AE26 -  -  -  -  ;- Runer112
    8 D1:AE26 -  -  -  -  ;- tr1p1ea
    9 D1:AE26 -  -  -  -  ;- Kerm Martian
   10 D1:AE26 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:AE26 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:AE26 -  -  -  -  ;
    6 D1:AE26 -  -  -  -  ;
    7 D1:AE26 -  -  -  -  ;
    8 D1:AE26 -  -  -  -  
    9 D1:AE26 -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:AE26 -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:AE26 -  -  -  -  
   12 D1:AE26 -  -  -  -  screenBuf1      .equ vRam
   13 D1:AE26 -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:AE26 -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:AE26 -  -  -  -  xPos                .equ $D031F6
   16 D1:AE26 -  -  -  -  yPos                .equ $D031F7
   17 D1:AE26 -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:AE26 -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:AE26 -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:AE26 -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:AE26 -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:AE26 -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:AE26 -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:AE26 -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:AE26 -  -  -  -  
   26 D1:AE26 -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:AE26 -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:AE26 -  -  -  -  
   29 D1:AE26 -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:AE26 -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:AE26 -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:AE26 -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:AE26 -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:AE26 -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:AE26 -  -  -  -  
   36 D1:AE26 -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:AE26 -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:AE26 -  -  -  -  
   39 D1:AE26 -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:AE26 -  -  -  -  ;
   41 D1:AE26 -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:AE26 -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:AE26 -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   44 D1:AE26 -  -  -  -  basefile_sig        .equ inputNumFiles+1    ;3b pointer to 16b hash
   45 D1:AE26 -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   46 D1:AE26 -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   47 D1:AE26 -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   48 D1:AE26 -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   49 D1:AE26 -  -  -  -  submapper           .equ chr_rom_size+3     ;1b. iNES2 thing. Not often used.
   50 D1:AE26 -  -  -  -  ines_flag_6         .equ submapper+1        ;1b. Flags that a mapper may need.
   51 D1:AE26 -  -  -  -  mapper_id           .equ ines_flag_6+1      ;3b. Convenience load for 12 bits
   52 D1:AE26 -  -  -  -  mapper_adr_base     .equ mapper_id+1        ;3b. Used to load mapper
   53 D1:AE26 -  -  -  -  trainer_base        .equ mapper_adr_base+3  ;3b. If exist, starts here
   54 D1:AE26 -  -  -  -  prg_rom_base        .equ mapper_adr_base+3  ;3b. Adjusted in case of trainer.
   55 D1:AE26 -  -  -  -  chr_rom_base        .equ prg_rom_base+3     ;3b. Located somewhere.
   56 D1:AE26 -  -  -  -  chr_rom_base_file   .equ chr_rom_base+3     ;1b. Nonzero if not in first file.
   57 D1:AE26 -  -  -  -  
   58 D1:AE26 -  -  -  -  SIZEOF_INTEGRITY_HASH    .equ 16
   59 D1:AE26 -  -  -  -  MAXPRGROM_HINIB     .equ 1
   60 D1:AE26 -  -  -  -  MAXCHRROM_HINIB     .equ 3
   61 D1:AE26 -  -  -  -  NUMBER_OF_MAPPERS   .equ 1
   62 D1:AE26 -  -  -  -  MAPPER_STRIDE       .equ 9
   63 D1:AE26 -  -  -  -  
   64 D1:AE26 -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   65 D1:AE26 -  -  -  -  FILETABLE_STRIDE    .equ 8
   66 D1:AE26 -  -  -  -  FILETABLE           .equ chr_rom_base_file+3   ;(MAXNUMFILES*FILETABLE_STRIDE)b
   67 D1:AE26 -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   68 D1:AE26 -  -  -  -  FILE_ADR_OFFSET     .equ 2
   69 D1:AE26 -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   70 D1:AE26 -  -  -  -  
   71 D1:AE26 -  -  -  -  
   72 D1:AE26 -  -  -  -  
   73 D1:AE26 -  -  -  -  ;
   74 D1:AE26 -  -  -  -  ;
   75 D1:AE26 -  -  -  -  
   76 D1:AE26 -  -  -  -  ;Undefine this to speed up core process by losing debug state
   77 D1:AE26 -  -  -  -  #define COREDEBUG
   78 D1:AE26 -  -  -  -  
   79 D1:AE26 -  -  -  -  ;core memory
   80 D1:AE26 -  -  -  -  #define REGA 0
   81 D1:AE26 -  -  -  -  #define REGX 1
   82 D1:AE26 -  -  -  -  #define REGY 2
   83 D1:AE26 -  -  -  -  #define REGSP 3
   84 D1:AE26 -  -  -  -  #define REGSR 4
   85 D1:AE26 -  -  -  -  #define REGPC 5
   86 D1:AE26 -  -  -  -  #define CYCLES_REMAIN 8
   87 D1:AE26 -  -  -  -  #define CYCLES_CURRENT 11
   88 D1:AE26 -  -  -  -  #define CURRENT_OPCODES 14
   89 D1:AE26 -  -  -  -  ;flag IDs
   90 D1:AE26 -  -  -  -  #define SF_NEG 7
   91 D1:AE26 -  -  -  -  #define SF_OVER 6 
   92 D1:AE26 -  -  -  -  #define SF_RESERVED 5 
   93 D1:AE26 -  -  -  -  #define SF_BRK 4
   94 D1:AE26 -  -  -  -  #define SF_DEC 3
   95 D1:AE26 -  -  -  -  #define SF_INT 2
   96 D1:AE26 -  -  -  -  #define SF_ZERO 1
   97 D1:AE26 -  -  -  -  #define SF_CARRY 0
   98 D1:AE26 -  -  -  -  
   99 D1:AE26 -  -  -  -  #macro ADDCYC(X)
  100 D1:AE26                 #if (x < 1)
  101 D1:AE26                     nop
  102 D1:AE26                 #elif (X = 1)
  103 D1:AE26                     inc iy
  104 D1:AE26                 #else
  105 D1:AE26                     lea iy,iy+X
  106 D1:AE26                 #endif
  107 D1:AE26             #endmacro
  108 D1:AE26 -  -  -  -  
  109 D1:AE26 -  -  -  -  ;
  110 D1:AE26 -  -  -  -  ;
  111 D1:AE26 -  -  -  -  ;
  112 D1:AE26 -  -  -  -  #endif
  113 D1:AE26 -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:AE26 -  -  -  -  
    4 D1:AE26 -  -  -  -  ;Function list:
    5 D1:AE26 -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:AE26 -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:AE26 -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:AE26 -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:AE26 -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:AE26 -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:AE26 -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:AE26 -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:AE26 -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:AE26 -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:AE26 -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:AE26 -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:AE26 -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:AE26 -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:AE26 -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into HL= screen buffer address.
   20 D1:AE26 -  -  -  -  ; calculateScreenPtrDE - Converts E=xPos,D=yPos into HL= screen buffer address.
   21 D1:AE26 -  -  -  -  ;
   22 D1:AE26 -  -  -  -  ;
   23 D1:AE26 -  -  -  -  ;
   24 D1:AE26 -  -  -  -  ;
   25 D1:AE26 -  -  -  -  ;
   26 D1:AE26 -  -  -  -  ;
   27 D1:AE26 -  -  -  -  ;
   28 D1:AE26 -  -  -  -  
   29 D1:AE26 -  -  -  -  
   30 D1:AE26 -  -  -  -  
   31 D1:AE26 -  -  -  -  
   32 D1:AE26 -  -  -  -  ;-----------------------------------------------------------------------------
   33 D1:AE26 -  -  -  -  ;Screen hardware interface stuff
   34 D1:AE26 -  -  -  -  
   35 D1:AE26 -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   36 D1:AE26 -  -  -  -  fastCopy:
   37 D1:AE26 11 00 00 D4     ld  de,screenBuf1
   38 D1:AE2A 2A 10 00 E3     ld  hl,(mpLcdBase)
   39 D1:AE2E 22 00 34 D0     ld  (curScreenBuf),hl
   40 D1:AE32 B7 -  -  -      or  a,a
   41 D1:AE33 ED 52 -  -      sbc hl,de
   42 D1:AE35 EB -  -  -      ex  de,hl
   43 D1:AE36 20 04 -  -      jr  nz,+_
   44 D1:AE38 21 00 2C D5     ld  hl,screenBuf2
   45 D1:AE3C 22 10 00 E3 _:  ld  (mpLcdBase),hl
   46 D1:AE40 C9 -  -  -      ret
   47 D1:AE41 -  -  -  -  
   48 D1:AE41 -  -  -  -  stopGfx:
   49 D1:AE41 CD 74 03 00     call _boot_ClearVRAM
   50 D1:AE45 11 2D 09 00     ld  de,lcdNormalMode
   51 D1:AE49 01 00 00 D4     ld  bc,screenBuf1
   52 D1:AE4D 18 0C -  -      jr  configureScreen
   53 D1:AE4F -  -  -  -  
   54 D1:AE4F -  -  -  -  startGfx:
   55 D1:AE4F CD 74 03 00     call _boot_ClearVRAM
   56 D1:AE53 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   57 D1:AE57 01 00 00 D4     ld  bc,screenBuf1
   58 D1:AE5B -  -  -  -  configureScreen:
   59 D1:AE5B 21 10 00 E3     ld  hl,mpLcdBase
   60 D1:AE5F ED 0F -  -      ld  (hl),bc
   61 D1:AE61 2E 18 -  -      ld  L,lcdCtrl
   62 D1:AE63 ED 1F -  -      ld  (hl),de
   63 D1:AE65 2E 01 -  -      ld  L,lcdTiming0 + 1
   64 D1:AE67 01 08 00 00     ld  bc,8
   65 D1:AE6B 11 9A AE D1     ld  de,screenSettings
   66 D1:AE6F 1A -  -  -  _:  ld  a,(de)
   67 D1:AE70 ED A0 -  -      ldi
   68 D1:AE72 2B -  -  -      dec hl
   69 D1:AE73 77 -  -  -      ld  (hl),a
   70 D1:AE74 23 -  -  -      inc hl
   71 D1:AE75 EA 6F AE D1     jp  pe,-_
   72 D1:AE79 21 00 2C D5     ld  hl,screenBuf2
   73 D1:AE7D 22 00 34 D0     ld  (curScreenBuf),hl
   74 D1:AE81 -  -  -  -  ;Also copied from graphx
   75 D1:AE81 -  -  -  -  setDefaultPalette:
   76 D1:AE81 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   77 D1:AE85 43 -  -  -  	ld	b,e			        ; b = 0
   78 D1:AE86 78 -  -  -  _:	ld	a,b
   79 D1:AE87 0F -  -  -  	rrca
   80 D1:AE88 A8 -  -  -  	xor	a,b
   81 D1:AE89 E6 E0 -  -  	and	a,224
   82 D1:AE8B A8 -  -  -  	xor	a,b
   83 D1:AE8C 12 -  -  -  	ld	(de),a
   84 D1:AE8D 13 -  -  -  	inc	de
   85 D1:AE8E 78 -  -  -  	ld	a,b
   86 D1:AE8F 17 -  -  -  	rla
   87 D1:AE90 17 -  -  -  	rla
   88 D1:AE91 17 -  -  -  	rla
   89 D1:AE92 78 -  -  -  	ld	a,b
   90 D1:AE93 1F -  -  -  	rra
   91 D1:AE94 12 -  -  -  	ld	(de),a
   92 D1:AE95 13 -  -  -  	inc	de
   93 D1:AE96 04 -  -  -  	inc	b
   94 D1:AE97 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   95 D1:AE99 C9 -  -  -  	ret
   96 D1:AE9A -  -  -  -  
   97 D1:AE9A -  -  -  -  screenSettings:
   98 D1:AE9A -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   99 D1:AE9A -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
  100 D1:AE9A 07 -  -  -  	.db	7					; HSW
  101 D1:AE9B 57 -  -  -  	.db	87					; HFP
  102 D1:AE9C 3F -  -  -  	.db	63					; HBP
  103 D1:AE9D 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  104 D1:AE9F B3 -  -  -  	.db	179					; VFP
  105 D1:AEA0 00 -  -  -  	.db	0					; VBP
  106 D1:AEA1 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  107 D1:AEA2 -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  108 D1:AEA2 -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  109 D1:AEA2 -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  110 D1:AEA2 -  -  -  -  ; Hz = 48000000/CC = 60
  111 D1:AEA2 -  -  -  -  
  112 D1:AEA2 -  -  -  -  
  113 D1:AEA2 -  -  -  -  ;-----------------------------------------------------------------------------
  114 D1:AEA2 -  -  -  -  ; Text Rendering
  115 D1:AEA2 -  -  -  -  
  116 D1:AEA2 -  -  -  -  clearTextBuf:
  117 D1:AEA2 21 00 50 D0     ld  hl,NAMETABLE1
  118 D1:AEA6 11 01 50 D0     ld  de,NAMETABLE1+1
  119 D1:AEAA 01 FF 03 00     ld  bc,1023
  120 D1:AEAE 36 20 -  -      ld  (hl),' '
  121 D1:AEB0 ED B0 -  -      ldir
  122 D1:AEB2 C9 -  -  -      ret
  123 D1:AEB3 -  -  -  -  
  124 D1:AEB3 -  -  -  -  printTextBuf:
  125 D1:AEB3 2A F6 31 D0     ld  hl,(xPos)
  126 D1:AEB7 22 E7 AE D1     ld  (printTextBuf_smcPosRecovery),hl
  127 D1:AEBB 21 00 50 D0     ld  hl,NAMETABLE1
  128 D1:AEBF AF -  -  -      xor a,a
  129 D1:AEC0 32 F7 31 D0     ld  (yPos),a
  130 D1:AEC4 0E 1E -  -      ld  c,30
  131 D1:AEC6 3E 08 -  -  _:  ld  a,8
  132 D1:AEC8 32 F6 31 D0     ld  (xPos),a
  133 D1:AECC 06 20 -  -      ld  b,$20
  134 D1:AECE 7E -  -  -  _:  ld  a,(hl)
  135 D1:AECF 23 -  -  -      inc hl
  136 D1:AED0 C5 -  -  -      push bc
  137 D1:AED1 E5 -  -  -          push hl
  138 D1:AED2 CD 30 AF D1             call printBigFont
  139 D1:AED6 E1 -  -  -          pop hl
  140 D1:AED7 C1 -  -  -      pop bc
  141 D1:AED8 10 F4 -  -      djnz -_
  142 D1:AEDA 3A F7 31 D0     ld  a,(yPos)
  143 D1:AEDE 3C -  -  -      inc a
  144 D1:AEDF 32 F7 31 D0     ld  (yPos),a
  145 D1:AEE3 0D -  -  -      dec  c
  146 D1:AEE4 20 E0 -  -      jr  nz,--_
  147 D1:AEE6 -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  148 D1:AEE6 21 00 00 00     ld  hl,0
  149 D1:AEEA 22 F6 31 D0     ld  (xPos),hl
  150 D1:AEEE C9 -  -  -      ret
  151 D1:AEEF -  -  -  -  
  152 D1:AEEF -  -  -  -  ;A=column to start on
  153 D1:AEEF -  -  -  -  setLineStart:
  154 D1:AEEF 32 F6 31 D0     ld  (xPos),a
  155 D1:AEF3 32 03 34 D0     ld  (linestart),a
  156 D1:AEF7 C9 -  -  -      ret
  157 D1:AEF8 -  -  -  -  
  158 D1:AEF8 -  -  -  -  ;A=row to start on
  159 D1:AEF8 -  -  -  -  setCurLine:
  160 D1:AEF8 32 F7 31 D0     ld  (yPos),a
  161 D1:AEFC C9 -  -  -      ret
  162 D1:AEFD -  -  -  -  
  163 D1:AEFD -  -  -  -  newPage:
  164 D1:AEFD 3E FF -  -      ld  a,$FF
  165 D1:AEFF 32 F7 31 D0     ld  (yPos),a
  166 D1:AF03 -  -  -  -  newLine:
  167 D1:AF03 3A 03 34 D0     ld  a,(linestart)
  168 D1:AF07 32 F6 31 D0     ld  (xPos),a
  169 D1:AF0B 3A F7 31 D0     ld  a,(yPos)
  170 D1:AF0F 3C -  -  -      inc a
  171 D1:AF10 FE 1E -  -      cp  30
  172 D1:AF12 38 01 -  -      jr  c,+_
  173 D1:AF14 AF -  -  -      xor a,a
  174 D1:AF15 32 F7 31 D0 _:  ld  (yPos),a
  175 D1:AF19 C9 -  -  -      ret
  176 D1:AF1A -  -  -  -  
  177 D1:AF1A -  -  -  -      
  178 D1:AF1A -  -  -  -      
  179 D1:AF1A -  -  -  -  
  180 D1:AF1A -  -  -  -  ;HL=address to string
  181 D1:AF1A -  -  -  -  printString:
  182 D1:AF1A 7E -  -  -      ld  a,(hl)
  183 D1:AF1B 23 -  -  -      inc hl
  184 D1:AF1C B7 -  -  -      or  a,a
  185 D1:AF1D C8 -  -  -      ret z
  186 D1:AF1E FE 0A -  -      cp  a,'\n'
  187 D1:AF20 20 06 -  -      jr nz,+_
  188 D1:AF22 CD 03 AF D1     call newLine
  189 D1:AF26 18 F2 -  -      jr  printString
  190 D1:AF28 E5 -  -  -  _:  push hl
  191 D1:AF29 CD 30 AF D1         call printBigFont
  192 D1:AF2D E1 -  -  -      pop hl
  193 D1:AF2E 18 EA -  -      jr printString
  194 D1:AF30 -  -  -  -  
  195 D1:AF30 -  -  -  -  
  196 D1:AF30 -  -  -  -  ;in: A=chrToPrint
  197 D1:AF30 -  -  -  -  printBigFont:
  198 D1:AF30 CD C5 AF D1     call calculateScreenPtr
  199 D1:AF34 EB -  -  -      ex  de,hl
  200 D1:AF35 6F -  -  -      ld  L,a
  201 D1:AF36 26 08 -  -      ld  H,8
  202 D1:AF38 ED 6C -  -      mlt hl
  203 D1:AF3A 01 DF AE D1     ld  bc,graphx_textdata
  204 D1:AF3E 09 -  -  -      add hl,bc
  205 D1:AF3F EB -  -  -      ex  de,hl
  206 D1:AF40 0E 08 -  -      ld  c,8
  207 D1:AF42 06 08 -  -  _:  ld  b,8
  208 D1:AF44 1A -  -  -      ld  a,(de)
  209 D1:AF45 87 -  -  -  _:  add a,a
  210 D1:AF46 -  -  -  -  fontBGColor_var .equ $+1
  211 D1:AF46 36 00 -  -      ld  (hl),FONTBGCOLOR
  212 D1:AF48 30 02 -  -      jr  nc,$+4
  213 D1:AF4A -  -  -  -  fontFGColor_var .equ $+1
  214 D1:AF4A 36 FF -  -      ld  (hl),FONTFGCOLOR
  215 D1:AF4C 23 -  -  -      inc hl
  216 D1:AF4D 10 F6 -  -      djnz -_
  217 D1:AF4F 79 -  -  -      ld  a,c
  218 D1:AF50 01 38 01 00     ld  bc,320-8
  219 D1:AF54 09 -  -  -      add hl,bc
  220 D1:AF55 4F -  -  -      ld  c,a
  221 D1:AF56 13 -  -  -      inc de
  222 D1:AF57 0D -  -  -      dec c
  223 D1:AF58 20 E8 -  -      jr  nz,--_
  224 D1:AF5A 21 F6 31 D0     ld  hl,xPos
  225 D1:AF5E 34 -  -  -      inc (hl)
  226 D1:AF5F C9 -  -  -      ret
  227 D1:AF60 -  -  -  -  
  228 D1:AF60 -  -  -  -  ;A= 0-255 numeric value to display as hex
  229 D1:AF60 -  -  -  -  printSmallNumPair:
  230 D1:AF60 CD C5 AF D1     call calculateScreenPtr
  231 D1:AF64 F5 -  -  -      push af
  232 D1:AF65 1F -  -  -          rra
  233 D1:AF66 1F -  -  -          rra
  234 D1:AF67 1F -  -  -          rra
  235 D1:AF68 1F -  -  -          rra
  236 D1:AF69 CD 78 AF D1         call +_
  237 D1:AF6D F1 -  -  -      pop af
  238 D1:AF6E CD 78 AF D1     call +_
  239 D1:AF72 21 F6 31 D0     ld  hl,xPos
  240 D1:AF76 34 -  -  -      inc (hl)
  241 D1:AF77 C9 -  -  -      ret
  242 D1:AF78 E6 0F -  -  _:  and a,$0F
  243 D1:AF7A 01 40 01 00     ld  bc,320
  244 D1:AF7E 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  245 D1:AF7F EB -  -  -      ex  de,hl
  246 D1:AF80 6F -  -  -      ld  L,a
  247 D1:AF81 26 03 -  -      ld  H,3
  248 D1:AF83 ED 6C -  -      mlt hl
  249 D1:AF85 01 DF B2 D1     ld  bc,SmallHexFont
  250 D1:AF89 09 -  -  -      add hl,bc
  251 D1:AF8A EB -  -  -      ex  de,hl
  252 D1:AF8B 0E 03 -  -      ld  c,3
  253 D1:AF8D 18 14 -  -      jr  printSmallNumPair_2ndHalf
  254 D1:AF8F -  -  -  -  printSmallNumPair_1stHalf:
  255 D1:AF8F 1A -  -  -      ld  a,(de)
  256 D1:AF90 06 04 -  -      ld  b,4
  257 D1:AF92 87 -  -  -  _:  add a,a
  258 D1:AF93 36 00 -  -      ld  (hl),FONTBGCOLOR
  259 D1:AF95 30 02 -  -      jr  nc,$+4
  260 D1:AF97 36 FF -  -      ld  (hl),FONTFGCOLOR
  261 D1:AF99 23 -  -  -      inc hl
  262 D1:AF9A 10 F6 -  -      djnz -_
  263 D1:AF9C 79 -  -  -      ld  a,c
  264 D1:AF9D 01 3C 01 00     ld  bc,320-4
  265 D1:AFA1 09 -  -  -      add hl,bc
  266 D1:AFA2 4F -  -  -      ld  c,a
  267 D1:AFA3 -  -  -  -  printSmallNumPair_2ndHalf:
  268 D1:AFA3 1A -  -  -      ld  a,(de)
  269 D1:AFA4 07 -  -  -      rlca
  270 D1:AFA5 07 -  -  -      rlca
  271 D1:AFA6 07 -  -  -      rlca
  272 D1:AFA7 07 -  -  -      rlca
  273 D1:AFA8 06 04 -  -      ld  b,4
  274 D1:AFAA 87 -  -  -  _:  add a,a
  275 D1:AFAB 36 00 -  -      ld  (hl),FONTBGCOLOR
  276 D1:AFAD 30 02 -  -      jr  nc,$+4
  277 D1:AFAF 36 FF -  -      ld  (hl),FONTFGCOLOR
  278 D1:AFB1 23 -  -  -      inc hl
  279 D1:AFB2 10 F6 -  -      djnz -_
  280 D1:AFB4 13 -  -  -      inc de
  281 D1:AFB5 79 -  -  -      ld  a,c
  282 D1:AFB6 01 3C 01 00     ld  bc,320-4
  283 D1:AFBA 09 -  -  -      add hl,bc
  284 D1:AFBB 4F -  -  -      ld  c,a
  285 D1:AFBC 0D -  -  -      dec c
  286 D1:AFBD 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  287 D1:AFBF 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  288 D1:AFC3 09 -  -  -      add hl,bc
  289 D1:AFC4 C9 -  -  -      ret
  290 D1:AFC5 -  -  -  -  
  291 D1:AFC5 -  -  -  -  calculateScreenPtr:
  292 D1:AFC5 -  -  -  -      ;xcoord: x * 8 
  293 D1:AFC5 -  -  -  -      ;ycoord: 320 * 8 * y
  294 D1:AFC5 -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  295 D1:AFC5 ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  296 D1:AFCA -  -  -  -  calculateScreenPtrDE:
  297 D1:AFCA 6A -  -  -      ld  L,d     ;yPos
  298 D1:AFCB 26 A0 -  -      ld  h,160
  299 D1:AFCD ED 6C -  -      mlt hl
  300 D1:AFCF 29 -  -  -      add hl,hl
  301 D1:AFD0 16 01 -  -      ld  d,1
  302 D1:AFD2 ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  303 D1:AFD4 19 -  -  -      add hl,de
  304 D1:AFD5 29 -  -  -      add hl,hl
  305 D1:AFD6 29 -  -  -      add hl,hl
  306 D1:AFD7 29 -  -  -      add hl,hl
  307 D1:AFD8 ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  308 D1:AFDD 19 -  -  -      add hl,de
  309 D1:AFDE C9 -  -  -      ret
  310 D1:AFDF -  -  -  -  
  311 D1:AFDF -  -  -  -  
  312 D1:AFDF -  -  -  -  
  313 D1:AFDF -  -  -  -  
  314 D1:AFDF -  -  -  -  
  315 D1:AFDF -  -  -  -  
  316 D1:AFDF -  -  -  -  
  317 D1:AFDF -  -  -  -  
  318 D1:AFDF -  -  -  -  
  319 D1:AFDF -  -  -  -  ;-----------------------------------------------------------------------------
  320 D1:AFDF -  -  -  -  ; Data Section
  321 D1:AFDF -  -  -  -  
  322 D1:AFDF -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  323 D1:AFDF 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  324 D1:AFE7 C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  325 D1:AFEF D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  326 D1:AFF7 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  327 D1:AFFF 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  328 D1:B007 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  329 D1:B00F 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  330 D1:B017 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  331 D1:B01F 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  332 D1:B027 C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  333 D1:B02F 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  334 D1:B037 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  335 D1:B03F 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  336 D1:B047 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  337 D1:B04F 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  338 D1:B057 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  339 D1:B05F 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  340 D1:B067 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  341 D1:B06F 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  342 D1:B077 FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  343 D1:B07F 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  344 D1:B087 FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  345 D1:B08F 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  346 D1:B097 FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  347 D1:B09F 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  348 D1:B0A7 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  349 D1:B0AF 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  350 D1:B0B7 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  351 D1:B0BF 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  352 D1:B0C7 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  353 D1:B0CF C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  354 D1:B0D7 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  355 D1:B0DF 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  356 D1:B0E7 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  357 D1:B0EF FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  358 D1:B0F7 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  359 D1:B0FF F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  360 D1:B107 FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  361 D1:B10F FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  362 D1:B117 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  363 D1:B11F C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  364 D1:B127 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  365 D1:B12F 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  366 D1:B137 C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  367 D1:B13F C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  368 D1:B147 C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  369 D1:B14F C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  370 D1:B157 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  371 D1:B15F FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  372 D1:B167 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  373 D1:B16F FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  374 D1:B177 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  375 D1:B17F FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  376 D1:B187 C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  377 D1:B18F C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  378 D1:B197 C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  379 D1:B19F C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  380 D1:B1A7 C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  381 D1:B1AF FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  382 D1:B1B7 F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  383 D1:B1BF C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  384 D1:B1C7 F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  385 D1:B1CF 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  386 D1:B1D7 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  387 D1:B1DF C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  388 D1:B1E7 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  389 D1:B1EF C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  390 D1:B1F7 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  391 D1:B1FF 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  392 D1:B207 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  393 D1:B20F 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  394 D1:B217 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  395 D1:B21F C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  396 D1:B227 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  397 D1:B22F 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  398 D1:B237 C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  399 D1:B23F 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  400 D1:B247 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  401 D1:B24F 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  402 D1:B257 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  403 D1:B25F 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  404 D1:B267 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  405 D1:B26F 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  406 D1:B277 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  407 D1:B27F 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  408 D1:B287 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  409 D1:B28F 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  410 D1:B297 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  411 D1:B29F 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  412 D1:B2A7 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  413 D1:B2AF 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  414 D1:B2B7 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  415 D1:B2BF C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  416 D1:B2C7 E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  417 D1:B2CF 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  418 D1:B2D7 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  419 D1:B2DF -  -  -  -  
  420 D1:B2DF -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  421 D1:B2DF -  -  -  -  ;whose format was copied from a (then-)authorized source
  422 D1:B2DF -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  423 D1:B2DF -  -  -  -  SmallHexFont:
  424 D1:B2DF 4E AA AE -  .db $4E,$AA,$AE				;zero
  425 D1:B2E2 44 C4 4E -  .db $44,$C4,$4E				;one
  426 D1:B2E5 4C 24 8E -  .db $4C,$24,$8E				;two
  427 D1:B2E8 4C 24 2C -  .db $4C,$24,$2C				;three
  428 D1:B2EB 48 AE 22 -  .db $48,$AE,$22				;four
  429 D1:B2EE 4E 8C 2C -  .db $4E,$8C,$2C				;five
  430 D1:B2F1 46 8E AE -  .db $46,$8E,$AE				;six
  431 D1:B2F4 4E 24 88 -  .db $4E,$24,$88				;seven
  432 D1:B2F7 4E AE AE -  .db $4E,$AE,$AE				;eight
  433 D1:B2FA 4E AE 2C -  .db $4E,$AE,$2C				;nine
  434 D1:B2FD 44 AE AA -  .db $44,$AE,$AA				;A
  435 D1:B300 4C AC AC -  .db $4C,$AC,$AC				;B
  436 D1:B303 46 88 86 -  .db $46,$88,$86				;C
  437 D1:B306 4C AA AC -  .db $4C,$AA,$AC				;D
  438 D1:B309 4E 8C 8E -  .db $4E,$8C,$8E				;E
  439 D1:B30C 4E 8C 88 -  .db $4E,$8C,$88				;F
  440 D1:B30F -  -  -  -  
  441 D1:B30F -  -  -  -  
  442 D1:B30F -  -  -  -  
Listing for file "main.z80"
  638 D1:B30F -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B30F -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B30F -  -  -  -  
    3 D1:B30F -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B30F -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B30F -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B30F -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B30F -  -  -  -  ;
    8 D1:B30F -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B30F -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B30F -  -  -  -  ;
   11 D1:B30F -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B30F -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B30F -  -  -  -  ;
   14 D1:B30F -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B30F -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B30F -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B30F -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B30F -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B30F -  -  -  -  
   20 D1:B30F -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B30F -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+6 \ set SF_OVER,b
   22 D1:B30F -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B30F -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B30F -  -  -  -  
   25 D1:B30F -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ rlc a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B30F -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B30F -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B30F -  -  -  -  
   29 D1:B30F -  -  -  -  
   30 D1:B30F -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B30F -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B30F -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B30F -  -  -  -  
   34 D1:B30F -  -  -  -  
   35 D1:B30F -  -  -  -  
   36 D1:B30F -  -  -  -  
   37 D1:B30F -  -  -  -  ;=============================================================================
   38 D1:B30F -  -  -  -  ;=============================================================================
   39 D1:B30F -  -  -  -  ;=============================================================================
   40 D1:B30F -  -  -  -  ;=============================================================================
   41 D1:B30F -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B30F -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B30F -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B30F -  -  -  -  i6502Init:
   45 D1:B30F -  -  -  -      ;
   46 D1:B30F -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B30F -  -  -  -      ;
   48 D1:B30F 21 00 38 D0     ld  hl,main_ram
   49 D1:B313 01 08 20 00     ld  bc,$002008
   50 D1:B317 1E 00 -  -      ld  e,$00
   51 D1:B319 CD B5 B5 D1     call i6502_map_pages
   52 D1:B31D 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B321 01 01 20 00     ld  bc,$002001
   54 D1:B325 1E 20 -  -      ld  e,$20
   55 D1:B327 CD B5 B5 D1     call i6502_map_pages
   56 D1:B32B FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B330 DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:B335 ED 22 80 -      lea hl,ix-128
   59 D1:B338 ED 12 81 -      lea de,ix-127
   60 D1:B33B 01 FF 00 00     ld  bc,255
   61 D1:B33F 36 00 -  -      ld  (hl),$00
   62 D1:B341 ED B0 -  -      ldir
   63 D1:B343 CD 9C B5 D1     call i6502_load_instruction_set
   64 D1:B347 -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:B347 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:B34B ED 27 -  -      ld  hl,(hl)
   67 D1:B34D 11 FC 00 00     ld  de,$0000FC
   68 D1:B351 19 -  -  -      add hl,de
   69 D1:B352 -  -  -  -      ;jp inst6502_jsr
   70 D1:B352 -  -  -  -      ;Manual loading below. Uncomment "jp inst6502_jsr" to return to original.
   71 D1:B352 -  -  -  -      ;Settings below is to run nestest CPU-only test. The reset vector above
   72 D1:B352 -  -  -  -      ;requires a working PPU (and probably APU) to be present.
   73 D1:B352 DD 36 04 24     ld  (ix+REGSR),$24      ;because that's what the log wants?
   74 D1:B356 21 00 C0 00     ld  hl,$C000
   75 D1:B35A DD 2F 05 -      ld  (ix+REGPC),HL
   76 D1:B35D -  -  -  -  
   77 D1:B35D -  -  -  -  i6502FirstLoad:
   78 D1:B35D 52 DD 17 05     ld.s de,(ix+REGPC)
   79 D1:B361 7B -  -  -      ld  a,e
   80 D1:B362 1E 08 -  -      ld  e,BASETABLE_STRIDE
   81 D1:B364 ED 5C -  -      mlt de
   82 D1:B366 21 00 40 D0     ld  hl,PAGETABLE
   83 D1:B36A 19 -  -  -      add hl,de
   84 D1:B36B ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   85 D1:B36D 16 00 -  -      ld  d,0
   86 D1:B36F 5F -  -  -      ld  e,a
   87 D1:B370 19 -  -  -      add hl,de       ;resolve final address
   88 D1:B371 18 19 -  -      jr  i6502FinishLoad
   89 D1:B373 -  -  -  -  i6502NextLoad:
   90 D1:B373 23 -  -  -      inc hl
   91 D1:B374 1C -  -  -      inc e
   92 D1:B375 20 15 -  -      jr  nz,i6502FinishLoad
   93 D1:B377 DD 56 06 -      ld  d,(ix+REGPC+1)
   94 D1:B37A 14 -  -  -      inc d
   95 D1:B37B 52 DD 1F 05     ld.s (ix+REGPC),de
   96 D1:B37F 1E 08 -  -      ld  e,BASETABLE_STRIDE
   97 D1:B381 ED 5C -  -      mlt de
   98 D1:B383 21 00 40 D0     ld  hl,PAGETABLE
   99 D1:B387 19 -  -  -      add hl,de
  100 D1:B388 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
  101 D1:B38A 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
  102 D1:B38C -  -  -  -  i6502FinishLoad:
  103 D1:B38C 7E -  -  -      ld  a,(hl)
  104 D1:B38D -  -  -  -  #ifdef COREDEBUG
  105 D1:B38D DD 77 0E -      ld  (ix+CURRENT_OPCODES+0),a
  106 D1:B390 DD 73 05 -      ld  (ix+REGPC+0),e
  107 D1:B393 -  -  -  -  #endif
  108 D1:B393 23 -  -  -      inc hl
  109 D1:B394 1C -  -  -      inc e
  110 D1:B395 20 15 -  -      jr  nz,i6502PrepNextPage
  111 D1:B397 DD 56 06 -      ld  d,(ix+REGPC+1)
  112 D1:B39A 14 -  -  -      inc d
  113 D1:B39B 52 DD 1F 05     ld.s (ix+REGPC),de
  114 D1:B39F 1E 08 -  -      ld  e,BASETABLE_STRIDE
  115 D1:B3A1 ED 5C -  -      mlt de
  116 D1:B3A3 21 00 40 D0     ld  hl,PAGETABLE
  117 D1:B3A7 19 -  -  -      add hl,de
  118 D1:B3A8 ED 27 -  -      ld  hl,(hl)
  119 D1:B3AA 1E 00 -  -      ld  e,0
  120 D1:B3AC -  -  -  -  i6502PrepNextPage:
  121 D1:B3AC -  -  -  -  #ifdef COREDEBUG
  122 D1:B3AC F5 -  -  -      push af
  123 D1:B3AD 7E -  -  -          ld  a,(hl)
  124 D1:B3AE DD 77 0F -          ld  (ix+CURRENT_OPCODES+1),a
  125 D1:B3B1 D5 -  -  -          push de
  126 D1:B3B2 E5 -  -  -              push hl
  127 D1:B3B3 DD E5 -  -                  push ix
  128 D1:B3B5 23 -  -  -                      inc hl
  129 D1:B3B6 1C -  -  -                      inc e
  130 D1:B3B7 20 0F -  -                      jr  nz,+_
  131 D1:B3B9 DD 56 06 -                      ld  d,(ix+REGPC+1)
  132 D1:B3BC 14 -  -  -                      inc d
  133 D1:B3BD 1E 08 -  -                      ld  e,BASETABLE_STRIDE
  134 D1:B3BF ED 5C -  -                      mlt de
  135 D1:B3C1 21 00 40 D0                     ld  hl,PAGETABLE
  136 D1:B3C5 19 -  -  -                      add hl,de
  137 D1:B3C6 ED 27 -  -                      ld  hl,(hl)
  138 D1:B3C8 7E -  -  -  _:                  ld  a,(hl)
  139 D1:B3C9 DD 77 10 -                      ld  (ix+CURRENT_OPCODES+2),a
  140 D1:B3CC -  -  -  -                      ;jr $
  141 D1:B3CC FD E5 -  -                      push iy
  142 D1:B3CE CD 3E D5 D1                         call dbg_printLine
  143 D1:B3D2 FD E1 -  -                      pop iy
  144 D1:B3D4 ED 23 00 -                      lea hl,iy+0
  145 D1:B3D7 11 75 67 00                     ld  de,26485  ;run until
  146 D1:B3DB B7 -  -  -                      or  a,a
  147 D1:B3DC ED 52 -  -                      sbc hl,de
  148 D1:B3DE D4 E9 A9 D1                     call nc,waituntilnewkeypress
  149 D1:B3E2 DD E1 -  -                  pop ix
  150 D1:B3E4 E1 -  -  -              pop hl
  151 D1:B3E5 D1 -  -  -          pop de
  152 D1:B3E6 F1 -  -  -      pop af
  153 D1:B3E7 -  -  -  -  #endif
  154 D1:B3E7 E5 -  -  -      push hl
  155 D1:B3E8 67 -  -  -          ld  h,a
  156 D1:B3E9 2E 08 -  -          ld  l,BASETABLE_STRIDE
  157 D1:B3EB ED 6C -  -          mlt hl
  158 D1:B3ED 01 04 40 D0         ld  bc,JUMPTABLE
  159 D1:B3F1 09 -  -  -          add hl,bc
  160 D1:B3F2 ED 27 -  -          ld  hl,(hl)     ;jumptable
  161 D1:B3F4 E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  162 D1:B3F5 C9 -  -  -      ret
  163 D1:B3F6 -  -  -  -  
  164 D1:B3F6 -  -  -  -  
  165 D1:B3F6 -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  166 D1:B3F6 -  -  -  -  ;   JP i6502FinishLoad
  167 D1:B3F6 -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  168 D1:B3F6 -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  169 D1:B3F6 -  -  -  -  ;   JP i6502NextLoad
  170 D1:B3F6 -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  171 D1:B3F6 -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  172 D1:B3F6 -  -  -  -  ;   JP i6502FinishLoad
  173 D1:B3F6 -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  174 D1:B3F6 -  -  -  -  
  175 D1:B3F6 -  -  -  -  
  176 D1:B3F6 -  -  -  -  ;-----------------------------------------------------------------------------    
  177 D1:B3F6 -  -  -  -  ;-----------------------------------------------------------------------------    
  178 D1:B3F6 -  -  -  -  
  179 D1:B3F6 -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  180 D1:B3F6 -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  181 D1:B3F6 -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  182 D1:B3F6 -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  183 D1:B3F6 -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  184 D1:B3F6 -  -  -  -  
  185 D1:B3F6 -  -  -  -  ;-----------------------------------------------------------------------------    
  186 D1:B3F6 -  -  -  -  ;-----------------------------------------------------------------------------    
  187 D1:B3F6 -  -  -  -  outline6502_imm:
  188 D1:B3F6 7E -  -  -      ld  a,(hl)  ;oper uses A
  189 D1:B3F7 -  -  -  -      ;oper
  190 D1:B3F7 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  191 D1:B40B ED 33 02 -      ADDCYC(2)
  192 D1:B40E C3 73 B3 D1     jp i6502NextLoad
  193 D1:B412 -  -  -  -  
  194 D1:B412 -  -  -  -  outline6502_abs:
  195 D1:B412 4E -  -  -      ld  c,(hl)
  196 D1:B413 23 -  -  -      inc hl
  197 D1:B414 1C -  -  -      inc e
  198 D1:B415 20 15 -  -      jr nz,+_
  199 D1:B417 DD 56 06 -      ld  d,(ix+REGPC+1)
  200 D1:B41A 14 -  -  -      inc d
  201 D1:B41B 52 DD 1F 05     ld.s (ix+REGPC),de
  202 D1:B41F 1E 08 -  -      ld  e,BASETABLE_STRIDE
  203 D1:B421 ED 5C -  -      mlt de
  204 D1:B423 21 00 40 D0     ld  hl,PAGETABLE
  205 D1:B427 19 -  -  -      add hl,de
  206 D1:B428 ED 27 -  -      ld  hl,(hl) ;
  207 D1:B42A 1E 00 -  -      ld  e,0
  208 D1:B42C 46 -  -  -  _:  ld  b,(hl)
  209 D1:B42D E5 -  -  -      push hl
  210 D1:B42E 50 -  -  -          ld  d,b
  211 D1:B42F 79 -  -  -          ld  a,c
  212 D1:B430 0E 08 -  -          ld  c,BASETABLE_STRIDE
  213 D1:B432 ED 4C -  -          mlt bc
  214 D1:B434 21 00 40 D0         ld  hl,PAGETABLE
  215 D1:B438 09 -  -  -          add hl,bc
  216 D1:B439 ED 27 -  -          ld  hl,(hl)
  217 D1:B43B 06 00 -  -          ld  b,0
  218 D1:B43D 4F -  -  -          ld  c,a
  219 D1:B43E 09 -  -  -          add hl,bc   ;full address
  220 D1:B43F -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  221 D1:B43F 7E -  -  -          ld  a,(hl)  ;oper uses A
  222 D1:B440 -  -  -  -          ;oper
  223 D1:B440 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  224 D1:B454 ED 33 03 -      ADDCYC(3)
  225 D1:B457 E1 -  -  -      pop hl
  226 D1:B458 C3 73 B3 D1     jp i6502NextLoad
  227 D1:B45C -  -  -  -  
  228 D1:B45C -  -  -  -  outline6502_zeropage:
  229 D1:B45C 7E -  -  -      ld  a,(hl)
  230 D1:B45D 01 00 38 D0     ld  bc,ZEROPAGE
  231 D1:B461 81 -  -  -      add a,c
  232 D1:B462 4F -  -  -      ld  c,a
  233 D1:B463 0A -  -  -      ld  a,(bc)      ;oper uses A
  234 D1:B464 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  235 D1:B464 -  -  -  -      ;oper
  236 D1:B464 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  237 D1:B478 ED 33 03 -      ADDCYC(3)
  238 D1:B47B C3 73 B3 D1     jp i6502NextLoad
  239 D1:B47F -  -  -  -  
  240 D1:B47F -  -  -  -  
  241 D1:B47F -  -  -  -  ;Note: has same split start as abs
  242 D1:B47F -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  243 D1:B47F 4E -  -  -      ld  c,(hl)
  244 D1:B480 23 -  -  -      inc hl
  245 D1:B481 1C -  -  -      inc e
  246 D1:B482 20 15 -  -      jr nz,+_
  247 D1:B484 DD 56 06 -      ld  d,(ix+REGPC+1)
  248 D1:B487 14 -  -  -      inc d
  249 D1:B488 52 DD 1F 05     ld.s (ix+REGPC),de
  250 D1:B48C 1E 08 -  -      ld  e,BASETABLE_STRIDE
  251 D1:B48E ED 5C -  -      mlt de
  252 D1:B490 21 00 40 D0     ld  hl,PAGETABLE
  253 D1:B494 19 -  -  -      add hl,de
  254 D1:B495 ED 27 -  -      ld  hl,(hl) ;
  255 D1:B497 1E 00 -  -      ld  e,0
  256 D1:B499 46 -  -  -  _:  ld  b,(hl)
  257 D1:B49A E5 -  -  -      push hl
  258 D1:B49B 50 -  -  -          ld  d,b
  259 D1:B49C 79 -  -  -          ld  a,c
  260 D1:B49D 0E 08 -  -          ld  c,BASETABLE_STRIDE
  261 D1:B49F ED 4C -  -          mlt bc
  262 D1:B4A1 21 00 40 D0         ld  hl,PAGETABLE
  263 D1:B4A5 09 -  -  -          add hl,bc
  264 D1:B4A6 ED 27 -  -          ld  hl,(hl)
  265 D1:B4A8 06 00 -  -          ld  b,0
  266 D1:B4AA 4F -  -  -          ld  c,a
  267 D1:B4AB DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  268 D1:B4AE 81 -  -  -          add a,c
  269 D1:B4AF 30 04 -  -          jr  nc,+_
  270 D1:B4B1 04 -  -  -          inc b
  271 D1:B4B2 14 -  -  -          inc d
  272 D1:B4B3 FD 23 -  -          ADDCYC(1)
  273 D1:B4B5 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  274 D1:B4B5 09 -  -  -          add hl,bc   ;full address
  275 D1:B4B6 7E -  -  -          ld  a,(hl)  ;oper uses A
  276 D1:B4B7 -  -  -  -          ;oper
  277 D1:B4B7 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  278 D1:B4CB ED 33 04 -      ADDCYC(4)
  279 D1:B4CE E1 -  -  -      pop hl
  280 D1:B4CF C3 73 B3 D1     jp i6502NextLoad
  281 D1:B4D3 -  -  -  -  
  282 D1:B4D3 -  -  -  -  
  283 D1:B4D3 -  -  -  -  outline6502_zpx:
  284 D1:B4D3 7E -  -  -      ld  a,(hl)
  285 D1:B4D4 01 00 38 D0     ld  bc,ZEROPAGE
  286 D1:B4D8 81 -  -  -      add a,c
  287 D1:B4D9 DD 86 01 -      add a,(ix+REGX)
  288 D1:B4DC 4F -  -  -      ld  c,a
  289 D1:B4DD 0A -  -  -      ld  a,(bc)      ;oper uses A
  290 D1:B4DE -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  291 D1:B4DE -  -  -  -      ;oper
  292 D1:B4DE DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  293 D1:B4F2 ED 33 04 -      ADDCYC(4)
  294 D1:B4F5 C3 73 B3 D1     jp i6502NextLoad
  295 D1:B4F9 -  -  -  -      
  296 D1:B4F9 -  -  -  -  outline6502_zpy:
  297 D1:B4F9 7E -  -  -      ld  a,(hl)
  298 D1:B4FA 01 00 38 D0     ld  bc,ZEROPAGE
  299 D1:B4FE 81 -  -  -      add a,c
  300 D1:B4FF DD 86 02 -      add a,(ix+REGY)
  301 D1:B502 4F -  -  -      ld  c,a
  302 D1:B503 0A -  -  -      ld  a,(bc)      ;oper uses A
  303 D1:B504 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  304 D1:B504 -  -  -  -      ;oper
  305 D1:B504 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  306 D1:B518 ED 33 04 -      ADDCYC(4)
  307 D1:B51B C3 73 B3 D1     jp i6502NextLoad
  308 D1:B51F -  -  -  -  
  309 D1:B51F -  -  -  -  outline6502_preidx_indir:
  310 D1:B51F E5 -  -  -      push hl
  311 D1:B520 7E -  -  -          ld  a,(hl)
  312 D1:B521 21 00 38 D0         ld  hl,ZEROPAGE
  313 D1:B525 85 -  -  -          add a,L
  314 D1:B526 DD 86 01 -          add a,(ix+REGX)
  315 D1:B529 6F -  -  -          ld  L,a
  316 D1:B52A 7E -  -  -          ld  a,(hl)
  317 D1:B52B 2C -  -  -          inc L
  318 D1:B52C 56 -  -  -          ld  d,(hl)
  319 D1:B52D 42 -  -  -          ld  b,d
  320 D1:B52E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  321 D1:B530 ED 4C -  -          mlt bc
  322 D1:B532 21 00 40 D0         ld  hl,PAGETABLE
  323 D1:B536 09 -  -  -          add hl,bc
  324 D1:B537 ED 27 -  -          ld  hl,(hl)
  325 D1:B539 06 00 -  -          ld  b,0
  326 D1:B53B 4F -  -  -          ld  c,a
  327 D1:B53C 09 -  -  -          add hl,bc
  328 D1:B53D -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  329 D1:B53D 7E -  -  -          ld  a,(hl)  ;oper uses A.
  330 D1:B53E -  -  -  -          ;oper
  331 D1:B53E DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  332 D1:B552 ED 33 06 -          ADDCYC(6)
  333 D1:B555 E1 -  -  -      pop hl
  334 D1:B556 C3 73 B3 D1     jp i6502NextLoad
  335 D1:B55A -  -  -  -  
  336 D1:B55A -  -  -  -  outline6502_postidx_indir:
  337 D1:B55A E5 -  -  -      push hl
  338 D1:B55B 7E -  -  -          ld  a,(hl)
  339 D1:B55C 21 00 38 D0         ld  hl,ZEROPAGE
  340 D1:B560 85 -  -  -          add a,L
  341 D1:B561 6F -  -  -          ld  L,a
  342 D1:B562 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  343 D1:B563 2C -  -  -          inc L
  344 D1:B564 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  345 D1:B567 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  346 D1:B568 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  347 D1:B56A FD 23 -  -          ADDCYC(1)
  348 D1:B56C 24 -  -  -          inc h
  349 D1:B56D 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  350 D1:B56E 2E 08 -  -          ld  L,BASETABLE_STRIDE
  351 D1:B570 ED 6C -  -          mlt hl          ;23.
  352 D1:B572 01 00 40 D0         ld  bc,PAGETABLE
  353 D1:B576 09 -  -  -          add hl,bc
  354 D1:B577 ED 27 -  -          ld  hl,(hl)     ;address get.
  355 D1:B579 01 00 00 00         ld  bc,0
  356 D1:B57D 4F -  -  -          ld  c,a
  357 D1:B57E 09 -  -  -          add hl,bc       ;Full address get.
  358 D1:B57F 7E -  -  -          ld  a,(hl)
  359 D1:B580 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  360 D1:B580 -  -  -  -          ;oper
  361 D1:B580 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  362 D1:B594 ED 33 05 -          ADDCYC(5)
  363 D1:B597 E1 -  -  -      pop hl
  364 D1:B598 C3 73 B3 D1     jp i6502NextLoad
  365 D1:B59C -  -  -  -  
  366 D1:B59C -  -  -  -  ;-----------------------------------------------------------------------------
  367 D1:B59C -  -  -  -  ;-----------------------------------------------------------------------------
  368 D1:B59C -  -  -  -  ;-----------------------------------------------------------------------------
  369 D1:B59C -  -  -  -  
  370 D1:B59C -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  371 D1:B59C -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  372 D1:B59C -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  373 D1:B59C -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  374 D1:B59C -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  375 D1:B59C -  -  -  -  
  376 D1:B59C -  -  -  -  ;-----------------------------------------------------------------------------
  377 D1:B59C -  -  -  -  
  378 D1:B59C -  -  -  -  i6502_load_instruction_set:
  379 D1:B59C DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  380 D1:B5A1 21 AE CD D1     ld  hl,inst6502_instruction_set
  381 D1:B5A5 06 00 -  -      ld  b,0
  382 D1:B5A7 ED 17 -  -  _:  ld  de,(hl)
  383 D1:B5A9 DD 1F 00 -      ld  (ix+0),de
  384 D1:B5AC 23 -  -  -      inc hl
  385 D1:B5AD 23 -  -  -      inc hl
  386 D1:B5AE 23 -  -  -      inc hl
  387 D1:B5AF ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  388 D1:B5B2 10 F3 -  -      djnz -_
  389 D1:B5B4 C9 -  -  -      ret
  390 D1:B5B5 -  -  -  -  
  391 D1:B5B5 -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  392 D1:B5B5 -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  393 D1:B5B5 -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  394 D1:B5B5 -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  395 D1:B5B5 -  -  -  -  i6502_map_pages:
  396 D1:B5B5 16 08 -  -      ld  d,BASETABLE_STRIDE
  397 D1:B5B7 ED 5C -  -      mlt de
  398 D1:B5B9 DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  399 D1:B5BE DD 19 -  -      add ix,de
  400 D1:B5C0 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  401 D1:B5C1 11 00 01 00     ld  de,256
  402 D1:B5C5 E5 -  -  -      push hl
  403 D1:B5C6 FD E1 -  -      pop iy
  404 D1:B5C8 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  405 D1:B5C9 DD 2F 00 -  _:  ld  (ix+0),hl
  406 D1:B5CC 19 -  -  -      add hl,de                   ;next page z80
  407 D1:B5CD ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  408 D1:B5D0 3D -  -  -      dec a
  409 D1:B5D1 C8 -  -  -      ret z
  410 D1:B5D2 10 F5 -  -      djnz -_
  411 D1:B5D4 ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  412 D1:B5D7 18 EF -  -      jr --_
  413 D1:B5D9 -  -  -  -  
  414 D1:B5D9 -  -  -  -  
  415 D1:B5D9 -  -  -  -  subroutine6502_abs_split_start:
  416 D1:B5D9 4E -  -  -      ld  c,(hl)
  417 D1:B5DA 23 -  -  -      inc hl
  418 D1:B5DB 1C -  -  -      inc e
  419 D1:B5DC 20 15 -  -      jr nz,+_
  420 D1:B5DE DD 56 06 -      ld  d,(ix+REGPC+1)
  421 D1:B5E1 14 -  -  -      inc d
  422 D1:B5E2 52 DD 1F 05     ld.s (ix+REGPC),de
  423 D1:B5E6 1E 08 -  -      ld  e,BASETABLE_STRIDE
  424 D1:B5E8 ED 5C -  -      mlt de
  425 D1:B5EA 21 00 40 D0     ld  hl,PAGETABLE
  426 D1:B5EE 19 -  -  -      add hl,de
  427 D1:B5EF ED 27 -  -      ld  hl,(hl) ;
  428 D1:B5F1 1E 00 -  -      ld  e,0
  429 D1:B5F3 46 -  -  -  _:  ld  b,(hl)
  430 D1:B5F4 C9 -  -  -      ret
  431 D1:B5F5 -  -  -  -  
  432 D1:B5F5 -  -  -  -  subroutine6502_adc_combined_end:
  433 D1:B5F5 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  434 D1:B5F8 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  435 D1:B5F9 DD 7E 00 -      ld  a,(ix+REGA)
  436 D1:B5FC 89 -  -  -      adc a,c
  437 D1:B5FD DD 77 00 -      ld  (ix+REGA),a
  438 D1:B600 DD 46 04 CB 
              B0 E2 0B B6 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  439 D1:B621 C3 73 B3 D1     jp i6502NextLoad
  440 D1:B625 -  -  -  -  
  441 D1:B625 -  -  -  -  subroutine6502_sbc_combined_end:
  442 D1:B625 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  443 D1:B628 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  444 D1:B629 DD 7E 00 -      ld  a,(ix+REGA)
  445 D1:B62C 3F -  -  -      ccf
  446 D1:B62D 99 -  -  -      sbc a,c
  447 D1:B62E 3F -  -  -      ccf
  448 D1:B62F DD 77 00 -      ld  (ix+REGA),a
  449 D1:B632 DD 46 04 CB 
              B0 E2 3D B6 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  450 D1:B653 C3 73 B3 D1     jp i6502NextLoad
  451 D1:B657 -  -  -  -  
  452 D1:B657 -  -  -  -  subroutine6502_cmp_combined_end:
  453 D1:B657 DD 7E 00 -      ld  a,(ix+REGA)
  454 D1:B65A 90 -  -  -      sub a,b
  455 D1:B65B 3F -  -  -      ccf     ;because the 6502 is strange like that.
  456 D1:B65C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  457 D1:B675 C3 73 B3 D1     jp i6502NextLoad
  458 D1:B679 -  -  -  -  
  459 D1:B679 -  -  -  -  subroutine6502_take_branch:
  460 D1:B679 FD 23 -  -      ADDCYC(1)
  461 D1:B67B 7E -  -  -      ld  a,(hl)  ;offset byte
  462 D1:B67C 6F -  -  -      ld  L,a
  463 D1:B67D 87 -  -  -      add a,a
  464 D1:B67E 9F -  -  -      sbc a,a
  465 D1:B67F 67 -  -  -      ld  H,a     ;sign-extending offset byte
  466 D1:B680 DD 56 06 -      ld  d,(ix+REGPC+1)
  467 D1:B683 13 -  -  -      inc de
  468 D1:B684 52 19 -  -      add.s hl,de
  469 D1:B686 7C -  -  -      ld  a,h
  470 D1:B687 BA -  -  -      cp  d       ;is high byte the same?
  471 D1:B688 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  472 D1:B68A FD 23 -  -      ADDCYC(1)
  473 D1:B68C 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  474 D1:B690 C3 5D B3 D1     jp  i6502FirstLoad
  475 D1:B694 -  -  -  -  
  476 D1:B694 -  -  -  -  
  477 D1:B694 -  -  -  -  ;-----------------------------------------------------------------------------
  478 D1:B694 -  -  -  -  
  479 D1:B694 -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  480 D1:B694 -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  481 D1:B694 -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  482 D1:B694 -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  483 D1:B694 -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  484 D1:B694 -  -  -  -  
  485 D1:B694 -  -  -  -  ;-----------------------------------------------------------------------------
  486 D1:B694 -  -  -  -  
  487 D1:B694 -  -  -  -  ;-----------------------------------------------------------------------------
  488 D1:B694 -  -  -  -  ;-----------------------------------------------------------------------------
  489 D1:B694 -  -  -  -  ;-----------------------------------------------------------------------------
  490 D1:B694 -  -  -  -  ;Instructions by type: Transfer Instructions
  491 D1:B694 -  -  -  -  ;LDA - Load Accumulator with Memory
  492 D1:B694 -  -  -  -  ;    M -> A
  493 D1:B694 -  -  -  -  ;    N	Z	C	I	D	V
  494 D1:B694 -  -  -  -  ;    +	+	-	-	-	-
  495 D1:B694 -  -  -  -  
  496 D1:B694 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  497 D1:B694 -  -  -  -  ;immediate	LDA #oper	A9	2	2
  498 D1:B694 -  -  -  -  inst6502_lda_imm:
  499 D1:B694 7E -  -  -      ld  a,(hl)
  500 D1:B695 DD 77 00 -      ld  (ix+REGA),a
  501 D1:B698 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  502 D1:B6AC ED 33 02 -      ADDCYC(2)
  503 D1:B6AF C3 73 B3 D1     jp i6502NextLoad
  504 D1:B6B3 -  -  -  -  
  505 D1:B6B3 -  -  -  -  ;zeropage	LDA oper	A5	2	3
  506 D1:B6B3 -  -  -  -  inst6502_lda_zp:
  507 D1:B6B3 7E -  -  -      ld  a,(hl)
  508 D1:B6B4 01 00 38 D0     ld  bc,ZEROPAGE
  509 D1:B6B8 81 -  -  -      add a,c
  510 D1:B6B9 4F -  -  -      ld  c,a
  511 D1:B6BA 0A -  -  -      ld  a,(bc)
  512 D1:B6BB DD 77 00 -      ld  (ix+REGA),a
  513 D1:B6BE DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  514 D1:B6D2 ED 33 03 -      ADDCYC(3)
  515 D1:B6D5 C3 73 B3 D1     jp i6502NextLoad
  516 D1:B6D9 -  -  -  -  
  517 D1:B6D9 -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  518 D1:B6D9 -  -  -  -  inst6502_lda_zpx:
  519 D1:B6D9 7E -  -  -      ld  a,(hl)
  520 D1:B6DA 01 00 38 D0     ld  bc,ZEROPAGE
  521 D1:B6DE 81 -  -  -      add a,c
  522 D1:B6DF DD 86 01 -      add a,(ix+REGX)
  523 D1:B6E2 4F -  -  -      ld  c,a
  524 D1:B6E3 0A -  -  -      ld  a,(bc)
  525 D1:B6E4 DD 77 00 -      ld  (ix+REGA),a
  526 D1:B6E7 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  527 D1:B6FB ED 33 04 -      ADDCYC(4)
  528 D1:B6FE C3 73 B3 D1     jp i6502NextLoad
  529 D1:B702 -  -  -  -  
  530 D1:B702 -  -  -  -  ;absolute	LDA oper	AD	3	4
  531 D1:B702 -  -  -  -  inst6502_lda_abs:
  532 D1:B702 CD D9 B5 D1     call subroutine6502_abs_split_start
  533 D1:B706 E5 -  -  -      push hl
  534 D1:B707 50 -  -  -          ld  d,b
  535 D1:B708 79 -  -  -          ld  a,c
  536 D1:B709 0E 08 -  -          ld  c,BASETABLE_STRIDE
  537 D1:B70B ED 4C -  -          mlt bc
  538 D1:B70D 21 00 40 D0         ld  hl,PAGETABLE
  539 D1:B711 09 -  -  -          add hl,bc
  540 D1:B712 ED 27 -  -          ld  hl,(hl)
  541 D1:B714 06 00 -  -          ld  b,0
  542 D1:B716 4F -  -  -          ld  c,a
  543 D1:B717 09 -  -  -          add hl,bc   ;full address
  544 D1:B718 7E -  -  -          READ_ACCESS
  545 D1:B719 DD 77 00 -          ld (ix+REGA),a
  546 D1:B71C DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  547 D1:B730 ED 33 04 -          ADDCYC(4)
  548 D1:B733 E1 -  -  -      pop hl
  549 D1:B734 C3 73 B3 D1     jp i6502NextLoad
  550 D1:B738 -  -  -  -  
  551 D1:B738 -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  552 D1:B738 -  -  -  -  inst6502_lda_absx:
  553 D1:B738 CD D9 B5 D1     call subroutine6502_abs_split_start
  554 D1:B73C E5 -  -  -      push hl
  555 D1:B73D 50 -  -  -          ld  d,b
  556 D1:B73E 79 -  -  -          ld  a,c
  557 D1:B73F 0E 08 -  -          ld  c,BASETABLE_STRIDE
  558 D1:B741 ED 4C -  -          mlt bc
  559 D1:B743 21 00 40 D0         ld  hl,PAGETABLE
  560 D1:B747 09 -  -  -          add hl,bc
  561 D1:B748 ED 27 -  -          ld  hl,(hl)
  562 D1:B74A 06 00 -  -          ld  b,0
  563 D1:B74C DD 86 01 -          add a,(ix+REGX)
  564 D1:B74F 4F -  -  -          ld  c,a
  565 D1:B750 30 04 -  -          jr  nc,+_
  566 D1:B752 FD 23 -  -          ADDCYC(1)
  567 D1:B754 04 -  -  -          inc b
  568 D1:B755 14 -  -  -          inc d
  569 D1:B756 09 -  -  -  _:      add hl,bc   ;full address
  570 D1:B757 7E -  -  -          READ_ACCESS
  571 D1:B758 DD 77 00 -          ld (ix+REGA),a
  572 D1:B75B DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  573 D1:B76F ED 33 04 -          ADDCYC(4)
  574 D1:B772 E1 -  -  -      pop hl
  575 D1:B773 C3 73 B3 D1     jp i6502NextLoad
  576 D1:B777 -  -  -  -  
  577 D1:B777 -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  578 D1:B777 -  -  -  -  inst6502_lda_absy:
  579 D1:B777 CD D9 B5 D1     call subroutine6502_abs_split_start
  580 D1:B77B E5 -  -  -      push hl
  581 D1:B77C 50 -  -  -          ld  d,b
  582 D1:B77D 79 -  -  -          ld  a,c
  583 D1:B77E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  584 D1:B780 ED 4C -  -          mlt bc
  585 D1:B782 21 00 40 D0         ld  hl,PAGETABLE
  586 D1:B786 09 -  -  -          add hl,bc
  587 D1:B787 ED 27 -  -          ld  hl,(hl)
  588 D1:B789 06 00 -  -          ld  b,0
  589 D1:B78B DD 86 02 -          add a,(ix+REGY)
  590 D1:B78E 4F -  -  -          ld  c,a
  591 D1:B78F 30 04 -  -          jr  nc,+_
  592 D1:B791 FD 23 -  -          ADDCYC(1)
  593 D1:B793 04 -  -  -          inc b
  594 D1:B794 14 -  -  -          inc d
  595 D1:B795 09 -  -  -  _:      add hl,bc   ;full address
  596 D1:B796 7E -  -  -          READ_ACCESS
  597 D1:B797 DD 77 00 -          ld (ix+REGA),a
  598 D1:B79A DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  599 D1:B7AE ED 33 04 -          ADDCYC(4)
  600 D1:B7B1 E1 -  -  -      pop hl
  601 D1:B7B2 C3 73 B3 D1     jp i6502NextLoad
  602 D1:B7B6 -  -  -  -  
  603 D1:B7B6 -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  604 D1:B7B6 -  -  -  -  inst6502_lda_indx:
  605 D1:B7B6 E5 -  -  -      push hl
  606 D1:B7B7 7E -  -  -          ld  a,(hl)
  607 D1:B7B8 21 00 38 D0         ld  hl,ZEROPAGE
  608 D1:B7BC 85 -  -  -          add a,L
  609 D1:B7BD DD 86 01 -          add a,(ix+REGX)
  610 D1:B7C0 6F -  -  -          ld  L,a
  611 D1:B7C1 7E -  -  -          ld  a,(hl)
  612 D1:B7C2 2C -  -  -          inc L
  613 D1:B7C3 56 -  -  -          ld  d,(hl)
  614 D1:B7C4 42 -  -  -          ld  b,d
  615 D1:B7C5 0E 08 -  -          ld  c,BASETABLE_STRIDE
  616 D1:B7C7 ED 4C -  -          mlt bc
  617 D1:B7C9 21 00 40 D0         ld  hl,PAGETABLE
  618 D1:B7CD 09 -  -  -          add hl,bc
  619 D1:B7CE ED 27 -  -          ld  hl,(hl)
  620 D1:B7D0 06 00 -  -          ld  b,0
  621 D1:B7D2 4F -  -  -          ld  c,a
  622 D1:B7D3 09 -  -  -          add hl,bc
  623 D1:B7D4 7E -  -  -          READ_ACCESS
  624 D1:B7D5 DD 77 00 -          ld (ix+REGA),a
  625 D1:B7D8 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  626 D1:B7EC ED 33 06 -          ADDCYC(6)
  627 D1:B7EF E1 -  -  -      pop hl
  628 D1:B7F0 C3 73 B3 D1     jp i6502NextLoad
  629 D1:B7F4 -  -  -  -  
  630 D1:B7F4 -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  631 D1:B7F4 -  -  -  -  inst6502_lda_indy:
  632 D1:B7F4 E5 -  -  -      push hl
  633 D1:B7F5 7E -  -  -          ld  a,(hl)
  634 D1:B7F6 21 00 38 D0         ld  hl,ZEROPAGE
  635 D1:B7FA 85 -  -  -          add a,L
  636 D1:B7FB 6F -  -  -          ld  L,a
  637 D1:B7FC 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  638 D1:B7FD 2C -  -  -          inc L
  639 D1:B7FE DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  640 D1:B801 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  641 D1:B802 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  642 D1:B804 FD 23 -  -          ADDCYC(1)
  643 D1:B806 24 -  -  -          inc h
  644 D1:B807 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  645 D1:B808 2E 08 -  -          ld  L,BASETABLE_STRIDE
  646 D1:B80A ED 6C -  -          mlt hl          ;23.
  647 D1:B80C 01 00 40 D0         ld  bc,PAGETABLE
  648 D1:B810 09 -  -  -          add hl,bc
  649 D1:B811 ED 27 -  -          ld  hl,(hl)     ;address get.
  650 D1:B813 01 00 00 00         ld  bc,0
  651 D1:B817 4F -  -  -          ld  c,a
  652 D1:B818 09 -  -  -          add hl,bc       ;Full address get.
  653 D1:B819 7E -  -  -          READ_ACCESS
  654 D1:B81A DD 77 00 -          ld  (ix+REGA),a
  655 D1:B81D DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  656 D1:B831 ED 33 05 -          ADDCYC(5)
  657 D1:B834 E1 -  -  -      pop hl
  658 D1:B835 C3 73 B3 D1     jp i6502NextLoad
  659 D1:B839 -  -  -  -  
  660 D1:B839 -  -  -  -  ;-----------------------------------------------------------------------------
  661 D1:B839 -  -  -  -  ;LDX - Load Index X with Memory
  662 D1:B839 -  -  -  -  ;    M -> X
  663 D1:B839 -  -  -  -  ;    N	Z	C	I	D	V
  664 D1:B839 -  -  -  -  ;    +	+	-	-	-	-
  665 D1:B839 -  -  -  -  
  666 D1:B839 -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  667 D1:B839 -  -  -  -  inst6502_ldx_imm:
  668 D1:B839 7E -  -  -      ld  a,(hl)
  669 D1:B83A DD 77 01 -      ld  (ix+REGX),a
  670 D1:B83D DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  671 D1:B851 ED 33 02 -      ADDCYC(2)
  672 D1:B854 C3 73 B3 D1     jp i6502NextLoad
  673 D1:B858 -  -  -  -  
  674 D1:B858 -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  675 D1:B858 -  -  -  -  inst6502_ldx_zp:
  676 D1:B858 7E -  -  -      ld  a,(hl)
  677 D1:B859 01 00 38 D0     ld  bc,ZEROPAGE
  678 D1:B85D 81 -  -  -      add a,c
  679 D1:B85E 4F -  -  -      ld  c,a
  680 D1:B85F 0A -  -  -      ld  a,(bc)
  681 D1:B860 DD 77 01 -      ld  (ix+REGX),a
  682 D1:B863 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  683 D1:B877 ED 33 03 -      ADDCYC(3)
  684 D1:B87A C3 73 B3 D1     jp i6502NextLoad
  685 D1:B87E -  -  -  -  
  686 D1:B87E -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  687 D1:B87E -  -  -  -  inst6502_ldx_zpy:
  688 D1:B87E 7E -  -  -      ld  a,(hl)
  689 D1:B87F 01 00 38 D0     ld  bc,ZEROPAGE
  690 D1:B883 81 -  -  -      add a,c
  691 D1:B884 DD 86 02 -      add a,(ix+REGY)
  692 D1:B887 4F -  -  -      ld  c,a
  693 D1:B888 0A -  -  -      ld  a,(bc)
  694 D1:B889 DD 77 01 -      ld  (ix+REGX),a
  695 D1:B88C DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  696 D1:B8A0 ED 33 04 -      ADDCYC(4)
  697 D1:B8A3 C3 73 B3 D1     jp i6502NextLoad
  698 D1:B8A7 -  -  -  -  
  699 D1:B8A7 -  -  -  -  ;absolute	LDX oper	AE	3	4  
  700 D1:B8A7 -  -  -  -  inst6502_ldx_abs:
  701 D1:B8A7 CD D9 B5 D1     call subroutine6502_abs_split_start
  702 D1:B8AB E5 -  -  -      push hl
  703 D1:B8AC 50 -  -  -          ld  d,b
  704 D1:B8AD 79 -  -  -          ld  a,c
  705 D1:B8AE 0E 08 -  -          ld  c,BASETABLE_STRIDE
  706 D1:B8B0 ED 4C -  -          mlt bc
  707 D1:B8B2 21 00 40 D0         ld  hl,PAGETABLE
  708 D1:B8B6 09 -  -  -          add hl,bc
  709 D1:B8B7 ED 27 -  -          ld  hl,(hl)
  710 D1:B8B9 06 00 -  -          ld  b,0
  711 D1:B8BB 4F -  -  -          ld  c,a
  712 D1:B8BC 09 -  -  -          add hl,bc   ;full address
  713 D1:B8BD 7E -  -  -          READ_ACCESS
  714 D1:B8BE DD 77 01 -          ld (ix+REGX),a
  715 D1:B8C1 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  716 D1:B8D5 ED 33 04 -          ADDCYC(4)
  717 D1:B8D8 E1 -  -  -      pop hl
  718 D1:B8D9 C3 73 B3 D1     jp i6502NextLoad
  719 D1:B8DD -  -  -  -  
  720 D1:B8DD -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  721 D1:B8DD -  -  -  -  inst6502_ldx_absy:
  722 D1:B8DD CD D9 B5 D1     call subroutine6502_abs_split_start
  723 D1:B8E1 E5 -  -  -      push hl
  724 D1:B8E2 50 -  -  -          ld  d,b
  725 D1:B8E3 79 -  -  -          ld  a,c
  726 D1:B8E4 0E 08 -  -          ld  c,BASETABLE_STRIDE
  727 D1:B8E6 ED 4C -  -          mlt bc
  728 D1:B8E8 21 00 40 D0         ld  hl,PAGETABLE
  729 D1:B8EC 09 -  -  -          add hl,bc
  730 D1:B8ED ED 27 -  -          ld  hl,(hl)
  731 D1:B8EF 06 00 -  -          ld  b,0
  732 D1:B8F1 DD 86 02 -          add a,(ix+REGY)
  733 D1:B8F4 4F -  -  -          ld  c,a
  734 D1:B8F5 30 04 -  -          jr  nc,+_
  735 D1:B8F7 FD 23 -  -          ADDCYC(1)
  736 D1:B8F9 04 -  -  -          inc b
  737 D1:B8FA 14 -  -  -          inc d
  738 D1:B8FB 09 -  -  -  _:      add hl,bc   ;full address
  739 D1:B8FC 7E -  -  -          READ_ACCESS
  740 D1:B8FD DD 77 01 -          ld (ix+REGX),a
  741 D1:B900 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  742 D1:B914 ED 33 04 -          ADDCYC(4)
  743 D1:B917 E1 -  -  -      pop hl
  744 D1:B918 C3 73 B3 D1     jp i6502NextLoad
  745 D1:B91C -  -  -  -  
  746 D1:B91C -  -  -  -  ;-----------------------------------------------------------------------------
  747 D1:B91C -  -  -  -  ;LDY -  Load Index Y with Memory
  748 D1:B91C -  -  -  -  ;    M -> Y
  749 D1:B91C -  -  -  -  ;    N	Z	C	I	D	V
  750 D1:B91C -  -  -  -  ;    +	+	-	-	-	-
  751 D1:B91C -  -  -  -  
  752 D1:B91C -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  753 D1:B91C -  -  -  -  inst6502_ldy_imm:
  754 D1:B91C 7E -  -  -      ld  a,(hl)
  755 D1:B91D DD 77 02 -      ld  (ix+REGY),a
  756 D1:B920 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  757 D1:B934 ED 33 02 -      ADDCYC(2)
  758 D1:B937 C3 73 B3 D1     jp i6502NextLoad
  759 D1:B93B -  -  -  -  
  760 D1:B93B -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  761 D1:B93B -  -  -  -  inst6502_ldy_zp:
  762 D1:B93B 7E -  -  -      ld  a,(hl)
  763 D1:B93C 01 00 38 D0     ld  bc,ZEROPAGE
  764 D1:B940 81 -  -  -      add a,c
  765 D1:B941 4F -  -  -      ld  c,a
  766 D1:B942 0A -  -  -      ld  a,(bc)
  767 D1:B943 DD 77 02 -      ld  (ix+REGY),a
  768 D1:B946 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  769 D1:B95A ED 33 03 -      ADDCYC(3)
  770 D1:B95D C3 73 B3 D1     jp i6502NextLoad
  771 D1:B961 -  -  -  -  
  772 D1:B961 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  773 D1:B961 -  -  -  -  inst6502_ldy_zpx:
  774 D1:B961 7E -  -  -      ld  a,(hl)
  775 D1:B962 01 00 38 D0     ld  bc,ZEROPAGE
  776 D1:B966 81 -  -  -      add a,c
  777 D1:B967 DD 86 01 -      add a,(ix+REGX)
  778 D1:B96A 4F -  -  -      ld  c,a
  779 D1:B96B 0A -  -  -      ld  a,(bc)
  780 D1:B96C DD 77 02 -      ld  (ix+REGY),a
  781 D1:B96F DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  782 D1:B983 ED 33 04 -      ADDCYC(4)
  783 D1:B986 C3 73 B3 D1     jp i6502NextLoad
  784 D1:B98A -  -  -  -  
  785 D1:B98A -  -  -  -  ;absolute	LDY oper	AC	3	4  
  786 D1:B98A -  -  -  -  inst6502_ldy_abs:
  787 D1:B98A CD D9 B5 D1     call subroutine6502_abs_split_start
  788 D1:B98E E5 -  -  -      push hl
  789 D1:B98F 50 -  -  -          ld  d,b
  790 D1:B990 79 -  -  -          ld  a,c
  791 D1:B991 0E 08 -  -          ld  c,BASETABLE_STRIDE
  792 D1:B993 ED 4C -  -          mlt bc
  793 D1:B995 21 00 40 D0         ld  hl,PAGETABLE
  794 D1:B999 09 -  -  -          add hl,bc
  795 D1:B99A ED 27 -  -          ld  hl,(hl)
  796 D1:B99C 06 00 -  -          ld  b,0
  797 D1:B99E 4F -  -  -          ld  c,a
  798 D1:B99F 09 -  -  -          add hl,bc   ;full address
  799 D1:B9A0 7E -  -  -          READ_ACCESS
  800 D1:B9A1 DD 77 02 -          ld (ix+REGY),a
  801 D1:B9A4 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  802 D1:B9B8 ED 33 04 -          ADDCYC(4)
  803 D1:B9BB E1 -  -  -      pop hl
  804 D1:B9BC C3 73 B3 D1     jp i6502NextLoad
  805 D1:B9C0 -  -  -  -  
  806 D1:B9C0 -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  807 D1:B9C0 -  -  -  -  inst6502_ldy_absx:
  808 D1:B9C0 CD D9 B5 D1     call subroutine6502_abs_split_start
  809 D1:B9C4 E5 -  -  -      push hl
  810 D1:B9C5 50 -  -  -          ld  d,b
  811 D1:B9C6 79 -  -  -          ld  a,c
  812 D1:B9C7 0E 08 -  -          ld  c,BASETABLE_STRIDE
  813 D1:B9C9 ED 4C -  -          mlt bc
  814 D1:B9CB 21 00 40 D0         ld  hl,PAGETABLE
  815 D1:B9CF 09 -  -  -          add hl,bc
  816 D1:B9D0 ED 27 -  -          ld  hl,(hl)
  817 D1:B9D2 06 00 -  -          ld  b,0
  818 D1:B9D4 DD 86 01 -          add a,(ix+REGX)
  819 D1:B9D7 4F -  -  -          ld  c,a
  820 D1:B9D8 30 04 -  -          jr  nc,+_
  821 D1:B9DA FD 23 -  -          ADDCYC(1)
  822 D1:B9DC 04 -  -  -          inc b
  823 D1:B9DD 14 -  -  -          inc d
  824 D1:B9DE 09 -  -  -  _:      add hl,bc   ;full address
  825 D1:B9DF 7E -  -  -          READ_ACCESS
  826 D1:B9E0 DD 77 02 -          ld (ix+REGY),a
  827 D1:B9E3 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  828 D1:B9F7 ED 33 04 -          ADDCYC(4)
  829 D1:B9FA E1 -  -  -      pop hl
  830 D1:B9FB C3 73 B3 D1     jp i6502NextLoad
  831 D1:B9FF -  -  -  -  
  832 D1:B9FF -  -  -  -  ;-----------------------------------------------------------------------------
  833 D1:B9FF -  -  -  -  ;STA - Store Accumulator in Memory
  834 D1:B9FF -  -  -  -  ;    A -> M
  835 D1:B9FF -  -  -  -  ;    N	Z	C	I	D	V
  836 D1:B9FF -  -  -  -  ;    -	-	-	-	-	-
  837 D1:B9FF -  -  -  -  
  838 D1:B9FF -  -  -  -  ;zeropage	STA oper	85	2	3  
  839 D1:B9FF -  -  -  -  inst6502_sta_zp:
  840 D1:B9FF 7E -  -  -      ld  a,(hl)
  841 D1:BA00 01 00 38 D0     ld  bc,ZEROPAGE
  842 D1:BA04 81 -  -  -      add a,c
  843 D1:BA05 4F -  -  -      ld  c,a
  844 D1:BA06 DD 7E 00 -      ld  a,(ix+REGA)
  845 D1:BA09 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  846 D1:BA0A ED 33 03 -      ADDCYC(3)
  847 D1:BA0D C3 73 B3 D1     jp i6502NextLoad
  848 D1:BA11 -  -  -  -  
  849 D1:BA11 -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  850 D1:BA11 -  -  -  -  inst6502_sta_zpx:
  851 D1:BA11 7E -  -  -      ld  a,(hl)
  852 D1:BA12 01 00 38 D0     ld  bc,ZEROPAGE
  853 D1:BA16 81 -  -  -      add a,c
  854 D1:BA17 DD 86 01 -      add a,(ix+REGX)
  855 D1:BA1A 4F -  -  -      ld  c,a
  856 D1:BA1B DD 7E 00 -      ld  a,(ix+REGA)
  857 D1:BA1E 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  858 D1:BA1F ED 33 04 -      ADDCYC(4)
  859 D1:BA22 C3 73 B3 D1     jp i6502NextLoad
  860 D1:BA26 -  -  -  -  
  861 D1:BA26 -  -  -  -  ;absolute	STA oper	8D	3	4
  862 D1:BA26 -  -  -  -  inst6502_sta_abs:
  863 D1:BA26 CD D9 B5 D1     call subroutine6502_abs_split_start
  864 D1:BA2A E5 -  -  -      push hl
  865 D1:BA2B 50 -  -  -          ld  d,b
  866 D1:BA2C 79 -  -  -          ld  a,c
  867 D1:BA2D 0E 08 -  -          ld  c,BASETABLE_STRIDE
  868 D1:BA2F ED 4C -  -          mlt bc
  869 D1:BA31 21 00 40 D0         ld  hl,PAGETABLE
  870 D1:BA35 09 -  -  -          add hl,bc
  871 D1:BA36 ED 27 -  -          ld  hl,(hl)
  872 D1:BA38 06 00 -  -          ld  b,0
  873 D1:BA3A 4F -  -  -          ld  c,a
  874 D1:BA3B 09 -  -  -          add hl,bc   ;full address
  875 D1:BA3C DD 46 00 -          ld  b,(ix+REGA)
  876 D1:BA3F 70 -  -  -          WRITE_ACCESS
  877 D1:BA40 ED 33 04 -          ADDCYC(4)
  878 D1:BA43 E1 -  -  -      pop hl
  879 D1:BA44 C3 73 B3 D1     jp i6502NextLoad
  880 D1:BA48 -  -  -  -  
  881 D1:BA48 -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  882 D1:BA48 -  -  -  -  inst6502_sta_absx:
  883 D1:BA48 CD D9 B5 D1     call subroutine6502_abs_split_start
  884 D1:BA4C E5 -  -  -      push hl
  885 D1:BA4D 50 -  -  -          ld  d,b
  886 D1:BA4E 79 -  -  -          ld  a,c
  887 D1:BA4F 0E 08 -  -          ld  c,BASETABLE_STRIDE
  888 D1:BA51 ED 4C -  -          mlt bc
  889 D1:BA53 21 00 40 D0         ld  hl,PAGETABLE
  890 D1:BA57 09 -  -  -          add hl,bc
  891 D1:BA58 ED 27 -  -          ld  hl,(hl)
  892 D1:BA5A 06 00 -  -          ld  b,0
  893 D1:BA5C DD 86 01 -          add a,(ix+REGX)
  894 D1:BA5F 4F -  -  -          ld  c,a
  895 D1:BA60 30 02 -  -          jr  nc,+_
  896 D1:BA62 04 -  -  -          inc b
  897 D1:BA63 14 -  -  -          inc d
  898 D1:BA64 09 -  -  -  _:      add hl,bc   ;full address
  899 D1:BA65 DD 46 00 -          ld  b,(ix+REGA)
  900 D1:BA68 70 -  -  -          WRITE_ACCESS
  901 D1:BA69 ED 33 05 -          ADDCYC(5)
  902 D1:BA6C E1 -  -  -      pop hl
  903 D1:BA6D C3 73 B3 D1     jp i6502NextLoad
  904 D1:BA71 -  -  -  -  
  905 D1:BA71 -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  906 D1:BA71 -  -  -  -  inst6502_sta_absy:
  907 D1:BA71 CD D9 B5 D1     call subroutine6502_abs_split_start
  908 D1:BA75 E5 -  -  -      push hl
  909 D1:BA76 50 -  -  -          ld  d,b
  910 D1:BA77 79 -  -  -          ld  a,c
  911 D1:BA78 0E 08 -  -          ld  c,BASETABLE_STRIDE
  912 D1:BA7A ED 4C -  -          mlt bc
  913 D1:BA7C 21 00 40 D0         ld  hl,PAGETABLE
  914 D1:BA80 09 -  -  -          add hl,bc
  915 D1:BA81 ED 27 -  -          ld  hl,(hl)
  916 D1:BA83 06 00 -  -          ld  b,0
  917 D1:BA85 DD 86 02 -          add a,(ix+REGY)
  918 D1:BA88 4F -  -  -          ld  c,a
  919 D1:BA89 30 02 -  -          jr  nc,+_
  920 D1:BA8B 04 -  -  -          inc b
  921 D1:BA8C 14 -  -  -          inc d
  922 D1:BA8D 09 -  -  -  _:      add hl,bc   ;full address
  923 D1:BA8E DD 46 00 -          ld  b,(ix+REGA)
  924 D1:BA91 70 -  -  -          WRITE_ACCESS
  925 D1:BA92 ED 33 05 -          ADDCYC(5)
  926 D1:BA95 E1 -  -  -      pop hl
  927 D1:BA96 C3 73 B3 D1     jp i6502NextLoad
  928 D1:BA9A -  -  -  -  
  929 D1:BA9A -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  930 D1:BA9A -  -  -  -  inst6502_sta_indx:
  931 D1:BA9A E5 -  -  -      push hl
  932 D1:BA9B 7E -  -  -          ld  a,(hl)
  933 D1:BA9C 21 00 38 D0         ld  hl,ZEROPAGE
  934 D1:BAA0 85 -  -  -          add a,L
  935 D1:BAA1 DD 86 01 -          add a,(ix+REGX)
  936 D1:BAA4 6F -  -  -          ld  L,a
  937 D1:BAA5 7E -  -  -          ld  a,(hl)
  938 D1:BAA6 2C -  -  -          inc L
  939 D1:BAA7 56 -  -  -          ld  d,(hl)
  940 D1:BAA8 42 -  -  -          ld  b,d
  941 D1:BAA9 0E 08 -  -          ld  c,BASETABLE_STRIDE
  942 D1:BAAB ED 4C -  -          mlt bc
  943 D1:BAAD 21 00 40 D0         ld  hl,PAGETABLE
  944 D1:BAB1 09 -  -  -          add hl,bc
  945 D1:BAB2 ED 27 -  -          ld  hl,(hl)
  946 D1:BAB4 06 00 -  -          ld  b,0
  947 D1:BAB6 4F -  -  -          ld  c,a
  948 D1:BAB7 09 -  -  -          add hl,bc
  949 D1:BAB8 DD 46 00 -          ld  b,(ix+REGA)
  950 D1:BABB 70 -  -  -          WRITE_ACCESS
  951 D1:BABC ED 33 06 -          ADDCYC(6)
  952 D1:BABF E1 -  -  -      pop hl
  953 D1:BAC0 C3 73 B3 D1     jp i6502NextLoad
  954 D1:BAC4 -  -  -  -  
  955 D1:BAC4 -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  956 D1:BAC4 -  -  -  -  inst6502_sta_indy:
  957 D1:BAC4 E5 -  -  -      push hl
  958 D1:BAC5 7E -  -  -          ld  a,(hl)
  959 D1:BAC6 21 00 38 D0         ld  hl,ZEROPAGE
  960 D1:BACA 85 -  -  -          add a,L
  961 D1:BACB 6F -  -  -          ld  L,a
  962 D1:BACC 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  963 D1:BACD 2C -  -  -          inc L
  964 D1:BACE DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  965 D1:BAD1 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  966 D1:BAD2 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  967 D1:BAD4 24 -  -  -          inc h
  968 D1:BAD5 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  969 D1:BAD6 2E 08 -  -          ld  L,BASETABLE_STRIDE
  970 D1:BAD8 ED 6C -  -          mlt hl          ;23.
  971 D1:BADA 01 00 40 D0         ld  bc,PAGETABLE
  972 D1:BADE 09 -  -  -          add hl,bc
  973 D1:BADF ED 27 -  -          ld  hl,(hl)     ;address get.
  974 D1:BAE1 01 00 00 00         ld  bc,0
  975 D1:BAE5 4F -  -  -          ld  c,a
  976 D1:BAE6 09 -  -  -          add hl,bc       ;Full address get.
  977 D1:BAE7 DD 46 00 -          ld  b,(ix+REGA)
  978 D1:BAEA 70 -  -  -          WRITE_ACCESS
  979 D1:BAEB ED 33 06 -          ADDCYC(6)
  980 D1:BAEE E1 -  -  -      pop hl
  981 D1:BAEF C3 73 B3 D1     jp i6502NextLoad
  982 D1:BAF3 -  -  -  -  
  983 D1:BAF3 -  -  -  -  ;-----------------------------------------------------------------------------
  984 D1:BAF3 -  -  -  -  ;STX - Store Index X in Memory
  985 D1:BAF3 -  -  -  -  ;    X -> M
  986 D1:BAF3 -  -  -  -  ;    N	Z	C	I	D	V
  987 D1:BAF3 -  -  -  -  ;    -	-	-	-	-	-
  988 D1:BAF3 -  -  -  -  
  989 D1:BAF3 -  -  -  -  ;zeropage	STX oper	86	2	3  
  990 D1:BAF3 -  -  -  -  inst6502_stx_zp:
  991 D1:BAF3 7E -  -  -      ld  a,(hl)
  992 D1:BAF4 01 00 38 D0     ld  bc,ZEROPAGE
  993 D1:BAF8 81 -  -  -      add a,c
  994 D1:BAF9 4F -  -  -      ld  c,a
  995 D1:BAFA DD 7E 01 -      ld  a,(ix+REGX)
  996 D1:BAFD 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  997 D1:BAFE ED 33 03 -      ADDCYC(3)
  998 D1:BB01 C3 73 B3 D1     jp i6502NextLoad
  999 D1:BB05 -  -  -  -  
 1000 D1:BB05 -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
 1001 D1:BB05 -  -  -  -  inst6502_stx_zpy:
 1002 D1:BB05 7E -  -  -      ld  a,(hl)
 1003 D1:BB06 01 00 38 D0     ld  bc,ZEROPAGE
 1004 D1:BB0A 81 -  -  -      add a,c
 1005 D1:BB0B DD 86 02 -      add a,(ix+REGY)
 1006 D1:BB0E 4F -  -  -      ld  c,a
 1007 D1:BB0F DD 7E 01 -      ld  a,(ix+REGX)
 1008 D1:BB12 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1009 D1:BB13 ED 33 04 -      ADDCYC(4)
 1010 D1:BB16 C3 73 B3 D1     jp i6502NextLoad
 1011 D1:BB1A -  -  -  -  
 1012 D1:BB1A -  -  -  -  ;absolute	STX oper	8E	3	4  
 1013 D1:BB1A -  -  -  -  inst6502_stx_abs:
 1014 D1:BB1A CD D9 B5 D1     call subroutine6502_abs_split_start
 1015 D1:BB1E E5 -  -  -      push hl
 1016 D1:BB1F 50 -  -  -          ld  d,b
 1017 D1:BB20 79 -  -  -          ld  a,c
 1018 D1:BB21 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1019 D1:BB23 ED 4C -  -          mlt bc
 1020 D1:BB25 21 00 40 D0         ld  hl,PAGETABLE
 1021 D1:BB29 09 -  -  -          add hl,bc
 1022 D1:BB2A ED 27 -  -          ld  hl,(hl)
 1023 D1:BB2C 06 00 -  -          ld  b,0
 1024 D1:BB2E 4F -  -  -          ld  c,a
 1025 D1:BB2F 09 -  -  -          add hl,bc   ;full address
 1026 D1:BB30 DD 46 01 -          ld  b,(ix+REGX)
 1027 D1:BB33 70 -  -  -          WRITE_ACCESS
 1028 D1:BB34 ED 33 04 -          ADDCYC(4)
 1029 D1:BB37 E1 -  -  -      pop hl
 1030 D1:BB38 C3 73 B3 D1     jp i6502NextLoad
 1031 D1:BB3C -  -  -  -  
 1032 D1:BB3C -  -  -  -  ;-----------------------------------------------------------------------------
 1033 D1:BB3C -  -  -  -  ;STY - Store Index Y in Memory
 1034 D1:BB3C -  -  -  -  ;    Y -> M
 1035 D1:BB3C -  -  -  -  ;    N	Z	C	I	D	V
 1036 D1:BB3C -  -  -  -  ;    -	-	-	-	-	-
 1037 D1:BB3C -  -  -  -  
 1038 D1:BB3C -  -  -  -  ;zeropage	STY oper	84	2	3  
 1039 D1:BB3C -  -  -  -  inst6502_sty_zp:
 1040 D1:BB3C 7E -  -  -      ld  a,(hl)
 1041 D1:BB3D 01 00 38 D0     ld  bc,ZEROPAGE
 1042 D1:BB41 81 -  -  -      add a,c
 1043 D1:BB42 4F -  -  -      ld  c,a
 1044 D1:BB43 DD 7E 02 -      ld  a,(ix+REGY)
 1045 D1:BB46 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1046 D1:BB47 ED 33 03 -      ADDCYC(3)
 1047 D1:BB4A C3 73 B3 D1     jp i6502NextLoad
 1048 D1:BB4E -  -  -  -  
 1049 D1:BB4E -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1050 D1:BB4E -  -  -  -  inst6502_sty_zpx:
 1051 D1:BB4E 7E -  -  -      ld  a,(hl)
 1052 D1:BB4F 01 00 38 D0     ld  bc,ZEROPAGE
 1053 D1:BB53 81 -  -  -      add a,c
 1054 D1:BB54 DD 86 01 -      add a,(ix+REGX)
 1055 D1:BB57 4F -  -  -      ld  c,a
 1056 D1:BB58 DD 7E 02 -      ld  a,(ix+REGY)
 1057 D1:BB5B 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1058 D1:BB5C ED 33 04 -      ADDCYC(4)
 1059 D1:BB5F C3 73 B3 D1     jp i6502NextLoad
 1060 D1:BB63 -  -  -  -  
 1061 D1:BB63 -  -  -  -  ;absolute	STY oper	8C	3	4  
 1062 D1:BB63 -  -  -  -  inst6502_sty_abs:
 1063 D1:BB63 CD D9 B5 D1     call subroutine6502_abs_split_start
 1064 D1:BB67 E5 -  -  -      push hl
 1065 D1:BB68 50 -  -  -          ld  d,b
 1066 D1:BB69 79 -  -  -          ld  a,c
 1067 D1:BB6A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1068 D1:BB6C ED 4C -  -          mlt bc
 1069 D1:BB6E 21 00 40 D0         ld  hl,PAGETABLE
 1070 D1:BB72 09 -  -  -          add hl,bc
 1071 D1:BB73 ED 27 -  -          ld  hl,(hl)
 1072 D1:BB75 06 00 -  -          ld  b,0
 1073 D1:BB77 4F -  -  -          ld  c,a
 1074 D1:BB78 09 -  -  -          add hl,bc   ;full address
 1075 D1:BB79 DD 46 02 -          ld  b,(ix+REGY)
 1076 D1:BB7C 70 -  -  -          WRITE_ACCESS
 1077 D1:BB7D ED 33 04 -          ADDCYC(4)
 1078 D1:BB80 E1 -  -  -      pop hl
 1079 D1:BB81 C3 73 B3 D1     jp i6502NextLoad
 1080 D1:BB85 -  -  -  -  
 1081 D1:BB85 -  -  -  -  ;-----------------------------------------------------------------------------
 1082 D1:BB85 -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1083 D1:BB85 -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:BB85 -  -  -  -  ;+	+	-	-	-	-
 1085 D1:BB85 -  -  -  -  ;implied	TAX	AA	1	2
 1086 D1:BB85 -  -  -  -  inst6502_tax:
 1087 D1:BB85 DD 7E 00 -      ld  a,(ix+REGA)
 1088 D1:BB88 DD 77 01 -      ld  (ix+REGX),a
 1089 D1:BB8B DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1090 D1:BB9F ED 33 02 -      ADDCYC(2)
 1091 D1:BBA2 C3 8C B3 D1     jp i6502FinishLoad
 1092 D1:BBA6 -  -  -  -  
 1093 D1:BBA6 -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1094 D1:BBA6 -  -  -  -  ;N	Z	C	I	D	V
 1095 D1:BBA6 -  -  -  -  ;+	+	-	-	-	-
 1096 D1:BBA6 -  -  -  -  ;implied	TAY	A8	1	2
 1097 D1:BBA6 -  -  -  -  inst6502_tay:
 1098 D1:BBA6 DD 7E 00 -      ld  a,(ix+REGA)
 1099 D1:BBA9 DD 77 02 -      ld  (ix+REGY),a
 1100 D1:BBAC DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1101 D1:BBC0 ED 33 02 -      ADDCYC(2)
 1102 D1:BBC3 C3 8C B3 D1     jp i6502FinishLoad
 1103 D1:BBC7 -  -  -  -  
 1104 D1:BBC7 -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1105 D1:BBC7 -  -  -  -  ;N	Z	C	I	D	V
 1106 D1:BBC7 -  -  -  -  ;+	+	-	-	-	-
 1107 D1:BBC7 -  -  -  -  ;implied	TSX	BA	1	2
 1108 D1:BBC7 -  -  -  -  inst6502_tsx:
 1109 D1:BBC7 DD 7E 03 -      ld  a,(ix+REGSP)
 1110 D1:BBCA DD 77 01 -      ld  (ix+REGX),a
 1111 D1:BBCD DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1112 D1:BBE1 ED 33 02 -      ADDCYC(2)
 1113 D1:BBE4 C3 8C B3 D1     jp i6502FinishLoad
 1114 D1:BBE8 -  -  -  -  
 1115 D1:BBE8 -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1116 D1:BBE8 -  -  -  -  ;N	Z	C	I	D	V
 1117 D1:BBE8 -  -  -  -  ;+	+	-	-	-	-
 1118 D1:BBE8 -  -  -  -  ;implied	TXA	8A	1	2
 1119 D1:BBE8 -  -  -  -  inst6502_txa:
 1120 D1:BBE8 DD 7E 01 -      ld  a,(ix+REGX)
 1121 D1:BBEB DD 77 00 -      ld  (ix+REGA),a
 1122 D1:BBEE DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1123 D1:BC02 ED 33 02 -      ADDCYC(2)
 1124 D1:BC05 C3 8C B3 D1     jp i6502FinishLoad
 1125 D1:BC09 -  -  -  -  
 1126 D1:BC09 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1127 D1:BC09 -  -  -  -  ;N	Z	C	I	D	V
 1128 D1:BC09 -  -  -  -  ;-	-	-	-	-	-
 1129 D1:BC09 -  -  -  -  ;implied	TXS	9A	1	2
 1130 D1:BC09 -  -  -  -  inst6502_txs:
 1131 D1:BC09 DD 7E 01 -      ld  a,(ix+REGX)
 1132 D1:BC0C DD 77 03 -      ld  (ix+REGSP),a
 1133 D1:BC0F ED 33 02 -      ADDCYC(2)
 1134 D1:BC12 C3 8C B3 D1     jp i6502FinishLoad
 1135 D1:BC16 -  -  -  -  
 1136 D1:BC16 -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1137 D1:BC16 -  -  -  -  ;N	Z	C	I	D	V
 1138 D1:BC16 -  -  -  -  ;+	+	-	-	-	-
 1139 D1:BC16 -  -  -  -  ;implied	TYA	98	1	2
 1140 D1:BC16 -  -  -  -  inst6502_tya:
 1141 D1:BC16 DD 7E 02 -      ld  a,(ix+REGY)
 1142 D1:BC19 DD 77 00 -      ld  (ix+REGA),a
 1143 D1:BC1C DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1144 D1:BC30 ED 33 02 -      ADDCYC(2)
 1145 D1:BC33 C3 8C B3 D1     jp i6502FinishLoad
 1146 D1:BC37 -  -  -  -  
 1147 D1:BC37 -  -  -  -  ;-----------------------------------------------------------------------------
 1148 D1:BC37 -  -  -  -  ;-----------------------------------------------------------------------------
 1149 D1:BC37 -  -  -  -  ;-----------------------------------------------------------------------------
 1150 D1:BC37 -  -  -  -  ;Instructions by type: Stack Instructions
 1151 D1:BC37 -  -  -  -  ;PHA - Push Accumulator on Stack
 1152 D1:BC37 -  -  -  -  ;    push A
 1153 D1:BC37 -  -  -  -  ;    N	Z	C	I	D	V
 1154 D1:BC37 -  -  -  -  ;    -	-	-	-	-	-
 1155 D1:BC37 -  -  -  -  ;implied	PHA	48	1	3 
 1156 D1:BC37 -  -  -  -  inst6502_pha:
 1157 D1:BC37 DD 7E 00 -      ld  a,(ix+REGA)
 1158 D1:BC3A 01 00 39 D0     ld  bc,STACKBASE
 1159 D1:BC3E DD 4E 03 -      ld  c,(ix+REGSP)
 1160 D1:BC41 02 -  -  -      ld  (bc),a
 1161 D1:BC42 0D -  -  -      dec c
 1162 D1:BC43 DD 71 03 -      ld  (ix+REGSP),c
 1163 D1:BC46 C3 8C B3 D1     jp i6502FinishLoad
 1164 D1:BC4A -  -  -  -  
 1165 D1:BC4A -  -  -  -  ;PHP - Push Processor Status on Stack
 1166 D1:BC4A -  -  -  -  ;    The status register will be pushed with the break
 1167 D1:BC4A -  -  -  -  ;    flag and bit 5 set to 1.
 1168 D1:BC4A -  -  -  -  ;    push SR
 1169 D1:BC4A -  -  -  -  ;    N	Z	C	I	D	V
 1170 D1:BC4A -  -  -  -  ;    -	-	-	-	-	-
 1171 D1:BC4A -  -  -  -  ;implied	PHP	08	1	3  
 1172 D1:BC4A -  -  -  -  inst6502_php:
 1173 D1:BC4A DD 7E 04 -      ld  a,(ix+REGSR)
 1174 D1:BC4D F6 30 -  -      or  a,%00110000
 1175 D1:BC4F 01 00 39 D0     ld  bc,STACKBASE
 1176 D1:BC53 DD 4E 03 -      ld  c,(ix+REGSP)
 1177 D1:BC56 02 -  -  -      ld  (bc),a
 1178 D1:BC57 0D -  -  -      dec c
 1179 D1:BC58 DD 71 03 -      ld  (ix+REGSP),c
 1180 D1:BC5B C3 8C B3 D1     jp i6502FinishLoad
 1181 D1:BC5F -  -  -  -  
 1182 D1:BC5F -  -  -  -  
 1183 D1:BC5F -  -  -  -  
 1184 D1:BC5F -  -  -  -  ;PLA - Pull Accumulator from Stack
 1185 D1:BC5F -  -  -  -  ;    pull A
 1186 D1:BC5F -  -  -  -  ;    N	Z	C	I	D	V
 1187 D1:BC5F -  -  -  -  ;    +	+	-	-	-	-
 1188 D1:BC5F -  -  -  -  ;implied	PLA	68	1	4  
 1189 D1:BC5F -  -  -  -  inst6502_pla:
 1190 D1:BC5F 01 00 39 D0     ld  bc,STACKBASE
 1191 D1:BC63 DD 4E 03 -      ld  c,(ix+REGSP)
 1192 D1:BC66 0C -  -  -      inc c
 1193 D1:BC67 0A -  -  -      ld  a,(bc)
 1194 D1:BC68 DD 71 03 -      ld  (ix+REGSP),c
 1195 D1:BC6B DD 77 00 -      ld  (ix+REGA),a
 1196 D1:BC6E DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1197 D1:BC82 C3 8C B3 D1     jp i6502FinishLoad
 1198 D1:BC86 -  -  -  -  
 1199 D1:BC86 -  -  -  -  ;PLP - Pull Processor Status from Stack
 1200 D1:BC86 -  -  -  -  ;    The status register will be pulled with the break
 1201 D1:BC86 -  -  -  -  ;    flag and bit 5 ignored.
 1202 D1:BC86 -  -  -  -  ;    pull SR
 1203 D1:BC86 -  -  -  -  ;    N	Z	C	I	D	V
 1204 D1:BC86 -  -  -  -  ;    from stack
 1205 D1:BC86 -  -  -  -  ;implied	PLP	28	1	4  
 1206 D1:BC86 -  -  -  -  inst6502_plp:
 1207 D1:BC86 01 00 39 D0     ld  bc,STACKBASE
 1208 D1:BC8A DD 4E 03 -      ld  c,(ix+REGSP)
 1209 D1:BC8D 0C -  -  -      inc c
 1210 D1:BC8E 0A -  -  -      ld  a,(bc)
 1211 D1:BC8F DD 71 03 -      ld  (ix+REGSP),c
 1212 D1:BC92 DD 46 04 -      ld  b,(ix+REGSR)
 1213 D1:BC95 A8 -  -  -      xor a,b
 1214 D1:BC96 E6 CF -  -      and a,%11001111
 1215 D1:BC98 A8 -  -  -      xor a,b
 1216 D1:BC99 DD 77 04 -      ld  (ix+REGSR),a
 1217 D1:BC9C C3 8C B3 D1     jp i6502FinishLoad
 1218 D1:BCA0 -  -  -  -  
 1219 D1:BCA0 -  -  -  -  
 1220 D1:BCA0 -  -  -  -  ;-----------------------------------------------------------------------------
 1221 D1:BCA0 -  -  -  -  ;-----------------------------------------------------------------------------
 1222 D1:BCA0 -  -  -  -  ;-----------------------------------------------------------------------------
 1223 D1:BCA0 -  -  -  -  ;Instructions by type: Decrements and Increments
 1224 D1:BCA0 -  -  -  -  
 1225 D1:BCA0 -  -  -  -  ;DEC -  Decrement Memory by One
 1226 D1:BCA0 -  -  -  -  ;    M - 1 -> M
 1227 D1:BCA0 -  -  -  -  ;    N	Z	C	I	D	V
 1228 D1:BCA0 -  -  -  -  ;    +	+	-	-	-	-
 1229 D1:BCA0 -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1230 D1:BCA0 -  -  -  -  
 1231 D1:BCA0 -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1232 D1:BCA0 -  -  -  -  inst6502_dec_zp:
 1233 D1:BCA0 7E -  -  -      ld  a,(hl)
 1234 D1:BCA1 01 00 38 D0     ld  bc,ZEROPAGE
 1235 D1:BCA5 81 -  -  -      add a,c
 1236 D1:BCA6 4F -  -  -      ld  c,a
 1237 D1:BCA7 0A -  -  -      ld  a,(bc)
 1238 D1:BCA8 3D -  -  -      dec a
 1239 D1:BCA9 02 -  -  -      ld  (bc),a
 1240 D1:BCAA DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1241 D1:BCBE ED 33 05 -      ADDCYC(5)
 1242 D1:BCC1 C3 73 B3 D1     jp i6502NextLoad
 1243 D1:BCC5 -  -  -  -  
 1244 D1:BCC5 -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1245 D1:BCC5 -  -  -  -  inst6502_dec_zpx:
 1246 D1:BCC5 7E -  -  -      ld  a,(hl)
 1247 D1:BCC6 01 00 38 D0     ld  bc,ZEROPAGE
 1248 D1:BCCA 81 -  -  -      add a,c
 1249 D1:BCCB DD 86 01 -      add a,(ix+REGX)
 1250 D1:BCCE 4F -  -  -      ld  c,a
 1251 D1:BCCF 0A -  -  -      ld  a,(bc)
 1252 D1:BCD0 3D -  -  -      dec a
 1253 D1:BCD1 02 -  -  -      ld  (bc),a
 1254 D1:BCD2 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1255 D1:BCE6 ED 33 06 -      ADDCYC(6)
 1256 D1:BCE9 C3 73 B3 D1     jp i6502NextLoad
 1257 D1:BCED -  -  -  -  
 1258 D1:BCED -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1259 D1:BCED -  -  -  -  inst6502_dec_abs:
 1260 D1:BCED CD D9 B5 D1     call subroutine6502_abs_split_start
 1261 D1:BCF1 E5 -  -  -      push hl
 1262 D1:BCF2 50 -  -  -          ld  d,b
 1263 D1:BCF3 79 -  -  -          ld  a,c
 1264 D1:BCF4 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1265 D1:BCF6 ED 4C -  -          mlt bc
 1266 D1:BCF8 21 00 40 D0         ld  hl,PAGETABLE
 1267 D1:BCFC 09 -  -  -          add hl,bc
 1268 D1:BCFD ED 27 -  -          ld  hl,(hl)
 1269 D1:BCFF 06 00 -  -          ld  b,0
 1270 D1:BD01 4F -  -  -          ld  c,a
 1271 D1:BD02 09 -  -  -          add hl,bc   ;full address
 1272 D1:BD03 7E -  -  -          READ_ACCESS
 1273 D1:BD04 3D -  -  -          dec a
 1274 D1:BD05 47 -  -  -          ld  b,a
 1275 D1:BD06 -  -  -  -          ;
 1276 D1:BD06 DD 7E 04 -          ld  a,(ix+REGSR)
 1277 D1:BD09 CB 8F -  -          res SF_ZERO,a
 1278 D1:BD0B 20 02 -  -          jr  nz,$+4
 1279 D1:BD0D CB CF -  -          set SF_ZERO,a
 1280 D1:BD0F CB BF -  -          res SF_NEG,a
 1281 D1:BD11 FA 17 BD D1         jp  m,$+6
 1282 D1:BD15 CB FF -  -          set SF_NEG,a
 1283 D1:BD17 DD 77 04 -          ld  (ix+REGSR),a
 1284 D1:BD1A -  -  -  -          ;
 1285 D1:BD1A 70 -  -  -          WRITE_ACCESS
 1286 D1:BD1B ED 33 06 -          ADDCYC(6)
 1287 D1:BD1E E1 -  -  -      pop hl
 1288 D1:BD1F C3 73 B3 D1     jp i6502NextLoad
 1289 D1:BD23 -  -  -  -  
 1290 D1:BD23 -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1291 D1:BD23 -  -  -  -  inst6502_dec_absx:
 1292 D1:BD23 CD D9 B5 D1     call subroutine6502_abs_split_start
 1293 D1:BD27 E5 -  -  -      push hl
 1294 D1:BD28 50 -  -  -          ld  d,b
 1295 D1:BD29 79 -  -  -          ld  a,c
 1296 D1:BD2A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1297 D1:BD2C ED 4C -  -          mlt bc
 1298 D1:BD2E 21 00 40 D0         ld  hl,PAGETABLE
 1299 D1:BD32 09 -  -  -          add hl,bc
 1300 D1:BD33 ED 27 -  -          ld  hl,(hl)
 1301 D1:BD35 06 00 -  -          ld  b,0
 1302 D1:BD37 DD 86 01 -          add a,(ix+REGX)
 1303 D1:BD3A 4F -  -  -          ld  c,a
 1304 D1:BD3B 30 02 -  -          jr  nc,+_
 1305 D1:BD3D 04 -  -  -          inc b
 1306 D1:BD3E 14 -  -  -          inc d
 1307 D1:BD3F 09 -  -  -  _:      add hl,bc   ;full address
 1308 D1:BD40 7E -  -  -          READ_ACCESS
 1309 D1:BD41 3D -  -  -          dec a
 1310 D1:BD42 47 -  -  -          ld  b,a
 1311 D1:BD43 -  -  -  -          ;
 1312 D1:BD43 DD 7E 04 -          ld  a,(ix+REGSR)
 1313 D1:BD46 CB 8F -  -          res SF_ZERO,a
 1314 D1:BD48 20 02 -  -          jr  nz,$+4
 1315 D1:BD4A CB CF -  -          set SF_ZERO,a
 1316 D1:BD4C CB BF -  -          res SF_NEG,a
 1317 D1:BD4E FA 54 BD D1         jp  m,$+6
 1318 D1:BD52 CB FF -  -          set SF_NEG,a
 1319 D1:BD54 DD 77 04 -          ld  (ix+REGSR),a
 1320 D1:BD57 -  -  -  -          ;
 1321 D1:BD57 70 -  -  -          WRITE_ACCESS
 1322 D1:BD58 ED 33 07 -          ADDCYC(7)
 1323 D1:BD5B E1 -  -  -      pop hl
 1324 D1:BD5C C3 73 B3 D1     jp i6502NextLoad
 1325 D1:BD60 -  -  -  -  
 1326 D1:BD60 -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1327 D1:BD60 -  -  -  -  ;Flags altered: NZ
 1328 D1:BD60 -  -  -  -  ;implied	DEX	CA	1	2  
 1329 D1:BD60 -  -  -  -  inst6502_dex:
 1330 D1:BD60 DD 35 01 -      dec (ix+REGX)
 1331 D1:BD63 DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1332 D1:BD66 CB 8F -  -      res SF_ZERO,a
 1333 D1:BD68 20 02 -  -      jr  nz,$+4
 1334 D1:BD6A CB CF -  -      set SF_ZERO,a
 1335 D1:BD6C CB BF -  -      res SF_NEG,a
 1336 D1:BD6E FA 74 BD D1     jp  m,$+6
 1337 D1:BD72 CB FF -  -      set SF_NEG,a
 1338 D1:BD74 DD 77 04 -      ld  (ix+REGSR),a
 1339 D1:BD77 ED 33 02 -      ADDCYC(2)
 1340 D1:BD7A C3 8C B3 D1     jp i6502FinishLoad
 1341 D1:BD7E -  -  -  -  
 1342 D1:BD7E -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1343 D1:BD7E -  -  -  -  ;Flags altered: NZ
 1344 D1:BD7E -  -  -  -  ;implied	DEY	88	1	2  
 1345 D1:BD7E -  -  -  -  inst6502_dey:
 1346 D1:BD7E DD 35 02 -      dec (ix+REGY)
 1347 D1:BD81 18 E0 -  -      jr  -_
 1348 D1:BD83 -  -  -  -  
 1349 D1:BD83 -  -  -  -  
 1350 D1:BD83 -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1351 D1:BD83 -  -  -  -  ;Flags altered: NZ
 1352 D1:BD83 -  -  -  -  ;implied	INX	E8	1	2  
 1353 D1:BD83 -  -  -  -  inst6502_inx:
 1354 D1:BD83 DD 34 01 -      inc (ix+REGX)
 1355 D1:BD86 18 DB -  -      jr  -_
 1356 D1:BD88 -  -  -  -  
 1357 D1:BD88 -  -  -  -  
 1358 D1:BD88 -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1359 D1:BD88 -  -  -  -  ;Flags altered: NZ
 1360 D1:BD88 -  -  -  -  ;implied	INY	C8	1	2  
 1361 D1:BD88 -  -  -  -  inst6502_iny:
 1362 D1:BD88 DD 34 02 -      inc (ix+REGY)
 1363 D1:BD8B 18 D6 -  -      jr  -_
 1364 D1:BD8D -  -  -  -  
 1365 D1:BD8D -  -  -  -  
 1366 D1:BD8D -  -  -  -  ;INC - Increment Memory by One
 1367 D1:BD8D -  -  -  -  ;    M + 1 -> M
 1368 D1:BD8D -  -  -  -  ;    N	Z	C	I	D	V
 1369 D1:BD8D -  -  -  -  ;    +	+	-	-	-	-
 1370 D1:BD8D -  -  -  -  
 1371 D1:BD8D -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1372 D1:BD8D -  -  -  -  inst6502_inc_zp:
 1373 D1:BD8D 7E -  -  -      ld  a,(hl)
 1374 D1:BD8E 01 00 38 D0     ld  bc,ZEROPAGE
 1375 D1:BD92 81 -  -  -      add a,c
 1376 D1:BD93 4F -  -  -      ld  c,a
 1377 D1:BD94 0A -  -  -      ld  a,(bc)
 1378 D1:BD95 3C -  -  -      inc a
 1379 D1:BD96 02 -  -  -      ld  (bc),a
 1380 D1:BD97 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1381 D1:BDAB ED 33 05 -      ADDCYC(5)
 1382 D1:BDAE C3 73 B3 D1     jp i6502NextLoad
 1383 D1:BDB2 -  -  -  -  
 1384 D1:BDB2 -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1385 D1:BDB2 -  -  -  -  inst6502_inc_zpx:
 1386 D1:BDB2 7E -  -  -      ld  a,(hl)
 1387 D1:BDB3 01 00 38 D0     ld  bc,ZEROPAGE
 1388 D1:BDB7 81 -  -  -      add a,c
 1389 D1:BDB8 DD 86 01 -      add a,(ix+REGX)
 1390 D1:BDBB 4F -  -  -      ld  c,a
 1391 D1:BDBC 0A -  -  -      ld  a,(bc)
 1392 D1:BDBD 3C -  -  -      inc a
 1393 D1:BDBE 02 -  -  -      ld  (bc),a
 1394 D1:BDBF DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1395 D1:BDD3 ED 33 06 -      ADDCYC(6)
 1396 D1:BDD6 C3 73 B3 D1     jp i6502NextLoad
 1397 D1:BDDA -  -  -  -      
 1398 D1:BDDA -  -  -  -  ;absolute	INC oper	EE	3	6
 1399 D1:BDDA -  -  -  -  inst6502_inc_abs:
 1400 D1:BDDA CD D9 B5 D1     call subroutine6502_abs_split_start
 1401 D1:BDDE E5 -  -  -      push hl
 1402 D1:BDDF 50 -  -  -          ld  d,b
 1403 D1:BDE0 79 -  -  -          ld  a,c
 1404 D1:BDE1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1405 D1:BDE3 ED 4C -  -          mlt bc
 1406 D1:BDE5 21 00 40 D0         ld  hl,PAGETABLE
 1407 D1:BDE9 09 -  -  -          add hl,bc
 1408 D1:BDEA ED 27 -  -          ld  hl,(hl)
 1409 D1:BDEC 06 00 -  -          ld  b,0
 1410 D1:BDEE 4F -  -  -          ld  c,a
 1411 D1:BDEF 09 -  -  -          add hl,bc   ;full address
 1412 D1:BDF0 7E -  -  -          READ_ACCESS
 1413 D1:BDF1 3C -  -  -          inc a
 1414 D1:BDF2 47 -  -  -          ld  b,a
 1415 D1:BDF3 -  -  -  -          ;
 1416 D1:BDF3 DD 7E 04 -          ld  a,(ix+REGSR)
 1417 D1:BDF6 CB 8F -  -          res SF_ZERO,a
 1418 D1:BDF8 20 02 -  -          jr  nz,$+4
 1419 D1:BDFA CB CF -  -          set SF_ZERO,a
 1420 D1:BDFC CB BF -  -          res SF_NEG,a
 1421 D1:BDFE FA 04 BE D1         jp  m,$+6
 1422 D1:BE02 CB FF -  -          set SF_NEG,a
 1423 D1:BE04 DD 77 04 -          ld  (ix+REGSR),a
 1424 D1:BE07 -  -  -  -          ;
 1425 D1:BE07 70 -  -  -          WRITE_ACCESS
 1426 D1:BE08 ED 33 06 -          ADDCYC(6)
 1427 D1:BE0B E1 -  -  -      pop hl
 1428 D1:BE0C C3 73 B3 D1     jp i6502NextLoad
 1429 D1:BE10 -  -  -  -  
 1430 D1:BE10 -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1431 D1:BE10 -  -  -  -  inst6502_inc_absx:
 1432 D1:BE10 CD D9 B5 D1     call subroutine6502_abs_split_start
 1433 D1:BE14 E5 -  -  -      push hl
 1434 D1:BE15 50 -  -  -          ld  d,b
 1435 D1:BE16 79 -  -  -          ld  a,c
 1436 D1:BE17 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1437 D1:BE19 ED 4C -  -          mlt bc
 1438 D1:BE1B 21 00 40 D0         ld  hl,PAGETABLE
 1439 D1:BE1F 09 -  -  -          add hl,bc
 1440 D1:BE20 ED 27 -  -          ld  hl,(hl)
 1441 D1:BE22 06 00 -  -          ld  b,0
 1442 D1:BE24 DD 86 01 -          add a,(ix+REGX)
 1443 D1:BE27 4F -  -  -          ld  c,a
 1444 D1:BE28 30 02 -  -          jr nc,+_
 1445 D1:BE2A 04 -  -  -          inc b
 1446 D1:BE2B 14 -  -  -          inc d
 1447 D1:BE2C 09 -  -  -  _:      add hl,bc   ;full address
 1448 D1:BE2D 7E -  -  -          READ_ACCESS
 1449 D1:BE2E 3C -  -  -          inc a
 1450 D1:BE2F 47 -  -  -          ld  b,a
 1451 D1:BE30 -  -  -  -          ;
 1452 D1:BE30 DD 7E 04 -          ld  a,(ix+REGSR)
 1453 D1:BE33 CB 8F -  -          res SF_ZERO,a
 1454 D1:BE35 20 02 -  -          jr  nz,$+4
 1455 D1:BE37 CB CF -  -          set SF_ZERO,a
 1456 D1:BE39 CB BF -  -          res SF_NEG,a
 1457 D1:BE3B FA 41 BE D1         jp  m,$+6
 1458 D1:BE3F CB FF -  -          set SF_NEG,a
 1459 D1:BE41 DD 77 04 -          ld  (ix+REGSR),a
 1460 D1:BE44 -  -  -  -          ;
 1461 D1:BE44 70 -  -  -          WRITE_ACCESS
 1462 D1:BE45 ED 33 07 -          ADDCYC(7)
 1463 D1:BE48 E1 -  -  -      pop hl
 1464 D1:BE49 C3 73 B3 D1     jp i6502NextLoad
 1465 D1:BE4D -  -  -  -  
 1466 D1:BE4D -  -  -  -  ;-----------------------------------------------------------------------------
 1467 D1:BE4D -  -  -  -  ;-----------------------------------------------------------------------------
 1468 D1:BE4D -  -  -  -  ;-----------------------------------------------------------------------------
 1469 D1:BE4D -  -  -  -  ;Instructions by type: Arithmetic Operations
 1470 D1:BE4D -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1471 D1:BE4D -  -  -  -  ;    N	Z	C	I	D	V
 1472 D1:BE4D -  -  -  -  ;    +	+	+	-	-	+
 1473 D1:BE4D -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1474 D1:BE4D -  -  -  -  
 1475 D1:BE4D -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1476 D1:BE4D -  -  -  -  inst6502_adc_imm:
 1477 D1:BE4D ED 33 02 -      ADDCYC(2)
 1478 D1:BE50 4E -  -  -      ld  c,(hl)
 1479 D1:BE51 C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1480 D1:BE55 -  -  -  -      
 1481 D1:BE55 -  -  -  -  
 1482 D1:BE55 -  -  -  -  ;zeropage	ADC oper	65	2	3
 1483 D1:BE55 -  -  -  -  inst6502_adc_zp:
 1484 D1:BE55 ED 33 03 -      ADDCYC(3)
 1485 D1:BE58 7E -  -  -      ld  a,(hl)
 1486 D1:BE59 01 00 38 D0     ld  bc,ZEROPAGE
 1487 D1:BE5D 81 -  -  -      add a,c
 1488 D1:BE5E 4F -  -  -      ld  c,a
 1489 D1:BE5F 0A -  -  -      ld  a,(bc)
 1490 D1:BE60 4F -  -  -      ld  c,a
 1491 D1:BE61 C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1492 D1:BE65 -  -  -  -  
 1493 D1:BE65 -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1494 D1:BE65 -  -  -  -  inst6502_adc_zpx:
 1495 D1:BE65 ED 33 04 -      ADDCYC(4)
 1496 D1:BE68 7E -  -  -      ld  a,(hl)
 1497 D1:BE69 DD 86 01 -      add a,(ix+REGX)
 1498 D1:BE6C 01 00 38 D0     ld  bc,ZEROPAGE
 1499 D1:BE70 81 -  -  -      add a,c
 1500 D1:BE71 4F -  -  -      ld  c,a
 1501 D1:BE72 0A -  -  -      ld  a,(bc)
 1502 D1:BE73 4F -  -  -      ld  c,a
 1503 D1:BE74 C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1504 D1:BE78 -  -  -  -  
 1505 D1:BE78 -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1506 D1:BE78 -  -  -  -  inst6502_adc_abs:
 1507 D1:BE78 ED 33 04 -      ADDCYC(4)
 1508 D1:BE7B CD D9 B5 D1     call subroutine6502_abs_split_start
 1509 D1:BE7F E5 -  -  -      push hl
 1510 D1:BE80 50 -  -  -          ld  d,b
 1511 D1:BE81 79 -  -  -          ld  a,c
 1512 D1:BE82 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1513 D1:BE84 ED 4C -  -          mlt bc
 1514 D1:BE86 21 00 40 D0         ld  hl,PAGETABLE
 1515 D1:BE8A 09 -  -  -          add hl,bc
 1516 D1:BE8B ED 27 -  -          ld  hl,(hl)
 1517 D1:BE8D 06 00 -  -          ld  b,0
 1518 D1:BE8F 4F -  -  -          ld  c,a
 1519 D1:BE90 09 -  -  -          add hl,bc   ;full address
 1520 D1:BE91 7E -  -  -          READ_ACCESS
 1521 D1:BE92 E1 -  -  -      pop hl
 1522 D1:BE93 4F -  -  -      ld  c,a
 1523 D1:BE94 C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1524 D1:BE98 -  -  -  -  
 1525 D1:BE98 -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1526 D1:BE98 -  -  -  -  inst6502_adc_absx:
 1527 D1:BE98 ED 33 04 -      ADDCYC(4)
 1528 D1:BE9B CD D9 B5 D1     call subroutine6502_abs_split_start
 1529 D1:BE9F E5 -  -  -      push hl
 1530 D1:BEA0 50 -  -  -          ld  d,b
 1531 D1:BEA1 79 -  -  -          ld  a,c
 1532 D1:BEA2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1533 D1:BEA4 ED 4C -  -          mlt bc
 1534 D1:BEA6 21 00 40 D0         ld  hl,PAGETABLE
 1535 D1:BEAA 09 -  -  -          add hl,bc
 1536 D1:BEAB ED 27 -  -          ld  hl,(hl)
 1537 D1:BEAD 06 00 -  -          ld  b,0
 1538 D1:BEAF DD 86 01 -          add a,(ix+REGX)
 1539 D1:BEB2 4F -  -  -          ld  c,a
 1540 D1:BEB3 30 04 -  -          jr  nc,+_
 1541 D1:BEB5 FD 23 -  -          ADDCYC(1)
 1542 D1:BEB7 04 -  -  -          inc b
 1543 D1:BEB8 14 -  -  -          inc d
 1544 D1:BEB9 09 -  -  -  _:      add hl,bc   ;full address
 1545 D1:BEBA 7E -  -  -          READ_ACCESS
 1546 D1:BEBB E1 -  -  -      pop hl
 1547 D1:BEBC 4F -  -  -      ld  c,a
 1548 D1:BEBD C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1549 D1:BEC1 -  -  -  -  
 1550 D1:BEC1 -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1551 D1:BEC1 -  -  -  -  inst6502_adc_absy:
 1552 D1:BEC1 ED 33 04 -      ADDCYC(4)
 1553 D1:BEC4 CD D9 B5 D1     call subroutine6502_abs_split_start
 1554 D1:BEC8 E5 -  -  -      push hl
 1555 D1:BEC9 50 -  -  -          ld  d,b
 1556 D1:BECA 79 -  -  -          ld  a,c
 1557 D1:BECB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1558 D1:BECD ED 4C -  -          mlt bc
 1559 D1:BECF 21 00 40 D0         ld  hl,PAGETABLE
 1560 D1:BED3 09 -  -  -          add hl,bc
 1561 D1:BED4 ED 27 -  -          ld  hl,(hl)
 1562 D1:BED6 06 00 -  -          ld  b,0
 1563 D1:BED8 DD 86 02 -          add a,(ix+REGY)
 1564 D1:BEDB 4F -  -  -          ld  c,a
 1565 D1:BEDC 30 04 -  -          jr  nc,+_
 1566 D1:BEDE FD 23 -  -          ADDCYC(1)
 1567 D1:BEE0 04 -  -  -          inc b
 1568 D1:BEE1 14 -  -  -          inc d
 1569 D1:BEE2 09 -  -  -  _:      add hl,bc   ;full address
 1570 D1:BEE3 7E -  -  -          READ_ACCESS
 1571 D1:BEE4 E1 -  -  -      pop hl
 1572 D1:BEE5 4F -  -  -      ld  c,a
 1573 D1:BEE6 C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1574 D1:BEEA -  -  -  -  
 1575 D1:BEEA -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1576 D1:BEEA -  -  -  -  inst6502_adc_indx:
 1577 D1:BEEA ED 33 06 -      ADDCYC(6)
 1578 D1:BEED E5 -  -  -      push hl
 1579 D1:BEEE 7E -  -  -          ld  a,(hl)
 1580 D1:BEEF 21 00 38 D0         ld  hl,ZEROPAGE
 1581 D1:BEF3 85 -  -  -          add a,L
 1582 D1:BEF4 DD 86 01 -          add a,(ix+REGX)
 1583 D1:BEF7 6F -  -  -          ld  L,a
 1584 D1:BEF8 7E -  -  -          ld  a,(hl)
 1585 D1:BEF9 2C -  -  -          inc L
 1586 D1:BEFA 56 -  -  -          ld  d,(hl)
 1587 D1:BEFB 42 -  -  -          ld  b,d
 1588 D1:BEFC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1589 D1:BEFE ED 4C -  -          mlt bc
 1590 D1:BF00 21 00 40 D0         ld  hl,PAGETABLE
 1591 D1:BF04 09 -  -  -          add hl,bc
 1592 D1:BF05 ED 27 -  -          ld  hl,(hl)
 1593 D1:BF07 06 00 -  -          ld  b,0
 1594 D1:BF09 4F -  -  -          ld  c,a
 1595 D1:BF0A 09 -  -  -          add hl,bc
 1596 D1:BF0B 7E -  -  -          READ_ACCESS
 1597 D1:BF0C E1 -  -  -      pop hl
 1598 D1:BF0D 4F -  -  -      ld  c,a
 1599 D1:BF0E C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1600 D1:BF12 -  -  -  -  
 1601 D1:BF12 -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1602 D1:BF12 -  -  -  -  inst6502_adc_indy:
 1603 D1:BF12 E5 -  -  -      push hl
 1604 D1:BF13 7E -  -  -          ld  a,(hl)
 1605 D1:BF14 21 00 38 D0         ld  hl,ZEROPAGE
 1606 D1:BF18 85 -  -  -          add a,L
 1607 D1:BF19 6F -  -  -          ld  L,a
 1608 D1:BF1A 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1609 D1:BF1B 2C -  -  -          inc L
 1610 D1:BF1C DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1611 D1:BF1F 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1612 D1:BF20 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1613 D1:BF22 FD 23 -  -          ADDCYC(1)
 1614 D1:BF24 24 -  -  -          inc h
 1615 D1:BF25 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1616 D1:BF26 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1617 D1:BF28 ED 6C -  -          mlt hl          ;23.
 1618 D1:BF2A 01 00 40 D0         ld  bc,PAGETABLE
 1619 D1:BF2E 09 -  -  -          add hl,bc
 1620 D1:BF2F ED 27 -  -          ld  hl,(hl)     ;address get.
 1621 D1:BF31 01 00 00 00         ld  bc,0
 1622 D1:BF35 4F -  -  -          ld  c,a
 1623 D1:BF36 09 -  -  -          add hl,bc       ;Full address get.
 1624 D1:BF37 7E -  -  -          READ_ACCESS
 1625 D1:BF38 E1 -  -  -      pop hl
 1626 D1:BF39 4F -  -  -      ld  c,a
 1627 D1:BF3A C3 F5 B5 D1     jp  subroutine6502_adc_combined_end
 1628 D1:BF3E -  -  -  -  
 1629 D1:BF3E -  -  -  -  
 1630 D1:BF3E -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1631 D1:BF3E -  -  -  -  ;A - M - C̅ -> A
 1632 D1:BF3E -  -  -  -  ;N	Z	C	I	D	V
 1633 D1:BF3E -  -  -  -  ;+	+	+	-	-	+
 1634 D1:BF3E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1635 D1:BF3E -  -  -  -  
 1636 D1:BF3E -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1637 D1:BF3E -  -  -  -  inst6502_sbc_imm:
 1638 D1:BF3E ED 33 02 -      ADDCYC(2)
 1639 D1:BF41 4E -  -  -      ld  c,(hl)
 1640 D1:BF42 C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1641 D1:BF46 -  -  -  -  
 1642 D1:BF46 -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1643 D1:BF46 -  -  -  -  inst6502_sbc_zp:
 1644 D1:BF46 ED 33 03 -      ADDCYC(3)
 1645 D1:BF49 7E -  -  -      ld  a,(hl)
 1646 D1:BF4A 01 00 38 D0     ld  bc,ZEROPAGE
 1647 D1:BF4E 81 -  -  -      add a,c
 1648 D1:BF4F 4F -  -  -      ld  c,a
 1649 D1:BF50 0A -  -  -      ld  a,(bc)
 1650 D1:BF51 4F -  -  -      ld  c,a
 1651 D1:BF52 C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1652 D1:BF56 -  -  -  -  
 1653 D1:BF56 -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1654 D1:BF56 -  -  -  -  inst6502_sbc_zpx:
 1655 D1:BF56 ED 33 04 -      ADDCYC(4)
 1656 D1:BF59 7E -  -  -      ld  a,(hl)
 1657 D1:BF5A DD 86 01 -      add a,(ix+REGX)
 1658 D1:BF5D 01 00 38 D0     ld  bc,ZEROPAGE
 1659 D1:BF61 81 -  -  -      add a,c
 1660 D1:BF62 4F -  -  -      ld  c,a
 1661 D1:BF63 0A -  -  -      ld  a,(bc)
 1662 D1:BF64 4F -  -  -      ld  c,a
 1663 D1:BF65 C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1664 D1:BF69 -  -  -  -  
 1665 D1:BF69 -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1666 D1:BF69 -  -  -  -  inst6502_sbc_abs:
 1667 D1:BF69 ED 33 04 -      ADDCYC(4)
 1668 D1:BF6C CD D9 B5 D1     call subroutine6502_abs_split_start
 1669 D1:BF70 E5 -  -  -      push hl
 1670 D1:BF71 50 -  -  -          ld  d,b
 1671 D1:BF72 79 -  -  -          ld  a,c
 1672 D1:BF73 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1673 D1:BF75 ED 4C -  -          mlt bc
 1674 D1:BF77 21 00 40 D0         ld  hl,PAGETABLE
 1675 D1:BF7B 09 -  -  -          add hl,bc
 1676 D1:BF7C ED 27 -  -          ld  hl,(hl)
 1677 D1:BF7E 06 00 -  -          ld  b,0
 1678 D1:BF80 4F -  -  -          ld  c,a
 1679 D1:BF81 09 -  -  -          add hl,bc   ;full address
 1680 D1:BF82 7E -  -  -          READ_ACCESS
 1681 D1:BF83 E1 -  -  -      pop hl
 1682 D1:BF84 4F -  -  -      ld  c,a
 1683 D1:BF85 C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1684 D1:BF89 -  -  -  -  
 1685 D1:BF89 -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1686 D1:BF89 -  -  -  -  inst6502_sbc_absx:
 1687 D1:BF89 ED 33 04 -      ADDCYC(4)
 1688 D1:BF8C CD D9 B5 D1     call subroutine6502_abs_split_start
 1689 D1:BF90 E5 -  -  -      push hl
 1690 D1:BF91 50 -  -  -          ld  d,b
 1691 D1:BF92 79 -  -  -          ld  a,c
 1692 D1:BF93 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1693 D1:BF95 ED 4C -  -          mlt bc
 1694 D1:BF97 21 00 40 D0         ld  hl,PAGETABLE
 1695 D1:BF9B 09 -  -  -          add hl,bc
 1696 D1:BF9C ED 27 -  -          ld  hl,(hl)
 1697 D1:BF9E 06 00 -  -          ld  b,0
 1698 D1:BFA0 DD 86 01 -          add a,(ix+REGX)
 1699 D1:BFA3 4F -  -  -          ld  c,a
 1700 D1:BFA4 30 04 -  -          jr  nc,+_
 1701 D1:BFA6 FD 23 -  -          ADDCYC(1)
 1702 D1:BFA8 04 -  -  -          inc b
 1703 D1:BFA9 14 -  -  -          inc d
 1704 D1:BFAA 09 -  -  -  _:      add hl,bc   ;full address
 1705 D1:BFAB 7E -  -  -          READ_ACCESS
 1706 D1:BFAC E1 -  -  -      pop hl
 1707 D1:BFAD 4F -  -  -      ld  c,a
 1708 D1:BFAE C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1709 D1:BFB2 -  -  -  -  
 1710 D1:BFB2 -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1711 D1:BFB2 -  -  -  -  inst6502_sbc_absy:
 1712 D1:BFB2 ED 33 04 -      ADDCYC(4)
 1713 D1:BFB5 CD D9 B5 D1     call subroutine6502_abs_split_start
 1714 D1:BFB9 E5 -  -  -      push hl
 1715 D1:BFBA 50 -  -  -          ld  d,b
 1716 D1:BFBB 79 -  -  -          ld  a,c
 1717 D1:BFBC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1718 D1:BFBE ED 4C -  -          mlt bc
 1719 D1:BFC0 21 00 40 D0         ld  hl,PAGETABLE
 1720 D1:BFC4 09 -  -  -          add hl,bc
 1721 D1:BFC5 ED 27 -  -          ld  hl,(hl)
 1722 D1:BFC7 06 00 -  -          ld  b,0
 1723 D1:BFC9 DD 86 02 -          add a,(ix+REGY)
 1724 D1:BFCC 4F -  -  -          ld  c,a
 1725 D1:BFCD 30 04 -  -          jr  nc,+_
 1726 D1:BFCF FD 23 -  -          ADDCYC(1)
 1727 D1:BFD1 04 -  -  -          inc b
 1728 D1:BFD2 14 -  -  -          inc d
 1729 D1:BFD3 09 -  -  -  _:      add hl,bc   ;full address
 1730 D1:BFD4 7E -  -  -          READ_ACCESS
 1731 D1:BFD5 E1 -  -  -      pop hl
 1732 D1:BFD6 4F -  -  -      ld  c,a
 1733 D1:BFD7 C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1734 D1:BFDB -  -  -  -  
 1735 D1:BFDB -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1736 D1:BFDB -  -  -  -  inst6502_sbc_indx:
 1737 D1:BFDB ED 33 06 -      ADDCYC(6)
 1738 D1:BFDE E5 -  -  -      push hl
 1739 D1:BFDF 7E -  -  -          ld  a,(hl)
 1740 D1:BFE0 21 00 38 D0         ld  hl,ZEROPAGE
 1741 D1:BFE4 85 -  -  -          add a,L
 1742 D1:BFE5 DD 86 01 -          add a,(ix+REGX)
 1743 D1:BFE8 6F -  -  -          ld  L,a
 1744 D1:BFE9 7E -  -  -          ld  a,(hl)
 1745 D1:BFEA 2C -  -  -          inc L
 1746 D1:BFEB 56 -  -  -          ld  d,(hl)
 1747 D1:BFEC 42 -  -  -          ld  b,d
 1748 D1:BFED 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1749 D1:BFEF ED 4C -  -          mlt bc
 1750 D1:BFF1 21 00 40 D0         ld  hl,PAGETABLE
 1751 D1:BFF5 09 -  -  -          add hl,bc
 1752 D1:BFF6 ED 27 -  -          ld  hl,(hl)
 1753 D1:BFF8 06 00 -  -          ld  b,0
 1754 D1:BFFA 4F -  -  -          ld  c,a
 1755 D1:BFFB 09 -  -  -          add hl,bc
 1756 D1:BFFC 7E -  -  -          READ_ACCESS
 1757 D1:BFFD E1 -  -  -      pop hl
 1758 D1:BFFE 4F -  -  -      ld  c,a
 1759 D1:BFFF C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1760 D1:C003 -  -  -  -  
 1761 D1:C003 -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1762 D1:C003 -  -  -  -  inst6502_sbc_indy:
 1763 D1:C003 E5 -  -  -      push hl
 1764 D1:C004 7E -  -  -          ld  a,(hl)
 1765 D1:C005 21 00 38 D0         ld  hl,ZEROPAGE
 1766 D1:C009 85 -  -  -          add a,L
 1767 D1:C00A 6F -  -  -          ld  L,a
 1768 D1:C00B 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1769 D1:C00C 2C -  -  -          inc L
 1770 D1:C00D DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1771 D1:C010 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1772 D1:C011 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1773 D1:C013 FD 23 -  -          ADDCYC(1)
 1774 D1:C015 24 -  -  -          inc h
 1775 D1:C016 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1776 D1:C017 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1777 D1:C019 ED 6C -  -          mlt hl          ;23.
 1778 D1:C01B 01 00 40 D0         ld  bc,PAGETABLE
 1779 D1:C01F 09 -  -  -          add hl,bc
 1780 D1:C020 ED 27 -  -          ld  hl,(hl)     ;address get.
 1781 D1:C022 01 00 00 00         ld  bc,0
 1782 D1:C026 4F -  -  -          ld  c,a
 1783 D1:C027 09 -  -  -          add hl,bc       ;Full address get.
 1784 D1:C028 7E -  -  -          READ_ACCESS
 1785 D1:C029 E1 -  -  -      pop hl
 1786 D1:C02A 4F -  -  -      ld  c,a
 1787 D1:C02B C3 25 B6 D1     jp  subroutine6502_sbc_combined_end
 1788 D1:C02F -  -  -  -  
 1789 D1:C02F -  -  -  -  
 1790 D1:C02F -  -  -  -  
 1791 D1:C02F -  -  -  -  ;-----------------------------------------------------------------------------
 1792 D1:C02F -  -  -  -  ;-----------------------------------------------------------------------------
 1793 D1:C02F -  -  -  -  ;-----------------------------------------------------------------------------
 1794 D1:C02F -  -  -  -  ;Instructions by type: Logical Operations
 1795 D1:C02F -  -  -  -  
 1796 D1:C02F -  -  -  -  ;AND - AND Memory with Accumulator
 1797 D1:C02F -  -  -  -  ;A AND M -> A
 1798 D1:C02F -  -  -  -  ;N	Z	C	I	D	V
 1799 D1:C02F -  -  -  -  ;+	+	-	-	-	-
 1800 D1:C02F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1801 D1:C02F -  -  -  -  
 1802 D1:C02F -  -  -  -  ;immediate	AND #oper	29	2	2  
 1803 D1:C02F -  -  -  -  inst6502_and_imm:
 1804 D1:C02F ED 33 02 -      ADDCYC(2)
 1805 D1:C032 7E -  -  -      ld  a,(hl)
 1806 D1:C033 DD A6 00 -      and a,(ix+REGA)
 1807 D1:C036 DD 77 00 -      ld  (ix+REGA),A
 1808 D1:C039 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1809 D1:C04D C3 73 B3 D1     jp i6502NextLoad
 1810 D1:C051 -  -  -  -  
 1811 D1:C051 -  -  -  -  ;zeropage	AND oper	25	2	3  
 1812 D1:C051 -  -  -  -  inst6502_and_zp:
 1813 D1:C051 ED 33 03 -      ADDCYC(3)
 1814 D1:C054 7E -  -  -      ld  a,(hl)
 1815 D1:C055 01 00 38 D0     ld  bc,ZEROPAGE
 1816 D1:C059 81 -  -  -      add a,c
 1817 D1:C05A 4F -  -  -      ld  c,a
 1818 D1:C05B 0A -  -  -      ld  a,(bc)
 1819 D1:C05C DD A6 00 -      and a,(ix+REGA)
 1820 D1:C05F DD 77 00 -      ld  (ix+REGA),A
 1821 D1:C062 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1822 D1:C076 C3 73 B3 D1     jp i6502NextLoad
 1823 D1:C07A -  -  -  -  
 1824 D1:C07A -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1825 D1:C07A -  -  -  -  inst6502_and_zpx:
 1826 D1:C07A ED 33 04 -      ADDCYC(4)
 1827 D1:C07D 7E -  -  -      ld  a,(hl)
 1828 D1:C07E 01 00 38 D0     ld  bc,ZEROPAGE
 1829 D1:C082 81 -  -  -      add a,c
 1830 D1:C083 DD 86 01 -      add a,(ix+REGX)
 1831 D1:C086 4F -  -  -      ld  c,a
 1832 D1:C087 0A -  -  -      ld  a,(bc)
 1833 D1:C088 DD A6 00 -      and a,(ix+REGA)
 1834 D1:C08B DD 77 00 -      ld  (ix+REGA),A
 1835 D1:C08E DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1836 D1:C0A2 C3 73 B3 D1     jp i6502NextLoad
 1837 D1:C0A6 -  -  -  -  
 1838 D1:C0A6 -  -  -  -  ;absolute	AND oper	2D	3	4  
 1839 D1:C0A6 -  -  -  -  inst6502_and_abs:
 1840 D1:C0A6 ED 33 04 -      ADDCYC(4)
 1841 D1:C0A9 CD D9 B5 D1     call subroutine6502_abs_split_start
 1842 D1:C0AD E5 -  -  -      push hl
 1843 D1:C0AE 50 -  -  -          ld  d,b
 1844 D1:C0AF 79 -  -  -          ld  a,c
 1845 D1:C0B0 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1846 D1:C0B2 ED 4C -  -          mlt bc
 1847 D1:C0B4 21 00 40 D0         ld  hl,PAGETABLE
 1848 D1:C0B8 09 -  -  -          add hl,bc
 1849 D1:C0B9 ED 27 -  -          ld  hl,(hl)
 1850 D1:C0BB 06 00 -  -          ld  b,0
 1851 D1:C0BD 4F -  -  -          ld  c,a
 1852 D1:C0BE 09 -  -  -          add hl,bc   ;full address
 1853 D1:C0BF 7E -  -  -          READ_ACCESS
 1854 D1:C0C0 E1 -  -  -      pop hl
 1855 D1:C0C1 DD A6 00 -      and a,(ix+REGA)
 1856 D1:C0C4 DD 77 00 -      ld  (ix+REGA),A
 1857 D1:C0C7 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1858 D1:C0DB C3 73 B3 D1     jp i6502NextLoad
 1859 D1:C0DF -  -  -  -  
 1860 D1:C0DF -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1861 D1:C0DF -  -  -  -  inst6502_and_absx:
 1862 D1:C0DF ED 33 04 -      ADDCYC(4)
 1863 D1:C0E2 CD D9 B5 D1     call subroutine6502_abs_split_start
 1864 D1:C0E6 E5 -  -  -      push hl
 1865 D1:C0E7 50 -  -  -          ld  d,b
 1866 D1:C0E8 79 -  -  -          ld  a,c
 1867 D1:C0E9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1868 D1:C0EB ED 4C -  -          mlt bc
 1869 D1:C0ED 21 00 40 D0         ld  hl,PAGETABLE
 1870 D1:C0F1 09 -  -  -          add hl,bc
 1871 D1:C0F2 ED 27 -  -          ld  hl,(hl)
 1872 D1:C0F4 06 00 -  -          ld  b,0
 1873 D1:C0F6 DD 86 01 -          add a,(ix+REGX)
 1874 D1:C0F9 4F -  -  -          ld  c,a
 1875 D1:C0FA 30 04 -  -          jr  nc,+_
 1876 D1:C0FC 04 -  -  -          inc b
 1877 D1:C0FD 14 -  -  -          inc d
 1878 D1:C0FE FD 23 -  -          ADDCYC(1)
 1879 D1:C100 09 -  -  -  _:      add hl,bc   ;full address
 1880 D1:C101 7E -  -  -          READ_ACCESS
 1881 D1:C102 E1 -  -  -      pop hl
 1882 D1:C103 DD A6 00 -      and a,(ix+REGA)
 1883 D1:C106 DD 77 00 -      ld  (ix+REGA),A
 1884 D1:C109 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1885 D1:C11D C3 73 B3 D1     jp i6502NextLoad
 1886 D1:C121 -  -  -  -  
 1887 D1:C121 -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1888 D1:C121 -  -  -  -  inst6502_and_absy:
 1889 D1:C121 ED 33 04 -      ADDCYC(4)
 1890 D1:C124 CD D9 B5 D1     call subroutine6502_abs_split_start
 1891 D1:C128 E5 -  -  -      push hl
 1892 D1:C129 50 -  -  -          ld  d,b
 1893 D1:C12A 79 -  -  -          ld  a,c
 1894 D1:C12B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1895 D1:C12D ED 4C -  -          mlt bc
 1896 D1:C12F 21 00 40 D0         ld  hl,PAGETABLE
 1897 D1:C133 09 -  -  -          add hl,bc
 1898 D1:C134 ED 27 -  -          ld  hl,(hl)
 1899 D1:C136 06 00 -  -          ld  b,0
 1900 D1:C138 DD 86 02 -          add a,(ix+REGY)
 1901 D1:C13B 4F -  -  -          ld  c,a
 1902 D1:C13C 30 04 -  -          jr  nc,+_
 1903 D1:C13E 04 -  -  -          inc b
 1904 D1:C13F 14 -  -  -          inc d
 1905 D1:C140 FD 23 -  -          ADDCYC(1)
 1906 D1:C142 09 -  -  -  _:      add hl,bc   ;full address
 1907 D1:C143 7E -  -  -          READ_ACCESS
 1908 D1:C144 E1 -  -  -      pop hl
 1909 D1:C145 DD A6 00 -      and a,(ix+REGA)
 1910 D1:C148 DD 77 00 -      ld  (ix+REGA),A
 1911 D1:C14B DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1912 D1:C15F C3 73 B3 D1     jp i6502NextLoad
 1913 D1:C163 -  -  -  -  
 1914 D1:C163 -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1915 D1:C163 -  -  -  -  inst6502_and_indx:
 1916 D1:C163 ED 33 06 -      ADDCYC(6)
 1917 D1:C166 E5 -  -  -      push hl
 1918 D1:C167 7E -  -  -          ld  a,(hl)
 1919 D1:C168 21 00 38 D0         ld  hl,ZEROPAGE
 1920 D1:C16C 85 -  -  -          add a,L
 1921 D1:C16D DD 86 01 -          add a,(ix+REGX)
 1922 D1:C170 6F -  -  -          ld  L,a
 1923 D1:C171 7E -  -  -          ld  a,(hl)
 1924 D1:C172 2C -  -  -          inc L
 1925 D1:C173 56 -  -  -          ld  d,(hl)
 1926 D1:C174 42 -  -  -          ld  b,d
 1927 D1:C175 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1928 D1:C177 ED 4C -  -          mlt bc
 1929 D1:C179 21 00 40 D0         ld  hl,PAGETABLE
 1930 D1:C17D 09 -  -  -          add hl,bc
 1931 D1:C17E ED 27 -  -          ld  hl,(hl)
 1932 D1:C180 06 00 -  -          ld  b,0
 1933 D1:C182 4F -  -  -          ld  c,a
 1934 D1:C183 09 -  -  -          add hl,bc
 1935 D1:C184 7E -  -  -          READ_ACCESS
 1936 D1:C185 E1 -  -  -      pop hl
 1937 D1:C186 DD A6 00 -      and a,(ix+REGA)
 1938 D1:C189 DD 77 00 -      ld  (ix+REGA),A
 1939 D1:C18C DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1940 D1:C1A0 C3 73 B3 D1     jp i6502NextLoad
 1941 D1:C1A4 -  -  -  -  
 1942 D1:C1A4 -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1943 D1:C1A4 -  -  -  -  inst6502_and_indy:
 1944 D1:C1A4 ED 33 05 -      ADDCYC(5)
 1945 D1:C1A7 E5 -  -  -      push hl
 1946 D1:C1A8 7E -  -  -          ld  a,(hl)
 1947 D1:C1A9 21 00 38 D0         ld  hl,ZEROPAGE
 1948 D1:C1AD 85 -  -  -          add a,L
 1949 D1:C1AE 6F -  -  -          ld  L,a
 1950 D1:C1AF 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1951 D1:C1B0 2C -  -  -          inc L
 1952 D1:C1B1 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1953 D1:C1B4 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1954 D1:C1B5 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1955 D1:C1B7 24 -  -  -          inc h
 1956 D1:C1B8 FD 23 -  -          ADDCYC(1)
 1957 D1:C1BA 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1958 D1:C1BB 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1959 D1:C1BD ED 6C -  -          mlt hl          ;23.
 1960 D1:C1BF 01 00 40 D0         ld  bc,PAGETABLE
 1961 D1:C1C3 09 -  -  -          add hl,bc
 1962 D1:C1C4 ED 27 -  -          ld  hl,(hl)     ;address get.
 1963 D1:C1C6 01 00 00 00         ld  bc,0
 1964 D1:C1CA 4F -  -  -          ld  c,a
 1965 D1:C1CB 09 -  -  -          add hl,bc       ;Full address get.
 1966 D1:C1CC 7E -  -  -          READ_ACCESS
 1967 D1:C1CD E1 -  -  -      pop hl
 1968 D1:C1CE DD A6 00 -      and a,(ix+REGA)
 1969 D1:C1D1 DD 77 00 -      ld  (ix+REGA),A
 1970 D1:C1D4 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1971 D1:C1E8 C3 73 B3 D1     jp i6502NextLoad
 1972 D1:C1EC -  -  -  -  
 1973 D1:C1EC -  -  -  -  ;-----------------------------------------------------------------------------
 1974 D1:C1EC -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1975 D1:C1EC -  -  -  -  ;A EOR M -> A
 1976 D1:C1EC -  -  -  -  ;N	Z	C	I	D	V
 1977 D1:C1EC -  -  -  -  ;+	+	-	-	-	-
 1978 D1:C1EC -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1979 D1:C1EC -  -  -  -  
 1980 D1:C1EC -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1981 D1:C1EC -  -  -  -  inst6502_eor_imm:
 1982 D1:C1EC ED 33 02 -      ADDCYC(2)
 1983 D1:C1EF 7E -  -  -      ld  a,(hl)
 1984 D1:C1F0 DD AE 00 -      xor a,(ix+REGA)
 1985 D1:C1F3 DD 77 00 -      ld  (ix+REGA),A
 1986 D1:C1F6 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1987 D1:C20A C3 73 B3 D1     jp i6502NextLoad
 1988 D1:C20E -  -  -  -  
 1989 D1:C20E -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1990 D1:C20E -  -  -  -  inst6502_eor_zp:
 1991 D1:C20E ED 33 03 -      ADDCYC(3)
 1992 D1:C211 7E -  -  -      ld  a,(hl)
 1993 D1:C212 01 00 38 D0     ld  bc,ZEROPAGE
 1994 D1:C216 81 -  -  -      add a,c
 1995 D1:C217 4F -  -  -      ld  c,a
 1996 D1:C218 0A -  -  -      ld  a,(bc)
 1997 D1:C219 DD AE 00 -      xor a,(ix+REGA)
 1998 D1:C21C DD 77 00 -      ld  (ix+REGA),A
 1999 D1:C21F DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2000 D1:C233 C3 73 B3 D1     jp i6502NextLoad
 2001 D1:C237 -  -  -  -  
 2002 D1:C237 -  -  -  -  
 2003 D1:C237 -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 2004 D1:C237 -  -  -  -  inst6502_eor_zpx:
 2005 D1:C237 ED 33 04 -      ADDCYC(4)
 2006 D1:C23A 7E -  -  -      ld  a,(hl)
 2007 D1:C23B 01 00 38 D0     ld  bc,ZEROPAGE
 2008 D1:C23F 81 -  -  -      add a,c
 2009 D1:C240 DD 86 01 -      add a,(ix+REGX)
 2010 D1:C243 4F -  -  -      ld  c,a
 2011 D1:C244 0A -  -  -      ld  a,(bc)
 2012 D1:C245 DD AE 00 -      xor a,(ix+REGA)
 2013 D1:C248 DD 77 00 -      ld  (ix+REGA),A
 2014 D1:C24B DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2015 D1:C25F C3 73 B3 D1     jp i6502NextLoad
 2016 D1:C263 -  -  -  -  
 2017 D1:C263 -  -  -  -  ;absolute	EOR oper	4D	3	4  
 2018 D1:C263 -  -  -  -  inst6502_eor_abs:
 2019 D1:C263 ED 33 04 -      ADDCYC(4)
 2020 D1:C266 CD D9 B5 D1     call subroutine6502_abs_split_start
 2021 D1:C26A E5 -  -  -      push hl
 2022 D1:C26B 50 -  -  -          ld  d,b
 2023 D1:C26C 79 -  -  -          ld  a,c
 2024 D1:C26D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2025 D1:C26F ED 4C -  -          mlt bc
 2026 D1:C271 21 00 40 D0         ld  hl,PAGETABLE
 2027 D1:C275 09 -  -  -          add hl,bc
 2028 D1:C276 ED 27 -  -          ld  hl,(hl)
 2029 D1:C278 06 00 -  -          ld  b,0
 2030 D1:C27A 4F -  -  -          ld  c,a
 2031 D1:C27B 09 -  -  -          add hl,bc   ;full address
 2032 D1:C27C 7E -  -  -          READ_ACCESS
 2033 D1:C27D E1 -  -  -      pop hl
 2034 D1:C27E DD AE 00 -      xor a,(ix+REGA)
 2035 D1:C281 DD 77 00 -      ld  (ix+REGA),A
 2036 D1:C284 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2037 D1:C298 C3 73 B3 D1     jp i6502NextLoad
 2038 D1:C29C -  -  -  -  
 2039 D1:C29C -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 2040 D1:C29C -  -  -  -  inst6502_eor_absx:
 2041 D1:C29C ED 33 04 -      ADDCYC(4)
 2042 D1:C29F CD D9 B5 D1     call subroutine6502_abs_split_start
 2043 D1:C2A3 E5 -  -  -      push hl
 2044 D1:C2A4 50 -  -  -          ld  d,b
 2045 D1:C2A5 79 -  -  -          ld  a,c
 2046 D1:C2A6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2047 D1:C2A8 ED 4C -  -          mlt bc
 2048 D1:C2AA 21 00 40 D0         ld  hl,PAGETABLE
 2049 D1:C2AE 09 -  -  -          add hl,bc
 2050 D1:C2AF ED 27 -  -          ld  hl,(hl)
 2051 D1:C2B1 06 00 -  -          ld  b,0
 2052 D1:C2B3 DD 86 01 -          add a,(ix+REGX)
 2053 D1:C2B6 4F -  -  -          ld  c,a
 2054 D1:C2B7 30 04 -  -          jr  nc,+_
 2055 D1:C2B9 04 -  -  -          inc b
 2056 D1:C2BA 14 -  -  -          inc d
 2057 D1:C2BB FD 23 -  -          ADDCYC(1)
 2058 D1:C2BD 09 -  -  -  _:      add hl,bc   ;full address
 2059 D1:C2BE 7E -  -  -          READ_ACCESS
 2060 D1:C2BF E1 -  -  -      pop hl
 2061 D1:C2C0 DD AE 00 -      xor a,(ix+REGA)
 2062 D1:C2C3 DD 77 00 -      ld  (ix+REGA),A
 2063 D1:C2C6 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2064 D1:C2DA C3 73 B3 D1     jp i6502NextLoad
 2065 D1:C2DE -  -  -  -  
 2066 D1:C2DE -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2067 D1:C2DE -  -  -  -  inst6502_eor_absy:
 2068 D1:C2DE ED 33 04 -      ADDCYC(4)
 2069 D1:C2E1 CD D9 B5 D1     call subroutine6502_abs_split_start
 2070 D1:C2E5 E5 -  -  -      push hl
 2071 D1:C2E6 50 -  -  -          ld  d,b
 2072 D1:C2E7 79 -  -  -          ld  a,c
 2073 D1:C2E8 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2074 D1:C2EA ED 4C -  -          mlt bc
 2075 D1:C2EC 21 00 40 D0         ld  hl,PAGETABLE
 2076 D1:C2F0 09 -  -  -          add hl,bc
 2077 D1:C2F1 ED 27 -  -          ld  hl,(hl)
 2078 D1:C2F3 06 00 -  -          ld  b,0
 2079 D1:C2F5 DD 86 02 -          add a,(ix+REGY)
 2080 D1:C2F8 4F -  -  -          ld  c,a
 2081 D1:C2F9 30 04 -  -          jr  nc,+_
 2082 D1:C2FB 04 -  -  -          inc b
 2083 D1:C2FC 14 -  -  -          inc d
 2084 D1:C2FD FD 23 -  -          ADDCYC(1)
 2085 D1:C2FF 09 -  -  -  _:      add hl,bc   ;full address
 2086 D1:C300 7E -  -  -          READ_ACCESS
 2087 D1:C301 E1 -  -  -      pop hl
 2088 D1:C302 DD AE 00 -      xor a,(ix+REGA)
 2089 D1:C305 DD 77 00 -      ld  (ix+REGA),A
 2090 D1:C308 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2091 D1:C31C C3 73 B3 D1     jp i6502NextLoad
 2092 D1:C320 -  -  -  -  
 2093 D1:C320 -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2094 D1:C320 -  -  -  -  inst6502_eor_indx:
 2095 D1:C320 ED 33 06 -      ADDCYC(6)
 2096 D1:C323 E5 -  -  -      push hl
 2097 D1:C324 7E -  -  -          ld  a,(hl)
 2098 D1:C325 21 00 38 D0         ld  hl,ZEROPAGE
 2099 D1:C329 85 -  -  -          add a,L
 2100 D1:C32A DD 86 01 -          add a,(ix+REGX)
 2101 D1:C32D 6F -  -  -          ld  L,a
 2102 D1:C32E 7E -  -  -          ld  a,(hl)
 2103 D1:C32F 2C -  -  -          inc L
 2104 D1:C330 56 -  -  -          ld  d,(hl)
 2105 D1:C331 42 -  -  -          ld  b,d
 2106 D1:C332 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2107 D1:C334 ED 4C -  -          mlt bc
 2108 D1:C336 21 00 40 D0         ld  hl,PAGETABLE
 2109 D1:C33A 09 -  -  -          add hl,bc
 2110 D1:C33B ED 27 -  -          ld  hl,(hl)
 2111 D1:C33D 06 00 -  -          ld  b,0
 2112 D1:C33F 4F -  -  -          ld  c,a
 2113 D1:C340 09 -  -  -          add hl,bc
 2114 D1:C341 7E -  -  -          READ_ACCESS
 2115 D1:C342 E1 -  -  -      pop hl
 2116 D1:C343 DD AE 00 -      xor a,(ix+REGA)
 2117 D1:C346 DD 77 00 -      ld  (ix+REGA),A
 2118 D1:C349 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2119 D1:C35D C3 73 B3 D1     jp i6502NextLoad
 2120 D1:C361 -  -  -  -  
 2121 D1:C361 -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2122 D1:C361 -  -  -  -  inst6502_eor_indy:
 2123 D1:C361 ED 33 05 -      ADDCYC(5)
 2124 D1:C364 E5 -  -  -      push hl
 2125 D1:C365 7E -  -  -          ld  a,(hl)
 2126 D1:C366 21 00 38 D0         ld  hl,ZEROPAGE
 2127 D1:C36A 85 -  -  -          add a,L
 2128 D1:C36B 6F -  -  -          ld  L,a
 2129 D1:C36C 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2130 D1:C36D 2C -  -  -          inc L
 2131 D1:C36E DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2132 D1:C371 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2133 D1:C372 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2134 D1:C374 24 -  -  -          inc h
 2135 D1:C375 FD 23 -  -          ADDCYC(1)
 2136 D1:C377 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2137 D1:C378 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2138 D1:C37A ED 6C -  -          mlt hl          ;23.
 2139 D1:C37C 01 00 40 D0         ld  bc,PAGETABLE
 2140 D1:C380 09 -  -  -          add hl,bc
 2141 D1:C381 ED 27 -  -          ld  hl,(hl)     ;address get.
 2142 D1:C383 01 00 00 00         ld  bc,0
 2143 D1:C387 4F -  -  -          ld  c,a
 2144 D1:C388 09 -  -  -          add hl,bc       ;Full address get.
 2145 D1:C389 7E -  -  -          READ_ACCESS
 2146 D1:C38A E1 -  -  -      pop hl
 2147 D1:C38B DD AE 00 -      xor a,(ix+REGA)
 2148 D1:C38E DD 77 00 -      ld  (ix+REGA),A
 2149 D1:C391 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2150 D1:C3A5 C3 73 B3 D1     jp i6502NextLoad
 2151 D1:C3A9 -  -  -  -  
 2152 D1:C3A9 -  -  -  -  ;-----------------------------------------------------------------------------
 2153 D1:C3A9 -  -  -  -  ;ORA - OR Memory with Accumulator
 2154 D1:C3A9 -  -  -  -  ;A OR M -> A
 2155 D1:C3A9 -  -  -  -  ;N	Z	C	I	D	V
 2156 D1:C3A9 -  -  -  -  ;+	+	-	-	-	-
 2157 D1:C3A9 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2158 D1:C3A9 -  -  -  -  
 2159 D1:C3A9 -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2160 D1:C3A9 -  -  -  -  inst6502_ora_imm:
 2161 D1:C3A9 ED 33 02 -      ADDCYC(2)
 2162 D1:C3AC 7E -  -  -      ld  a,(hl)
 2163 D1:C3AD DD B6 00 -      or  a,(ix+REGA)
 2164 D1:C3B0 DD 77 00 -      ld  (ix+REGA),A
 2165 D1:C3B3 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2166 D1:C3C7 C3 73 B3 D1     jp i6502NextLoad
 2167 D1:C3CB -  -  -  -  
 2168 D1:C3CB -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2169 D1:C3CB -  -  -  -  inst6502_ora_zp:
 2170 D1:C3CB ED 33 03 -      ADDCYC(3)
 2171 D1:C3CE 7E -  -  -      ld  a,(hl)
 2172 D1:C3CF 01 00 38 D0     ld  bc,ZEROPAGE
 2173 D1:C3D3 81 -  -  -      add a,c
 2174 D1:C3D4 4F -  -  -      ld  c,a
 2175 D1:C3D5 0A -  -  -      ld  a,(bc)
 2176 D1:C3D6 DD B6 00 -      or  a,(ix+REGA)
 2177 D1:C3D9 DD 77 00 -      ld  (ix+REGA),A
 2178 D1:C3DC DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2179 D1:C3F0 C3 73 B3 D1     jp i6502NextLoad
 2180 D1:C3F4 -  -  -  -  
 2181 D1:C3F4 -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2182 D1:C3F4 -  -  -  -  inst6502_ora_zpx:
 2183 D1:C3F4 ED 33 04 -      ADDCYC(4)
 2184 D1:C3F7 7E -  -  -      ld  a,(hl)
 2185 D1:C3F8 01 00 38 D0     ld  bc,ZEROPAGE
 2186 D1:C3FC 81 -  -  -      add a,c
 2187 D1:C3FD DD 86 01 -      add a,(ix+REGX)
 2188 D1:C400 4F -  -  -      ld  c,a
 2189 D1:C401 0A -  -  -      ld  a,(bc)
 2190 D1:C402 DD B6 00 -      or  a,(ix+REGA)
 2191 D1:C405 DD 77 00 -      ld  (ix+REGA),A
 2192 D1:C408 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2193 D1:C41C C3 73 B3 D1     jp i6502NextLoad
 2194 D1:C420 -  -  -  -  
 2195 D1:C420 -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2196 D1:C420 -  -  -  -  inst6502_ora_abs:
 2197 D1:C420 ED 33 04 -      ADDCYC(4)
 2198 D1:C423 CD D9 B5 D1     call subroutine6502_abs_split_start
 2199 D1:C427 E5 -  -  -      push hl
 2200 D1:C428 50 -  -  -          ld  d,b
 2201 D1:C429 79 -  -  -          ld  a,c
 2202 D1:C42A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2203 D1:C42C ED 4C -  -          mlt bc
 2204 D1:C42E 21 00 40 D0         ld  hl,PAGETABLE
 2205 D1:C432 09 -  -  -          add hl,bc
 2206 D1:C433 ED 27 -  -          ld  hl,(hl)
 2207 D1:C435 06 00 -  -          ld  b,0
 2208 D1:C437 4F -  -  -          ld  c,a
 2209 D1:C438 09 -  -  -          add hl,bc   ;full address
 2210 D1:C439 7E -  -  -          READ_ACCESS
 2211 D1:C43A E1 -  -  -      pop hl
 2212 D1:C43B DD B6 00 -      or  a,(ix+REGA)
 2213 D1:C43E DD 77 00 -      ld  (ix+REGA),A
 2214 D1:C441 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2215 D1:C455 C3 73 B3 D1     jp i6502NextLoad
 2216 D1:C459 -  -  -  -  
 2217 D1:C459 -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2218 D1:C459 -  -  -  -  inst6502_ora_absx:
 2219 D1:C459 ED 33 04 -      ADDCYC(4)
 2220 D1:C45C CD D9 B5 D1     call subroutine6502_abs_split_start
 2221 D1:C460 E5 -  -  -      push hl
 2222 D1:C461 50 -  -  -          ld  d,b
 2223 D1:C462 79 -  -  -          ld  a,c
 2224 D1:C463 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2225 D1:C465 ED 4C -  -          mlt bc
 2226 D1:C467 21 00 40 D0         ld  hl,PAGETABLE
 2227 D1:C46B 09 -  -  -          add hl,bc
 2228 D1:C46C ED 27 -  -          ld  hl,(hl)
 2229 D1:C46E 06 00 -  -          ld  b,0
 2230 D1:C470 DD 86 01 -          add a,(ix+REGX)
 2231 D1:C473 4F -  -  -          ld  c,a
 2232 D1:C474 30 04 -  -          jr  nc,+_
 2233 D1:C476 04 -  -  -          inc b
 2234 D1:C477 14 -  -  -          inc d
 2235 D1:C478 FD 23 -  -          ADDCYC(1)
 2236 D1:C47A 09 -  -  -  _:      add hl,bc   ;full address
 2237 D1:C47B 7E -  -  -          READ_ACCESS
 2238 D1:C47C E1 -  -  -      pop hl
 2239 D1:C47D DD B6 00 -      or  a,(ix+REGA)
 2240 D1:C480 DD 77 00 -      ld  (ix+REGA),A
 2241 D1:C483 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2242 D1:C497 C3 73 B3 D1     jp i6502NextLoad
 2243 D1:C49B -  -  -  -  
 2244 D1:C49B -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2245 D1:C49B -  -  -  -  inst6502_ora_absy:
 2246 D1:C49B ED 33 04 -      ADDCYC(4)
 2247 D1:C49E CD D9 B5 D1     call subroutine6502_abs_split_start
 2248 D1:C4A2 E5 -  -  -      push hl
 2249 D1:C4A3 50 -  -  -          ld  d,b
 2250 D1:C4A4 79 -  -  -          ld  a,c
 2251 D1:C4A5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2252 D1:C4A7 ED 4C -  -          mlt bc
 2253 D1:C4A9 21 00 40 D0         ld  hl,PAGETABLE
 2254 D1:C4AD 09 -  -  -          add hl,bc
 2255 D1:C4AE ED 27 -  -          ld  hl,(hl)
 2256 D1:C4B0 06 00 -  -          ld  b,0
 2257 D1:C4B2 DD 86 02 -          add a,(ix+REGY)
 2258 D1:C4B5 4F -  -  -          ld  c,a
 2259 D1:C4B6 30 04 -  -          jr  nc,+_
 2260 D1:C4B8 04 -  -  -          inc b
 2261 D1:C4B9 14 -  -  -          inc d
 2262 D1:C4BA FD 23 -  -          ADDCYC(1)
 2263 D1:C4BC 09 -  -  -  _:      add hl,bc   ;full address
 2264 D1:C4BD 7E -  -  -          READ_ACCESS
 2265 D1:C4BE E1 -  -  -      pop hl
 2266 D1:C4BF DD B6 00 -      or  a,(ix+REGA)
 2267 D1:C4C2 DD 77 00 -      ld  (ix+REGA),A
 2268 D1:C4C5 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2269 D1:C4D9 C3 73 B3 D1     jp i6502NextLoad
 2270 D1:C4DD -  -  -  -  
 2271 D1:C4DD -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2272 D1:C4DD -  -  -  -  inst6502_ora_indx:
 2273 D1:C4DD ED 33 06 -      ADDCYC(6)
 2274 D1:C4E0 E5 -  -  -      push hl
 2275 D1:C4E1 7E -  -  -          ld  a,(hl)
 2276 D1:C4E2 21 00 38 D0         ld  hl,ZEROPAGE
 2277 D1:C4E6 85 -  -  -          add a,L
 2278 D1:C4E7 DD 86 01 -          add a,(ix+REGX)
 2279 D1:C4EA 6F -  -  -          ld  L,a
 2280 D1:C4EB 7E -  -  -          ld  a,(hl)
 2281 D1:C4EC 2C -  -  -          inc L
 2282 D1:C4ED 56 -  -  -          ld  d,(hl)
 2283 D1:C4EE 42 -  -  -          ld  b,d
 2284 D1:C4EF 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2285 D1:C4F1 ED 4C -  -          mlt bc
 2286 D1:C4F3 21 00 40 D0         ld  hl,PAGETABLE
 2287 D1:C4F7 09 -  -  -          add hl,bc
 2288 D1:C4F8 ED 27 -  -          ld  hl,(hl)
 2289 D1:C4FA 06 00 -  -          ld  b,0
 2290 D1:C4FC 4F -  -  -          ld  c,a
 2291 D1:C4FD 09 -  -  -          add hl,bc
 2292 D1:C4FE 7E -  -  -          READ_ACCESS
 2293 D1:C4FF E1 -  -  -      pop hl
 2294 D1:C500 DD B6 00 -      or  a,(ix+REGA)
 2295 D1:C503 DD 77 00 -      ld  (ix+REGA),A
 2296 D1:C506 DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2297 D1:C51A C3 73 B3 D1     jp i6502NextLoad
 2298 D1:C51E -  -  -  -  
 2299 D1:C51E -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2300 D1:C51E -  -  -  -  inst6502_ora_indy:
 2301 D1:C51E ED 33 05 -      ADDCYC(5)
 2302 D1:C521 E5 -  -  -      push hl
 2303 D1:C522 7E -  -  -          ld  a,(hl)
 2304 D1:C523 21 00 38 D0         ld  hl,ZEROPAGE
 2305 D1:C527 85 -  -  -          add a,L
 2306 D1:C528 6F -  -  -          ld  L,a
 2307 D1:C529 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2308 D1:C52A 2C -  -  -          inc L
 2309 D1:C52B DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2310 D1:C52E 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2311 D1:C52F 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2312 D1:C531 24 -  -  -          inc h
 2313 D1:C532 FD 23 -  -          ADDCYC(1)
 2314 D1:C534 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2315 D1:C535 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2316 D1:C537 ED 6C -  -          mlt hl          ;23.
 2317 D1:C539 01 00 40 D0         ld  bc,PAGETABLE
 2318 D1:C53D 09 -  -  -          add hl,bc
 2319 D1:C53E ED 27 -  -          ld  hl,(hl)     ;address get.
 2320 D1:C540 01 00 00 00         ld  bc,0
 2321 D1:C544 4F -  -  -          ld  c,a
 2322 D1:C545 09 -  -  -          add hl,bc       ;Full address get.
 2323 D1:C546 7E -  -  -          READ_ACCESS
 2324 D1:C547 E1 -  -  -      pop hl
 2325 D1:C548 DD B6 00 -      or  a,(ix+REGA)
 2326 D1:C54B DD 77 00 -      ld  (ix+REGA),A
 2327 D1:C54E DD 46 04 CB 
              07 CB 88 20 
              02 CB C8 -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2328 D1:C562 C3 73 B3 D1     jp i6502NextLoad
 2329 D1:C566 -  -  -  -  
 2330 D1:C566 -  -  -  -  ;-----------------------------------------------------------------------------
 2331 D1:C566 -  -  -  -  ;-----------------------------------------------------------------------------
 2332 D1:C566 -  -  -  -  ;-----------------------------------------------------------------------------
 2333 D1:C566 -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2334 D1:C566 -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2335 D1:C566 -  -  -  -  ;C <- [76543210] <- 0
 2336 D1:C566 -  -  -  -  ;N	Z	C	I	D	V
 2337 D1:C566 -  -  -  -  ;+	+	+	-	-	-
 2338 D1:C566 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2339 D1:C566 -  -  -  -  
 2340 D1:C566 -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2341 D1:C566 -  -  -  -  inst6502_asl:
 2342 D1:C566 ED 33 02 -      ADDCYC(2)
 2343 D1:C569 DD CB 00 26     sla (ix+REGA)
 2344 D1:C56D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2345 D1:C586 C3 8C B3 D1     jp i6502FinishLoad
 2346 D1:C58A -  -  -  -  
 2347 D1:C58A -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2348 D1:C58A -  -  -  -  inst6502_asl_zp:
 2349 D1:C58A ED 33 05 -      ADDCYC(5)
 2350 D1:C58D 7E -  -  -      ld  a,(hl)
 2351 D1:C58E 01 00 38 D0     ld  bc,ZEROPAGE
 2352 D1:C592 81 -  -  -      add a,c
 2353 D1:C593 4F -  -  -      ld  c,a
 2354 D1:C594 0A -  -  -      ld  a,(bc)
 2355 D1:C595 CB 27 -  -      sla a
 2356 D1:C597 02 -  -  -      ld  (bc),a
 2357 D1:C598 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2358 D1:C5B1 C3 73 B3 D1     jp i6502NextLoad
 2359 D1:C5B5 -  -  -  -  
 2360 D1:C5B5 -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2361 D1:C5B5 -  -  -  -  inst6502_asl_zpx:
 2362 D1:C5B5 ED 33 06 -      ADDCYC(6)
 2363 D1:C5B8 7E -  -  -      ld  a,(hl)
 2364 D1:C5B9 01 00 38 D0     ld  bc,ZEROPAGE
 2365 D1:C5BD 81 -  -  -      add a,c
 2366 D1:C5BE DD 86 01 -      add a,(ix+REGX)
 2367 D1:C5C1 4F -  -  -      ld  c,a
 2368 D1:C5C2 0A -  -  -      ld  a,(bc)
 2369 D1:C5C3 CB 27 -  -      sla a
 2370 D1:C5C5 02 -  -  -      ld  (bc),a
 2371 D1:C5C6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2372 D1:C5DF C3 73 B3 D1     jp i6502NextLoad
 2373 D1:C5E3 -  -  -  -  
 2374 D1:C5E3 -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2375 D1:C5E3 -  -  -  -  inst6502_asl_abs:
 2376 D1:C5E3 ED 33 06 -      ADDCYC(6)
 2377 D1:C5E6 CD D9 B5 D1     call subroutine6502_abs_split_start
 2378 D1:C5EA E5 -  -  -      push hl
 2379 D1:C5EB 50 -  -  -          ld  d,b
 2380 D1:C5EC 79 -  -  -          ld  a,c
 2381 D1:C5ED 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2382 D1:C5EF ED 4C -  -          mlt bc
 2383 D1:C5F1 21 00 40 D0         ld  hl,PAGETABLE
 2384 D1:C5F5 09 -  -  -          add hl,bc
 2385 D1:C5F6 ED 27 -  -          ld  hl,(hl)
 2386 D1:C5F8 06 00 -  -          ld  b,0
 2387 D1:C5FA 4F -  -  -          ld  c,a
 2388 D1:C5FB 09 -  -  -          add hl,bc   ;full address
 2389 D1:C5FC 7E -  -  -          READ_ACCESS
 2390 D1:C5FD E1 -  -  -      pop hl
 2391 D1:C5FE 7E -  -  -      ld  a,(hl)
 2392 D1:C5FF CB 27 -  -      sla a
 2393 D1:C601 47 -  -  -      ld  b,a
 2394 D1:C602 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2395 D1:C61B 70 -  -  -      WRITE_ACCESS
 2396 D1:C61C C3 73 B3 D1     jp i6502NextLoad
 2397 D1:C620 -  -  -  -  
 2398 D1:C620 -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2399 D1:C620 -  -  -  -  inst6502_asl_absx:
 2400 D1:C620 ED 33 07 -      ADDCYC(7)
 2401 D1:C623 CD D9 B5 D1     call subroutine6502_abs_split_start
 2402 D1:C627 E5 -  -  -      push hl
 2403 D1:C628 50 -  -  -          ld  d,b
 2404 D1:C629 79 -  -  -          ld  a,c
 2405 D1:C62A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2406 D1:C62C ED 4C -  -          mlt bc
 2407 D1:C62E 21 00 40 D0         ld  hl,PAGETABLE
 2408 D1:C632 09 -  -  -          add hl,bc
 2409 D1:C633 ED 27 -  -          ld  hl,(hl)
 2410 D1:C635 06 00 -  -          ld  b,0
 2411 D1:C637 DD 86 01 -          add a,(ix+REGX)
 2412 D1:C63A 4F -  -  -          ld  c,a
 2413 D1:C63B 30 02 -  -          jr  nc,+_
 2414 D1:C63D 04 -  -  -          inc b
 2415 D1:C63E 14 -  -  -          inc d
 2416 D1:C63F 09 -  -  -  _:      add hl,bc   ;full address
 2417 D1:C640 7E -  -  -          READ_ACCESS
 2418 D1:C641 E1 -  -  -      pop hl
 2419 D1:C642 7E -  -  -      ld  a,(hl)
 2420 D1:C643 CB 27 -  -      sla a
 2421 D1:C645 47 -  -  -      ld  b,a
 2422 D1:C646 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2423 D1:C65F 70 -  -  -      WRITE_ACCESS
 2424 D1:C660 C3 73 B3 D1     jp i6502NextLoad
 2425 D1:C664 -  -  -  -  
 2426 D1:C664 -  -  -  -  ;-----------------------------------------------------------------------------
 2427 D1:C664 -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2428 D1:C664 -  -  -  -  ;0 -> [76543210] -> C
 2429 D1:C664 -  -  -  -  ;N	Z	C	I	D	V
 2430 D1:C664 -  -  -  -  ;0	+	+	-	-	-
 2431 D1:C664 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2432 D1:C664 -  -  -  -  
 2433 D1:C664 -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2434 D1:C664 -  -  -  -  inst6502_lsr:
 2435 D1:C664 ED 33 02 -      ADDCYC(2)
 2436 D1:C667 DD CB 00 3E     srl (ix+REGA)
 2437 D1:C66B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2438 D1:C684 C3 8C B3 D1     jp i6502FinishLoad
 2439 D1:C688 -  -  -  -  
 2440 D1:C688 -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2441 D1:C688 -  -  -  -  inst6502_lsr_zp:
 2442 D1:C688 ED 33 05 -      ADDCYC(5)
 2443 D1:C68B 7E -  -  -      ld  a,(hl)
 2444 D1:C68C 01 00 38 D0     ld  bc,ZEROPAGE
 2445 D1:C690 81 -  -  -      add a,c
 2446 D1:C691 4F -  -  -      ld  c,a
 2447 D1:C692 0A -  -  -      ld  a,(bc)
 2448 D1:C693 CB 3F -  -      srl a
 2449 D1:C695 02 -  -  -      ld  (bc),a
 2450 D1:C696 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2451 D1:C6AF C3 73 B3 D1     jp i6502NextLoad
 2452 D1:C6B3 -  -  -  -  
 2453 D1:C6B3 -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2454 D1:C6B3 -  -  -  -  inst6502_lsr_zpx:
 2455 D1:C6B3 ED 33 06 -      ADDCYC(6)
 2456 D1:C6B6 7E -  -  -      ld  a,(hl)
 2457 D1:C6B7 01 00 38 D0     ld  bc,ZEROPAGE
 2458 D1:C6BB 81 -  -  -      add a,c
 2459 D1:C6BC DD 86 01 -      add a,(ix+REGX)
 2460 D1:C6BF 4F -  -  -      ld  c,a
 2461 D1:C6C0 0A -  -  -      ld  a,(bc)
 2462 D1:C6C1 CB 3F -  -      srl a
 2463 D1:C6C3 02 -  -  -      ld  (bc),a
 2464 D1:C6C4 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2465 D1:C6DD C3 73 B3 D1     jp i6502NextLoad
 2466 D1:C6E1 -  -  -  -      
 2467 D1:C6E1 -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2468 D1:C6E1 -  -  -  -  inst6502_lsr_abs:
 2469 D1:C6E1 ED 33 06 -      ADDCYC(6)
 2470 D1:C6E4 CD D9 B5 D1     call subroutine6502_abs_split_start
 2471 D1:C6E8 E5 -  -  -      push hl
 2472 D1:C6E9 50 -  -  -          ld  d,b
 2473 D1:C6EA 79 -  -  -          ld  a,c
 2474 D1:C6EB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2475 D1:C6ED ED 4C -  -          mlt bc
 2476 D1:C6EF 21 00 40 D0         ld  hl,PAGETABLE
 2477 D1:C6F3 09 -  -  -          add hl,bc
 2478 D1:C6F4 ED 27 -  -          ld  hl,(hl)
 2479 D1:C6F6 06 00 -  -          ld  b,0
 2480 D1:C6F8 4F -  -  -          ld  c,a
 2481 D1:C6F9 09 -  -  -          add hl,bc   ;full address
 2482 D1:C6FA 7E -  -  -          READ_ACCESS
 2483 D1:C6FB E1 -  -  -      pop hl
 2484 D1:C6FC 7E -  -  -      ld  a,(hl)
 2485 D1:C6FD CB 3F -  -      srl a
 2486 D1:C6FF 47 -  -  -      ld  b,a
 2487 D1:C700 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2488 D1:C719 70 -  -  -      WRITE_ACCESS
 2489 D1:C71A C3 73 B3 D1     jp i6502NextLoad
 2490 D1:C71E -  -  -  -  
 2491 D1:C71E -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2492 D1:C71E -  -  -  -  inst6502_lsr_absx:
 2493 D1:C71E ED 33 07 -      ADDCYC(7)
 2494 D1:C721 CD D9 B5 D1     call subroutine6502_abs_split_start
 2495 D1:C725 E5 -  -  -      push hl
 2496 D1:C726 50 -  -  -          ld  d,b
 2497 D1:C727 79 -  -  -          ld  a,c
 2498 D1:C728 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2499 D1:C72A ED 4C -  -          mlt bc
 2500 D1:C72C 21 00 40 D0         ld  hl,PAGETABLE
 2501 D1:C730 09 -  -  -          add hl,bc
 2502 D1:C731 ED 27 -  -          ld  hl,(hl)
 2503 D1:C733 06 00 -  -          ld  b,0
 2504 D1:C735 DD 86 01 -          add a,(ix+REGX)
 2505 D1:C738 4F -  -  -          ld  c,a
 2506 D1:C739 30 02 -  -          jr  nc,+_
 2507 D1:C73B 04 -  -  -          inc b
 2508 D1:C73C 14 -  -  -          inc d
 2509 D1:C73D 09 -  -  -  _:      add hl,bc   ;full address
 2510 D1:C73E 7E -  -  -          READ_ACCESS
 2511 D1:C73F E1 -  -  -      pop hl
 2512 D1:C740 7E -  -  -      ld  a,(hl)
 2513 D1:C741 CB 3F -  -      srl a
 2514 D1:C743 47 -  -  -      ld  b,a
 2515 D1:C744 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2516 D1:C75D 70 -  -  -      WRITE_ACCESS
 2517 D1:C75E C3 73 B3 D1     jp i6502NextLoad
 2518 D1:C762 -  -  -  -  
 2519 D1:C762 -  -  -  -  ;-----------------------------------------------------------------------------
 2520 D1:C762 -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2521 D1:C762 -  -  -  -  ;C <- [76543210] <- C
 2522 D1:C762 -  -  -  -  ;N	Z	C	I	D	V
 2523 D1:C762 -  -  -  -  ;+	+	+	-	-	-
 2524 D1:C762 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2525 D1:C762 -  -  -  -  
 2526 D1:C762 -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2527 D1:C762 -  -  -  -  inst6502_rol:
 2528 D1:C762 ED 33 02 -      ADDCYC(2)
 2529 D1:C765 DD 7E 04 -      ld  a,(ix+REGSR)
 2530 D1:C768 1F -  -  -      rra
 2531 D1:C769 DD CB 00 16     rl (ix+REGA)
 2532 D1:C76D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2533 D1:C786 C3 8C B3 D1     jp i6502FinishLoad
 2534 D1:C78A -  -  -  -  
 2535 D1:C78A -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2536 D1:C78A -  -  -  -  inst6502_rol_zp:
 2537 D1:C78A ED 33 05 -      ADDCYC(5)
 2538 D1:C78D 7E -  -  -      ld  a,(hl)
 2539 D1:C78E 01 00 38 D0     ld  bc,ZEROPAGE
 2540 D1:C792 81 -  -  -      add a,c
 2541 D1:C793 4F -  -  -      ld  c,a
 2542 D1:C794 DD 7E 04 -      ld  a,(ix+REGSR)
 2543 D1:C797 1F -  -  -      rra
 2544 D1:C798 0A -  -  -      ld  a,(bc)
 2545 D1:C799 17 -  -  -      rla
 2546 D1:C79A 02 -  -  -      ld  (bc),a
 2547 D1:C79B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2548 D1:C7B4 C3 73 B3 D1     jp i6502NextLoad
 2549 D1:C7B8 -  -  -  -  
 2550 D1:C7B8 -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2551 D1:C7B8 -  -  -  -  inst6502_rol_zpx:
 2552 D1:C7B8 ED 33 06 -      ADDCYC(6)
 2553 D1:C7BB 7E -  -  -      ld  a,(hl)
 2554 D1:C7BC 01 00 38 D0     ld  bc,ZEROPAGE
 2555 D1:C7C0 81 -  -  -      add a,c
 2556 D1:C7C1 DD 86 01 -      add a,(ix+REGX)
 2557 D1:C7C4 4F -  -  -      ld  c,a
 2558 D1:C7C5 DD 7E 04 -      ld  a,(ix+REGSR)
 2559 D1:C7C8 1F -  -  -      rra
 2560 D1:C7C9 0A -  -  -      ld  a,(bc)
 2561 D1:C7CA 17 -  -  -      rla
 2562 D1:C7CB 02 -  -  -      ld  (bc),a
 2563 D1:C7CC DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2564 D1:C7E5 C3 73 B3 D1     jp i6502NextLoad
 2565 D1:C7E9 -  -  -  -  
 2566 D1:C7E9 -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2567 D1:C7E9 -  -  -  -  inst6502_rol_abs:
 2568 D1:C7E9 ED 33 06 -      ADDCYC(6)
 2569 D1:C7EC CD D9 B5 D1     call subroutine6502_abs_split_start
 2570 D1:C7F0 E5 -  -  -      push hl
 2571 D1:C7F1 50 -  -  -          ld  d,b
 2572 D1:C7F2 79 -  -  -          ld  a,c
 2573 D1:C7F3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2574 D1:C7F5 ED 4C -  -          mlt bc
 2575 D1:C7F7 21 00 40 D0         ld  hl,PAGETABLE
 2576 D1:C7FB 09 -  -  -          add hl,bc
 2577 D1:C7FC ED 27 -  -          ld  hl,(hl)
 2578 D1:C7FE 06 00 -  -          ld  b,0
 2579 D1:C800 4F -  -  -          ld  c,a
 2580 D1:C801 09 -  -  -          add hl,bc   ;full address
 2581 D1:C802 7E -  -  -          READ_ACCESS
 2582 D1:C803 E1 -  -  -      pop hl
 2583 D1:C804 DD 7E 04 -      ld  a,(ix+REGSR)
 2584 D1:C807 1F -  -  -      rra
 2585 D1:C808 7E -  -  -      ld  a,(hl)
 2586 D1:C809 17 -  -  -      rla
 2587 D1:C80A 47 -  -  -      ld  b,a
 2588 D1:C80B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2589 D1:C824 70 -  -  -      WRITE_ACCESS
 2590 D1:C825 C3 73 B3 D1     jp i6502NextLoad
 2591 D1:C829 -  -  -  -  
 2592 D1:C829 -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2593 D1:C829 -  -  -  -  inst6502_rol_absx:
 2594 D1:C829 ED 33 07 -      ADDCYC(7)
 2595 D1:C82C CD D9 B5 D1     call subroutine6502_abs_split_start
 2596 D1:C830 E5 -  -  -      push hl
 2597 D1:C831 50 -  -  -          ld  d,b
 2598 D1:C832 79 -  -  -          ld  a,c
 2599 D1:C833 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2600 D1:C835 ED 4C -  -          mlt bc
 2601 D1:C837 21 00 40 D0         ld  hl,PAGETABLE
 2602 D1:C83B 09 -  -  -          add hl,bc
 2603 D1:C83C ED 27 -  -          ld  hl,(hl)
 2604 D1:C83E 06 00 -  -          ld  b,0
 2605 D1:C840 DD 86 01 -          add a,(ix+REGX)
 2606 D1:C843 4F -  -  -          ld  c,a
 2607 D1:C844 30 02 -  -          jr  nc,+_
 2608 D1:C846 04 -  -  -          inc b
 2609 D1:C847 14 -  -  -          inc d
 2610 D1:C848 09 -  -  -  _:      add hl,bc   ;full address
 2611 D1:C849 7E -  -  -          READ_ACCESS
 2612 D1:C84A E1 -  -  -      pop hl
 2613 D1:C84B DD 7E 04 -      ld  a,(ix+REGSR)
 2614 D1:C84E 1F -  -  -      rra
 2615 D1:C84F 7E -  -  -      ld  a,(hl)
 2616 D1:C850 17 -  -  -      rla
 2617 D1:C851 47 -  -  -      ld  b,a
 2618 D1:C852 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2619 D1:C86B 70 -  -  -      WRITE_ACCESS
 2620 D1:C86C C3 73 B3 D1     jp i6502NextLoad
 2621 D1:C870 -  -  -  -  
 2622 D1:C870 -  -  -  -  ;-----------------------------------------------------------------------------
 2623 D1:C870 -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2624 D1:C870 -  -  -  -  ;C -> [76543210] -> C
 2625 D1:C870 -  -  -  -  ;N	Z	C	I	D	V
 2626 D1:C870 -  -  -  -  ;+	+	+	-	-	-
 2627 D1:C870 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2628 D1:C870 -  -  -  -  
 2629 D1:C870 -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2630 D1:C870 -  -  -  -  inst6502_ror:
 2631 D1:C870 ED 33 02 -      ADDCYC(2)
 2632 D1:C873 DD 7E 04 -      ld  a,(ix+REGSR)
 2633 D1:C876 1F -  -  -      rra
 2634 D1:C877 DD CB 00 1E     rr  (ix+REGA)
 2635 D1:C87B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2636 D1:C894 C3 8C B3 D1     jp i6502FinishLoad
 2637 D1:C898 -  -  -  -  
 2638 D1:C898 -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2639 D1:C898 -  -  -  -  inst6502_ror_zp:
 2640 D1:C898 ED 33 05 -      ADDCYC(5)
 2641 D1:C89B 7E -  -  -      ld  a,(hl)
 2642 D1:C89C 01 00 38 D0     ld  bc,ZEROPAGE
 2643 D1:C8A0 81 -  -  -      add a,c
 2644 D1:C8A1 4F -  -  -      ld  c,a
 2645 D1:C8A2 DD 7E 04 -      ld  a,(ix+REGSR)
 2646 D1:C8A5 1F -  -  -      rra
 2647 D1:C8A6 0A -  -  -      ld  a,(bc)
 2648 D1:C8A7 1F -  -  -      rra
 2649 D1:C8A8 02 -  -  -      ld  (bc),a
 2650 D1:C8A9 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2651 D1:C8C2 C3 73 B3 D1     jp i6502NextLoad
 2652 D1:C8C6 -  -  -  -  
 2653 D1:C8C6 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2654 D1:C8C6 -  -  -  -  inst6502_ror_zpx:
 2655 D1:C8C6 ED 33 06 -      ADDCYC(6)
 2656 D1:C8C9 7E -  -  -      ld  a,(hl)
 2657 D1:C8CA 01 00 38 D0     ld  bc,ZEROPAGE
 2658 D1:C8CE 81 -  -  -      add a,c
 2659 D1:C8CF DD 86 01 -      add a,(ix+REGX)
 2660 D1:C8D2 4F -  -  -      ld  c,a
 2661 D1:C8D3 DD 7E 04 -      ld  a,(ix+REGSR)
 2662 D1:C8D6 1F -  -  -      rra
 2663 D1:C8D7 0A -  -  -      ld  a,(bc)
 2664 D1:C8D8 1F -  -  -      rra
 2665 D1:C8D9 02 -  -  -      ld  (bc),a
 2666 D1:C8DA DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2667 D1:C8F3 C3 73 B3 D1     jp i6502NextLoad
 2668 D1:C8F7 -  -  -  -  
 2669 D1:C8F7 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2670 D1:C8F7 -  -  -  -  inst6502_ror_abs:
 2671 D1:C8F7 ED 33 06 -      ADDCYC(6)
 2672 D1:C8FA CD D9 B5 D1     call subroutine6502_abs_split_start
 2673 D1:C8FE E5 -  -  -      push hl
 2674 D1:C8FF 50 -  -  -          ld  d,b
 2675 D1:C900 79 -  -  -          ld  a,c
 2676 D1:C901 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2677 D1:C903 ED 4C -  -          mlt bc
 2678 D1:C905 21 00 40 D0         ld  hl,PAGETABLE
 2679 D1:C909 09 -  -  -          add hl,bc
 2680 D1:C90A ED 27 -  -          ld  hl,(hl)
 2681 D1:C90C 06 00 -  -          ld  b,0
 2682 D1:C90E 4F -  -  -          ld  c,a
 2683 D1:C90F 09 -  -  -          add hl,bc   ;full address
 2684 D1:C910 7E -  -  -          READ_ACCESS
 2685 D1:C911 E1 -  -  -      pop hl
 2686 D1:C912 DD 7E 04 -      ld  a,(ix+REGSR)
 2687 D1:C915 1F -  -  -      rra
 2688 D1:C916 7E -  -  -      ld  a,(hl)
 2689 D1:C917 1F -  -  -      rra
 2690 D1:C918 47 -  -  -      ld  b,a
 2691 D1:C919 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2692 D1:C932 70 -  -  -      WRITE_ACCESS
 2693 D1:C933 C3 73 B3 D1     jp i6502NextLoad
 2694 D1:C937 -  -  -  -  
 2695 D1:C937 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2696 D1:C937 -  -  -  -  inst6502_ror_absx:
 2697 D1:C937 ED 33 07 -      ADDCYC(7)
 2698 D1:C93A CD D9 B5 D1     call subroutine6502_abs_split_start
 2699 D1:C93E E5 -  -  -      push hl
 2700 D1:C93F 50 -  -  -          ld  d,b
 2701 D1:C940 79 -  -  -          ld  a,c
 2702 D1:C941 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2703 D1:C943 ED 4C -  -          mlt bc
 2704 D1:C945 21 00 40 D0         ld  hl,PAGETABLE
 2705 D1:C949 09 -  -  -          add hl,bc
 2706 D1:C94A ED 27 -  -          ld  hl,(hl)
 2707 D1:C94C 06 00 -  -          ld  b,0
 2708 D1:C94E DD 86 01 -          add a,(ix+REGX)
 2709 D1:C951 4F -  -  -          ld  c,a
 2710 D1:C952 30 02 -  -          jr  nc,+_
 2711 D1:C954 04 -  -  -          inc b
 2712 D1:C955 14 -  -  -          inc d
 2713 D1:C956 09 -  -  -  _:      add hl,bc   ;full address
 2714 D1:C957 7E -  -  -          READ_ACCESS
 2715 D1:C958 E1 -  -  -      pop hl
 2716 D1:C959 DD 7E 04 -      ld  a,(ix+REGSR)
 2717 D1:C95C 1F -  -  -      rra
 2718 D1:C95D 7E -  -  -      ld  a,(hl)
 2719 D1:C95E 1F -  -  -      rra
 2720 D1:C95F 47 -  -  -      ld  b,a
 2721 D1:C960 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2722 D1:C979 70 -  -  -      WRITE_ACCESS
 2723 D1:C97A C3 73 B3 D1     jp i6502NextLoad
 2724 D1:C97E -  -  -  -  
 2725 D1:C97E -  -  -  -  ;-----------------------------------------------------------------------------
 2726 D1:C97E -  -  -  -  ;-----------------------------------------------------------------------------
 2727 D1:C97E -  -  -  -  ;-----------------------------------------------------------------------------
 2728 D1:C97E -  -  -  -  ;Instructions by type: Flag Instructions
 2729 D1:C97E -  -  -  -  
 2730 D1:C97E -  -  -  -  ;CLC - Clear Carry Flag
 2731 D1:C97E -  -  -  -  ;0 -> C
 2732 D1:C97E -  -  -  -  ;N	Z	C	I	D	V
 2733 D1:C97E -  -  -  -  ;-	-	0	-	-	-
 2734 D1:C97E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2735 D1:C97E -  -  -  -  ;implied	CLC	18	1	2  
 2736 D1:C97E -  -  -  -  inst6502_clc:
 2737 D1:C97E DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2738 D1:C982 C3 8C B3 D1     jp  i6502FinishLoad
 2739 D1:C986 -  -  -  -  
 2740 D1:C986 -  -  -  -  ;CLD - Clear Decimal Mode
 2741 D1:C986 -  -  -  -  ;0 -> D
 2742 D1:C986 -  -  -  -  ;N	Z	C	I	D	V
 2743 D1:C986 -  -  -  -  ;-	-	-	-	0	-
 2744 D1:C986 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2745 D1:C986 -  -  -  -  ;implied	CLD	D8	1	2  
 2746 D1:C986 -  -  -  -  inst6502_cld:
 2747 D1:C986 DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2748 D1:C98A C3 8C B3 D1     jp  i6502FinishLoad
 2749 D1:C98E -  -  -  -  
 2750 D1:C98E -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2751 D1:C98E -  -  -  -  ;0 -> I
 2752 D1:C98E -  -  -  -  ;N	Z	C	I	D	V
 2753 D1:C98E -  -  -  -  ;-	-	-	0	-	-
 2754 D1:C98E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2755 D1:C98E -  -  -  -  ;implied	CLI	58	1	2  
 2756 D1:C98E -  -  -  -  inst6502_cli:
 2757 D1:C98E DD CB 04 96     res SF_INT,(ix+REGSR)
 2758 D1:C992 C3 8C B3 D1     jp  i6502FinishLoad
 2759 D1:C996 -  -  -  -  
 2760 D1:C996 -  -  -  -  ;CLV - Clear Overflow Flag
 2761 D1:C996 -  -  -  -  ;0 -> V
 2762 D1:C996 -  -  -  -  ;N	Z	C	I	D	V
 2763 D1:C996 -  -  -  -  ;-	-	-	-	-	0
 2764 D1:C996 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2765 D1:C996 -  -  -  -  ;implied	CLV	B8	1	2  
 2766 D1:C996 -  -  -  -  inst6502_clv:
 2767 D1:C996 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2768 D1:C99A C3 8C B3 D1     jp  i6502FinishLoad
 2769 D1:C99E -  -  -  -  
 2770 D1:C99E -  -  -  -  ;SEC - Set Carry Flag
 2771 D1:C99E -  -  -  -  ;1 -> C
 2772 D1:C99E -  -  -  -  ;N	Z	C	I	D	V
 2773 D1:C99E -  -  -  -  ;-	-	1	-	-	-
 2774 D1:C99E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2775 D1:C99E -  -  -  -  ;implied	SEC	38	1	2  
 2776 D1:C99E -  -  -  -  inst6502_sec:
 2777 D1:C99E DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2778 D1:C9A2 C3 8C B3 D1     jp  i6502FinishLoad
 2779 D1:C9A6 -  -  -  -  
 2780 D1:C9A6 -  -  -  -  ;SED - Set Decimal Flag
 2781 D1:C9A6 -  -  -  -  ;1 -> D
 2782 D1:C9A6 -  -  -  -  ;N	Z	C	I	D	V
 2783 D1:C9A6 -  -  -  -  ;-	-	-	-	1	-
 2784 D1:C9A6 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2785 D1:C9A6 -  -  -  -  ;implied	SED	F8	1	2  
 2786 D1:C9A6 -  -  -  -  inst6502_sed:
 2787 D1:C9A6 DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2788 D1:C9AA C3 8C B3 D1     jp  i6502FinishLoad
 2789 D1:C9AE -  -  -  -  
 2790 D1:C9AE -  -  -  -  ;SEI - Set Interrupt Disable Status
 2791 D1:C9AE -  -  -  -  ;1 -> I
 2792 D1:C9AE -  -  -  -  ;N	Z	C	I	D	V
 2793 D1:C9AE -  -  -  -  ;-	-	-	1	-	-
 2794 D1:C9AE -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2795 D1:C9AE -  -  -  -  ;implied	SEI	78	1	2  
 2796 D1:C9AE -  -  -  -  inst6502_sei:
 2797 D1:C9AE DD CB 04 D6     set SF_INT,(ix+REGSR)
 2798 D1:C9B2 C3 8C B3 D1     jp  i6502FinishLoad
 2799 D1:C9B6 -  -  -  -  
 2800 D1:C9B6 -  -  -  -  ;-----------------------------------------------------------------------------
 2801 D1:C9B6 -  -  -  -  ;-----------------------------------------------------------------------------
 2802 D1:C9B6 -  -  -  -  ;-----------------------------------------------------------------------------
 2803 D1:C9B6 -  -  -  -  ;Instructions by type: Comparisons
 2804 D1:C9B6 -  -  -  -  
 2805 D1:C9B6 -  -  -  -  ;CMP - Compare Memory with Accumulator
 2806 D1:C9B6 -  -  -  -  ;A - M
 2807 D1:C9B6 -  -  -  -  ;N	Z	C	I	D	V
 2808 D1:C9B6 -  -  -  -  ;+	+	+	-	-	-
 2809 D1:C9B6 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2810 D1:C9B6 -  -  -  -  
 2811 D1:C9B6 -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2812 D1:C9B6 -  -  -  -  inst6502_cmp_imm:
 2813 D1:C9B6 ED 33 02 -      ADDCYC(2)
 2814 D1:C9B9 46 -  -  -      ld  b,(hl)
 2815 D1:C9BA C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2816 D1:C9BE -  -  -  -  
 2817 D1:C9BE -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2818 D1:C9BE -  -  -  -  inst6502_cmp_zp:
 2819 D1:C9BE ED 33 03 -      ADDCYC(3)
 2820 D1:C9C1 7E -  -  -      ld  a,(hl)
 2821 D1:C9C2 01 00 38 D0     ld  bc,ZEROPAGE
 2822 D1:C9C6 81 -  -  -      add a,c
 2823 D1:C9C7 4F -  -  -      ld  c,a
 2824 D1:C9C8 0A -  -  -      ld  a,(bc)
 2825 D1:C9C9 47 -  -  -      ld  b,a
 2826 D1:C9CA C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2827 D1:C9CE -  -  -  -  
 2828 D1:C9CE -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2829 D1:C9CE -  -  -  -  inst6502_cmp_zpx:
 2830 D1:C9CE ED 33 04 -      ADDCYC(4)
 2831 D1:C9D1 7E -  -  -      ld  a,(hl)
 2832 D1:C9D2 01 00 38 D0     ld  bc,ZEROPAGE
 2833 D1:C9D6 81 -  -  -      add a,c
 2834 D1:C9D7 DD 86 01 -      add a,(ix+REGX)
 2835 D1:C9DA 4F -  -  -      ld  c,a
 2836 D1:C9DB 0A -  -  -      ld  a,(bc)
 2837 D1:C9DC 47 -  -  -      ld  b,a
 2838 D1:C9DD C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2839 D1:C9E1 -  -  -  -  
 2840 D1:C9E1 -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2841 D1:C9E1 -  -  -  -  inst6502_cmp_abs:
 2842 D1:C9E1 ED 33 04 -      ADDCYC(4)
 2843 D1:C9E4 CD D9 B5 D1     call subroutine6502_abs_split_start
 2844 D1:C9E8 E5 -  -  -      push hl
 2845 D1:C9E9 50 -  -  -          ld  d,b
 2846 D1:C9EA 79 -  -  -          ld  a,c
 2847 D1:C9EB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2848 D1:C9ED ED 4C -  -          mlt bc
 2849 D1:C9EF 21 00 40 D0         ld  hl,PAGETABLE
 2850 D1:C9F3 09 -  -  -          add hl,bc
 2851 D1:C9F4 ED 27 -  -          ld  hl,(hl)
 2852 D1:C9F6 06 00 -  -          ld  b,0
 2853 D1:C9F8 4F -  -  -          ld  c,a
 2854 D1:C9F9 09 -  -  -          add hl,bc   ;full address
 2855 D1:C9FA 7E -  -  -          READ_ACCESS
 2856 D1:C9FB E1 -  -  -      pop hl
 2857 D1:C9FC 47 -  -  -      ld  b,a
 2858 D1:C9FD C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2859 D1:CA01 -  -  -  -  
 2860 D1:CA01 -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2861 D1:CA01 -  -  -  -  inst6502_cmp_absx:
 2862 D1:CA01 ED 33 04 -      ADDCYC(4)
 2863 D1:CA04 CD D9 B5 D1     call subroutine6502_abs_split_start
 2864 D1:CA08 E5 -  -  -      push hl
 2865 D1:CA09 50 -  -  -          ld  d,b
 2866 D1:CA0A 79 -  -  -          ld  a,c
 2867 D1:CA0B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2868 D1:CA0D ED 4C -  -          mlt bc
 2869 D1:CA0F 21 00 40 D0         ld  hl,PAGETABLE
 2870 D1:CA13 09 -  -  -          add hl,bc
 2871 D1:CA14 ED 27 -  -          ld  hl,(hl)
 2872 D1:CA16 06 00 -  -          ld  b,0
 2873 D1:CA18 DD 86 01 -          add a,(ix+REGX)
 2874 D1:CA1B 4F -  -  -          ld  c,a
 2875 D1:CA1C 30 04 -  -          jr  nc,+_
 2876 D1:CA1E 04 -  -  -          inc b
 2877 D1:CA1F 14 -  -  -          inc d
 2878 D1:CA20 FD 23 -  -          ADDCYC(1)
 2879 D1:CA22 09 -  -  -  _:      add hl,bc   ;full address
 2880 D1:CA23 7E -  -  -          READ_ACCESS
 2881 D1:CA24 E1 -  -  -      pop hl
 2882 D1:CA25 47 -  -  -      ld  b,a
 2883 D1:CA26 C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2884 D1:CA2A -  -  -  -  
 2885 D1:CA2A -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2886 D1:CA2A -  -  -  -  inst6502_cmp_absy:
 2887 D1:CA2A ED 33 04 -      ADDCYC(4)
 2888 D1:CA2D CD D9 B5 D1     call subroutine6502_abs_split_start
 2889 D1:CA31 E5 -  -  -      push hl
 2890 D1:CA32 50 -  -  -          ld  d,b
 2891 D1:CA33 79 -  -  -          ld  a,c
 2892 D1:CA34 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2893 D1:CA36 ED 4C -  -          mlt bc
 2894 D1:CA38 21 00 40 D0         ld  hl,PAGETABLE
 2895 D1:CA3C 09 -  -  -          add hl,bc
 2896 D1:CA3D ED 27 -  -          ld  hl,(hl)
 2897 D1:CA3F 06 00 -  -          ld  b,0
 2898 D1:CA41 DD 86 02 -          add a,(ix+REGY)
 2899 D1:CA44 4F -  -  -          ld  c,a
 2900 D1:CA45 30 04 -  -          jr  nc,+_
 2901 D1:CA47 04 -  -  -          inc b
 2902 D1:CA48 14 -  -  -          inc d
 2903 D1:CA49 FD 23 -  -          ADDCYC(1)
 2904 D1:CA4B 09 -  -  -  _:      add hl,bc   ;full address
 2905 D1:CA4C 7E -  -  -          READ_ACCESS
 2906 D1:CA4D E1 -  -  -      pop hl
 2907 D1:CA4E 47 -  -  -      ld  b,a
 2908 D1:CA4F C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2909 D1:CA53 -  -  -  -  
 2910 D1:CA53 -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2911 D1:CA53 -  -  -  -  inst6502_cmp_indx:
 2912 D1:CA53 ED 33 06 -      ADDCYC(6)
 2913 D1:CA56 E5 -  -  -      push hl
 2914 D1:CA57 7E -  -  -          ld  a,(hl)
 2915 D1:CA58 21 00 38 D0         ld  hl,ZEROPAGE
 2916 D1:CA5C 85 -  -  -          add a,L
 2917 D1:CA5D DD 86 01 -          add a,(ix+REGX)
 2918 D1:CA60 6F -  -  -          ld  L,a
 2919 D1:CA61 7E -  -  -          ld  a,(hl)
 2920 D1:CA62 2C -  -  -          inc L
 2921 D1:CA63 56 -  -  -          ld  d,(hl)
 2922 D1:CA64 42 -  -  -          ld  b,d
 2923 D1:CA65 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2924 D1:CA67 ED 4C -  -          mlt bc
 2925 D1:CA69 21 00 40 D0         ld  hl,PAGETABLE
 2926 D1:CA6D 09 -  -  -          add hl,bc
 2927 D1:CA6E ED 27 -  -          ld  hl,(hl)
 2928 D1:CA70 06 00 -  -          ld  b,0
 2929 D1:CA72 4F -  -  -          ld  c,a
 2930 D1:CA73 09 -  -  -          add hl,bc
 2931 D1:CA74 7E -  -  -          READ_ACCESS
 2932 D1:CA75 E1 -  -  -      pop hl
 2933 D1:CA76 47 -  -  -      ld  b,a
 2934 D1:CA77 C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2935 D1:CA7B -  -  -  -  
 2936 D1:CA7B -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2937 D1:CA7B -  -  -  -  inst6502_cmp_indy:
 2938 D1:CA7B ED 33 05 -      ADDCYC(5)
 2939 D1:CA7E E5 -  -  -      push hl
 2940 D1:CA7F 7E -  -  -          ld  a,(hl)
 2941 D1:CA80 21 00 38 D0         ld  hl,ZEROPAGE
 2942 D1:CA84 85 -  -  -          add a,L
 2943 D1:CA85 6F -  -  -          ld  L,a
 2944 D1:CA86 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2945 D1:CA87 2C -  -  -          inc L
 2946 D1:CA88 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2947 D1:CA8B 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2948 D1:CA8C 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2949 D1:CA8E 24 -  -  -          inc h
 2950 D1:CA8F FD 23 -  -          ADDCYC(1)
 2951 D1:CA91 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2952 D1:CA92 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2953 D1:CA94 ED 6C -  -          mlt hl          ;23.
 2954 D1:CA96 01 00 40 D0         ld  bc,PAGETABLE
 2955 D1:CA9A 09 -  -  -          add hl,bc
 2956 D1:CA9B ED 27 -  -          ld  hl,(hl)     ;address get.
 2957 D1:CA9D 01 00 00 00         ld  bc,0
 2958 D1:CAA1 4F -  -  -          ld  c,a
 2959 D1:CAA2 09 -  -  -          add hl,bc       ;Full address get.
 2960 D1:CAA3 7E -  -  -          READ_ACCESS
 2961 D1:CAA4 E1 -  -  -      pop hl
 2962 D1:CAA5 47 -  -  -      ld  b,a
 2963 D1:CAA6 C3 57 B6 D1     jp  subroutine6502_cmp_combined_end
 2964 D1:CAAA -  -  -  -  
 2965 D1:CAAA -  -  -  -  ;-----------------------------------------------------------------------------
 2966 D1:CAAA -  -  -  -  ;CPX - Compare Memory and Index X
 2967 D1:CAAA -  -  -  -  ;X - M
 2968 D1:CAAA -  -  -  -  ;N	Z	C	I	D	V
 2969 D1:CAAA -  -  -  -  ;+	+	+	-	-	-
 2970 D1:CAAA -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2971 D1:CAAA -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2972 D1:CAAA -  -  -  -  inst6502_cpx_imm:
 2973 D1:CAAA ED 33 02 -      ADDCYC(2)
 2974 D1:CAAD DD 7E 01 -      ld  a,(ix+REGX)
 2975 D1:CAB0 96 -  -  -      sub a,(hl)
 2976 D1:CAB1 3F -  -  -      ccf     ;because the 6502 is strange like that.
 2977 D1:CAB2 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2978 D1:CACB C3 73 B3 D1     jp  i6502NextLoad
 2979 D1:CACF -  -  -  -  
 2980 D1:CACF -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2981 D1:CACF -  -  -  -  inst6502_cpx_zp:
 2982 D1:CACF ED 33 03 -      ADDCYC(3)
 2983 D1:CAD2 7E -  -  -      ld  a,(hl)
 2984 D1:CAD3 01 00 38 D0     ld  bc,ZEROPAGE
 2985 D1:CAD7 81 -  -  -      add a,c
 2986 D1:CAD8 4F -  -  -      ld  c,a
 2987 D1:CAD9 0A -  -  -      ld  a,(bc)
 2988 D1:CADA 47 -  -  -      ld  b,a
 2989 D1:CADB DD 7E 01 -      ld  a,(ix+REGX)
 2990 D1:CADE 90 -  -  -      sub a,b
 2991 D1:CADF 3F -  -  -      ccf     ;because the 6502 is strange like that.
 2992 D1:CAE0 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2993 D1:CAF9 C3 73 B3 D1     jp i6502NextLoad
 2994 D1:CAFD -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2995 D1:CAFD -  -  -  -  inst6502_cpx_abs:
 2996 D1:CAFD ED 33 04 -      ADDCYC(4)
 2997 D1:CB00 CD D9 B5 D1     call subroutine6502_abs_split_start
 2998 D1:CB04 E5 -  -  -      push hl
 2999 D1:CB05 50 -  -  -          ld  d,b
 3000 D1:CB06 79 -  -  -          ld  a,c
 3001 D1:CB07 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3002 D1:CB09 ED 4C -  -          mlt bc
 3003 D1:CB0B 21 00 40 D0         ld  hl,PAGETABLE
 3004 D1:CB0F 09 -  -  -          add hl,bc
 3005 D1:CB10 ED 27 -  -          ld  hl,(hl)
 3006 D1:CB12 06 00 -  -          ld  b,0
 3007 D1:CB14 4F -  -  -          ld  c,a
 3008 D1:CB15 09 -  -  -          add hl,bc   ;full address
 3009 D1:CB16 7E -  -  -          READ_ACCESS
 3010 D1:CB17 E1 -  -  -      pop hl
 3011 D1:CB18 47 -  -  -      ld  b,a
 3012 D1:CB19 DD 7E 01 -      ld  a,(ix+REGX)
 3013 D1:CB1C 90 -  -  -      sub a,b
 3014 D1:CB1D 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3015 D1:CB1E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3016 D1:CB37 C3 73 B3 D1     jp i6502NextLoad
 3017 D1:CB3B -  -  -  -  
 3018 D1:CB3B -  -  -  -  ;-----------------------------------------------------------------------------
 3019 D1:CB3B -  -  -  -  ;CPY - Compare Memory and Index Y
 3020 D1:CB3B -  -  -  -  ;Y - M
 3021 D1:CB3B -  -  -  -  ;N	Z	C	I	D	V
 3022 D1:CB3B -  -  -  -  ;+	+	+	-	-	-
 3023 D1:CB3B -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3024 D1:CB3B -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 3025 D1:CB3B -  -  -  -  inst6502_cpy_imm:
 3026 D1:CB3B ED 33 02 -      ADDCYC(2)
 3027 D1:CB3E DD 7E 02 -      ld  a,(ix+REGY)
 3028 D1:CB41 96 -  -  -      sub a,(hl)
 3029 D1:CB42 3F -  -  -      ccf
 3030 D1:CB43 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3031 D1:CB5C C3 73 B3 D1     jp  i6502NextLoad
 3032 D1:CB60 -  -  -  -  
 3033 D1:CB60 -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 3034 D1:CB60 -  -  -  -  inst6502_cpy_zp:
 3035 D1:CB60 ED 33 03 -      ADDCYC(3)
 3036 D1:CB63 7E -  -  -      ld  a,(hl)
 3037 D1:CB64 01 00 38 D0     ld  bc,ZEROPAGE
 3038 D1:CB68 81 -  -  -      add a,c
 3039 D1:CB69 4F -  -  -      ld  c,a
 3040 D1:CB6A 0A -  -  -      ld  a,(bc)
 3041 D1:CB6B 47 -  -  -      ld  b,a
 3042 D1:CB6C DD 7E 02 -      ld  a,(ix+REGY)
 3043 D1:CB6F 90 -  -  -      sub a,b
 3044 D1:CB70 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3045 D1:CB71 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3046 D1:CB8A C3 73 B3 D1     jp i6502NextLoad
 3047 D1:CB8E -  -  -  -  
 3048 D1:CB8E -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3049 D1:CB8E -  -  -  -  inst6502_cpy_abs:
 3050 D1:CB8E ED 33 04 -      ADDCYC(4)
 3051 D1:CB91 CD D9 B5 D1     call subroutine6502_abs_split_start
 3052 D1:CB95 E5 -  -  -      push hl
 3053 D1:CB96 50 -  -  -          ld  d,b
 3054 D1:CB97 79 -  -  -          ld  a,c
 3055 D1:CB98 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3056 D1:CB9A ED 4C -  -          mlt bc
 3057 D1:CB9C 21 00 40 D0         ld  hl,PAGETABLE
 3058 D1:CBA0 09 -  -  -          add hl,bc
 3059 D1:CBA1 ED 27 -  -          ld  hl,(hl)
 3060 D1:CBA3 06 00 -  -          ld  b,0
 3061 D1:CBA5 4F -  -  -          ld  c,a
 3062 D1:CBA6 09 -  -  -          add hl,bc   ;full address
 3063 D1:CBA7 7E -  -  -          READ_ACCESS
 3064 D1:CBA8 E1 -  -  -      pop hl
 3065 D1:CBA9 47 -  -  -      ld  b,a
 3066 D1:CBAA DD 7E 02 -      ld  a,(ix+REGY)
 3067 D1:CBAD 90 -  -  -      sub a,b
 3068 D1:CBAE 3F -  -  -      ccf     ;because the 6502 is strange like that.
 3069 D1:CBAF DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3070 D1:CBC8 C3 73 B3 D1     jp i6502NextLoad
 3071 D1:CBCC -  -  -  -  
 3072 D1:CBCC -  -  -  -  
 3073 D1:CBCC -  -  -  -  ;-----------------------------------------------------------------------------
 3074 D1:CBCC -  -  -  -  ;-----------------------------------------------------------------------------
 3075 D1:CBCC -  -  -  -  ;-----------------------------------------------------------------------------
 3076 D1:CBCC -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3077 D1:CBCC -  -  -  -  
 3078 D1:CBCC -  -  -  -  ;branch on C=0
 3079 D1:CBCC -  -  -  -  ;relative	BCC oper	90	2	2**
 3080 D1:CBCC -  -  -  -  inst6502_bcc:
 3081 D1:CBCC ED 33 02 -      ADDCYC(2)
 3082 D1:CBCF DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3083 D1:CBD3 C2 73 B3 D1     jp  nz,i6502NextLoad
 3084 D1:CBD7 C3 79 B6 D1     jp  subroutine6502_take_branch
 3085 D1:CBDB -  -  -  -  
 3086 D1:CBDB -  -  -  -  ;branch on C=1
 3087 D1:CBDB -  -  -  -  ;relative	BCS oper	B0	2	2**
 3088 D1:CBDB -  -  -  -  inst6502_bcs:
 3089 D1:CBDB ED 33 02 -      ADDCYC(2)
 3090 D1:CBDE DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3091 D1:CBE2 CA 73 B3 D1     jp  z,i6502NextLoad
 3092 D1:CBE6 C3 79 B6 D1     jp  subroutine6502_take_branch
 3093 D1:CBEA -  -  -  -  
 3094 D1:CBEA -  -  -  -  ;branch on Z=1
 3095 D1:CBEA -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3096 D1:CBEA -  -  -  -  inst6502_beq:
 3097 D1:CBEA ED 33 02 -      ADDCYC(2)
 3098 D1:CBED DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3099 D1:CBF1 CA 73 B3 D1     jp  z,i6502NextLoad
 3100 D1:CBF5 C3 79 B6 D1     jp  subroutine6502_take_branch
 3101 D1:CBF9 -  -  -  -  
 3102 D1:CBF9 -  -  -  -  ;branch on N=1
 3103 D1:CBF9 -  -  -  -  ;relative	BMI oper	30	2	2**
 3104 D1:CBF9 -  -  -  -  inst6502_bmi:
 3105 D1:CBF9 ED 33 02 -      ADDCYC(2)
 3106 D1:CBFC DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3107 D1:CC00 CA 73 B3 D1     jp  z,i6502NextLoad
 3108 D1:CC04 C3 79 B6 D1     jp  subroutine6502_take_branch
 3109 D1:CC08 -  -  -  -  
 3110 D1:CC08 -  -  -  -  
 3111 D1:CC08 -  -  -  -  ;branch on Z=0
 3112 D1:CC08 -  -  -  -  ;relative	BNE oper	D0	2	2**
 3113 D1:CC08 -  -  -  -  inst6502_bne:
 3114 D1:CC08 ED 33 02 -      ADDCYC(2)
 3115 D1:CC0B DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3116 D1:CC0F C2 73 B3 D1     jp  nz,i6502NextLoad
 3117 D1:CC13 C3 79 B6 D1     jp  subroutine6502_take_branch
 3118 D1:CC17 -  -  -  -  
 3119 D1:CC17 -  -  -  -  ;branch on N=0
 3120 D1:CC17 -  -  -  -  ;relative	BPL oper	10	2	2**
 3121 D1:CC17 -  -  -  -  inst6502_bpl:
 3122 D1:CC17 ED 33 02 -      ADDCYC(2)
 3123 D1:CC1A DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3124 D1:CC1E C2 73 B3 D1     jp  nz,i6502NextLoad
 3125 D1:CC22 C3 79 B6 D1     jp  subroutine6502_take_branch
 3126 D1:CC26 -  -  -  -  
 3127 D1:CC26 -  -  -  -  ;branch on V=0
 3128 D1:CC26 -  -  -  -  ;relative	BVC oper	50	2	2**
 3129 D1:CC26 -  -  -  -  inst6502_bvc:
 3130 D1:CC26 ED 33 02 -      ADDCYC(2)
 3131 D1:CC29 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3132 D1:CC2D C2 73 B3 D1     jp  nz,i6502NextLoad
 3133 D1:CC31 C3 79 B6 D1     jp  subroutine6502_take_branch
 3134 D1:CC35 -  -  -  -  
 3135 D1:CC35 -  -  -  -  ;branch on V=1
 3136 D1:CC35 -  -  -  -  ;relative	BVS oper	70	2	2**
 3137 D1:CC35 -  -  -  -  inst6502_bvs:
 3138 D1:CC35 ED 33 02 -      ADDCYC(2)
 3139 D1:CC38 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3140 D1:CC3C CA 73 B3 D1     jp  z,i6502NextLoad
 3141 D1:CC40 C3 79 B6 D1     jp  subroutine6502_take_branch
 3142 D1:CC44 -  -  -  -  
 3143 D1:CC44 -  -  -  -  ;-----------------------------------------------------------------------------
 3144 D1:CC44 -  -  -  -  ;-----------------------------------------------------------------------------
 3145 D1:CC44 -  -  -  -  ;-----------------------------------------------------------------------------
 3146 D1:CC44 -  -  -  -  ;Instructions by type: Interrupts
 3147 D1:CC44 -  -  -  -  
 3148 D1:CC44 -  -  -  -  ;BRK - Force Break
 3149 D1:CC44 -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3150 D1:CC44 -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3151 D1:CC44 -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3152 D1:CC44 -  -  -  -  ;(identifying a reason for the break.)
 3153 D1:CC44 -  -  -  -  ;The status register will be pushed to the stack with the break
 3154 D1:CC44 -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3155 D1:CC44 -  -  -  -  ;instruction, the break flag will be ignored.
 3156 D1:CC44 -  -  -  -  ;The interrupt disable flag is not set automatically.
 3157 D1:CC44 -  -  -  -  ;
 3158 D1:CC44 -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3159 D1:CC44 -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3160 D1:CC44 -  -  -  -  ;implied	BRK	00	1	7  
 3161 D1:CC44 -  -  -  -  inst6502_brk:
 3162 D1:CC44 ED 33 07 -      ADDCYC(7)
 3163 D1:CC47 21 00 39 D0     ld  hl,STACKBASE
 3164 D1:CC4B DD 6E 03 -      ld  L,(ix+REGSP)
 3165 D1:CC4E 52 DD 17 05     ld.s de,(ix+REGPC)
 3166 D1:CC52 13 -  -  -      inc de      ;that extra spacer.
 3167 D1:CC53 72 -  -  -      ld  (hl),d
 3168 D1:CC54 2D -  -  -      dec L
 3169 D1:CC55 73 -  -  -      ld  (hl),e
 3170 D1:CC56 2D -  -  -      dec L
 3171 D1:CC57 DD 7E 04 -      ld  a,(ix+REGSR)
 3172 D1:CC5A CB D7 -  -      set SF_INT,a
 3173 D1:CC5C 77 -  -  -      ld  (hl),a
 3174 D1:CC5D 2D -  -  -      dec L
 3175 D1:CC5E DD 75 03 -      ld  (ix+REGSP),L
 3176 D1:CC61 B7 -  -  -      WAS_NMI_TRIGGERED
 3177 D1:CC62 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3178 D1:CC66 28 04 -  -      jr  z,+_
 3179 D1:CC68 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3180 D1:CC6C 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3181 D1:CC70 ED 27 -  -      ld  hl,(hl)
 3182 D1:CC72 09 -  -  -      add hl,bc
 3183 D1:CC73 ED 17 -  -      ld  de,(hl)
 3184 D1:CC75 52 DD 1F 05     ld.s (ix+REGPC),de
 3185 D1:CC79 C3 5D B3 D1     jp  i6502FirstLoad
 3186 D1:CC7D -  -  -  -  
 3187 D1:CC7D -  -  -  -  ;RTI - Return from Interrupt
 3188 D1:CC7D -  -  -  -  ;The status register is pulled with the break flag
 3189 D1:CC7D -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3190 D1:CC7D -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3191 D1:CC7D -  -  -  -  ;                      from stack
 3192 D1:CC7D -  -  -  -  ;implied	RTI	40	1	6  
 3193 D1:CC7D -  -  -  -  inst6502_rti:
 3194 D1:CC7D 21 00 39 D0     ld  hl,STACKBASE
 3195 D1:CC81 DD 6E 03 -      ld  l,(ix+REGSP)
 3196 D1:CC84 2C -  -  -      inc l
 3197 D1:CC85 7E -  -  -      ld  a,(hl)
 3198 D1:CC86 2C -  -  -      inc l
 3199 D1:CC87 5E -  -  -      ld  e,(hl)
 3200 D1:CC88 2C -  -  -      inc l
 3201 D1:CC89 56 -  -  -      ld  d,(hl)
 3202 D1:CC8A DD 75 03 -      ld  (ix+REGSP),l
 3203 D1:CC8D 52 DD 1F 05     ld.s (ix+REGPC),de
 3204 D1:CC91 DD 46 04 -      ld  b,(ix+REGSR)
 3205 D1:CC94 A8 -  -  -      xor a,b
 3206 D1:CC95 E6 DF -  -      and a,%11011111
 3207 D1:CC97 A8 -  -  -      xor a,b
 3208 D1:CC98 DD 77 04 -      ld  (ix+REGSR),a
 3209 D1:CC9B ED 33 06 -      ADDCYC(6)
 3210 D1:CC9E C3 5D B3 D1     jp  i6502FirstLoad
 3211 D1:CCA2 -  -  -  -  
 3212 D1:CCA2 -  -  -  -  
 3213 D1:CCA2 -  -  -  -  
 3214 D1:CCA2 -  -  -  -  ;-----------------------------------------------------------------------------
 3215 D1:CCA2 -  -  -  -  ;-----------------------------------------------------------------------------
 3216 D1:CCA2 -  -  -  -  ;-----------------------------------------------------------------------------
 3217 D1:CCA2 -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3218 D1:CCA2 -  -  -  -  
 3219 D1:CCA2 -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3220 D1:CCA2 -  -  -  -  inst6052_jmp_abs:
 3221 D1:CCA2 7E -  -  -      ld  a,(hl)
 3222 D1:CCA3 23 -  -  -      inc hl
 3223 D1:CCA4 1C -  -  -      inc e
 3224 D1:CCA5 20 0F -  -      jr  nz,+_
 3225 D1:CCA7 DD 56 06 -      ld  d,(ix+REGPC+1)
 3226 D1:CCAA 14 -  -  -      inc d
 3227 D1:CCAB 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3228 D1:CCAD ED 5C -  -      mlt de
 3229 D1:CCAF 21 00 40 D0     ld  hl,PAGETABLE
 3230 D1:CCB3 19 -  -  -      add hl,de
 3231 D1:CCB4 ED 27 -  -      ld  hl,(hl)
 3232 D1:CCB6 DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3233 D1:CCB9 7E -  -  -      ld  a,(hl)
 3234 D1:CCBA DD 77 06 -      ld  (ix+REGPC+1),a
 3235 D1:CCBD ED 33 03 -      ADDCYC(3)
 3236 D1:CCC0 C3 5D B3 D1     jp i6502FirstLoad
 3237 D1:CCC4 -  -  -  -  
 3238 D1:CCC4 -  -  -  -  
 3239 D1:CCC4 -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3240 D1:CCC4 -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3241 D1:CCC4 -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3242 D1:CCC4 -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3243 D1:CCC4 -  -  -  -  inst6502_jmp_indir:
 3244 D1:CCC4 ED 33 05 -      ADDCYC(5)
 3245 D1:CCC7 5E -  -  -      ld  e,(hl)
 3246 D1:CCC8 7B -  -  -      ld  a,e
 3247 D1:CCC9 23 -  -  -      inc hl
 3248 D1:CCCA 3C -  -  -      inc a
 3249 D1:CCCB 20 0F -  -      jr  nz,+_
 3250 D1:CCCD DD 46 06 -      ld  b,(ix+REGPC+1)
 3251 D1:CCD0 04 -  -  -      inc b
 3252 D1:CCD1 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3253 D1:CCD3 ED 4C -  -      mlt bc
 3254 D1:CCD5 21 00 40 D0     ld  hl,PAGETABLE
 3255 D1:CCD9 09 -  -  -      add hl,bc
 3256 D1:CCDA ED 27 -  -      ld  hl,(hl)
 3257 D1:CCDC 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3258 D1:CCDD 1C -  -  -      inc e
 3259 D1:CCDE 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3260 D1:CCE0 1D -  -  -      dec e
 3261 D1:CCE1 4B -  -  -      ld  c,e
 3262 D1:CCE2 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3263 D1:CCE4 ED 5C -  -      mlt de
 3264 D1:CCE6 21 00 40 D0     ld  hl,PAGETABLE
 3265 D1:CCEA 19 -  -  -      add hl,de
 3266 D1:CCEB ED 27 -  -      ld  hl,(hl)
 3267 D1:CCED 16 00 -  -      ld  d,0
 3268 D1:CCEF 59 -  -  -      ld  e,c
 3269 D1:CCF0 19 -  -  -      add hl,de   ;full real address reconstructed.
 3270 D1:CCF1 ED 17 -  -      ld  de,(hl)
 3271 D1:CCF3 52 DD 1F 05     ld.s (ix+REGPC),de
 3272 D1:CCF7 C3 5D B3 D1     jp  i6502FirstLoad
 3273 D1:CCFB -  -  -  -  inst6502_jmp_indir_splitread:
 3274 D1:CCFB -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3275 D1:CCFB -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3276 D1:CCFB 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3277 D1:CCFD ED 5C -  -      mlt de
 3278 D1:CCFF 21 00 40 D0     ld  hl,PAGETABLE
 3279 D1:CD03 19 -  -  -      add hl,de
 3280 D1:CD04 ED 27 -  -      ld  hl,(hl)
 3281 D1:CD06 56 -  -  -      ld  d,(hl)
 3282 D1:CD07 01 FF 00 00     ld  bc,255
 3283 D1:CD0B 09 -  -  -      add hl,bc
 3284 D1:CD0C 5E -  -  -      ld  e,(hl)
 3285 D1:CD0D 52 DD 1F 05     ld.s (ix+REGPC),de
 3286 D1:CD11 C3 5D B3 D1     jp  i6502FirstLoad
 3287 D1:CD15 -  -  -  -  
 3288 D1:CD15 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3289 D1:CD15 -  -  -  -  ;    mlt de
 3290 D1:CD15 -  -  -  -  ;    ld  hl,PAGETABLE
 3291 D1:CD15 -  -  -  -  ;    add hl,de
 3292 D1:CD15 -  -  -  -  ;    ld  de,(hl) ;
 3293 D1:CD15 -  -  -  -  ;    ex  de,hl
 3294 D1:CD15 -  -  -  -  ;    ld  bc,255
 3295 D1:CD15 -  -  -  -  ;    add hl,bc
 3296 D1:CD15 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3297 D1:CD15 -  -  -  -  ;    ex  de,hl
 3298 D1:CD15 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3299 D1:CD15 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3300 D1:CD15 -  -  -  -  ;    ld  e,(hl)
 3301 D1:CD15 -  -  -  -  ;    ld  d,a
 3302 D1:CD15 -  -  -  -  ;    ld.s (ix+REGPC),de
 3303 D1:CD15 -  -  -  -  ;    jp  i6502FirstLoad
 3304 D1:CD15 -  -  -  -  
 3305 D1:CD15 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3306 D1:CD15 -  -  -  -  inst6502_jsr:
 3307 D1:CD15 DD 56 06 -      ld  d,(ix+REGPC+1)
 3308 D1:CD18 4E -  -  -      ld  c,(hl)
 3309 D1:CD19 23 -  -  -      inc hl
 3310 D1:CD1A 1C -  -  -      inc e
 3311 D1:CD1B 20 10 -  -      jr  nz,+_
 3312 D1:CD1D 14 -  -  -      inc d
 3313 D1:CD1E 7A -  -  -      ld  a,d
 3314 D1:CD1F 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3315 D1:CD21 ED 5C -  -      mlt de
 3316 D1:CD23 21 00 40 D0     ld  hl,PAGETABLE
 3317 D1:CD27 19 -  -  -      add hl,de
 3318 D1:CD28 ED 27 -  -      ld  hl,(hl)
 3319 D1:CD2A 57 -  -  -      ld  d,a
 3320 D1:CD2B 1E 00 -  -      ld  e,0
 3321 D1:CD2D 46 -  -  -  _:  ld  b,(hl)
 3322 D1:CD2E -  -  -  -      ;push de to 6502stack
 3323 D1:CD2E 21 00 39 D0     ld  hl,STACKBASE
 3324 D1:CD32 DD 6E 03 -      ld  l,(ix+REGSP)
 3325 D1:CD35 72 -  -  -      ld  (hl),d
 3326 D1:CD36 2D -  -  -      dec l
 3327 D1:CD37 73 -  -  -      ld  (hl),e
 3328 D1:CD38 2D -  -  -      dec l
 3329 D1:CD39 DD 75 03 -      ld  (ix+REGSP),l
 3330 D1:CD3C 52 DD 0F 05     ld.s (ix+REGPC),bc
 3331 D1:CD40 ED 33 06 -      ADDCYC(6)
 3332 D1:CD43 C3 5D B3 D1     jp  i6502FirstLoad
 3333 D1:CD47 -  -  -  -  
 3334 D1:CD47 -  -  -  -  ;implied	RTS	60	1	6
 3335 D1:CD47 -  -  -  -  inst6502_rts:
 3336 D1:CD47 21 00 39 D0     ld  hl,STACKBASE
 3337 D1:CD4B DD 6E 03 -      ld  l,(ix+REGSP)
 3338 D1:CD4E 2C -  -  -      inc l
 3339 D1:CD4F 5E -  -  -      ld  e,(hl)
 3340 D1:CD50 2C -  -  -      inc l
 3341 D1:CD51 56 -  -  -      ld  d,(hl)
 3342 D1:CD52 DD 75 03 -      ld  (ix+REGSP),l
 3343 D1:CD55 13 -  -  -      inc de
 3344 D1:CD56 52 DD 1F 05     ld.s (ix+REGPC),de
 3345 D1:CD5A ED 33 06 -      ADDCYC(6)
 3346 D1:CD5D C3 5D B3 D1     jp  i6502FirstLoad
 3347 D1:CD61 -  -  -  -  
 3348 D1:CD61 -  -  -  -  
 3349 D1:CD61 -  -  -  -  ;-----------------------------------------------------------------------------
 3350 D1:CD61 -  -  -  -  ;-----------------------------------------------------------------------------
 3351 D1:CD61 -  -  -  -  ;-----------------------------------------------------------------------------
 3352 D1:CD61 -  -  -  -  ;Instructions by type: Miscellaneous
 3353 D1:CD61 -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3354 D1:CD61 -  -  -  -  ;
 3355 D1:CD61 -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3356 D1:CD61 -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3357 D1:CD61 -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3358 D1:CD61 -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3359 D1:CD61 -  -  -  -  ;any of the registers, other than the status register (SR).
 3360 D1:CD61 -  -  -  -  
 3361 D1:CD61 -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3362 D1:CD61 -  -  -  -  ;                                           M7	+	-	-	-	M6
 3363 D1:CD61 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3364 D1:CD61 -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3365 D1:CD61 -  -  -  -  inst6502_bit_zp:
 3366 D1:CD61 ED 33 03 -      ADDCYC(3)
 3367 D1:CD64 7E -  -  -      ld  a,(hl)
 3368 D1:CD65 01 00 38 D0     ld  bc,ZEROPAGE
 3369 D1:CD69 81 -  -  -      add a,c
 3370 D1:CD6A 4F -  -  -      ld  c,a
 3371 D1:CD6B 0A -  -  -      ld  a,(bc)
 3372 D1:CD6C DD A6 00 -  _:  and a,(ix+REGA)
 3373 D1:CD6F CB 8F -  -      res SF_ZERO,a
 3374 D1:CD71 20 02 -  -      jr  nz,$+4
 3375 D1:CD73 CB CF -  -      set SF_ZERO,a
 3376 D1:CD75 DD 46 04 -      ld  b,(ix+REGSR)
 3377 D1:CD78 A8 -  -  -      xor a,b
 3378 D1:CD79 E6 C2 -  -      and a,%11000010
 3379 D1:CD7B A8 -  -  -      xor a,b
 3380 D1:CD7C DD 77 04 -      ld  (ix+REGSR),a
 3381 D1:CD7F C3 73 B3 D1     jp  i6502NextLoad
 3382 D1:CD83 -  -  -  -  
 3383 D1:CD83 -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3384 D1:CD83 -  -  -  -  inst6502_bit_abs:
 3385 D1:CD83 ED 33 04 -      ADDCYC(4)
 3386 D1:CD86 CD D9 B5 D1     call subroutine6502_abs_split_start
 3387 D1:CD8A E5 -  -  -      push hl
 3388 D1:CD8B 50 -  -  -          ld  d,b
 3389 D1:CD8C 79 -  -  -          ld  a,c
 3390 D1:CD8D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3391 D1:CD8F ED 4C -  -          mlt bc
 3392 D1:CD91 21 00 40 D0         ld  hl,PAGETABLE
 3393 D1:CD95 09 -  -  -          add hl,bc
 3394 D1:CD96 ED 27 -  -          ld  hl,(hl)
 3395 D1:CD98 06 00 -  -          ld  b,0
 3396 D1:CD9A 4F -  -  -          ld  c,a
 3397 D1:CD9B 09 -  -  -          add hl,bc   ;full address
 3398 D1:CD9C 7E -  -  -          READ_ACCESS
 3399 D1:CD9D E1 -  -  -      pop hl
 3400 D1:CD9E 18 CC -  -      jr  -_    
 3401 D1:CDA0 -  -  -  -  
 3402 D1:CDA0 -  -  -  -  ;NOP - No Operation
 3403 D1:CDA0 -  -  -  -  ;implied	NOP	EA	1	2  
 3404 D1:CDA0 -  -  -  -  inst6502_nop:
 3405 D1:CDA0 ED 33 02 -      ADDCYC(2)
 3406 D1:CDA3 C3 8C B3 D1     jp  i6502FinishLoad
 3407 D1:CDA7 -  -  -  -  
 3408 D1:CDA7 -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:CDA7 -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:CDA7 -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:CDA7 -  -  -  -  ;Instruction not mapped: Terminate emulation
 3412 D1:CDA7 -  -  -  -  inst6502_:
 3413 D1:CDA7 C9 -  -  -      ret
 3414 D1:CDA8 -  -  -  -  
 3415 D1:CDA8 -  -  -  -  inst6502_halt:
 3416 D1:CDA8 18 FE -  -      jr $
 3417 D1:CDAA C3 8C B3 D1     jp i6502FinishLoad
 3418 D1:CDAE -  -  -  -  
 3419 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:CDAE -  -  -  -  ;Instructions by type: Illegal Instructions
 3423 D1:CDAE -  -  -  -  
 3424 D1:CDAE -  -  -  -  
 3425 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3426 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3427 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3428 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3429 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3430 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3431 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3432 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3433 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3434 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3435 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3436 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3437 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3438 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3439 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3440 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3441 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3442 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3443 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3444 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3445 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3446 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3447 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3448 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3449 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3450 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3451 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3452 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3453 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3454 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3455 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3456 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3457 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3458 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3459 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3460 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3461 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3462 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3463 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3464 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3465 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3466 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3467 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3468 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3469 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3470 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3471 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3472 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3473 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3474 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3475 D1:CDAE -  -  -  -  ;-----------------------------------------------------------------------------
 3476 D1:CDAE -  -  -  -  
 3477 D1:CDAE -  -  -  -  inst6502_instruction_set:
 3478 D1:CDAE 44 CC D1 -  .dl	inst6502_brk					;00
 3479 D1:CDB1 DD C4 D1 -  .dl	inst6502_ora_indx				;01
 3480 D1:CDB4 A7 CD D1 -  .dl	inst6502_				;02
 3481 D1:CDB7 A7 CD D1 -  .dl	inst6502_				;03
 3482 D1:CDBA A7 CD D1 -  .dl	inst6502_				;04
 3483 D1:CDBD CB C3 D1 -  .dl	inst6502_ora_zp					;05
 3484 D1:CDC0 8A C5 D1 -  .dl	inst6502_asl_zp					;06
 3485 D1:CDC3 A7 CD D1 -  .dl	inst6502_				;07
 3486 D1:CDC6 4A BC D1 -  .dl	inst6502_php					;08
 3487 D1:CDC9 A9 C3 D1 -  .dl	inst6502_ora_imm				;09
 3488 D1:CDCC 66 C5 D1 -  .dl	inst6502_asl					;0A
 3489 D1:CDCF A7 CD D1 -  .dl	inst6502_				;0B
 3490 D1:CDD2 A7 CD D1 -  .dl	inst6502_				;0C
 3491 D1:CDD5 20 C4 D1 -  .dl	inst6502_ora_abs				;0D
 3492 D1:CDD8 E3 C5 D1 -  .dl	inst6502_asl_abs				;0E
 3493 D1:CDDB A7 CD D1 -  .dl	inst6502_				;0F
 3494 D1:CDDE 17 CC D1 -  .dl	inst6502_bpl					;10
 3495 D1:CDE1 1E C5 D1 -  .dl	inst6502_ora_indy				;11
 3496 D1:CDE4 A8 CD D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3497 D1:CDE7 A7 CD D1 -  .dl	inst6502_				;13
 3498 D1:CDEA A7 CD D1 -  .dl	inst6502_				;14
 3499 D1:CDED F4 C3 D1 -  .dl	inst6502_ora_zpx				;15
 3500 D1:CDF0 B5 C5 D1 -  .dl	inst6502_asl_zpx				;16
 3501 D1:CDF3 A7 CD D1 -  .dl	inst6502_				;17
 3502 D1:CDF6 7E C9 D1 -  .dl	inst6502_clc					;18
 3503 D1:CDF9 9B C4 D1 -  .dl	inst6502_ora_absy				;19
 3504 D1:CDFC A7 CD D1 -  .dl	inst6502_				;1A
 3505 D1:CDFF A7 CD D1 -  .dl	inst6502_				;1B
 3506 D1:CE02 A7 CD D1 -  .dl	inst6502_				;1C
 3507 D1:CE05 59 C4 D1 -  .dl	inst6502_ora_absx				;1D
 3508 D1:CE08 20 C6 D1 -  .dl	inst6502_asl_absx				;1E
 3509 D1:CE0B A7 CD D1 -  .dl	inst6502_				;1F
 3510 D1:CE0E 15 CD D1 -  .dl	inst6502_jsr					;20
 3511 D1:CE11 63 C1 D1 -  .dl	inst6502_and_indx				;21
 3512 D1:CE14 A7 CD D1 -  .dl	inst6502_				;22
 3513 D1:CE17 A7 CD D1 -  .dl	inst6502_				;23
 3514 D1:CE1A 61 CD D1 -  .dl	inst6502_bit_zp					;24
 3515 D1:CE1D 51 C0 D1 -  .dl	inst6502_and_zp					;25
 3516 D1:CE20 8A C7 D1 -  .dl	inst6502_rol_zp					;26
 3517 D1:CE23 A7 CD D1 -  .dl	inst6502_				;27
 3518 D1:CE26 86 BC D1 -  .dl	inst6502_plp					;28
 3519 D1:CE29 2F C0 D1 -  .dl	inst6502_and_imm				;29
 3520 D1:CE2C 62 C7 D1 -  .dl	inst6502_rol					;2A
 3521 D1:CE2F A7 CD D1 -  .dl	inst6502_				;2B
 3522 D1:CE32 83 CD D1 -  .dl	inst6502_bit_abs				;2C
 3523 D1:CE35 A6 C0 D1 -  .dl	inst6502_and_abs				;2D
 3524 D1:CE38 E9 C7 D1 -  .dl	inst6502_rol_abs				;2E
 3525 D1:CE3B A7 CD D1 -  .dl	inst6502_				;2F
 3526 D1:CE3E F9 CB D1 -  .dl	inst6502_bmi					;30
 3527 D1:CE41 A4 C1 D1 -  .dl	inst6502_and_indy				;31
 3528 D1:CE44 A7 CD D1 -  .dl	inst6502_				;32
 3529 D1:CE47 A7 CD D1 -  .dl	inst6502_				;33
 3530 D1:CE4A A7 CD D1 -  .dl	inst6502_				;34
 3531 D1:CE4D 7A C0 D1 -  .dl	inst6502_and_zpx				;35
 3532 D1:CE50 B8 C7 D1 -  .dl	inst6502_rol_zpx				;36
 3533 D1:CE53 A7 CD D1 -  .dl	inst6502_						;37
 3534 D1:CE56 9E C9 D1 -  .dl	inst6502_sec					;38
 3535 D1:CE59 21 C1 D1 -  .dl	inst6502_and_absy				;39
 3536 D1:CE5C A7 CD D1 -  .dl	inst6502_			;3A
 3537 D1:CE5F A7 CD D1 -  .dl	inst6502_			;3B
 3538 D1:CE62 A7 CD D1 -  .dl	inst6502_			;3C
 3539 D1:CE65 DF C0 D1 -  .dl	inst6502_and_absx				;3D
 3540 D1:CE68 29 C8 D1 -  .dl	inst6502_rol_absx				;3E
 3541 D1:CE6B A7 CD D1 -  .dl	inst6502_			;3F
 3542 D1:CE6E 47 CD D1 -  .dl	inst6502_rts					;40
 3543 D1:CE71 20 C3 D1 -  .dl	inst6502_eor_indx				;41
 3544 D1:CE74 A7 CD D1 -  .dl	inst6502_			;42
 3545 D1:CE77 A7 CD D1 -  .dl	inst6502_			;43
 3546 D1:CE7A A7 CD D1 -  .dl	inst6502_			;44
 3547 D1:CE7D 0E C2 D1 -  .dl	inst6502_eor_zp					;45
 3548 D1:CE80 88 C6 D1 -  .dl	inst6502_lsr_zp					;46
 3549 D1:CE83 A7 CD D1 -  .dl	inst6502_			;47
 3550 D1:CE86 37 BC D1 -  .dl	inst6502_pha					;48
 3551 D1:CE89 EC C1 D1 -  .dl	inst6502_eor_imm				;49
 3552 D1:CE8C 64 C6 D1 -  .dl	inst6502_lsr					;4A
 3553 D1:CE8F A7 CD D1 -  .dl	inst6502_			;4B
 3554 D1:CE92 A2 CC D1 -  .dl	inst6052_jmp_abs				;4C
 3555 D1:CE95 63 C2 D1 -  .dl	inst6502_eor_abs				;4D
 3556 D1:CE98 E1 C6 D1 -  .dl	inst6502_lsr_abs				;4E
 3557 D1:CE9B A7 CD D1 -  .dl	inst6502_			;4F
 3558 D1:CE9E 26 CC D1 -  .dl	inst6502_bvc					;50
 3559 D1:CEA1 61 C3 D1 -  .dl	inst6502_eor_indy				;51
 3560 D1:CEA4 A7 CD D1 -  .dl	inst6502_			;52
 3561 D1:CEA7 A7 CD D1 -  .dl	inst6502_			;53
 3562 D1:CEAA A7 CD D1 -  .dl	inst6502_			;54
 3563 D1:CEAD 37 C2 D1 -  .dl	inst6502_eor_zpx				;55
 3564 D1:CEB0 B3 C6 D1 -  .dl	inst6502_lsr_zpx				;56
 3565 D1:CEB3 A7 CD D1 -  .dl	inst6502_			;57
 3566 D1:CEB6 8E C9 D1 -  .dl	inst6502_cli					;58
 3567 D1:CEB9 DE C2 D1 -  .dl	inst6502_eor_absy				;59
 3568 D1:CEBC A7 CD D1 -  .dl	inst6502_			;5A
 3569 D1:CEBF A7 CD D1 -  .dl	inst6502_			;5B
 3570 D1:CEC2 A7 CD D1 -  .dl	inst6502_			;5C
 3571 D1:CEC5 9C C2 D1 -  .dl	inst6502_eor_absx				;5D
 3572 D1:CEC8 1E C7 D1 -  .dl	inst6502_lsr_absx				;5E
 3573 D1:CECB A7 CD D1 -  .dl	inst6502_			;5F
 3574 D1:CECE 47 CD D1 -  .dl	inst6502_rts					;60
 3575 D1:CED1 EA BE D1 -  .dl	inst6502_adc_indx				;61
 3576 D1:CED4 A7 CD D1 -  .dl	inst6502_			;62
 3577 D1:CED7 A7 CD D1 -  .dl	inst6502_			;63
 3578 D1:CEDA A7 CD D1 -  .dl	inst6502_			;64
 3579 D1:CEDD 55 BE D1 -  .dl	inst6502_adc_zp					;65
 3580 D1:CEE0 98 C8 D1 -  .dl	inst6502_ror_zp					;66
 3581 D1:CEE3 A7 CD D1 -  .dl	inst6502_			;67
 3582 D1:CEE6 5F BC D1 -  .dl	inst6502_pla					;68
 3583 D1:CEE9 4D BE D1 -  .dl	inst6502_adc_imm				;69
 3584 D1:CEEC 70 C8 D1 -  .dl	inst6502_ror					;6A
 3585 D1:CEEF A7 CD D1 -  .dl	inst6502_			;6B
 3586 D1:CEF2 C4 CC D1 -  .dl	inst6502_jmp_indir				;6C
 3587 D1:CEF5 78 BE D1 -  .dl	inst6502_adc_abs				;6D
 3588 D1:CEF8 F7 C8 D1 -  .dl	inst6502_ror_abs				;6E
 3589 D1:CEFB A7 CD D1 -  .dl	inst6502_			;6F
 3590 D1:CEFE 35 CC D1 -  .dl	inst6502_bvs					;70
 3591 D1:CF01 12 BF D1 -  .dl	inst6502_adc_indy				;71
 3592 D1:CF04 A7 CD D1 -  .dl	inst6502_			;72
 3593 D1:CF07 A7 CD D1 -  .dl	inst6502_			;73
 3594 D1:CF0A A7 CD D1 -  .dl	inst6502_			;74
 3595 D1:CF0D 65 BE D1 -  .dl	inst6502_adc_zpx				;75
 3596 D1:CF10 C6 C8 D1 -  .dl	inst6502_ror_zpx				;76
 3597 D1:CF13 A7 CD D1 -  .dl	inst6502_			;77
 3598 D1:CF16 AE C9 D1 -  .dl	inst6502_sei					;78
 3599 D1:CF19 C1 BE D1 -  .dl	inst6502_adc_absy				;79
 3600 D1:CF1C A7 CD D1 -  .dl	inst6502_			;7A
 3601 D1:CF1F A7 CD D1 -  .dl	inst6502_			;7B
 3602 D1:CF22 A7 CD D1 -  .dl	inst6502_			;7C
 3603 D1:CF25 98 BE D1 -  .dl	inst6502_adc_absx				;7D
 3604 D1:CF28 37 C9 D1 -  .dl	inst6502_ror_absx				;7E
 3605 D1:CF2B A7 CD D1 -  .dl	inst6502_			;7F
 3606 D1:CF2E A7 CD D1 -  .dl	inst6502_			;80
 3607 D1:CF31 9A BA D1 -  .dl	inst6502_sta_indx				;81
 3608 D1:CF34 A7 CD D1 -  .dl	inst6502_			;82
 3609 D1:CF37 A7 CD D1 -  .dl	inst6502_			;83
 3610 D1:CF3A 3C BB D1 -  .dl	inst6502_sty_zp					;84
 3611 D1:CF3D FF B9 D1 -  .dl	inst6502_sta_zp					;85
 3612 D1:CF40 F3 BA D1 -  .dl	inst6502_stx_zp					;86
 3613 D1:CF43 A7 CD D1 -  .dl	inst6502_			;87
 3614 D1:CF46 7E BD D1 -  .dl	inst6502_dey					;88
 3615 D1:CF49 A7 CD D1 -  .dl	inst6502_			;89
 3616 D1:CF4C E8 BB D1 -  .dl	inst6502_txa					;8A
 3617 D1:CF4F A7 CD D1 -  .dl	inst6502_			;8B
 3618 D1:CF52 63 BB D1 -  .dl	inst6502_sty_abs				;8C
 3619 D1:CF55 26 BA D1 -  .dl	inst6502_sta_abs				;8D
 3620 D1:CF58 1A BB D1 -  .dl	inst6502_stx_abs				;8E
 3621 D1:CF5B A7 CD D1 -  .dl	inst6502_			;8F
 3622 D1:CF5E CC CB D1 -  .dl	inst6502_bcc					;90
 3623 D1:CF61 C4 BA D1 -  .dl	inst6502_sta_indy				;91
 3624 D1:CF64 A7 CD D1 -  .dl	inst6502_			;92
 3625 D1:CF67 A7 CD D1 -  .dl	inst6502_			;93
 3626 D1:CF6A 4E BB D1 -  .dl	inst6502_sty_zpx				;94
 3627 D1:CF6D 11 BA D1 -  .dl	inst6502_sta_zpx				;95
 3628 D1:CF70 05 BB D1 -  .dl	inst6502_stx_zpy				;96
 3629 D1:CF73 A7 CD D1 -  .dl	inst6502_			;97
 3630 D1:CF76 16 BC D1 -  .dl	inst6502_tya					;98
 3631 D1:CF79 71 BA D1 -  .dl	inst6502_sta_absy				;99
 3632 D1:CF7C 09 BC D1 -  .dl	inst6502_txs					;9A
 3633 D1:CF7F A7 CD D1 -  .dl	inst6502_			;9B
 3634 D1:CF82 A7 CD D1 -  .dl	inst6502_			;9C
 3635 D1:CF85 48 BA D1 -  .dl	inst6502_sta_absx				;9D
 3636 D1:CF88 A7 CD D1 -  .dl	inst6502_			;9E
 3637 D1:CF8B A7 CD D1 -  .dl	inst6502_			;9F
 3638 D1:CF8E 1C B9 D1 -  .dl	inst6502_ldy_imm				;A0
 3639 D1:CF91 B6 B7 D1 -  .dl	inst6502_lda_indx				;A1
 3640 D1:CF94 39 B8 D1 -  .dl	inst6502_ldx_imm				;A2
 3641 D1:CF97 A7 CD D1 -  .dl	inst6502_			;A3
 3642 D1:CF9A 3B B9 D1 -  .dl	inst6502_ldy_zp					;A4
 3643 D1:CF9D B3 B6 D1 -  .dl	inst6502_lda_zp					;A5
 3644 D1:CFA0 58 B8 D1 -  .dl	inst6502_ldx_zp					;A6
 3645 D1:CFA3 A7 CD D1 -  .dl	inst6502_			;A7
 3646 D1:CFA6 A6 BB D1 -  .dl	inst6502_tay					;A8
 3647 D1:CFA9 94 B6 D1 -  .dl	inst6502_lda_imm				;A9
 3648 D1:CFAC 85 BB D1 -  .dl	inst6502_tax					;AA
 3649 D1:CFAF A7 CD D1 -  .dl	inst6502_			;AB
 3650 D1:CFB2 8A B9 D1 -  .dl	inst6502_ldy_abs				;AC
 3651 D1:CFB5 02 B7 D1 -  .dl	inst6502_lda_abs				;AD
 3652 D1:CFB8 A7 B8 D1 -  .dl	inst6502_ldx_abs				;AE
 3653 D1:CFBB A7 CD D1 -  .dl	inst6502_			;AF
 3654 D1:CFBE DB CB D1 -  .dl	inst6502_bcs					;B0
 3655 D1:CFC1 F4 B7 D1 -  .dl	inst6502_lda_indy				;B1
 3656 D1:CFC4 A7 CD D1 -  .dl	inst6502_			;B2
 3657 D1:CFC7 A7 CD D1 -  .dl	inst6502_			;B3
 3658 D1:CFCA 61 B9 D1 -  .dl	inst6502_ldy_zpx				;B4
 3659 D1:CFCD D9 B6 D1 -  .dl	inst6502_lda_zpx				;B5
 3660 D1:CFD0 7E B8 D1 -  .dl	inst6502_ldx_zpy				;B6
 3661 D1:CFD3 A7 CD D1 -  .dl	inst6502_			;B7
 3662 D1:CFD6 96 C9 D1 -  .dl	inst6502_clv					;B8
 3663 D1:CFD9 77 B7 D1 -  .dl	inst6502_lda_absy				;B9
 3664 D1:CFDC C7 BB D1 -  .dl	inst6502_tsx					;BA
 3665 D1:CFDF A7 CD D1 -  .dl	inst6502_			;BB
 3666 D1:CFE2 C0 B9 D1 -  .dl	inst6502_ldy_absx				;BC
 3667 D1:CFE5 38 B7 D1 -  .dl	inst6502_lda_absx				;BD
 3668 D1:CFE8 DD B8 D1 -  .dl	inst6502_ldx_absy				;BE
 3669 D1:CFEB A7 CD D1 -  .dl	inst6502_			;BF
 3670 D1:CFEE 3B CB D1 -  .dl	inst6502_cpy_imm				;C0
 3671 D1:CFF1 53 CA D1 -  .dl	inst6502_cmp_indx				;C1
 3672 D1:CFF4 A7 CD D1 -  .dl	inst6502_			;C2
 3673 D1:CFF7 A7 CD D1 -  .dl	inst6502_			;C3
 3674 D1:CFFA 60 CB D1 -  .dl	inst6502_cpy_zp					;C4
 3675 D1:CFFD BE C9 D1 -  .dl	inst6502_cmp_zp					;C5
 3676 D1:D000 A0 BC D1 -  .dl	inst6502_dec_zp					;C6
 3677 D1:D003 A7 CD D1 -  .dl	inst6502_			;C7
 3678 D1:D006 88 BD D1 -  .dl	inst6502_iny					;C8
 3679 D1:D009 B6 C9 D1 -  .dl	inst6502_cmp_imm				;C9
 3680 D1:D00C 60 BD D1 -  .dl	inst6502_dex					;CA
 3681 D1:D00F A7 CD D1 -  .dl	inst6502_			;CB
 3682 D1:D012 8E CB D1 -  .dl	inst6502_cpy_abs				;CC
 3683 D1:D015 E1 C9 D1 -  .dl	inst6502_cmp_abs				;CD
 3684 D1:D018 ED BC D1 -  .dl	inst6502_dec_abs				;CE
 3685 D1:D01B A7 CD D1 -  .dl	inst6502_			;CF
 3686 D1:D01E 08 CC D1 -  .dl	inst6502_bne					;D0
 3687 D1:D021 7B CA D1 -  .dl	inst6502_cmp_indy				;D1
 3688 D1:D024 A7 CD D1 -  .dl	inst6502_			;D2
 3689 D1:D027 A7 CD D1 -  .dl	inst6502_			;D3
 3690 D1:D02A A7 CD D1 -  .dl	inst6502_			;D4
 3691 D1:D02D CE C9 D1 -  .dl	inst6502_cmp_zpx				;D5
 3692 D1:D030 C5 BC D1 -  .dl	inst6502_dec_zpx				;D6
 3693 D1:D033 A7 CD D1 -  .dl	inst6502_			;D7
 3694 D1:D036 86 C9 D1 -  .dl	inst6502_cld					;D8
 3695 D1:D039 2A CA D1 -  .dl	inst6502_cmp_absy				;D9
 3696 D1:D03C A7 CD D1 -  .dl	inst6502_			;DA
 3697 D1:D03F A7 CD D1 -  .dl	inst6502_			;DB
 3698 D1:D042 A7 CD D1 -  .dl	inst6502_			;DC
 3699 D1:D045 01 CA D1 -  .dl	inst6502_cmp_absx				;DD
 3700 D1:D048 23 BD D1 -  .dl	inst6502_dec_absx				;DE
 3701 D1:D04B A7 CD D1 -  .dl	inst6502_			;DF
 3702 D1:D04E AA CA D1 -  .dl	inst6502_cpx_imm				;E0
 3703 D1:D051 DB BF D1 -  .dl	inst6502_sbc_indx				;E1
 3704 D1:D054 A7 CD D1 -  .dl	inst6502_			;E2
 3705 D1:D057 A7 CD D1 -  .dl	inst6502_			;E3
 3706 D1:D05A CF CA D1 -  .dl	inst6502_cpx_zp					;E4
 3707 D1:D05D 46 BF D1 -  .dl	inst6502_sbc_zp					;E5
 3708 D1:D060 8D BD D1 -  .dl	inst6502_inc_zp					;E6
 3709 D1:D063 A7 CD D1 -  .dl	inst6502_			;E7
 3710 D1:D066 83 BD D1 -  .dl	inst6502_inx					;E8
 3711 D1:D069 3E BF D1 -  .dl	inst6502_sbc_imm				;E9
 3712 D1:D06C A0 CD D1 -  .dl	inst6502_nop					;EA
 3713 D1:D06F A7 CD D1 -  .dl	inst6502_			;EB
 3714 D1:D072 FD CA D1 -  .dl	inst6502_cpx_abs				;EC
 3715 D1:D075 69 BF D1 -  .dl	inst6502_sbc_abs				;ED
 3716 D1:D078 DA BD D1 -  .dl	inst6502_inc_abs				;EE
 3717 D1:D07B A7 CD D1 -  .dl	inst6502_			;EF
 3718 D1:D07E EA CB D1 -  .dl	inst6502_beq					;F0
 3719 D1:D081 03 C0 D1 -  .dl	inst6502_sbc_indy				;F1
 3720 D1:D084 A7 CD D1 -  .dl	inst6502_			;F2
 3721 D1:D087 A7 CD D1 -  .dl	inst6502_			;F3
 3722 D1:D08A A7 CD D1 -  .dl	inst6502_			;F4
 3723 D1:D08D 56 BF D1 -  .dl	inst6502_sbc_zpx				;F5
 3724 D1:D090 B2 BD D1 -  .dl	inst6502_inc_zpx				;F6
 3725 D1:D093 A7 CD D1 -  .dl	inst6502_			;F7
 3726 D1:D096 A6 C9 D1 -  .dl	inst6502_sed					;F8
 3727 D1:D099 B2 BF D1 -  .dl	inst6502_sbc_absy				;F9
 3728 D1:D09C A7 CD D1 -  .dl	inst6502_			;FA
 3729 D1:D09F A7 CD D1 -  .dl	inst6502_			;FB
 3730 D1:D0A2 A7 CD D1 -  .dl	inst6502_			;FC
 3731 D1:D0A5 89 BF D1 -  .dl	inst6502_sbc_absx				;FD
 3732 D1:D0A8 10 BE D1 -  .dl	inst6502_inc_absx				;FE
 3733 D1:D0AB A7 CD D1 -  .dl	inst6502_			;FF
 3734 D1:D0AE -  -  -  -  
 3735 D1:D0AE -  -  -  -  
 3736 D1:D0AE -  -  -  -  
 3737 D1:D0AE -  -  -  -  
 3738 D1:D0AE -  -  -  -  
 3739 D1:D0AE -  -  -  -  
 3740 D1:D0AE -  -  -  -  
 3741 D1:D0AE -  -  -  -  
 3742 D1:D0AE -  -  -  -  
 3743 D1:D0AE -  -  -  -  
 3744 D1:D0AE -  -  -  -  
 3745 D1:D0AE -  -  -  -  
 3746 D1:D0AE -  -  -  -  
Listing for file "main.z80"
  639 D1:D0AE -  -  -  -  #include "debug.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug.z80"
    1 D1:D0AE -  -  -  -  ;This has all the tables needed to drive the debugger.
    2 D1:D0AE -  -  -  -  #include "debug_itab.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug_itab.z80"
    1 D1:D0AE -  -  -  -  inst6502_opcode_width_table:
    2 D1:D0AE 01 -  -  -  .db 1    ;0: 
    3 D1:D0AF 02 -  -  -  .db 2    ;1: zpg,X
    4 D1:D0B0 03 -  -  -  .db 3    ;2: ind
    5 D1:D0B1 03 -  -  -  .db 3    ;3: abs
    6 D1:D0B2 03 -  -  -  .db 3    ;4: abs,X
    7 D1:D0B3 02 -  -  -  .db 2    ;5: X,ind
    8 D1:D0B4 01 -  -  -  .db 1    ;6: A
    9 D1:D0B5 02 -  -  -  .db 2    ;7: zpg
   10 D1:D0B6 02 -  -  -  .db 2    ;8: rel
   11 D1:D0B7 02 -  -  -  .db 2    ;9: #
   12 D1:D0B8 01 -  -  -  .db 1    ;10: impl
   13 D1:D0B9 02 -  -  -  .db 2    ;11: ind,Y
   14 D1:D0BA 03 -  -  -  .db 3    ;12: abs,Y
   15 D1:D0BB 02 -  -  -  .db 2    ;13: zpg,Y
   16 D1:D0BC -  -  -  -  
   17 D1:D0BC -  -  -  -  
   18 D1:D0BC -  -  -  -  ;Note: 1=1byteOper, 2=2byteOper, -=1byteRelOper. Other chrs are literal
   19 D1:D0BC -  -  -  -  
   20 D1:D0BC -  -  -  -  inst6502_disassembler:
   21 D1:D0BC 01 -  -  -  .db 1,""  ;
   22 D1:D0BD 04 31 2C 58 .db 4,"1,X"  ;
   23 D1:D0C1 04 28 32 29 .db 4,"(2)"  ;
   24 D1:D0C5 02 32 -  -  .db 2,"2"  ;
   25 D1:D0C7 04 32 2C 58 .db 4,"2,X"  ;
   26 D1:D0CB 06 28 31 2C 
              58 29 -  -  .db 6,"(1,X)"  ;
   27 D1:D0D1 02 41 -  -  .db 2,"A"  ;
   28 D1:D0D3 02 31 -  -  .db 2,"1"  ;
   29 D1:D0D5 02 2D -  -  .db 2,"-"  ;
   30 D1:D0D7 03 23 31 -  .db 3,"#1"  ;
   31 D1:D0DA 01 -  -  -  .db 1,""  ;
   32 D1:D0DB 06 28 31 29 
              2C 59 -  -  .db 6,"(1),Y"  ;
   33 D1:D0E1 04 32 2C 59 .db 4,"2,Y"  ;
   34 D1:D0E5 04 31 2C 59 .db 4,"1,Y"  ;
   35 D1:D0E9 -  -  -  -  
   36 D1:D0E9 -  -  -  -  inst6502_disassembly_table:
   37 D1:D0E9 42 52 4B 0A .db "BRK", 10     ;0x00
   38 D1:D0ED 4F 52 41 05 .db "ORA", 5     ;0x01
   39 D1:D0F1 4A 41 4D 00 .db "JAM", 0     ;0x02
   40 D1:D0F5 53 4C 4F 05 .db "SLO", 5     ;0x03
   41 D1:D0F9 4E 4F 50 07 .db "NOP", 7     ;0x04
   42 D1:D0FD 4F 52 41 07 .db "ORA", 7     ;0x05
   43 D1:D101 41 53 4C 07 .db "ASL", 7     ;0x06
   44 D1:D105 53 4C 4F 07 .db "SLO", 7     ;0x07
   45 D1:D109 50 48 50 0A .db "PHP", 10     ;0x08
   46 D1:D10D 4F 52 41 09 .db "ORA", 9     ;0x09
   47 D1:D111 41 53 4C 06 .db "ASL", 6     ;0x0A
   48 D1:D115 41 4E 43 09 .db "ANC", 9     ;0x0B
   49 D1:D119 4E 4F 50 03 .db "NOP", 3     ;0x0C
   50 D1:D11D 4F 52 41 03 .db "ORA", 3     ;0x0D
   51 D1:D121 41 53 4C 03 .db "ASL", 3     ;0x0E
   52 D1:D125 53 4C 4F 03 .db "SLO", 3     ;0x0F
   53 D1:D129 42 50 4C 08 .db "BPL", 8     ;0x10
   54 D1:D12D 4F 52 41 0B .db "ORA", 11     ;0x11
   55 D1:D131 4A 41 4D 00 .db "JAM", 0     ;0x12
   56 D1:D135 53 4C 4F 0B .db "SLO", 11     ;0x13
   57 D1:D139 4E 4F 50 01 .db "NOP", 1     ;0x14
   58 D1:D13D 4F 52 41 01 .db "ORA", 1     ;0x15
   59 D1:D141 41 53 4C 01 .db "ASL", 1     ;0x16
   60 D1:D145 53 4C 4F 01 .db "SLO", 1     ;0x17
   61 D1:D149 43 4C 43 0A .db "CLC", 10     ;0x18
   62 D1:D14D 4F 52 41 0C .db "ORA", 12     ;0x19
   63 D1:D151 4E 4F 50 0A .db "NOP", 10     ;0x1A
   64 D1:D155 53 4C 4F 0C .db "SLO", 12     ;0x1B
   65 D1:D159 4E 4F 50 04 .db "NOP", 4     ;0x1C
   66 D1:D15D 4F 52 41 04 .db "ORA", 4     ;0x1D
   67 D1:D161 41 53 4C 04 .db "ASL", 4     ;0x1E
   68 D1:D165 53 4C 4F 04 .db "SLO", 4     ;0x1F
   69 D1:D169 4A 53 52 03 .db "JSR", 3     ;0x20
   70 D1:D16D 41 4E 44 05 .db "AND", 5     ;0x21
   71 D1:D171 4A 41 4D 00 .db "JAM", 0     ;0x22
   72 D1:D175 52 4C 41 05 .db "RLA", 5     ;0x23
   73 D1:D179 42 49 54 07 .db "BIT", 7     ;0x24
   74 D1:D17D 41 4E 44 07 .db "AND", 7     ;0x25
   75 D1:D181 52 4F 4C 07 .db "ROL", 7     ;0x26
   76 D1:D185 52 4C 41 07 .db "RLA", 7     ;0x27
   77 D1:D189 50 4C 50 0A .db "PLP", 10     ;0x28
   78 D1:D18D 41 4E 44 09 .db "AND", 9     ;0x29
   79 D1:D191 52 4F 4C 06 .db "ROL", 6     ;0x2A
   80 D1:D195 41 4E 43 09 .db "ANC", 9     ;0x2B
   81 D1:D199 42 49 54 03 .db "BIT", 3     ;0x2C
   82 D1:D19D 41 4E 44 03 .db "AND", 3     ;0x2D
   83 D1:D1A1 52 4F 4C 03 .db "ROL", 3     ;0x2E
   84 D1:D1A5 52 4C 41 03 .db "RLA", 3     ;0x2F
   85 D1:D1A9 42 4D 49 08 .db "BMI", 8     ;0x30
   86 D1:D1AD 41 4E 44 0B .db "AND", 11     ;0x31
   87 D1:D1B1 4A 41 4D 00 .db "JAM", 0     ;0x32
   88 D1:D1B5 52 4C 41 0B .db "RLA", 11     ;0x33
   89 D1:D1B9 4E 4F 50 01 .db "NOP", 1     ;0x34
   90 D1:D1BD 41 4E 44 01 .db "AND", 1     ;0x35
   91 D1:D1C1 52 4F 4C 01 .db "ROL", 1     ;0x36
   92 D1:D1C5 52 4C 41 01 .db "RLA", 1     ;0x37
   93 D1:D1C9 53 45 43 0A .db "SEC", 10     ;0x38
   94 D1:D1CD 41 4E 44 0C .db "AND", 12     ;0x39
   95 D1:D1D1 4E 4F 50 0A .db "NOP", 10     ;0x3A
   96 D1:D1D5 52 4C 41 0C .db "RLA", 12     ;0x3B
   97 D1:D1D9 4E 4F 50 04 .db "NOP", 4     ;0x3C
   98 D1:D1DD 41 4E 44 04 .db "AND", 4     ;0x3D
   99 D1:D1E1 52 4F 4C 04 .db "ROL", 4     ;0x3E
  100 D1:D1E5 52 4C 41 04 .db "RLA", 4     ;0x3F
  101 D1:D1E9 52 54 49 0A .db "RTI", 10     ;0x40
  102 D1:D1ED 45 4F 52 05 .db "EOR", 5     ;0x41
  103 D1:D1F1 4A 41 4D 00 .db "JAM", 0     ;0x42
  104 D1:D1F5 53 52 45 05 .db "SRE", 5     ;0x43
  105 D1:D1F9 4E 4F 50 07 .db "NOP", 7     ;0x44
  106 D1:D1FD 45 4F 52 07 .db "EOR", 7     ;0x45
  107 D1:D201 4C 53 52 07 .db "LSR", 7     ;0x46
  108 D1:D205 53 52 45 07 .db "SRE", 7     ;0x47
  109 D1:D209 50 48 41 0A .db "PHA", 10     ;0x48
  110 D1:D20D 45 4F 52 09 .db "EOR", 9     ;0x49
  111 D1:D211 4C 53 52 06 .db "LSR", 6     ;0x4A
  112 D1:D215 41 4C 52 09 .db "ALR", 9     ;0x4B
  113 D1:D219 4A 4D 50 03 .db "JMP", 3     ;0x4C
  114 D1:D21D 45 4F 52 03 .db "EOR", 3     ;0x4D
  115 D1:D221 4C 53 52 03 .db "LSR", 3     ;0x4E
  116 D1:D225 53 52 45 03 .db "SRE", 3     ;0x4F
  117 D1:D229 42 56 43 08 .db "BVC", 8     ;0x50
  118 D1:D22D 45 4F 52 0B .db "EOR", 11     ;0x51
  119 D1:D231 4A 41 4D 00 .db "JAM", 0     ;0x52
  120 D1:D235 53 52 45 0B .db "SRE", 11     ;0x53
  121 D1:D239 4E 4F 50 01 .db "NOP", 1     ;0x54
  122 D1:D23D 45 4F 52 01 .db "EOR", 1     ;0x55
  123 D1:D241 4C 53 52 01 .db "LSR", 1     ;0x56
  124 D1:D245 53 52 45 01 .db "SRE", 1     ;0x57
  125 D1:D249 43 4C 49 0A .db "CLI", 10     ;0x58
  126 D1:D24D 45 4F 52 0C .db "EOR", 12     ;0x59
  127 D1:D251 4E 4F 50 0A .db "NOP", 10     ;0x5A
  128 D1:D255 53 52 45 0C .db "SRE", 12     ;0x5B
  129 D1:D259 4E 4F 50 04 .db "NOP", 4     ;0x5C
  130 D1:D25D 45 4F 52 04 .db "EOR", 4     ;0x5D
  131 D1:D261 4C 53 52 04 .db "LSR", 4     ;0x5E
  132 D1:D265 53 52 45 04 .db "SRE", 4     ;0x5F
  133 D1:D269 52 54 53 0A .db "RTS", 10     ;0x60
  134 D1:D26D 41 44 43 05 .db "ADC", 5     ;0x61
  135 D1:D271 4A 41 4D 00 .db "JAM", 0     ;0x62
  136 D1:D275 52 52 41 05 .db "RRA", 5     ;0x63
  137 D1:D279 4E 4F 50 07 .db "NOP", 7     ;0x64
  138 D1:D27D 41 44 43 07 .db "ADC", 7     ;0x65
  139 D1:D281 52 4F 52 07 .db "ROR", 7     ;0x66
  140 D1:D285 52 52 41 07 .db "RRA", 7     ;0x67
  141 D1:D289 50 4C 41 0A .db "PLA", 10     ;0x68
  142 D1:D28D 41 44 43 09 .db "ADC", 9     ;0x69
  143 D1:D291 52 4F 52 06 .db "ROR", 6     ;0x6A
  144 D1:D295 41 52 52 09 .db "ARR", 9     ;0x6B
  145 D1:D299 4A 4D 50 02 .db "JMP", 2     ;0x6C
  146 D1:D29D 41 44 43 03 .db "ADC", 3     ;0x6D
  147 D1:D2A1 52 4F 52 03 .db "ROR", 3     ;0x6E
  148 D1:D2A5 52 52 41 03 .db "RRA", 3     ;0x6F
  149 D1:D2A9 42 56 53 08 .db "BVS", 8     ;0x70
  150 D1:D2AD 41 44 43 0B .db "ADC", 11     ;0x71
  151 D1:D2B1 4A 41 4D 00 .db "JAM", 0     ;0x72
  152 D1:D2B5 52 52 41 0B .db "RRA", 11     ;0x73
  153 D1:D2B9 4E 4F 50 01 .db "NOP", 1     ;0x74
  154 D1:D2BD 41 44 43 01 .db "ADC", 1     ;0x75
  155 D1:D2C1 52 4F 52 01 .db "ROR", 1     ;0x76
  156 D1:D2C5 52 52 41 01 .db "RRA", 1     ;0x77
  157 D1:D2C9 53 45 49 0A .db "SEI", 10     ;0x78
  158 D1:D2CD 41 44 43 0C .db "ADC", 12     ;0x79
  159 D1:D2D1 4E 4F 50 0A .db "NOP", 10     ;0x7A
  160 D1:D2D5 52 52 41 0C .db "RRA", 12     ;0x7B
  161 D1:D2D9 4E 4F 50 04 .db "NOP", 4     ;0x7C
  162 D1:D2DD 41 44 43 04 .db "ADC", 4     ;0x7D
  163 D1:D2E1 52 4F 52 04 .db "ROR", 4     ;0x7E
  164 D1:D2E5 52 52 41 04 .db "RRA", 4     ;0x7F
  165 D1:D2E9 4E 4F 50 09 .db "NOP", 9     ;0x80
  166 D1:D2ED 53 54 41 05 .db "STA", 5     ;0x81
  167 D1:D2F1 4E 4F 50 09 .db "NOP", 9     ;0x82
  168 D1:D2F5 53 41 58 05 .db "SAX", 5     ;0x83
  169 D1:D2F9 53 54 59 07 .db "STY", 7     ;0x84
  170 D1:D2FD 53 54 41 07 .db "STA", 7     ;0x85
  171 D1:D301 53 54 58 07 .db "STX", 7     ;0x86
  172 D1:D305 53 41 58 07 .db "SAX", 7     ;0x87
  173 D1:D309 44 45 59 0A .db "DEY", 10     ;0x88
  174 D1:D30D 4E 4F 50 09 .db "NOP", 9     ;0x89
  175 D1:D311 54 58 41 0A .db "TXA", 10     ;0x8A
  176 D1:D315 41 4E 45 09 .db "ANE", 9     ;0x8B
  177 D1:D319 53 54 59 03 .db "STY", 3     ;0x8C
  178 D1:D31D 53 54 41 03 .db "STA", 3     ;0x8D
  179 D1:D321 53 54 58 03 .db "STX", 3     ;0x8E
  180 D1:D325 53 41 58 03 .db "SAX", 3     ;0x8F
  181 D1:D329 42 43 43 08 .db "BCC", 8     ;0x90
  182 D1:D32D 53 54 41 0B .db "STA", 11     ;0x91
  183 D1:D331 4A 41 4D 00 .db "JAM", 0     ;0x92
  184 D1:D335 53 48 41 0B .db "SHA", 11     ;0x93
  185 D1:D339 53 54 59 01 .db "STY", 1     ;0x94
  186 D1:D33D 53 54 41 01 .db "STA", 1     ;0x95
  187 D1:D341 53 54 58 0D .db "STX", 13     ;0x96
  188 D1:D345 53 41 58 0D .db "SAX", 13     ;0x97
  189 D1:D349 54 59 41 0A .db "TYA", 10     ;0x98
  190 D1:D34D 53 54 41 0C .db "STA", 12     ;0x99
  191 D1:D351 54 58 53 0A .db "TXS", 10     ;0x9A
  192 D1:D355 54 41 53 0C .db "TAS", 12     ;0x9B
  193 D1:D359 53 48 59 04 .db "SHY", 4     ;0x9C
  194 D1:D35D 53 54 41 04 .db "STA", 4     ;0x9D
  195 D1:D361 53 48 58 0C .db "SHX", 12     ;0x9E
  196 D1:D365 53 48 41 0C .db "SHA", 12     ;0x9F
  197 D1:D369 4C 44 59 09 .db "LDY", 9     ;0xA0
  198 D1:D36D 4C 44 41 05 .db "LDA", 5     ;0xA1
  199 D1:D371 4C 44 58 09 .db "LDX", 9     ;0xA2
  200 D1:D375 4C 41 58 05 .db "LAX", 5     ;0xA3
  201 D1:D379 4C 44 59 07 .db "LDY", 7     ;0xA4
  202 D1:D37D 4C 44 41 07 .db "LDA", 7     ;0xA5
  203 D1:D381 4C 44 58 07 .db "LDX", 7     ;0xA6
  204 D1:D385 4C 41 58 07 .db "LAX", 7     ;0xA7
  205 D1:D389 54 41 59 0A .db "TAY", 10     ;0xA8
  206 D1:D38D 4C 44 41 09 .db "LDA", 9     ;0xA9
  207 D1:D391 54 41 58 0A .db "TAX", 10     ;0xAA
  208 D1:D395 4C 58 41 09 .db "LXA", 9     ;0xAB
  209 D1:D399 4C 44 59 03 .db "LDY", 3     ;0xAC
  210 D1:D39D 4C 44 41 03 .db "LDA", 3     ;0xAD
  211 D1:D3A1 4C 44 58 03 .db "LDX", 3     ;0xAE
  212 D1:D3A5 4C 41 58 03 .db "LAX", 3     ;0xAF
  213 D1:D3A9 42 43 53 08 .db "BCS", 8     ;0xB0
  214 D1:D3AD 4C 44 41 0B .db "LDA", 11     ;0xB1
  215 D1:D3B1 4A 41 4D 00 .db "JAM", 0     ;0xB2
  216 D1:D3B5 4C 41 58 0B .db "LAX", 11     ;0xB3
  217 D1:D3B9 4C 44 59 01 .db "LDY", 1     ;0xB4
  218 D1:D3BD 4C 44 41 01 .db "LDA", 1     ;0xB5
  219 D1:D3C1 4C 44 58 0D .db "LDX", 13     ;0xB6
  220 D1:D3C5 4C 41 58 0D .db "LAX", 13     ;0xB7
  221 D1:D3C9 43 4C 56 0A .db "CLV", 10     ;0xB8
  222 D1:D3CD 4C 44 41 0C .db "LDA", 12     ;0xB9
  223 D1:D3D1 54 53 58 0A .db "TSX", 10     ;0xBA
  224 D1:D3D5 4C 41 53 0C .db "LAS", 12     ;0xBB
  225 D1:D3D9 4C 44 59 04 .db "LDY", 4     ;0xBC
  226 D1:D3DD 4C 44 41 04 .db "LDA", 4     ;0xBD
  227 D1:D3E1 4C 44 58 0C .db "LDX", 12     ;0xBE
  228 D1:D3E5 4C 41 58 0C .db "LAX", 12     ;0xBF
  229 D1:D3E9 43 50 59 09 .db "CPY", 9     ;0xC0
  230 D1:D3ED 43 4D 50 05 .db "CMP", 5     ;0xC1
  231 D1:D3F1 4E 4F 50 09 .db "NOP", 9     ;0xC2
  232 D1:D3F5 44 43 50 05 .db "DCP", 5     ;0xC3
  233 D1:D3F9 43 50 59 07 .db "CPY", 7     ;0xC4
  234 D1:D3FD 43 4D 50 07 .db "CMP", 7     ;0xC5
  235 D1:D401 44 45 43 07 .db "DEC", 7     ;0xC6
  236 D1:D405 44 43 50 07 .db "DCP", 7     ;0xC7
  237 D1:D409 49 4E 59 0A .db "INY", 10     ;0xC8
  238 D1:D40D 43 4D 50 09 .db "CMP", 9     ;0xC9
  239 D1:D411 44 45 58 0A .db "DEX", 10     ;0xCA
  240 D1:D415 53 42 58 09 .db "SBX", 9     ;0xCB
  241 D1:D419 43 50 59 03 .db "CPY", 3     ;0xCC
  242 D1:D41D 43 4D 50 03 .db "CMP", 3     ;0xCD
  243 D1:D421 44 45 43 03 .db "DEC", 3     ;0xCE
  244 D1:D425 44 43 50 03 .db "DCP", 3     ;0xCF
  245 D1:D429 42 4E 45 08 .db "BNE", 8     ;0xD0
  246 D1:D42D 43 4D 50 0B .db "CMP", 11     ;0xD1
  247 D1:D431 4A 41 4D 00 .db "JAM", 0     ;0xD2
  248 D1:D435 44 43 50 0B .db "DCP", 11     ;0xD3
  249 D1:D439 4E 4F 50 01 .db "NOP", 1     ;0xD4
  250 D1:D43D 43 4D 50 01 .db "CMP", 1     ;0xD5
  251 D1:D441 44 45 43 01 .db "DEC", 1     ;0xD6
  252 D1:D445 44 43 50 01 .db "DCP", 1     ;0xD7
  253 D1:D449 43 4C 44 0A .db "CLD", 10     ;0xD8
  254 D1:D44D 43 4D 50 0C .db "CMP", 12     ;0xD9
  255 D1:D451 4E 4F 50 0A .db "NOP", 10     ;0xDA
  256 D1:D455 44 43 50 0C .db "DCP", 12     ;0xDB
  257 D1:D459 4E 4F 50 04 .db "NOP", 4     ;0xDC
  258 D1:D45D 43 4D 50 04 .db "CMP", 4     ;0xDD
  259 D1:D461 44 45 43 04 .db "DEC", 4     ;0xDE
  260 D1:D465 44 43 50 04 .db "DCP", 4     ;0xDF
  261 D1:D469 43 50 58 09 .db "CPX", 9     ;0xE0
  262 D1:D46D 53 42 43 05 .db "SBC", 5     ;0xE1
  263 D1:D471 4E 4F 50 09 .db "NOP", 9     ;0xE2
  264 D1:D475 49 53 43 05 .db "ISC", 5     ;0xE3
  265 D1:D479 43 50 58 07 .db "CPX", 7     ;0xE4
  266 D1:D47D 53 42 43 07 .db "SBC", 7     ;0xE5
  267 D1:D481 49 4E 43 07 .db "INC", 7     ;0xE6
  268 D1:D485 49 53 43 07 .db "ISC", 7     ;0xE7
  269 D1:D489 49 4E 58 0A .db "INX", 10     ;0xE8
  270 D1:D48D 53 42 43 09 .db "SBC", 9     ;0xE9
  271 D1:D491 4E 4F 50 0A .db "NOP", 10     ;0xEA
  272 D1:D495 55 53 42 09 .db "USB", 9     ;0xEB
  273 D1:D499 43 50 58 03 .db "CPX", 3     ;0xEC
  274 D1:D49D 53 42 43 03 .db "SBC", 3     ;0xED
  275 D1:D4A1 49 4E 43 03 .db "INC", 3     ;0xEE
  276 D1:D4A5 49 53 43 03 .db "ISC", 3     ;0xEF
  277 D1:D4A9 42 45 51 08 .db "BEQ", 8     ;0xF0
  278 D1:D4AD 53 42 43 0B .db "SBC", 11     ;0xF1
  279 D1:D4B1 4A 41 4D 00 .db "JAM", 0     ;0xF2
  280 D1:D4B5 49 53 43 0B .db "ISC", 11     ;0xF3
  281 D1:D4B9 4E 4F 50 01 .db "NOP", 1     ;0xF4
  282 D1:D4BD 53 42 43 01 .db "SBC", 1     ;0xF5
  283 D1:D4C1 49 4E 43 01 .db "INC", 1     ;0xF6
  284 D1:D4C5 49 53 43 01 .db "ISC", 1     ;0xF7
  285 D1:D4C9 53 45 44 0A .db "SED", 10     ;0xF8
  286 D1:D4CD 53 42 43 0C .db "SBC", 12     ;0xF9
  287 D1:D4D1 4E 4F 50 0A .db "NOP", 10     ;0xFA
  288 D1:D4D5 49 53 43 0C .db "ISC", 12     ;0xFB
  289 D1:D4D9 4E 4F 50 04 .db "NOP", 4     ;0xFC
  290 D1:D4DD 53 42 43 04 .db "SBC", 4     ;0xFD
  291 D1:D4E1 49 4E 43 04 .db "INC", 4     ;0xFE
  292 D1:D4E5 49 53 43 04 .db "ISC", 4     ;0xFF
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug.z80"
    3 D1:D4E9 -  -  -  -  
    4 D1:D4E9 -  -  -  -  
    5 D1:D4E9 -  -  -  -  ;You must assign a print character routine.
    6 D1:D4E9 -  -  -  -  ;You must also write all opcode bytes to operbuf or map operbuf to where written
    7 D1:D4E9 -  -  -  -  dbg_printChr    = PrintBigFont
    8 D1:D4E9 -  -  -  -  operbuf         = debugram
    9 D1:D4E9 -  -  -  -  
   10 D1:D4E9 -  -  -  -  
   11 D1:D4E9 -  -  -  -  dbg_resetScreen:
   12 D1:D4E9 21 00 00 D4     ld  hl,screenBuf1
   13 D1:D4ED 11 01 00 D4     ld  de,screenBuf1+1
   14 D1:D4F1 01 FF 57 02     ld  bc,(2*240*320)-1
   15 D1:D4F5 36 00 -  -      ld  (hl),$00
   16 D1:D4F7 ED B0 -  -      ldir
   17 D1:D4F9 AF -  -  -      xor a,a
   18 D1:D4FA CD EF AE D1     call setLineStart
   19 D1:D4FE CD F8 AE D1     call setCurLine
   20 D1:D502 C9 -  -  -      ret
   21 D1:D503 -  -  -  -  
   22 D1:D503 -  -  -  -  dbg_prepNextLine:
   23 D1:D503 AF -  -  -      xor a,a
   24 D1:D504 32 F6 31 D0     ld  (xPos),a
   25 D1:D508 CD C5 AF D1     call calculateScreenPtr
   26 D1:D50C EB -  -  -      ex  de,hl
   27 D1:D50D 21 FF 2B D5     ld  hl,screenBuf2-1
   28 D1:D511 B7 -  -  -      or  a,a
   29 D1:D512 ED 52 -  -      sbc hl,de
   30 D1:D514 -  -  -  -  ;If C: DE in sb2. subtract to set in sb1.
   31 D1:D514 -  -  -  -  ;If NC: DE in sb1. add to set in sb2.
   32 D1:D514 21 00 2C 01     ld  hl,320*240
   33 D1:D518 30 04 -  -      jr  nc,+_
   34 D1:D51A 21 00 D4 FE     ld  hl,-(320*240)+0
   35 D1:D51E 19 -  -  -  _:  add hl,de   ;HL set to other buffer. DE points to current buffer.
   36 D1:D51F 01 00 0A 00     ld  bc,320*8    ;copy one line from other buffer to current buffer.
   37 D1:D523 ED B0 -  -      ldir
   38 D1:D525 3A F7 31 D0     ld  a,(yPos)
   39 D1:D529 FE 1D -  -      cp  a,29
   40 D1:D52B 20 06 -  -      jr  nz,+_
   41 D1:D52D 21 00 D4 FE     ld  hl,-(320*240)
   42 D1:D531 19 -  -  -      add hl,de
   43 D1:D532 EB -  -  -      ex de,hl        ;if bottom of screen, then reset DE to top of screen.
   44 D1:D533 D5 -  -  -  _:  push de
   45 D1:D534 E1 -  -  -      pop hl
   46 D1:D535 13 -  -  -      inc de
   47 D1:D536 71 -  -  -      ld  (hl),c
   48 D1:D537 01 BF 08 00     ld  bc,(320*7)-1    ;erase whole line below it to prepare for writing.
   49 D1:D53B ED B0 -  -      ldir
   50 D1:D53D C9 -  -  -      ret
   51 D1:D53E -  -  -  -  
   52 D1:D53E -  -  -  -  ;Input: ix = core_memory_ix 
   53 D1:D53E -  -  -  -  ;Output: Text onscreen
   54 D1:D53E -  -  -  -  dbg_printLine:
   55 D1:D53E E5 C5 D5 DD 
              E5 FD E5 F5     push hl \ push bc \ push de \ push ix \ push iy \ push af
   56 D1:D546 DD 27 0E -      ld  hl,(ix+CURRENT_OPCODES)
   57 D1:D549 22 F9 31 D0     ld  (operbuf),hl
   58 D1:D54D CD 03 D5 D1     call dbg_prepNextLine
   59 D1:D551 CD 03 AF D1     call newLine
   60 D1:D555 DD 7E 06 -      ld  a,(ix+REGPC+1)
   61 D1:D558 CD 60 AF D1     call printSmallNumPair
   62 D1:D55C DD 7E 05 -      ld  a,(ix+REGPC+0)
   63 D1:D55F CD 60 AF D1     call printSmallNumPair
   64 D1:D563 3E 20 -  -      ld  a,' '
   65 D1:D565 CD 30 AF D1     call printBigFont
   66 D1:D569 -  -  -  -      ;
   67 D1:D569 3E 41 -  -      ld  a,'A'
   68 D1:D56B CD 30 AF D1     call printBigFont
   69 D1:D56F DD 7E 00 -      ld  a,(ix+REGA)
   70 D1:D572 CD 60 AF D1     call printSmallNumPair
   71 D1:D576 3E 20 -  -      ld  a,' '
   72 D1:D578 CD 30 AF D1     call printBigFont
   73 D1:D57C -  -  -  -      ;
   74 D1:D57C 3E 58 -  -      ld  a,'X'
   75 D1:D57E CD 30 AF D1     call printBigFont
   76 D1:D582 DD 7E 01 -      ld  a,(ix+REGX)
   77 D1:D585 CD 60 AF D1     call printSmallNumPair
   78 D1:D589 3E 20 -  -      ld  a,' '
   79 D1:D58B CD 30 AF D1     call printBigFont
   80 D1:D58F -  -  -  -      ;
   81 D1:D58F 3E 59 -  -      ld  a,'Y'
   82 D1:D591 CD 30 AF D1     call printBigFont
   83 D1:D595 DD 7E 02 -      ld  a,(ix+REGY)
   84 D1:D598 CD 60 AF D1     call printSmallNumPair
   85 D1:D59C 3E 20 -  -      ld  a,' '
   86 D1:D59E CD 30 AF D1     call printBigFont
   87 D1:D5A2 -  -  -  -      ;
   88 D1:D5A2 3E 53 -  -      ld  a,'S'
   89 D1:D5A4 CD 30 AF D1     call printBigFont
   90 D1:D5A8 DD 7E 03 -      ld  a,(ix+REGSP)
   91 D1:D5AB CD 60 AF D1     call printSmallNumPair
   92 D1:D5AF 3E 20 -  -      ld  a,' '
   93 D1:D5B1 CD 30 AF D1     call printBigFont
   94 D1:D5B5 -  -  -  -      ;
   95 D1:D5B5 3E 50 -  -      ld  a,'P'
   96 D1:D5B7 CD 30 AF D1     call printBigFont
   97 D1:D5BB DD 7E 04 -      ld  a,(ix+REGSR)
   98 D1:D5BE CD 60 AF D1     call printSmallNumPair
   99 D1:D5C2 3E 20 -  -      ld  a,' '
  100 D1:D5C4 CD 30 AF D1     call printBigFont
  101 D1:D5C8 -  -  -  -  
  102 D1:D5C8 -  -  -  -      ;
  103 D1:D5C8 -  -  -  -  ;    ld  hl,dbg_printLine_str001
  104 D1:D5C8 -  -  -  -  ;    call printString
  105 D1:D5C8 -  -  -  -  ;    ld  b,5
  106 D1:D5C8 -  -  -  -  ;    lea hl,ix+0
  107 D1:D5C8 -  -  -  -  ;_:  ld  a,(hl)
  108 D1:D5C8 -  -  -  -  ;    inc hl
  109 D1:D5C8 -  -  -  -  ;    push bc
  110 D1:D5C8 -  -  -  -  ;        push hl
  111 D1:D5C8 -  -  -  -  ;            call printSmallNumPair
  112 D1:D5C8 -  -  -  -  ;            ld  a,' '
  113 D1:D5C8 -  -  -  -  ;            call printBigFont
  114 D1:D5C8 -  -  -  -  ;        pop hl
  115 D1:D5C8 -  -  -  -  ;    pop bc
  116 D1:D5C8 -  -  -  -  ;    djnz -_
  117 D1:D5C8 -  -  -  -  
  118 D1:D5C8 ED 23 00 -      lea hl,iy+0
  119 D1:D5CB DD 2F 0B -      ld  (ix+CYCLES_CURRENT),hl
  120 D1:D5CE DD 7E 0D -      ld  a,(ix+CYCLES_CURRENT+2)
  121 D1:D5D1 CD 60 AF D1     call printSmallNumPair
  122 D1:D5D5 DD 7E 0C -      ld  a,(ix+CYCLES_CURRENT+1)
  123 D1:D5D8 CD 60 AF D1     call printSmallNumPair
  124 D1:D5DC DD 7E 0B -      ld  a,(ix+CYCLES_CURRENT+0)
  125 D1:D5DF CD 60 AF D1     call printSmallNumPair
  126 D1:D5E3 3E 20 -  -      ld  a,' '
  127 D1:D5E5 CD 30 AF D1     call printBigFont
  128 D1:D5E9 2A F9 31 D0     ld  hl,(operbuf)
  129 D1:D5ED DD 2F 0E -      ld  (ix+CURRENT_OPCODES),hl
  130 D1:D5F0 7D -  -  -      ld  a,L
  131 D1:D5F1 CD 36 D6 D1     call dbg_getInstSize
  132 D1:D5F5 06 03 -  -      ld  b,3
  133 D1:D5F7 4F -  -  -      ld  c,a
  134 D1:D5F8 0C -  -  -      inc c
  135 D1:D5F9 ED 22 0E -      lea hl,ix+CURRENT_OPCODES
  136 D1:D5FC 7E -  -  -  _:  ld  a,(hl)
  137 D1:D5FD 23 -  -  -      inc hl
  138 D1:D5FE E5 -  -  -      push hl
  139 D1:D5FF 0D -  -  -          dec c
  140 D1:D600 F2 05 D6 D1         jp p,+_
  141 D1:D604 0C -  -  -          inc c   ;never let c go below zero.
  142 D1:D605 C5 -  -  -  _:      push bc
  143 D1:D606 28 06 -  -              jr  z,+_
  144 D1:D608 CD 60 AF D1             call printSmallNumPair
  145 D1:D60C 18 06 -  -              jr ++_
  146 D1:D60E 3E 20 -  -  _:          ld  a,' '
  147 D1:D610 CD 30 AF D1             call printBigFont
  148 D1:D614 C1 -  -  -  _:      pop bc
  149 D1:D615 E1 -  -  -      pop hl
  150 D1:D616 10 E4 -  -      djnz ----_
  151 D1:D618 3E 20 -  -      ld  a,' '
  152 D1:D61A CD 30 AF D1     call printBigFont
  153 D1:D61E CD 4E D6 D1     call dbg_printDisassembly
  154 D1:D622 CD 26 AE D1     call fastCopy
  155 D1:D626 F1 FD E1 DD 
              E1 D1 C1 E1     pop af \ pop iy \ pop ix \ pop de \ pop bc \ pop hl
  156 D1:D62E -  -  -  -      ;push hl \ push bc \ push de \ push ix \ push iy \ push af
  157 D1:D62E C9 -  -  -      ret
  158 D1:D62F -  -  -  -  
  159 D1:D62F -  -  -  -  dbg_printLine_str001:
  160 D1:D62F 41 58 59 53 
              50 20 00 -  .db "AXYSP ",0
  161 D1:D636 -  -  -  -  
  162 D1:D636 -  -  -  -  
  163 D1:D636 -  -  -  -  
  164 D1:D636 -  -  -  -  
  165 D1:D636 -  -  -  -  
  166 D1:D636 -  -  -  -  
  167 D1:D636 -  -  -  -  ;A=instruction. Returns: A=size
  168 D1:D636 -  -  -  -  dbg_getInstSize:
  169 D1:D636 E5 D5 -  -      push hl \ push de
  170 D1:D638 57 -  -  -          ld  d,a
  171 D1:D639 1E 04 -  -          ld  e,4
  172 D1:D63B ED 5C -  -          mlt de
  173 D1:D63D 21 EC D0 D1         ld  hl,inst6502_disassembly_table+3
  174 D1:D641 19 -  -  -          add hl,de
  175 D1:D642 16 00 -  -          ld  d,0
  176 D1:D644 5E -  -  -          ld  e,(hl)
  177 D1:D645 21 AE D0 D1         ld  hl,inst6502_opcode_width_table
  178 D1:D649 19 -  -  -          add hl,de
  179 D1:D64A 7E -  -  -          ld  a,(hl)
  180 D1:D64B D1 E1 -  -      pop de \ pop hl
  181 D1:D64D C9 -  -  -      ret
  182 D1:D64E -  -  -  -  
  183 D1:D64E -  -  -  -  dbg_printDisassembly:
  184 D1:D64E F5 C5 D5 E5 
              DD E5 -  -      push af \ push bc \ push de \ push hl \ push ix
  185 D1:D654 -  -  -  -      ;find entry in disassembly table
  186 D1:D654 2A F9 31 D0     ld  hl,(operbuf)
  187 D1:D658 26 04 -  -      ld  H,4
  188 D1:D65A ED 6C -  -      mlt hl
  189 D1:D65C 11 E9 D0 D1     ld  de,inst6502_disassembly_table
  190 D1:D660 19 -  -  -      add hl,de
  191 D1:D661 06 03 -  -      ld  b,3
  192 D1:D663 7E -  -  -  _:  ld  a,(hl)
  193 D1:D664 23 -  -  -      inc hl
  194 D1:D665 CD EB D6 D1     call dbg_printC
  195 D1:D669 10 F8 -  -      djnz -_
  196 D1:D66B 3E 20 -  -      ld  a,' '
  197 D1:D66D CD EB D6 D1     call dbg_printC
  198 D1:D671 46 -  -  -      ld  b,(hl)
  199 D1:D672 04 -  -  -      inc b
  200 D1:D673 -  -  -  -      ;Instruction addressing mode in B. Now find text for that address mode.
  201 D1:D673 21 BC D0 D1     ld  hl,inst6502_disassembler
  202 D1:D677 11 00 00 00     ld  de,0
  203 D1:D67B 5E -  -  -  _:  ld  e,(hl)
  204 D1:D67C 19 -  -  -      add hl,de
  205 D1:D67D 10 FC -  -      djnz -_
  206 D1:D67F 1D -  -  -      dec e
  207 D1:D680 28 29 -  -      jr  z,dbg_printDisassembly_end  ;stop if text is zero-sized
  208 D1:D682 ED 52 -  -      sbc hl,de   ;rewind to start of text part of instruction. E is text length.
  209 D1:D684 43 -  -  -      ld  b,e
  210 D1:D685 -  -  -  -  dbg_printDisassembly_printOperandLoop:
  211 D1:D685 7E -  -  -      ld  a,(hl)
  212 D1:D686 23 -  -  -      inc hl
  213 D1:D687 FE 31 -  -      cp  a,'1'
  214 D1:D689 20 06 -  -      jr  nz,+_
  215 D1:D68B CD CF D6 D1     call dbg_printOperand1
  216 D1:D68F 18 18 -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  217 D1:D691 FE 32 -  -  _:  cp  a,'2'
  218 D1:D693 20 06 -  -      jr  nz,+_
  219 D1:D695 CD C7 D6 D1     call dbg_printOperand2
  220 D1:D699 18 0E -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  221 D1:D69B FE 2D -  -  _:  cp  a,'-'
  222 D1:D69D 20 06 -  -      jr  nz,+_
  223 D1:D69F CD B2 D6 D1     call dbg_printRel1
  224 D1:D6A3 18 04 -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  225 D1:D6A5 CD EB D6 D1 _:  call dbg_printC
  226 D1:D6A9 -  -  -  -  dbg_PrintDisassembly_printOperandFallthrough:
  227 D1:D6A9 10 DA -  -      djnz dbg_printDisassembly_printOperandLoop
  228 D1:D6AB -  -  -  -  dbg_printDisassembly_end:
  229 D1:D6AB DD E1 E1 D1 
              C1 F1 -  -      pop ix \ pop hl \ pop de \ pop bc \ pop af
  230 D1:D6B1 C9 -  -  -      ret
  231 D1:D6B2 -  -  -  -  
  232 D1:D6B2 -  -  -  -  dbg_printRel1:
  233 D1:D6B2 3A FA 31 D0     ld  a,(operbuf+1)
  234 D1:D6B6 B7 -  -  -      or  a,a
  235 D1:D6B7 F2 C5 D6 D1     jp  p,dbg_printRel1_skipNeg
  236 D1:D6BB F5 -  -  -      push af
  237 D1:D6BC 3E 2D -  -          ld   a,'-'
  238 D1:D6BE CD EB D6 D1         call dbg_printC
  239 D1:D6C2 F1 -  -  -      pop af
  240 D1:D6C3 ED 44 -  -      neg
  241 D1:D6C5 -  -  -  -  dbg_printRel1_skipNeg:
  242 D1:D6C5 18 0C -  -      jr dbg_printHex
  243 D1:D6C7 -  -  -  -  
  244 D1:D6C7 -  -  -  -  dbg_printOperand2:
  245 D1:D6C7 3A FB 31 D0     ld  a,(operbuf+2)
  246 D1:D6CB CD D3 D6 D1     call dbg_printHex
  247 D1:D6CF -  -  -  -  dbg_printOperand1:
  248 D1:D6CF 3A FA 31 D0     ld  a,(operbuf+1)
  249 D1:D6D3 -  -  -  -  dbg_printHex:
  250 D1:D6D3 CD D8 D6 D1     call dispAHex
  251 D1:D6D7 C9 -  -  -      ret
  252 D1:D6D8 -  -  -  -  
  253 D1:D6D8 -  -  -  -  dispAHex:
  254 D1:D6D8 F5 -  -  -      push af
  255 D1:D6D9 CD E0 D6 D1         call +_
  256 D1:D6DD F1 -  -  -      pop af
  257 D1:D6DE 18 04 -  -      jr  ++_
  258 D1:D6E0 1F -  -  -  _:  rra
  259 D1:D6E1 1F -  -  -      rra
  260 D1:D6E2 1F -  -  -      rra
  261 D1:D6E3 1F -  -  -      rra
  262 D1:D6E4 F6 F0 -  -  _:  or  a,$F0
  263 D1:D6E6 27 -  -  -      daa
  264 D1:D6E7 C6 A0 -  -      add a,$A0
  265 D1:D6E9 CE 40 -  -      adc a,$40
  266 D1:D6EB -  -  -  -  dbg_printC:
  267 D1:D6EB E5 -  -  -      push hl
  268 D1:D6EC C5 -  -  -          push bc
  269 D1:D6ED CD 30 AF D1             call dbg_printChr
  270 D1:D6F1 C1 -  -  -          pop bc
  271 D1:D6F2 E1 -  -  -      pop hl
  272 D1:D6F3 C9 -  -  -      ret
Listing for file "main.z80"
  640 D1:D6F4 -  -  -  -  .echo "Main program size: ",$-programStart
