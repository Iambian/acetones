    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD 7B AD D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 -  -  -  -      ;load reset vectors
   44 D1:A895 21 6F A8 D1     ld  hl,testVectors
   45 D1:A899 01 01 01 00     ld  bc,$000101
   46 D1:A89D 1E FF -  -      ld  e,$FF
   47 D1:A89F CD 8C B4 D1     call i6502_map_pages
   48 D1:A8A3 -  -  -  -      ;load program ROM to lowmem
   49 D1:A8A3 21 6F A9 D1     ld  hl,testCode
   50 D1:A8A7 01 08 20 00     ld  bc,$002008
   51 D1:A8AB 1E 80 -  -      ld  e,$80
   52 D1:A8AD CD 8C B4 D1     call i6502_map_pages
   53 D1:A8B1 -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   54 D1:A8B1 -  -  -  -      ;memory to screen.
   55 D1:A8B1 21 00 50 D0     ld  hl,NAMETABLE1
   56 D1:A8B5 01 04 20 00     ld  bc,$002004
   57 D1:A8B9 1E 40 -  -      ld  e,$40
   58 D1:A8BB CD 8C B4 D1     call i6502_map_pages
   59 D1:A8BF -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   60 D1:A8BF -  -  -  -      ;start the emulation.
   61 D1:A8BF -  -  -  -      ;jr $
   62 D1:A8BF CD CE AD D1     call clearTextBuf
   63 D1:A8C3 3E 01 -  -      ld  a,1
   64 D1:A8C5 CD 1B AE D1     call setLineStart
   65 D1:A8C9 CD 24 AE D1     call setCurLine
   66 D1:A8CD 21 EC A9 D1     ld  hl,text001
   67 D1:A8D1 CD 41 AE D1     call printString
   68 D1:A8D5 FD 21 30 AA 
              D1 -  -  -      ld  iy,firstFileHeader
   69 D1:A8DA 01 00 00 00     ld  bc,0
   70 D1:A8DE FD 4E FF -      ld  c,(iy-1)
   71 D1:A8E1 CD F6 AC D1     call vatTraverse
   72 D1:A8E5 30 0C -  -      jr  nc,+_
   73 D1:A8E7 21 03 AA D1     ld  hl,text002
   74 D1:A8EB CD 41 AE D1     call printString
   75 D1:A8EF C3 13 A9 D1     jp endCurrentRun
   76 D1:A8F3 D5 -  -  -  _:  push de
   77 D1:A8F4 21 22 AA D1         ld  hl,text003
   78 D1:A8F8 CD 41 AE D1         call printString
   79 D1:A8FC D1 -  -  -      pop de
   80 D1:A8FD DD 46 FA -      ld  b,(ix-6)
   81 D1:A900 ED 22 F9 -      lea hl,ix-7
   82 D1:A903 7E -  -  -  _:  ld  a,(hl)
   83 D1:A904 2B -  -  -      dec hl
   84 D1:A905 E5 -  -  -      push hl
   85 D1:A906 C5 -  -  -          push bc
   86 D1:A907 CD 57 AE D1             call PrintBigFont
   87 D1:A90B C1 -  -  -          pop bc
   88 D1:A90C E1 -  -  -      pop hl
   89 D1:A90D 10 F4 -  -      djnz -_
   90 D1:A90F CD 2F AE D1     call newLine
   91 D1:A913 -  -  -  -  
   92 D1:A913 -  -  -  -  
   93 D1:A913 -  -  -  -  
   94 D1:A913 -  -  -  -  
   95 D1:A913 -  -  -  -      ;call i6502Init
   96 D1:A913 -  -  -  -  
   97 D1:A913 -  -  -  -  ;    call clearTextBuf
   98 D1:A913 -  -  -  -  ;    ld  hl,helloWorld
   99 D1:A913 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  100 D1:A913 -  -  -  -  ;    ld  bc,13
  101 D1:A913 -  -  -  -  ;    ldir
  102 D1:A913 -  -  -  -  
  103 D1:A913 -  -  -  -  endCurrentRun:
  104 D1:A913 -  -  -  -      ;call printTextBuf
  105 D1:A913 CD 52 AD D1     call fastCopy
  106 D1:A917 00 -  -  -      nop
  107 D1:A918 CD E0 A9 D1     call waituntilnewkeypress
  108 D1:A91C CD D8 A9 D1     call waituntilkeyrelease
  109 D1:A920 -  -  -  -  
  110 D1:A920 -  -  -  -      ;
  111 D1:A920 -  -  -  -      ;
  112 D1:A920 -  -  -  -      ;
  113 D1:A920 -  -  -  -  programExit:
  114 D1:A920 CD 6D AD D1     call stopGfx
  115 D1:A924 ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  116 D1:A929 3A FF 31 D0     ld  a,(save_mbase)
  117 D1:A92D ED 6D -  -      ld  MB,a
  118 D1:A92F FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  119 D1:A934 C9 -  -  -      ret
  120 D1:A935 -  -  -  -  
  121 D1:A935 -  -  -  -  loadROM:
  122 D1:A935 CD 10 1A 02     call _ClrLCDAll
  123 D1:A939 21 60 A9 D1 _:  ld  hl,testFilename
  124 D1:A93D CD 20 03 02     call _Mov9ToOP1
  125 D1:A941 CD 0C 05 02     call _ChkFindSym
  126 D1:A945 D8 -  -  -      ret c
  127 D1:A946 CD 98 1F 02     call _ChkInRam
  128 D1:A94A 20 06 -  -      jr  nz,+_
  129 D1:A94C CD 48 14 02     call _Arc_Unarc
  130 D1:A950 18 E7 -  -      jr  -_
  131 D1:A952 00 -  -  -  _:  nop
  132 D1:A953 11 09 00 00     ld  de,9
  133 D1:A957 19 -  -  -      add hl,de
  134 D1:A958 5E -  -  -      ld  e,(hl)
  135 D1:A959 19 -  -  -      add hl,de
  136 D1:A95A 23 -  -  -      inc hl
  137 D1:A95B CD 9C 1D 02     call _LoadDEInd_s   ;ld de,(hl) but DE is 16 bit. Then HL+=2.
  138 D1:A95F -  -  -  -      ;HL=start of program data. DE is size of data.
  139 D1:A95F -  -  -  -      ;
  140 D1:A95F -  -  -  -      ;
  141 D1:A95F -  -  -  -      ; TODO: Finish writing this section.
  142 D1:A95F -  -  -  -      ;
  143 D1:A95F -  -  -  -      ;
  144 D1:A95F C9 -  -  -      ret
  145 D1:A960 -  -  -  -  
  146 D1:A960 -  -  -  -  testFilename:
  147 D1:A960 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  148 D1:A969 -  -  -  -  
  149 D1:A969 -  -  -  -  
  150 D1:A969 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  151 D1:A969 -  -  -  -  testVectors .equ $-(256-6)
  152 D1:A969 00 80 -  -  .dw $8000
  153 D1:A96B 00 80 -  -  .dw $8000
  154 D1:A96D 00 80 -  -  .dw $8000
  155 D1:A96F -  -  -  -  testCode:
  156 D1:A96F A9 00 AA A8 .db $A9,$00,$AA,$A8
  157 D1:A973 BD 14 80 -  .db $BD,$14,$80
  158 D1:A976 C9 00 -  -  .db $C9,$00
  159 D1:A978 F0 08 -  -  .db $F0,$08
  160 D1:A97A 99 21 40 -  .db $99,$21,$40
  161 D1:A97D E8 C8 -  -  .db $E8,$C8
  162 D1:A97F -  -  -  -  ;.db $12
  163 D1:A97F 4C 04 80 02 .db $4C,$04,$80,$02
  164 D1:A983 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  165 D1:A98C 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  166 D1:A991 -  -  -  -  
  167 D1:A991 -  -  -  -  
  168 D1:A991 A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  169 D1:A9A0 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  170 D1:A9B0 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  171 D1:A9B1 -  -  -  -  
  172 D1:A9B1 -  -  -  -  helloWorld:
  173 D1:A9B1 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  174 D1:A9BF -  -  -  -  
  175 D1:A9BF -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  176 D1:A9BF -  -  -  -  ;find yet another hardware reference for something I already did.
  177 D1:A9BF -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  178 D1:A9BF -  -  -  -  ;what we're looking for. Here, we output the same sort of
  179 D1:A9BF -  -  -  -  ;game keys that I've used basically all my programming life.
  180 D1:A9BF -  -  -  -  ;Anyhoo. We'll be using the following:
  181 D1:A9BF -  -  -  -  ;kbitDown	equ 00h
  182 D1:A9BF -  -  -  -  ;kbitLeft	equ 01h
  183 D1:A9BF -  -  -  -  ;kbitRight	equ 02h
  184 D1:A9BF -  -  -  -  ;kbitUp		equ 03h
  185 D1:A9BF -  -  -  -  ;kbitYequ equ 04h
  186 D1:A9BF -  -  -  -  ;kbit2nd		equ 05h
  187 D1:A9BF -  -  -  -  ;kbitMode	equ 06h
  188 D1:A9BF -  -  -  -  ;kbitDel		equ 07h
  189 D1:A9BF -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  190 D1:A9BF -  -  -  -  
  191 D1:A9BF -  -  -  -  getkbd_adl:
  192 D1:A9BF DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  193 D1:A9C4 ED 22 00 -  	lea hl,ix+0
  194 D1:A9C7 36 02 -  -  	ld  (hl),keyModeScanOnce
  195 D1:A9C9 AF -  -  -  	xor a
  196 D1:A9CA BE -  -  -  _:  cp  (hl)
  197 D1:A9CB 20 FD -  -  	jr  nz,-_
  198 D1:A9CD DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  199 D1:A9D0 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  200 D1:A9D3 AD -  -  -  	xor L
  201 D1:A9D4 E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  202 D1:A9D6 AD -  -  -  	xor L
  203 D1:A9D7 C9 -  -  -  	ret
  204 D1:A9D8 -  -  -  -  
  205 D1:A9D8 -  -  -  -  
  206 D1:A9D8 -  -  -  -  waituntilkeyrelease:
  207 D1:A9D8 CD BF A9 D1     call getkbd_adl
  208 D1:A9DC B7 -  -  -      or  a,a
  209 D1:A9DD 20 F9 -  -      jr  nz,waituntilkeyrelease
  210 D1:A9DF C9 -  -  -  	ret
  211 D1:A9E0 -  -  -  -  
  212 D1:A9E0 -  -  -  -  waituntilnewkeypress:
  213 D1:A9E0 CD D8 A9 D1     call waituntilkeyrelease
  214 D1:A9E4 CD BF A9 D1 _:  call getkbd_adl
  215 D1:A9E8 B7 -  -  -  	or  a,a
  216 D1:A9E9 28 F9 -  -  	jr  z,-_
  217 D1:A9EB C9 -  -  -      ret
  218 D1:A9EC -  -  -  -  
  219 D1:A9EC -  -  -  -  
  220 D1:A9EC -  -  -  -  text001:
  221 D1:A9EC 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  222 D1:AA03 -  -  -  -  text002:
  223 D1:AA03 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  224 D1:AA22 -  -  -  -  text003:
  225 D1:AA22 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  226 D1:AA2F -  -  -  -  
  227 D1:AA2F -  -  -  -  
  228 D1:AA2F 07 -  -  -  .db 7
  229 D1:AA30 -  -  -  -  firstFileHeader:
  230 D1:AA30 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  231 D1:AA37 -  -  -  -  
  232 D1:AA37 -  -  -  -  err_:
  233 D1:AA37 -  -  -  -  
  234 D1:AA37 -  -  -  -  err_err:
  235 D1:AA37 E1 -  -  -      pop hl
  236 D1:AA38 CD 41 AE D1     call printString
  237 D1:AA3C -  -  -  -  err_err_quit:
  238 D1:AA3C CD 52 AD D1     call fastCopy
  239 D1:AA40 00 -  -  -      nop
  240 D1:AA41 CD E0 A9 D1     call waituntilnewkeypress
  241 D1:AA45 CD D8 A9 D1     call waituntilkeyrelease
  242 D1:AA49 C3 20 A9 D1     jp programExit
  243 D1:AA4D -  -  -  -  
  244 D1:AA4D -  -  -  -  err_missingFiles:
  245 D1:AA4D F5 -  -  -      push af
  246 D1:AA4E 21 5F AA D1         ld  hl,err_missingFiles_str
  247 D1:AA52 CD 41 AE D1         call printString
  248 D1:AA56 F1 -  -  -      pop af
  249 D1:AA57 CD 87 AE D1     call printSmallNumPair
  250 D1:AA5B C3 3C AA D1     jp err_err_quit
  251 D1:AA5F -  -  -  -  err_missingFiles_str:
  252 D1:AA5F 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  253 D1:AA79 -  -  -  -  
  254 D1:AA79 -  -  -  -  err_tooManyFiles:
  255 D1:AA79 CD 37 AA D1     call err_err
  256 D1:AA7D 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  257 D1:AA93 -  -  -  -  
  258 D1:AA93 -  -  -  -  err_PRGROMTooLarge:
  259 D1:AA93 CD 37 AA D1     call err_err
  260 D1:AA97 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  261 D1:AAAA -  -  -  -  err_CHRROMTooLarge:
  262 D1:AAAA CD 37 AA D1     call err_err
  263 D1:AAAE 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  264 D1:AAC1 -  -  -  -  
  265 D1:AAC1 -  -  -  -  err_missingROMDetected:
  266 D1:AAC1 CD 37 AA D1     call err_err
  267 D1:AAC5 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  268 D1:AAE1 -  -  -  -  
  269 D1:AAE1 -  -  -  -  err_ROMHeaderDamaged:
  270 D1:AAE1 CD 37 AA D1     call err_err
  271 D1:AAE5 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  272 D1:AAFE -  -  -  -  
  273 D1:AAFE -  -  -  -  err_MapperOutOfRange:
  274 D1:AAFE CD 37 AA D1     call err_err
  275 D1:AB02 4D 61 70 70 
              65 72 20 73 
              70 65 63 69 
              66 69 65 64 
              20 6F 75 74 
              20 6F 66 20 
              72 61 6E 67 
              65 2E 00 -  .db "Mapper specified out of range.",0
  276 D1:AB21 -  -  -  -  
  277 D1:AB21 -  -  -  -  
  278 D1:AB21 -  -  -  -  ;Input: DE = Address of first file after the container header signature
  279 D1:AB21 -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  280 D1:AB21 -  -  -  -  ;Destroys: All registers.
  281 D1:AB21 -  -  -  -  loadROMFile:
  282 D1:AB21 EB -  -  -      ex  de,hl
  283 D1:AB22 AF -  -  -      xor a,a
  284 D1:AB23 32 55 AD D1     ld  (missing_files),a
  285 D1:AB27 BE -  -  -  _:  cp  (hl)    ;
  286 D1:AB28 23 -  -  -      inc hl      ;
  287 D1:AB29 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  288 D1:AB2B 22 52 AD D1     ld  (basefile_sig),hl
  289 D1:AB2F 01 10 00 00     ld  bc,16
  290 D1:AB33 09 -  -  -      add hl,bc
  291 D1:AB34 7E -  -  -      ld  a,(hl)
  292 D1:AB35 FE 01 -  -      cp  a,MAXNUMFILES
  293 D1:AB37 D2 79 AA D1     jp  nc,err_tooManyFiles
  294 D1:AB3B 32 04 34 D0     ld  (inputNumFiles),a
  295 D1:AB3F 47 -  -  -      ld  b,a
  296 D1:AB40 0E 10 -  -      ld  c,16
  297 D1:AB42 ED 4C -  -      mlt bc
  298 D1:AB44 23 -  -  -      inc hl
  299 D1:AB45 E5 -  -  -      push hl
  300 D1:AB46 09 -  -  -          add hl,bc
  301 D1:AB47 FD 21 5E AD 
              D1 -  -  -          ld  iy,FILETABLE
  302 D1:AB4C 4E -  -  -          ld  c,(hl)
  303 D1:AB4D 23 -  -  -          inc hl
  304 D1:AB4E 46 -  -  -          ld  b,(hl)
  305 D1:AB4F 23 -  -  -          inc hl
  306 D1:AB50 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  307 D1:AB54 FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  308 D1:AB57 E1 -  -  -      pop hl
  309 D1:AB58 3C -  -  -      inc a
  310 D1:AB59 3D -  -  -      dec a
  311 D1:AB5A 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  312 D1:AB5C -  -  -  -      ;If more than one file, fill FILETABLE.
  313 D1:AB5C -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  314 D1:AB5C ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  315 D1:AB5F 47 -  -  -      ld  b,a
  316 D1:AB60 -  -  -  -  loadROMFile_multiFileLoadLoop:
  317 D1:AB60 C5 -  -  -      push bc
  318 D1:AB61 FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  319 D1:AB64 01 10 00 00         ld  bc,16
  320 D1:AB68 11 E6 AC D1         ld  de,loadROMFile_tempSigHash
  321 D1:AB6C ED B0 -  -          ldir
  322 D1:AB6E E5 -  -  -          push hl
  323 D1:AB6F FD E5 -  -              push iy
  324 D1:AB71 01 17 00 00                 ld  bc,23
  325 D1:AB75 FD 21 DF AC 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  326 D1:AB7A CD F6 AC D1                 call vatTraverse    ;returns DE @ datasection size if found
  327 D1:AB7E 30 05 -  -                  jr  nc,+_
  328 D1:AB80 21 55 AD D1                 ld  hl,missing_files
  329 D1:AB84 34 -  -  -                  inc (hl)
  330 D1:AB85 FD E1 -  -  _:          pop iy
  331 D1:AB87 EB -  -  -              ex  de,hl
  332 D1:AB88 5E -  -  -              ld  e,(hl)
  333 D1:AB89 23 -  -  -              inc hl
  334 D1:AB8A 56 -  -  -              ld  d,(hl)
  335 D1:AB8B 23 -  -  -              inc hl
  336 D1:AB8C 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  337 D1:AB90 FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  338 D1:AB93 E1 -  -  -          pop hl
  339 D1:AB94 C1 -  -  -      pop bc
  340 D1:AB95 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  341 D1:AB98 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  342 D1:AB9A 3A 55 AD D1     ld  a,(missing_files)
  343 D1:AB9E B7 -  -  -      or  a,a
  344 D1:AB9F C2 4D AA D1     jp  nz,err_missingFiles
  345 D1:ABA3 -  -  -  -  loadROMFile_singleFileLoad:
  346 D1:ABA3 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  347 D1:ABA3 3A 04 34 D0     ld  a,(inputNumFiles)
  348 D1:ABA7 3C -  -  -      inc a
  349 D1:ABA8 47 -  -  -      ld  b,a
  350 D1:ABA9 21 00 00 00     ld  hl,0
  351 D1:ABAD DD 21 5E AD 
              D1 -  -  -      ld  ix,FILETABLE
  352 D1:ABB2 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  353 D1:ABB6 19 -  -  -      add hl,de
  354 D1:ABB7 ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  355 D1:ABBA 10 F6 -  -      djnz -_
  356 D1:ABBC 01 F0 FF FF     ld  bc,-16
  357 D1:ABC0 09 -  -  -      add hl,bc   ;subtract INES header
  358 D1:ABC1 22 56 AD D1     ld  (total_rom_size),hl
  359 D1:ABC5 -  -  -  -      ;Verify that the file actually contains an INES header.
  360 D1:ABC5 -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  361 D1:ABC5 DD 27 00 -      ld  hl,(ix+0)
  362 D1:ABC8 11 B2 BA AC     ld  de,-$53454E         ;4E 45 53 == "NES"
  363 D1:ABCC 19 -  -  -      add hl,de
  364 D1:ABCD C2 E1 AA D1 _:  jp  nz,err_ROMHeaderDamaged
  365 D1:ABD1 DD 7E 03 -      ld  a,(ix+3)
  366 D1:ABD4 FE 1A -  -      cp  a,$1A
  367 D1:ABD6 20 F5 -  -      jr  nz,-_   ;19
  368 D1:ABD8 -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  369 D1:ABD8 -  -  -  -      ;Note: The below line is optimized from...
  370 D1:ABD8 DD 2A 60 AD 
              D1 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  371 D1:ABDD -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  372 D1:ABDD -  -  -  -      ;these here just in case there's ever a question about it.
  373 D1:ABDD -  -  -  -  ;    ld  ix,FILETABLE
  374 D1:ABDD -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  375 D1:ABDD DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  376 D1:ABE0 DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  377 D1:ABE3 26 00 -  -      ld  h,0
  378 D1:ABE5 54 -  -  -      ld  d,h
  379 D1:ABE6 DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  380 D1:ABE9 E6 0C -  -      and a,%00001100
  381 D1:ABEB FE 08 -  -      cp  a,%00001000
  382 D1:ABED 20 1B -  -      jr  nz,+_
  383 D1:ABEF DD 7E 09 -      ld  a,(ix+9)
  384 D1:ABF2 47 -  -  -      ld  b,a
  385 D1:ABF3 E6 0F -  -      and a,$0F
  386 D1:ABF5 FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  387 D1:ABF7 D2 93 AA D1     jp  nc,err_PRGROMTooLarge
  388 D1:ABFB 67 -  -  -      ld  h,a
  389 D1:ABFC 78 -  -  -      ld  a,b
  390 D1:ABFD E6 F0 -  -      and a,$F0
  391 D1:ABFF 07 -  -  -      rlca
  392 D1:AC00 07 -  -  -      rlca
  393 D1:AC01 07 -  -  -      rlca
  394 D1:AC02 07 -  -  -      rlca
  395 D1:AC03 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  396 D1:AC05 D2 AA AA D1     jp  nc,err_CHRROMTooLarge
  397 D1:AC09 57 -  -  -      ld  d,a
  398 D1:AC0A AF -  -  -  _:  xor a,a
  399 D1:AC0B 32 59 AD D1     ld  (prg_rom_size),a
  400 D1:AC0F 32 5C AD D1     ld  (chr_rom_size),a
  401 D1:AC13 29 -  -  -      add hl,hl   ;x2
  402 D1:AC14 29 -  -  -      add hl,hl   ;x4
  403 D1:AC15 29 -  -  -      add hl,hl   ;x8
  404 D1:AC16 29 -  -  -      add hl,hl   ;x16
  405 D1:AC17 29 -  -  -      add hl,hl   ;x32
  406 D1:AC18 29 -  -  -      add hl,hl   ;x64
  407 D1:AC19 52 22 5A AD 
              D1 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  408 D1:AC1E EB -  -  -      ex  de,hl
  409 D1:AC1F 29 -  -  -      add hl,hl   ;x2
  410 D1:AC20 29 -  -  -      add hl,hl   ;x4
  411 D1:AC21 29 -  -  -      add hl,hl   ;x8
  412 D1:AC22 29 -  -  -      add hl,hl   ;x16
  413 D1:AC23 29 -  -  -      add hl,hl   ;x32
  414 D1:AC24 52 22 5D AD 
              D1 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  415 D1:AC29 2A 5C AD D1     ld  hl,(chr_rom_size)
  416 D1:AC2D ED 5B 59 AD 
              D1 -  -  -      ld  de,(prg_rom_size)
  417 D1:AC32 19 -  -  -      add hl,de
  418 D1:AC33 ED 5B 56 AD 
              D1 -  -  -      ld  de,(total_rom_size)
  419 D1:AC38 B7 -  -  -      or  a,a
  420 D1:AC39 ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  421 D1:AC3B 28 04 -  -      jr  z,+_
  422 D1:AC3D D2 C1 AA D1     jp  nc,err_missingROMDetected
  423 D1:AC41 -  -  -  -  _:  ;Find trainer, PRG, and CHR base addresses
  424 D1:AC41 00 -  -  -      nop
  425 D1:AC42 -  -  -  -      
  426 D1:AC42 -  -  -  -  
  427 D1:AC42 -  -  -  -  
  428 D1:AC42 -  -  -  -  
  429 D1:AC42 -  -  -  -  
  430 D1:AC42 -  -  -  -  
  431 D1:AC42 -  -  -  -      ;Detect mapper and run it
  432 D1:AC42 DD 7E 06 -      ld  a,(ix+6)
  433 D1:AC45 DD 46 07 -      ld  b,(ix+7)
  434 D1:AC48 07 -  -  -      rlca
  435 D1:AC49 07 -  -  -      rlca
  436 D1:AC4A 07 -  -  -      rlca
  437 D1:AC4B 07 -  -  -      rlca
  438 D1:AC4C A8 -  -  -      xor a,b
  439 D1:AC4D E6 0F -  -      and a,$0F
  440 D1:AC4F A8 -  -  -      xor a,b
  441 D1:AC50 52 EB -  -      ex.s de,hl  ;clears HLU,DEU
  442 D1:AC52 5F -  -  -      ld  e,a
  443 D1:AC53 21 5F AD D1     ld  hl,submapper
  444 D1:AC57 36 00 -  -      ld  (hl),0
  445 D1:AC59 78 -  -  -      ld  a,b
  446 D1:AC5A E6 0C -  -      and a,%00001100
  447 D1:AC5C FE 08 -  -      cp  a,%00001000
  448 D1:AC5E 3E 00 -  -      ld  a,0
  449 D1:AC60 20 0E -  -      jr  nz,+_
  450 D1:AC62 DD 46 08 -      ld  b,(ix+8)
  451 D1:AC65 78 -  -  -      ld  a,b
  452 D1:AC66 07 -  -  -      rlca
  453 D1:AC67 07 -  -  -      rlca
  454 D1:AC68 07 -  -  -      rlca
  455 D1:AC69 07 -  -  -      rlca
  456 D1:AC6A E6 0F -  -      and a,$0F
  457 D1:AC6C 77 -  -  -      ld  (hl),a
  458 D1:AC6D 78 -  -  -      ld  a,b
  459 D1:AC6E E6 0F -  -      and a,$0F
  460 D1:AC70 5F -  -  -  _:  ld  e,a
  461 D1:AC71 ED 53 61 AD 
              D1 -  -  -      ld  (mapper_id),de
  462 D1:AC76 21 FF FF FF     ld  hl,-NUMBER_OF_MAPPERS
  463 D1:AC7A 19 -  -  -      add hl,de
  464 D1:AC7B DA FE AA D1     jp  c,err_MapperOutOfRange
  465 D1:AC7F ED 62 -  -      sbc hl,hl
  466 D1:AC81 19 -  -  -      add hl,de               ;hl=de. both are mapper IDs
  467 D1:AC82 2E 09 -  -      ld  L,MAPPER_STRIDE
  468 D1:AC84 55 -  -  -      ld  d,L
  469 D1:AC85 ED 6C -  -      mlt hl                  ;high byte multiply
  470 D1:AC87 65 -  -  -      ld  h,L
  471 D1:AC88 2E 00 -  -      ld  L,0
  472 D1:AC8A ED 5C -  -      mlt de                  ;low byte multiply
  473 D1:AC8C 19 -  -  -      add hl,de               ;This is the best 16bit * 8bit I know to do.
  474 D1:AC8D 11 99 AC D1     ld  de,mapper_table
  475 D1:AC91 19 -  -  -      add hl,de
  476 D1:AC92 22 62 AD D1     ld  (mapper_adr_base),hl
  477 D1:AC96 ED 27 -  -      ld  hl,(hl)
  478 D1:AC98 E9 -  -  -      jp  (hl)
  479 D1:AC99 -  -  -  -  
  480 D1:AC99 -  -  -  -  mapper_table:   ;entries 9 wide
  481 D1:AC99 A2 AC D1 -  .dl mapper0_init
  482 D1:AC9C DD AC D1 -  .dl mapper0_read
  483 D1:AC9F DE AC D1 -  .dl mapper0_write
  484 D1:ACA2 -  -  -  -  
  485 D1:ACA2 -  -  -  -  mapper0_init:
  486 D1:ACA2 -  -  -  -      ;map trainer, if exist
  487 D1:ACA2 DD CB 06 56     bit 2,(ix+6)
  488 D1:ACA6 28 1E -  -      jr  z,+_
  489 D1:ACA8 ED 22 10 -      lea hl,ix+16
  490 D1:ACAB 1E 70 -  -      ld  e,$70
  491 D1:ACAD 0E 02 -  -      ld  c,2
  492 D1:ACAF 41 -  -  -      ld  b,c
  493 D1:ACB0 DD E5 -  -      push ix
  494 D1:ACB2 CD 8C B4 D1         call i6502_map_pages
  495 D1:ACB6 DD E1 -  -      pop ix
  496 D1:ACB8 11 00 00 00     ld  de,0
  497 D1:ACBC DD CB 06 56     bit 2,(ix+6)
  498 D1:ACC0 28 04 -  -      jr  z,+_
  499 D1:ACC2 11 00 02 00     ld  de,512
  500 D1:ACC6 ED 22 10 -  _:  lea hl,ix+16
  501 D1:ACC9 19 -  -  -      add hl,de       ;puts pointer at PRG_ROM
  502 D1:ACCA 06 80 -  -      ld  b,$80
  503 D1:ACCC 0E 40 -  -      ld  c,$40
  504 D1:ACCE 3A 5B AD D1     ld  a,(prg_rom_size+2)
  505 D1:ACD2 C6 FF -  -      add a,$FF
  506 D1:ACD4 DD 7E 04 -      ld  a,(ix+4)    ;prog roms
  507 D1:ACD7 1F -  -  -      rra             ;if 1, this empties out. Else is nonzero with himem carry
  508 D1:ACD8 28 4C -  -      jr  z,+_
  509 D1:ACDA CB 21 -  -      sla c           ;if more than 1 rom pages, map two of them.
  510 D1:ACDC -  -  -  -  
  511 D1:ACDC -  -  -  -  
  512 D1:ACDC -  -  -  -          
  513 D1:ACDC C9 -  -  -      ret
  514 D1:ACDD -  -  -  -  mapper0_read:
  515 D1:ACDD C9 -  -  -      ret
  516 D1:ACDE -  -  -  -  mapper0_write:
  517 D1:ACDE C9 -  -  -      ret
  518 D1:ACDF -  -  -  -  
  519 D1:ACDF -  -  -  -  
  520 D1:ACDF -  -  -  -  
  521 D1:ACDF -  -  -  -  
  522 D1:ACDF -  -  -  -  
  523 D1:ACDF -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  524 D1:ACDF 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  525 D1:ACE6 -  -  -  -  loadROMFile_tempSigHash:
  526 D1:ACE6 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  527 D1:ACF6 -  -  -  -  
  528 D1:ACF6 -  -  -  -  
  529 D1:ACF6 -  -  -  -  ;Input: IY = locationOfSignature. 
  530 D1:ACF6 -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  531 D1:ACF6 -  -  -  -  ;Output: carry=1: Variable not found.
  532 D1:ACF6 -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  533 D1:ACF6 -  -  -  -  ;        IX=location of current variable's VAT location.
  534 D1:ACF6 -  -  -  -  ;Destroys: All registers not in use.
  535 D1:ACF6 -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  536 D1:ACF6 -  -  -  -  
  537 D1:ACF6 -  -  -  -  ;To continue searching:
  538 D1:ACF6 -  -  -  -  ;call vatTraverse_continue with the following inputs:
  539 D1:ACF6 -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  540 D1:ACF6 -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  541 D1:ACF6 -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  542 D1:ACF6 -  -  -  -  vatTraverse:
  543 D1:ACF6 -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  544 D1:ACF6 DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  545 D1:ACFB -  -  -  -  vatTraverse_loop:
  546 D1:ACFB 2A 9A 25 D0     ld  hl,(pTemp)
  547 D1:ACFF ED 12 00 -      lea de,ix+0
  548 D1:AD02 B7 -  -  -      or  a,a
  549 D1:AD03 ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  550 D1:AD05 3F -  -  -      ccf
  551 D1:AD06 D8 -  -  -      ret c
  552 D1:AD07 1A -  -  -      ld  a,(de)
  553 D1:AD08 E6 1F -  -      and a,$1F
  554 D1:AD0A FE 15 -  -      cp  a,AppVarObj
  555 D1:AD0C 20 34 -  -      jr  nz,vatTraverse_skip
  556 D1:AD0E DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  557 D1:AD11 DD 5E FD -      ld  e,(ix-3)
  558 D1:AD14 DD 56 FC -      ld  d,(ix-4)
  559 D1:AD17 CD 98 1F 02     call _ChkInRam
  560 D1:AD1B EB -  -  -      ex  de,hl
  561 D1:AD1C 30 08 -  -      jr  nc,+_
  562 D1:AD1E 11 09 00 00     ld  de,9
  563 D1:AD22 19 -  -  -      add hl,de
  564 D1:AD23 5E -  -  -      ld  e,(hl)
  565 D1:AD24 19 -  -  -      add hl,de
  566 D1:AD25 23 -  -  -      inc hl
  567 D1:AD26 5E -  -  -  _:  ld  e,(hl)
  568 D1:AD27 23 -  -  -      inc hl
  569 D1:AD28 56 -  -  -      ld  d,(hl)
  570 D1:AD29 23 -  -  -      inc hl
  571 D1:AD2A EB -  -  -      ex  de,hl
  572 D1:AD2B B7 -  -  -      or  a,a
  573 D1:AD2C ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  574 D1:AD2E 38 12 -  -      jr  c,vatTraverse_skip
  575 D1:AD30 ED 23 00 -      lea hl,iy+0
  576 D1:AD33 C5 -  -  -      push bc
  577 D1:AD34 1A -  -  -  _:      ld  a,(de)
  578 D1:AD35 13 -  -  -          inc de
  579 D1:AD36 ED A1 -  -          cpi
  580 D1:AD38 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  581 D1:AD3A EA 34 AD D1         jp  pe,-_
  582 D1:AD3E C1 -  -  -      pop bc
  583 D1:AD3F B7 -  -  -      or  a,a
  584 D1:AD40 C9 -  -  -      ret         ;NC. DE = past the signature.
  585 D1:AD41 -  -  -  -  vatTraverse_sigNoMatch:
  586 D1:AD41 C1 -  -  -      pop bc
  587 D1:AD42 -  -  -  -  vatTraverse_continue:
  588 D1:AD42 -  -  -  -  vatTraverse_skip:
  589 D1:AD42 3E 07 -  -      ld  a,7
  590 D1:AD44 11 FF FF FF     ld  de,-1
  591 D1:AD48 DD 86 FA -      add a,(ix-6)
  592 D1:AD4B ED 44 -  -      neg
  593 D1:AD4D 5F -  -  -      ld  e,a
  594 D1:AD4E DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  595 D1:AD50 18 A9 -  -      jr  vatTraverse_loop
  596 D1:AD52 -  -  -  -  
  597 D1:AD52 -  -  -  -  
  598 D1:AD52 -  -  -  -  
  599 D1:AD52 -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:AD52 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:AD52 -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:AD52 -  -  -  -  
    3 D1:AD52 -  -  -  -  ;Various Parts Contributed by
    4 D1:AD52 -  -  -  -  ;- BrandonW
    5 D1:AD52 -  -  -  -  ;- calc84
    6 D1:AD52 -  -  -  -  ;- MateoConLechuga
    7 D1:AD52 -  -  -  -  ;- Runer112
    8 D1:AD52 -  -  -  -  ;- tr1p1ea
    9 D1:AD52 -  -  -  -  ;- Kerm Martian
   10 D1:AD52 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:AD52 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:AD52 -  -  -  -  ;
    6 D1:AD52 -  -  -  -  ;
    7 D1:AD52 -  -  -  -  ;
    8 D1:AD52 -  -  -  -  
    9 D1:AD52 -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:AD52 -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:AD52 -  -  -  -  
   12 D1:AD52 -  -  -  -  screenBuf1      .equ vRam
   13 D1:AD52 -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:AD52 -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:AD52 -  -  -  -  xPos                .equ $D031F6
   16 D1:AD52 -  -  -  -  yPos                .equ $D031F7
   17 D1:AD52 -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:AD52 -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:AD52 -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:AD52 -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:AD52 -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:AD52 -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:AD52 -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:AD52 -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:AD52 -  -  -  -  
   26 D1:AD52 -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:AD52 -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:AD52 -  -  -  -  
   29 D1:AD52 -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:AD52 -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:AD52 -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:AD52 -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:AD52 -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:AD52 -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:AD52 -  -  -  -  
   36 D1:AD52 -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:AD52 -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:AD52 -  -  -  -  
   39 D1:AD52 -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:AD52 -  -  -  -  ;
   41 D1:AD52 -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:AD52 -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:AD52 -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   44 D1:AD52 -  -  -  -  basefile_sig        .equ inputNumFile+1     ;3b pointer to 16b hash
   45 D1:AD52 -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   46 D1:AD52 -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   47 D1:AD52 -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   48 D1:AD52 -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   49 D1:AD52 -  -  -  -  submapper           .equ chr_rom_size+3     ;1b. iNES2 thing. Not often used.
   50 D1:AD52 -  -  -  -  ines_flag_6         .equ submapper+1        ;1b. Flags that a mapper may need.
   51 D1:AD52 -  -  -  -  mapper_id           .equ ines_flag_6+1      ;3b. Convenience load for 12 bits
   52 D1:AD52 -  -  -  -  mapper_adr_base     .equ mapper_id+1        ;3b. Used to load mapper
   53 D1:AD52 -  -  -  -  trainer_base        .equ mapper_adr_base+3  ;3b. If exist, starts here
   54 D1:AD52 -  -  -  -  prg_rom_base        .equ prg_rom_base+3     ;3b. Adjusted in case of trainer.
   55 D1:AD52 -  -  -  -  chr_rom_base        .equ prg_rom_base+3     ;3b. Located somewhere.
   56 D1:AD52 -  -  -  -  chr_rom_base_file   .equ chr_rom_base+3     ;1b. Nonzero if not in first file.
   57 D1:AD52 -  -  -  -  
   58 D1:AD52 -  -  -  -  MAXPRGROM_HINIB     .equ 1
   59 D1:AD52 -  -  -  -  MAXCHRROM_HINIB     .equ 3
   60 D1:AD52 -  -  -  -  NUMBER_OF_MAPPERS   .equ 1
   61 D1:AD52 -  -  -  -  MAPPER_STRIDE       .equ 9
   62 D1:AD52 -  -  -  -  
   63 D1:AD52 -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   64 D1:AD52 -  -  -  -  FILETABLE_STRIDE    .equ 8
   65 D1:AD52 -  -  -  -  FILETABLE           .equ chr_rom_base_file+3   ;(MAXNUMFILES*FILETABLE_STRIDE)b
   66 D1:AD52 -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   67 D1:AD52 -  -  -  -  FILE_ADR_OFFSET     .equ 2
   68 D1:AD52 -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   69 D1:AD52 -  -  -  -  
   70 D1:AD52 -  -  -  -  
   71 D1:AD52 -  -  -  -  
   72 D1:AD52 -  -  -  -  ;
   73 D1:AD52 -  -  -  -  ;
   74 D1:AD52 -  -  -  -  
   75 D1:AD52 -  -  -  -  
   76 D1:AD52 -  -  -  -  
   77 D1:AD52 -  -  -  -  
   78 D1:AD52 -  -  -  -  
   79 D1:AD52 -  -  -  -  #define REGA 0
   80 D1:AD52 -  -  -  -  #define REGX 1
   81 D1:AD52 -  -  -  -  #define REGY 2
   82 D1:AD52 -  -  -  -  #define REGSP 3
   83 D1:AD52 -  -  -  -  #define REGSR 4
   84 D1:AD52 -  -  -  -  #define REGPC 5
   85 D1:AD52 -  -  -  -  #define CYCLES_REMAIN ix+8
   86 D1:AD52 -  -  -  -  #define SF_NEG 7
   87 D1:AD52 -  -  -  -  #define SF_OVER 6 
   88 D1:AD52 -  -  -  -  #define SF_RESERVED 5 
   89 D1:AD52 -  -  -  -  #define SF_BRK 4
   90 D1:AD52 -  -  -  -  #define SF_DEC 3
   91 D1:AD52 -  -  -  -  #define SF_INT 2
   92 D1:AD52 -  -  -  -  #define SF_ZERO 1
   93 D1:AD52 -  -  -  -  #define SF_CARRY 0
   94 D1:AD52 -  -  -  -  
   95 D1:AD52 -  -  -  -  #macro ADDCYC(X)
   96 D1:AD52                 #if (x < 1)
   97 D1:AD52                     nop
   98 D1:AD52                 #elif (X = 1)
   99 D1:AD52                     inc iy
  100 D1:AD52                 #else
  101 D1:AD52                     lea iy,iy+X
  102 D1:AD52                 #endif
  103 D1:AD52             #endmacro
  104 D1:AD52 -  -  -  -  
  105 D1:AD52 -  -  -  -  ;
  106 D1:AD52 -  -  -  -  ;
  107 D1:AD52 -  -  -  -  ;
  108 D1:AD52 -  -  -  -  #endif
  109 D1:AD52 -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:AD52 -  -  -  -  
    4 D1:AD52 -  -  -  -  ;Function list:
    5 D1:AD52 -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:AD52 -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:AD52 -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:AD52 -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:AD52 -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:AD52 -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:AD52 -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:AD52 -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:AD52 -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:AD52 -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:AD52 -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:AD52 -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:AD52 -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:AD52 -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:AD52 -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into screen buffer address.
   20 D1:AD52 -  -  -  -  ;
   21 D1:AD52 -  -  -  -  ;
   22 D1:AD52 -  -  -  -  ;
   23 D1:AD52 -  -  -  -  ;
   24 D1:AD52 -  -  -  -  ;
   25 D1:AD52 -  -  -  -  ;
   26 D1:AD52 -  -  -  -  ;
   27 D1:AD52 -  -  -  -  
   28 D1:AD52 -  -  -  -  
   29 D1:AD52 -  -  -  -  
   30 D1:AD52 -  -  -  -  
   31 D1:AD52 -  -  -  -  ;-----------------------------------------------------------------------------
   32 D1:AD52 -  -  -  -  ;Screen hardware interface stuff
   33 D1:AD52 -  -  -  -  
   34 D1:AD52 -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   35 D1:AD52 -  -  -  -  fastCopy:
   36 D1:AD52 11 00 00 D4     ld  de,screenBuf1
   37 D1:AD56 2A 10 00 E3     ld  hl,(mpLcdBase)
   38 D1:AD5A 22 00 34 D0     ld  (curScreenBuf),hl
   39 D1:AD5E B7 -  -  -      or  a,a
   40 D1:AD5F ED 52 -  -      sbc hl,de
   41 D1:AD61 EB -  -  -      ex  de,hl
   42 D1:AD62 20 04 -  -      jr  nz,+_
   43 D1:AD64 21 00 2C D5     ld  hl,screenBuf2
   44 D1:AD68 22 10 00 E3 _:  ld  (mpLcdBase),hl
   45 D1:AD6C C9 -  -  -      ret
   46 D1:AD6D -  -  -  -  
   47 D1:AD6D -  -  -  -  stopGfx:
   48 D1:AD6D CD 74 03 00     call _boot_ClearVRAM
   49 D1:AD71 11 2D 09 00     ld  de,lcdNormalMode
   50 D1:AD75 01 00 00 D4     ld  bc,screenBuf1
   51 D1:AD79 18 0C -  -      jr  configureScreen
   52 D1:AD7B -  -  -  -  
   53 D1:AD7B -  -  -  -  startGfx:
   54 D1:AD7B CD 74 03 00     call _boot_ClearVRAM
   55 D1:AD7F 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   56 D1:AD83 01 00 00 D4     ld  bc,screenBuf1
   57 D1:AD87 -  -  -  -  configureScreen:
   58 D1:AD87 21 10 00 E3     ld  hl,mpLcdBase
   59 D1:AD8B ED 0F -  -      ld  (hl),bc
   60 D1:AD8D 2E 18 -  -      ld  L,lcdCtrl
   61 D1:AD8F ED 1F -  -      ld  (hl),de
   62 D1:AD91 2E 01 -  -      ld  L,lcdTiming0 + 1
   63 D1:AD93 01 08 00 00     ld  bc,8
   64 D1:AD97 11 C6 AD D1     ld  de,screenSettings
   65 D1:AD9B 1A -  -  -  _:  ld  a,(de)
   66 D1:AD9C ED A0 -  -      ldi
   67 D1:AD9E 2B -  -  -      dec hl
   68 D1:AD9F 77 -  -  -      ld  (hl),a
   69 D1:ADA0 23 -  -  -      inc hl
   70 D1:ADA1 EA 9B AD D1     jp  pe,-_
   71 D1:ADA5 21 00 2C D5     ld  hl,screenBuf2
   72 D1:ADA9 22 00 34 D0     ld  (curScreenBuf),hl
   73 D1:ADAD -  -  -  -  ;Also copied from graphx
   74 D1:ADAD -  -  -  -  setDefaultPalette:
   75 D1:ADAD 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   76 D1:ADB1 43 -  -  -  	ld	b,e			        ; b = 0
   77 D1:ADB2 78 -  -  -  _:	ld	a,b
   78 D1:ADB3 0F -  -  -  	rrca
   79 D1:ADB4 A8 -  -  -  	xor	a,b
   80 D1:ADB5 E6 E0 -  -  	and	a,224
   81 D1:ADB7 A8 -  -  -  	xor	a,b
   82 D1:ADB8 12 -  -  -  	ld	(de),a
   83 D1:ADB9 13 -  -  -  	inc	de
   84 D1:ADBA 78 -  -  -  	ld	a,b
   85 D1:ADBB 17 -  -  -  	rla
   86 D1:ADBC 17 -  -  -  	rla
   87 D1:ADBD 17 -  -  -  	rla
   88 D1:ADBE 78 -  -  -  	ld	a,b
   89 D1:ADBF 1F -  -  -  	rra
   90 D1:ADC0 12 -  -  -  	ld	(de),a
   91 D1:ADC1 13 -  -  -  	inc	de
   92 D1:ADC2 04 -  -  -  	inc	b
   93 D1:ADC3 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   94 D1:ADC5 C9 -  -  -  	ret
   95 D1:ADC6 -  -  -  -  
   96 D1:ADC6 -  -  -  -  screenSettings:
   97 D1:ADC6 -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   98 D1:ADC6 -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
   99 D1:ADC6 07 -  -  -  	.db	7					; HSW
  100 D1:ADC7 57 -  -  -  	.db	87					; HFP
  101 D1:ADC8 3F -  -  -  	.db	63					; HBP
  102 D1:ADC9 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  103 D1:ADCB B3 -  -  -  	.db	179					; VFP
  104 D1:ADCC 00 -  -  -  	.db	0					; VBP
  105 D1:ADCD 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  106 D1:ADCE -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  107 D1:ADCE -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  108 D1:ADCE -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  109 D1:ADCE -  -  -  -  ; Hz = 48000000/CC = 60
  110 D1:ADCE -  -  -  -  
  111 D1:ADCE -  -  -  -  
  112 D1:ADCE -  -  -  -  ;-----------------------------------------------------------------------------
  113 D1:ADCE -  -  -  -  ; Text Rendering
  114 D1:ADCE -  -  -  -  
  115 D1:ADCE -  -  -  -  clearTextBuf:
  116 D1:ADCE 21 00 50 D0     ld  hl,NAMETABLE1
  117 D1:ADD2 11 01 50 D0     ld  de,NAMETABLE1+1
  118 D1:ADD6 01 FF 03 00     ld  bc,1023
  119 D1:ADDA 36 20 -  -      ld  (hl),' '
  120 D1:ADDC ED B0 -  -      ldir
  121 D1:ADDE C9 -  -  -      ret
  122 D1:ADDF -  -  -  -  
  123 D1:ADDF -  -  -  -  printTextBuf:
  124 D1:ADDF 2A F6 31 D0     ld  hl,(xPos)
  125 D1:ADE3 22 13 AE D1     ld  (printTextBuf_smcPosRecovery),hl
  126 D1:ADE7 21 00 50 D0     ld  hl,NAMETABLE1
  127 D1:ADEB AF -  -  -      xor a,a
  128 D1:ADEC 32 F7 31 D0     ld  (yPos),a
  129 D1:ADF0 0E 1E -  -      ld  c,30
  130 D1:ADF2 3E 08 -  -  _:  ld  a,8
  131 D1:ADF4 32 F6 31 D0     ld  (xPos),a
  132 D1:ADF8 06 20 -  -      ld  b,$20
  133 D1:ADFA 7E -  -  -  _:  ld  a,(hl)
  134 D1:ADFB 23 -  -  -      inc hl
  135 D1:ADFC C5 -  -  -      push bc
  136 D1:ADFD E5 -  -  -          push hl
  137 D1:ADFE CD 57 AE D1             call printBigFont
  138 D1:AE02 E1 -  -  -          pop hl
  139 D1:AE03 C1 -  -  -      pop bc
  140 D1:AE04 10 F4 -  -      djnz -_
  141 D1:AE06 3A F7 31 D0     ld  a,(yPos)
  142 D1:AE0A 3C -  -  -      inc a
  143 D1:AE0B 32 F7 31 D0     ld  (yPos),a
  144 D1:AE0F 0D -  -  -      dec  c
  145 D1:AE10 20 E0 -  -      jr  nz,--_
  146 D1:AE12 -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  147 D1:AE12 21 00 00 00     ld  hl,0
  148 D1:AE16 22 F6 31 D0     ld  (xPos),hl
  149 D1:AE1A C9 -  -  -      ret
  150 D1:AE1B -  -  -  -  
  151 D1:AE1B -  -  -  -  ;A=column to start on
  152 D1:AE1B -  -  -  -  setLineStart:
  153 D1:AE1B 32 F6 31 D0     ld  (xPos),a
  154 D1:AE1F 32 03 34 D0     ld  (linestart),a
  155 D1:AE23 C9 -  -  -      ret
  156 D1:AE24 -  -  -  -  
  157 D1:AE24 -  -  -  -  ;A=row to start on
  158 D1:AE24 -  -  -  -  setCurLine:
  159 D1:AE24 32 F7 31 D0     ld  (yPos),a
  160 D1:AE28 C9 -  -  -      ret
  161 D1:AE29 -  -  -  -  
  162 D1:AE29 -  -  -  -  newPage:
  163 D1:AE29 3E FF -  -      ld  a,$FF
  164 D1:AE2B 32 F7 31 D0     ld  (yPos),a
  165 D1:AE2F -  -  -  -  newLine:
  166 D1:AE2F 3A 03 34 D0     ld  a,(linestart)
  167 D1:AE33 32 F6 31 D0     ld  (xPos),a
  168 D1:AE37 3A F7 31 D0     ld  a,(yPos)
  169 D1:AE3B 3C -  -  -      inc a
  170 D1:AE3C 32 F7 31 D0     ld  (yPos),a
  171 D1:AE40 C9 -  -  -      ret
  172 D1:AE41 -  -  -  -  
  173 D1:AE41 -  -  -  -      
  174 D1:AE41 -  -  -  -      
  175 D1:AE41 -  -  -  -  
  176 D1:AE41 -  -  -  -  ;HL=address to string
  177 D1:AE41 -  -  -  -  printString:
  178 D1:AE41 7E -  -  -      ld  a,(hl)
  179 D1:AE42 23 -  -  -      inc hl
  180 D1:AE43 B7 -  -  -      or  a,a
  181 D1:AE44 C8 -  -  -      ret z
  182 D1:AE45 FE 0A -  -      cp  a,'\n'
  183 D1:AE47 20 06 -  -      jr nz,+_
  184 D1:AE49 CD 2F AE D1     call newLine
  185 D1:AE4D 18 F2 -  -      jr  printString
  186 D1:AE4F E5 -  -  -  _:  push hl
  187 D1:AE50 CD 57 AE D1         call printBigFont
  188 D1:AE54 E1 -  -  -      pop hl
  189 D1:AE55 18 EA -  -      jr printString
  190 D1:AE57 -  -  -  -  
  191 D1:AE57 -  -  -  -  
  192 D1:AE57 -  -  -  -  ;in: A=chrToPrint
  193 D1:AE57 -  -  -  -  printBigFont:
  194 D1:AE57 CD EC AE D1     call calculateScreenPtr
  195 D1:AE5B EB -  -  -      ex  de,hl
  196 D1:AE5C 6F -  -  -      ld  L,a
  197 D1:AE5D 26 08 -  -      ld  H,8
  198 D1:AE5F ED 6C -  -      mlt hl
  199 D1:AE61 01 06 AE D1     ld  bc,graphx_textdata
  200 D1:AE65 09 -  -  -      add hl,bc
  201 D1:AE66 EB -  -  -      ex  de,hl
  202 D1:AE67 0E 08 -  -      ld  c,8
  203 D1:AE69 06 08 -  -  _:  ld  b,8
  204 D1:AE6B 1A -  -  -      ld  a,(de)
  205 D1:AE6C 87 -  -  -  _:  add a,a
  206 D1:AE6D -  -  -  -  fontBGColor_var .equ $+1
  207 D1:AE6D 36 00 -  -      ld  (hl),FONTBGCOLOR
  208 D1:AE6F 30 02 -  -      jr  nc,$+4
  209 D1:AE71 -  -  -  -  fontFGColor_var .equ $+1
  210 D1:AE71 36 FF -  -      ld  (hl),FONTFGCOLOR
  211 D1:AE73 23 -  -  -      inc hl
  212 D1:AE74 10 F6 -  -      djnz -_
  213 D1:AE76 79 -  -  -      ld  a,c
  214 D1:AE77 01 38 01 00     ld  bc,320-8
  215 D1:AE7B 09 -  -  -      add hl,bc
  216 D1:AE7C 4F -  -  -      ld  c,a
  217 D1:AE7D 13 -  -  -      inc de
  218 D1:AE7E 0D -  -  -      dec c
  219 D1:AE7F 20 E8 -  -      jr  nz,--_
  220 D1:AE81 21 F6 31 D0     ld  hl,xPos
  221 D1:AE85 34 -  -  -      inc (hl)
  222 D1:AE86 C9 -  -  -      ret
  223 D1:AE87 -  -  -  -  
  224 D1:AE87 -  -  -  -  ;A= 0-255 numeric value to display as hex
  225 D1:AE87 -  -  -  -  printSmallNumPair:
  226 D1:AE87 CD EC AE D1     call calculateScreenPtr
  227 D1:AE8B F5 -  -  -      push af
  228 D1:AE8C 1F -  -  -          rra
  229 D1:AE8D 1F -  -  -          rra
  230 D1:AE8E 1F -  -  -          rra
  231 D1:AE8F 1F -  -  -          rra
  232 D1:AE90 CD 9F AE D1         call +_
  233 D1:AE94 F1 -  -  -      pop af
  234 D1:AE95 CD 9F AE D1     call +_
  235 D1:AE99 21 F6 31 D0     ld  hl,xPos
  236 D1:AE9D 34 -  -  -      inc (hl)
  237 D1:AE9E C9 -  -  -      ret
  238 D1:AE9F E6 0F -  -  _:  and a,$0F
  239 D1:AEA1 01 40 01 00     ld  bc,320
  240 D1:AEA5 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  241 D1:AEA6 EB -  -  -      ex  de,hl
  242 D1:AEA7 6F -  -  -      ld  L,a
  243 D1:AEA8 26 03 -  -      ld  H,3
  244 D1:AEAA ED 6C -  -      mlt hl
  245 D1:AEAC 01 06 B2 D1     ld  bc,SmallHexFont
  246 D1:AEB0 09 -  -  -      add hl,bc
  247 D1:AEB1 EB -  -  -      ex  de,hl
  248 D1:AEB2 0E 03 -  -      ld  c,3
  249 D1:AEB4 18 14 -  -      jr  printSmallNumPair_2ndHalf
  250 D1:AEB6 -  -  -  -  printSmallNumPair_1stHalf:
  251 D1:AEB6 1A -  -  -      ld  a,(de)
  252 D1:AEB7 06 04 -  -      ld  b,4
  253 D1:AEB9 87 -  -  -  _:  add a,a
  254 D1:AEBA 36 00 -  -      ld  (hl),FONTBGCOLOR
  255 D1:AEBC 30 02 -  -      jr  nc,$+4
  256 D1:AEBE 36 FF -  -      ld  (hl),FONTFGCOLOR
  257 D1:AEC0 23 -  -  -      inc hl
  258 D1:AEC1 10 F6 -  -      djnz -_
  259 D1:AEC3 79 -  -  -      ld  a,c
  260 D1:AEC4 01 3C 01 00     ld  bc,320-4
  261 D1:AEC8 09 -  -  -      add hl,bc
  262 D1:AEC9 4F -  -  -      ld  c,a
  263 D1:AECA -  -  -  -  printSmallNumPair_2ndHalf:
  264 D1:AECA 1A -  -  -      ld  a,(de)
  265 D1:AECB 07 -  -  -      rlca
  266 D1:AECC 07 -  -  -      rlca
  267 D1:AECD 07 -  -  -      rlca
  268 D1:AECE 07 -  -  -      rlca
  269 D1:AECF 06 04 -  -      ld  b,4
  270 D1:AED1 87 -  -  -  _:  add a,a
  271 D1:AED2 36 00 -  -      ld  (hl),FONTBGCOLOR
  272 D1:AED4 30 02 -  -      jr  nc,$+4
  273 D1:AED6 36 FF -  -      ld  (hl),FONTFGCOLOR
  274 D1:AED8 23 -  -  -      inc hl
  275 D1:AED9 10 F6 -  -      djnz -_
  276 D1:AEDB 13 -  -  -      inc de
  277 D1:AEDC 79 -  -  -      ld  a,c
  278 D1:AEDD 01 3C 01 00     ld  bc,320-4
  279 D1:AEE1 09 -  -  -      add hl,bc
  280 D1:AEE2 4F -  -  -      ld  c,a
  281 D1:AEE3 0D -  -  -      dec c
  282 D1:AEE4 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  283 D1:AEE6 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  284 D1:AEEA 09 -  -  -      add hl,bc
  285 D1:AEEB C9 -  -  -      ret
  286 D1:AEEC -  -  -  -  
  287 D1:AEEC -  -  -  -  calculateScreenPtr:
  288 D1:AEEC -  -  -  -      ;xcoord: x * 8 
  289 D1:AEEC -  -  -  -      ;ycoord: 320 * 8 * y
  290 D1:AEEC -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  291 D1:AEEC ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  292 D1:AEF1 6A -  -  -      ld  L,d     ;yPos
  293 D1:AEF2 26 A0 -  -      ld  h,160
  294 D1:AEF4 ED 6C -  -      mlt hl
  295 D1:AEF6 29 -  -  -      add hl,hl
  296 D1:AEF7 16 01 -  -      ld  d,1
  297 D1:AEF9 ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  298 D1:AEFB 19 -  -  -      add hl,de
  299 D1:AEFC 29 -  -  -      add hl,hl
  300 D1:AEFD 29 -  -  -      add hl,hl
  301 D1:AEFE 29 -  -  -      add hl,hl
  302 D1:AEFF ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  303 D1:AF04 19 -  -  -      add hl,de
  304 D1:AF05 C9 -  -  -      ret
  305 D1:AF06 -  -  -  -  
  306 D1:AF06 -  -  -  -  
  307 D1:AF06 -  -  -  -  
  308 D1:AF06 -  -  -  -  
  309 D1:AF06 -  -  -  -  
  310 D1:AF06 -  -  -  -  
  311 D1:AF06 -  -  -  -  
  312 D1:AF06 -  -  -  -  
  313 D1:AF06 -  -  -  -  
  314 D1:AF06 -  -  -  -  ;-----------------------------------------------------------------------------
  315 D1:AF06 -  -  -  -  ; Data Section
  316 D1:AF06 -  -  -  -  
  317 D1:AF06 -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  318 D1:AF06 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  319 D1:AF0E C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  320 D1:AF16 D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  321 D1:AF1E 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  322 D1:AF26 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  323 D1:AF2E 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  324 D1:AF36 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  325 D1:AF3E 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  326 D1:AF46 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  327 D1:AF4E C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  328 D1:AF56 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  329 D1:AF5E 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  330 D1:AF66 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  331 D1:AF6E 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  332 D1:AF76 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  333 D1:AF7E 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  334 D1:AF86 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  335 D1:AF8E 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  336 D1:AF96 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  337 D1:AF9E FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  338 D1:AFA6 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  339 D1:AFAE FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  340 D1:AFB6 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  341 D1:AFBE FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  342 D1:AFC6 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  343 D1:AFCE 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  344 D1:AFD6 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  345 D1:AFDE 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  346 D1:AFE6 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  347 D1:AFEE 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  348 D1:AFF6 C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  349 D1:AFFE 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  350 D1:B006 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  351 D1:B00E 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  352 D1:B016 FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  353 D1:B01E 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  354 D1:B026 F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  355 D1:B02E FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  356 D1:B036 FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  357 D1:B03E 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  358 D1:B046 C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  359 D1:B04E 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  360 D1:B056 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  361 D1:B05E C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  362 D1:B066 C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  363 D1:B06E C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  364 D1:B076 C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  365 D1:B07E 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  366 D1:B086 FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  367 D1:B08E 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  368 D1:B096 FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  369 D1:B09E 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  370 D1:B0A6 FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  371 D1:B0AE C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  372 D1:B0B6 C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  373 D1:B0BE C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  374 D1:B0C6 C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  375 D1:B0CE C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  376 D1:B0D6 FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  377 D1:B0DE F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  378 D1:B0E6 C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  379 D1:B0EE F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  380 D1:B0F6 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  381 D1:B0FE 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  382 D1:B106 C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  383 D1:B10E 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  384 D1:B116 C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  385 D1:B11E 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  386 D1:B126 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  387 D1:B12E 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  388 D1:B136 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  389 D1:B13E 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  390 D1:B146 C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  391 D1:B14E 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  392 D1:B156 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  393 D1:B15E C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  394 D1:B166 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  395 D1:B16E 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  396 D1:B176 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  397 D1:B17E 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  398 D1:B186 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  399 D1:B18E 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  400 D1:B196 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  401 D1:B19E 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  402 D1:B1A6 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  403 D1:B1AE 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  404 D1:B1B6 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  405 D1:B1BE 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  406 D1:B1C6 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  407 D1:B1CE 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  408 D1:B1D6 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  409 D1:B1DE 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  410 D1:B1E6 C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  411 D1:B1EE E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  412 D1:B1F6 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  413 D1:B1FE 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  414 D1:B206 -  -  -  -  
  415 D1:B206 -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  416 D1:B206 -  -  -  -  ;whose format was copied from a (then-)authorized source
  417 D1:B206 -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  418 D1:B206 -  -  -  -  SmallHexFont:
  419 D1:B206 4E AA AE -  .db $4E,$AA,$AE				;zero
  420 D1:B209 44 C4 4E -  .db $44,$C4,$4E				;one
  421 D1:B20C 4C 24 8E -  .db $4C,$24,$8E				;two
  422 D1:B20F 4C 24 2C -  .db $4C,$24,$2C				;three
  423 D1:B212 48 AE 22 -  .db $48,$AE,$22				;four
  424 D1:B215 4E 8C 2C -  .db $4E,$8C,$2C				;five
  425 D1:B218 45 8E AE -  .db $45,$8E,$AE				;six
  426 D1:B21B 4E 24 88 -  .db $4E,$24,$88				;seven
  427 D1:B21E 4E AE AE -  .db $4E,$AE,$AE				;eight
  428 D1:B221 4E AE 2C -  .db $4E,$AE,$2C				;nine
  429 D1:B224 44 AE AA -  .db $44,$AE,$AA				;A
  430 D1:B227 4C AC AC -  .db $4C,$AC,$AC				;B
  431 D1:B22A 46 88 86 -  .db $46,$88,$86				;C
  432 D1:B22D 4C AA AC -  .db $4C,$AA,$AC				;D
  433 D1:B230 4E 8C 8E -  .db $4E,$8C,$8E				;E
  434 D1:B233 4E 8C 88 -  .db $4E,$8C,$88				;F
  435 D1:B236 -  -  -  -  
  436 D1:B236 -  -  -  -  
  437 D1:B236 -  -  -  -  
Listing for file "main.z80"
  600 D1:B236 -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B236 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B236 -  -  -  -  
    3 D1:B236 -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B236 -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B236 -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B236 -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B236 -  -  -  -  ;
    8 D1:B236 -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B236 -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B236 -  -  -  -  ;
   11 D1:B236 -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B236 -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B236 -  -  -  -  ;
   14 D1:B236 -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B236 -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B236 -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B236 -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B236 -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B236 -  -  -  -  
   20 D1:B236 -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B236 -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+5 \ set SF_OVER,b
   22 D1:B236 -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B236 -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B236 -  -  -  -  
   25 D1:B236 -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ add a,a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B236 -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B236 -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B236 -  -  -  -  
   29 D1:B236 -  -  -  -  
   30 D1:B236 -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B236 -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B236 -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B236 -  -  -  -  
   34 D1:B236 -  -  -  -  
   35 D1:B236 -  -  -  -  
   36 D1:B236 -  -  -  -  
   37 D1:B236 -  -  -  -  ;=============================================================================
   38 D1:B236 -  -  -  -  ;=============================================================================
   39 D1:B236 -  -  -  -  ;=============================================================================
   40 D1:B236 -  -  -  -  ;=============================================================================
   41 D1:B236 -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B236 -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B236 -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B236 -  -  -  -  i6502Init:
   45 D1:B236 -  -  -  -      ;
   46 D1:B236 -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B236 -  -  -  -      ;
   48 D1:B236 21 00 38 D0     ld  hl,main_ram
   49 D1:B23A 01 08 20 00     ld  bc,$002008
   50 D1:B23E 1E 00 -  -      ld  e,$00
   51 D1:B240 CD 8C B4 D1     call i6502_map_pages
   52 D1:B244 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B248 01 01 20 00     ld  bc,$002001
   54 D1:B24C 1E 20 -  -      ld  e,$20
   55 D1:B24E CD 8C B4 D1     call i6502_map_pages
   56 D1:B252 FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B257 DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:B25C ED 22 80 -      lea hl,ix-128
   59 D1:B25F ED 12 81 -      lea de,ix-127
   60 D1:B262 01 FF 00 00     ld  bc,255
   61 D1:B266 36 00 -  -      ld  (hl),$00
   62 D1:B268 ED B0 -  -      ldir
   63 D1:B26A CD 73 B4 D1     call i6502_load_instruction_set
   64 D1:B26E -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:B26E 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:B272 ED 27 -  -      ld  hl,(hl)
   67 D1:B274 11 FC 00 00     ld  de,$0000FC
   68 D1:B278 19 -  -  -      add hl,de
   69 D1:B279 C3 B1 CB D1     jp inst6502_jsr
   70 D1:B27D -  -  -  -  
   71 D1:B27D -  -  -  -  i6502FirstLoad:
   72 D1:B27D 52 DD 17 05     ld.s de,(ix+REGPC)
   73 D1:B281 7B -  -  -      ld  a,e
   74 D1:B282 1E 08 -  -      ld  e,BASETABLE_STRIDE
   75 D1:B284 ED 5C -  -      mlt de
   76 D1:B286 21 00 40 D0     ld  hl,PAGETABLE
   77 D1:B28A 19 -  -  -      add hl,de
   78 D1:B28B ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   79 D1:B28D 16 00 -  -      ld  d,0
   80 D1:B28F 5F -  -  -      ld  e,a
   81 D1:B290 19 -  -  -      add hl,de       ;resolve final address
   82 D1:B291 18 19 -  -      jr  i6502FinishLoad
   83 D1:B293 -  -  -  -  i6502NextLoad:
   84 D1:B293 23 -  -  -      inc hl
   85 D1:B294 1C -  -  -      inc e
   86 D1:B295 20 15 -  -      jr  nz,i6502FinishLoad
   87 D1:B297 DD 56 06 -      ld  d,(ix+REGPC+1)
   88 D1:B29A 14 -  -  -      inc d
   89 D1:B29B 52 DD 1F 05     ld.s (ix+REGPC),de
   90 D1:B29F 1E 08 -  -      ld  e,BASETABLE_STRIDE
   91 D1:B2A1 ED 5C -  -      mlt de
   92 D1:B2A3 21 00 40 D0     ld  hl,PAGETABLE
   93 D1:B2A7 19 -  -  -      add hl,de
   94 D1:B2A8 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   95 D1:B2AA 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
   96 D1:B2AC -  -  -  -  i6502FinishLoad:
   97 D1:B2AC 7E -  -  -      ld  a,(hl)
   98 D1:B2AD 23 -  -  -      inc hl
   99 D1:B2AE 1C -  -  -      inc e
  100 D1:B2AF 20 15 -  -      jr  nz,i6502PrepNextPage
  101 D1:B2B1 DD 56 06 -      ld  d,(ix+REGPC+1)
  102 D1:B2B4 14 -  -  -      inc d
  103 D1:B2B5 52 DD 1F 05     ld.s (ix+REGPC),de
  104 D1:B2B9 1E 08 -  -      ld  e,BASETABLE_STRIDE
  105 D1:B2BB ED 5C -  -      mlt de
  106 D1:B2BD 21 00 40 D0     ld  hl,PAGETABLE
  107 D1:B2C1 19 -  -  -      add hl,de
  108 D1:B2C2 ED 27 -  -      ld  hl,(hl)
  109 D1:B2C4 1E 00 -  -      ld  e,0
  110 D1:B2C6 -  -  -  -  i6502PrepNextPage:
  111 D1:B2C6 E5 -  -  -      push hl
  112 D1:B2C7 67 -  -  -          ld  h,a
  113 D1:B2C8 2E 08 -  -          ld  l,BASETABLE_STRIDE
  114 D1:B2CA ED 6C -  -          mlt hl
  115 D1:B2CC 01 04 40 D0         ld  bc,JUMPTABLE
  116 D1:B2D0 09 -  -  -          add hl,bc
  117 D1:B2D1 ED 27 -  -          ld  hl,(hl)     ;jumptable
  118 D1:B2D3 E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  119 D1:B2D4 C9 -  -  -      ret
  120 D1:B2D5 -  -  -  -  
  121 D1:B2D5 -  -  -  -  
  122 D1:B2D5 -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  123 D1:B2D5 -  -  -  -  ;   JP i6502FinishLoad
  124 D1:B2D5 -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  125 D1:B2D5 -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  126 D1:B2D5 -  -  -  -  ;   JP i6502NextLoad
  127 D1:B2D5 -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  128 D1:B2D5 -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  129 D1:B2D5 -  -  -  -  ;   JP i6502FinishLoad
  130 D1:B2D5 -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  131 D1:B2D5 -  -  -  -  
  132 D1:B2D5 -  -  -  -  
  133 D1:B2D5 -  -  -  -  ;-----------------------------------------------------------------------------    
  134 D1:B2D5 -  -  -  -  ;-----------------------------------------------------------------------------    
  135 D1:B2D5 -  -  -  -  
  136 D1:B2D5 -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  137 D1:B2D5 -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  138 D1:B2D5 -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  139 D1:B2D5 -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  140 D1:B2D5 -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  141 D1:B2D5 -  -  -  -  
  142 D1:B2D5 -  -  -  -  ;-----------------------------------------------------------------------------    
  143 D1:B2D5 -  -  -  -  ;-----------------------------------------------------------------------------    
  144 D1:B2D5 -  -  -  -  outline6502_imm:
  145 D1:B2D5 7E -  -  -      ld  a,(hl)  ;oper uses A
  146 D1:B2D6 -  -  -  -      ;oper
  147 D1:B2D6 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  148 D1:B2E9 ED 33 02 -      ADDCYC(2)
  149 D1:B2EC C3 93 B2 D1     jp i6502NextLoad
  150 D1:B2F0 -  -  -  -  
  151 D1:B2F0 -  -  -  -  outline6502_abs:
  152 D1:B2F0 4E -  -  -      ld  c,(hl)
  153 D1:B2F1 23 -  -  -      inc hl
  154 D1:B2F2 1C -  -  -      inc e
  155 D1:B2F3 20 15 -  -      jr nz,+_
  156 D1:B2F5 DD 56 06 -      ld  d,(ix+REGPC+1)
  157 D1:B2F8 14 -  -  -      inc d
  158 D1:B2F9 52 DD 1F 05     ld.s (ix+REGPC),de
  159 D1:B2FD 1E 08 -  -      ld  e,BASETABLE_STRIDE
  160 D1:B2FF ED 5C -  -      mlt de
  161 D1:B301 21 00 40 D0     ld  hl,PAGETABLE
  162 D1:B305 19 -  -  -      add hl,de
  163 D1:B306 ED 27 -  -      ld  hl,(hl) ;
  164 D1:B308 1E 00 -  -      ld  e,0
  165 D1:B30A 46 -  -  -  _:  ld  b,(hl)
  166 D1:B30B E5 -  -  -      push hl
  167 D1:B30C 50 -  -  -          ld  d,b
  168 D1:B30D 79 -  -  -          ld  a,c
  169 D1:B30E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  170 D1:B310 ED 4C -  -          mlt bc
  171 D1:B312 21 00 40 D0         ld  hl,PAGETABLE
  172 D1:B316 09 -  -  -          add hl,bc
  173 D1:B317 ED 27 -  -          ld  hl,(hl)
  174 D1:B319 06 00 -  -          ld  b,0
  175 D1:B31B 4F -  -  -          ld  c,a
  176 D1:B31C 09 -  -  -          add hl,bc   ;full address
  177 D1:B31D -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  178 D1:B31D 7E -  -  -          ld  a,(hl)  ;oper uses A
  179 D1:B31E -  -  -  -          ;oper
  180 D1:B31E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  181 D1:B331 ED 33 03 -      ADDCYC(3)
  182 D1:B334 E1 -  -  -      pop hl
  183 D1:B335 C3 93 B2 D1     jp i6502NextLoad
  184 D1:B339 -  -  -  -  
  185 D1:B339 -  -  -  -  outline6502_zeropage:
  186 D1:B339 7E -  -  -      ld  a,(hl)
  187 D1:B33A 01 00 38 D0     ld  bc,ZEROPAGE
  188 D1:B33E 81 -  -  -      add a,c
  189 D1:B33F 4F -  -  -      ld  c,a
  190 D1:B340 0A -  -  -      ld  a,(bc)      ;oper uses A
  191 D1:B341 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  192 D1:B341 -  -  -  -      ;oper
  193 D1:B341 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  194 D1:B354 ED 33 03 -      ADDCYC(3)
  195 D1:B357 C3 93 B2 D1     jp i6502NextLoad
  196 D1:B35B -  -  -  -  
  197 D1:B35B -  -  -  -  
  198 D1:B35B -  -  -  -  ;Note: has same split start as abs
  199 D1:B35B -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  200 D1:B35B 4E -  -  -      ld  c,(hl)
  201 D1:B35C 23 -  -  -      inc hl
  202 D1:B35D 1C -  -  -      inc e
  203 D1:B35E 20 15 -  -      jr nz,+_
  204 D1:B360 DD 56 06 -      ld  d,(ix+REGPC+1)
  205 D1:B363 14 -  -  -      inc d
  206 D1:B364 52 DD 1F 05     ld.s (ix+REGPC),de
  207 D1:B368 1E 08 -  -      ld  e,BASETABLE_STRIDE
  208 D1:B36A ED 5C -  -      mlt de
  209 D1:B36C 21 00 40 D0     ld  hl,PAGETABLE
  210 D1:B370 19 -  -  -      add hl,de
  211 D1:B371 ED 27 -  -      ld  hl,(hl) ;
  212 D1:B373 1E 00 -  -      ld  e,0
  213 D1:B375 46 -  -  -  _:  ld  b,(hl)
  214 D1:B376 E5 -  -  -      push hl
  215 D1:B377 50 -  -  -          ld  d,b
  216 D1:B378 79 -  -  -          ld  a,c
  217 D1:B379 0E 08 -  -          ld  c,BASETABLE_STRIDE
  218 D1:B37B ED 4C -  -          mlt bc
  219 D1:B37D 21 00 40 D0         ld  hl,PAGETABLE
  220 D1:B381 09 -  -  -          add hl,bc
  221 D1:B382 ED 27 -  -          ld  hl,(hl)
  222 D1:B384 06 00 -  -          ld  b,0
  223 D1:B386 4F -  -  -          ld  c,a
  224 D1:B387 DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  225 D1:B38A 81 -  -  -          add a,c
  226 D1:B38B 30 04 -  -          jr  nc,+_
  227 D1:B38D 04 -  -  -          inc b
  228 D1:B38E 14 -  -  -          inc d
  229 D1:B38F FD 23 -  -          ADDCYC(1)
  230 D1:B391 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  231 D1:B391 09 -  -  -          add hl,bc   ;full address
  232 D1:B392 7E -  -  -          ld  a,(hl)  ;oper uses A
  233 D1:B393 -  -  -  -          ;oper
  234 D1:B393 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  235 D1:B3A6 ED 33 04 -      ADDCYC(4)
  236 D1:B3A9 E1 -  -  -      pop hl
  237 D1:B3AA C3 93 B2 D1     jp i6502NextLoad
  238 D1:B3AE -  -  -  -  
  239 D1:B3AE -  -  -  -  
  240 D1:B3AE -  -  -  -  outline6502_zpx:
  241 D1:B3AE 7E -  -  -      ld  a,(hl)
  242 D1:B3AF 01 00 38 D0     ld  bc,ZEROPAGE
  243 D1:B3B3 81 -  -  -      add a,c
  244 D1:B3B4 DD 86 01 -      add a,(ix+REGX)
  245 D1:B3B7 4F -  -  -      ld  c,a
  246 D1:B3B8 0A -  -  -      ld  a,(bc)      ;oper uses A
  247 D1:B3B9 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  248 D1:B3B9 -  -  -  -      ;oper
  249 D1:B3B9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  250 D1:B3CC ED 33 04 -      ADDCYC(4)
  251 D1:B3CF C3 93 B2 D1     jp i6502NextLoad
  252 D1:B3D3 -  -  -  -      
  253 D1:B3D3 -  -  -  -  outline6502_zpy:
  254 D1:B3D3 7E -  -  -      ld  a,(hl)
  255 D1:B3D4 01 00 38 D0     ld  bc,ZEROPAGE
  256 D1:B3D8 81 -  -  -      add a,c
  257 D1:B3D9 DD 86 02 -      add a,(ix+REGY)
  258 D1:B3DC 4F -  -  -      ld  c,a
  259 D1:B3DD 0A -  -  -      ld  a,(bc)      ;oper uses A
  260 D1:B3DE -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  261 D1:B3DE -  -  -  -      ;oper
  262 D1:B3DE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  263 D1:B3F1 ED 33 04 -      ADDCYC(4)
  264 D1:B3F4 C3 93 B2 D1     jp i6502NextLoad
  265 D1:B3F8 -  -  -  -  
  266 D1:B3F8 -  -  -  -  outline6502_preidx_indir:
  267 D1:B3F8 E5 -  -  -      push hl
  268 D1:B3F9 7E -  -  -          ld  a,(hl)
  269 D1:B3FA 21 00 38 D0         ld  hl,ZEROPAGE
  270 D1:B3FE 85 -  -  -          add a,L
  271 D1:B3FF DD 86 01 -          add a,(ix+REGX)
  272 D1:B402 6F -  -  -          ld  L,a
  273 D1:B403 7E -  -  -          ld  a,(hl)
  274 D1:B404 2C -  -  -          inc L
  275 D1:B405 56 -  -  -          ld  d,(hl)
  276 D1:B406 42 -  -  -          ld  b,d
  277 D1:B407 0E 08 -  -          ld  c,BASETABLE_STRIDE
  278 D1:B409 ED 4C -  -          mlt bc
  279 D1:B40B 21 00 40 D0         ld  hl,PAGETABLE
  280 D1:B40F 09 -  -  -          add hl,bc
  281 D1:B410 ED 27 -  -          ld  hl,(hl)
  282 D1:B412 06 00 -  -          ld  b,0
  283 D1:B414 4F -  -  -          ld  c,a
  284 D1:B415 09 -  -  -          add hl,bc
  285 D1:B416 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  286 D1:B416 7E -  -  -          ld  a,(hl)  ;oper uses A.
  287 D1:B417 -  -  -  -          ;oper
  288 D1:B417 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  289 D1:B42A ED 33 06 -          ADDCYC(6)
  290 D1:B42D E1 -  -  -      pop hl
  291 D1:B42E C3 93 B2 D1     jp i6502NextLoad
  292 D1:B432 -  -  -  -  
  293 D1:B432 -  -  -  -  outline6502_postidx_indir:
  294 D1:B432 E5 -  -  -      push hl
  295 D1:B433 7E -  -  -          ld  a,(hl)
  296 D1:B434 21 00 38 D0         ld  hl,ZEROPAGE
  297 D1:B438 85 -  -  -          add a,L
  298 D1:B439 6F -  -  -          ld  L,a
  299 D1:B43A 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  300 D1:B43B 2C -  -  -          inc L
  301 D1:B43C DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  302 D1:B43F 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  303 D1:B440 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  304 D1:B442 FD 23 -  -          ADDCYC(1)
  305 D1:B444 24 -  -  -          inc h
  306 D1:B445 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  307 D1:B446 2E 08 -  -          ld  L,BASETABLE_STRIDE
  308 D1:B448 ED 6C -  -          mlt hl          ;23.
  309 D1:B44A 01 00 40 D0         ld  bc,PAGETABLE
  310 D1:B44E 09 -  -  -          add hl,bc
  311 D1:B44F ED 27 -  -          ld  hl,(hl)     ;address get.
  312 D1:B451 01 00 00 00         ld  bc,0
  313 D1:B455 4F -  -  -          ld  c,a
  314 D1:B456 09 -  -  -          add hl,bc       ;Full address get.
  315 D1:B457 7E -  -  -          ld  a,(hl)
  316 D1:B458 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  317 D1:B458 -  -  -  -          ;oper
  318 D1:B458 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  319 D1:B46B ED 33 05 -          ADDCYC(5)
  320 D1:B46E E1 -  -  -      pop hl
  321 D1:B46F C3 93 B2 D1     jp i6502NextLoad
  322 D1:B473 -  -  -  -  
  323 D1:B473 -  -  -  -  ;-----------------------------------------------------------------------------
  324 D1:B473 -  -  -  -  ;-----------------------------------------------------------------------------
  325 D1:B473 -  -  -  -  ;-----------------------------------------------------------------------------
  326 D1:B473 -  -  -  -  
  327 D1:B473 -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  328 D1:B473 -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  329 D1:B473 -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  330 D1:B473 -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  331 D1:B473 -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  332 D1:B473 -  -  -  -  
  333 D1:B473 -  -  -  -  ;-----------------------------------------------------------------------------
  334 D1:B473 -  -  -  -  
  335 D1:B473 -  -  -  -  i6502_load_instruction_set:
  336 D1:B473 DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  337 D1:B478 21 47 CC D1     ld  hl,inst6502_instruction_set
  338 D1:B47C 06 00 -  -      ld  b,0
  339 D1:B47E ED 17 -  -  _:  ld  de,(hl)
  340 D1:B480 DD 1F 00 -      ld  (ix+0),de
  341 D1:B483 23 -  -  -      inc hl
  342 D1:B484 23 -  -  -      inc hl
  343 D1:B485 23 -  -  -      inc hl
  344 D1:B486 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  345 D1:B489 10 F3 -  -      djnz -_
  346 D1:B48B C9 -  -  -      ret
  347 D1:B48C -  -  -  -  
  348 D1:B48C -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  349 D1:B48C -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  350 D1:B48C -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  351 D1:B48C -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  352 D1:B48C -  -  -  -  i6502_map_pages:
  353 D1:B48C 16 08 -  -      ld  d,BASETABLE_STRIDE
  354 D1:B48E ED 5C -  -      mlt de
  355 D1:B490 DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  356 D1:B495 DD 19 -  -      add ix,de
  357 D1:B497 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  358 D1:B498 11 00 01 00     ld  de,256
  359 D1:B49C E5 -  -  -      push hl
  360 D1:B49D FD E1 -  -      pop iy
  361 D1:B49F 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  362 D1:B4A0 DD 2F 00 -  _:  ld  (ix+0),hl
  363 D1:B4A3 19 -  -  -      add hl,de                   ;next page z80
  364 D1:B4A4 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  365 D1:B4A7 3D -  -  -      dec a
  366 D1:B4A8 C8 -  -  -      ret z
  367 D1:B4A9 10 F5 -  -      djnz -_
  368 D1:B4AB ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  369 D1:B4AE 18 EF -  -      jr --_
  370 D1:B4B0 -  -  -  -  
  371 D1:B4B0 -  -  -  -  
  372 D1:B4B0 -  -  -  -  subroutine6502_abs_split_start:
  373 D1:B4B0 4E -  -  -      ld  c,(hl)
  374 D1:B4B1 23 -  -  -      inc hl
  375 D1:B4B2 1C -  -  -      inc e
  376 D1:B4B3 20 15 -  -      jr nz,+_
  377 D1:B4B5 DD 56 06 -      ld  d,(ix+REGPC+1)
  378 D1:B4B8 14 -  -  -      inc d
  379 D1:B4B9 52 DD 1F 05     ld.s (ix+REGPC),de
  380 D1:B4BD 1E 08 -  -      ld  e,BASETABLE_STRIDE
  381 D1:B4BF ED 5C -  -      mlt de
  382 D1:B4C1 21 00 40 D0     ld  hl,PAGETABLE
  383 D1:B4C5 19 -  -  -      add hl,de
  384 D1:B4C6 ED 27 -  -      ld  hl,(hl) ;
  385 D1:B4C8 1E 00 -  -      ld  e,0
  386 D1:B4CA 46 -  -  -  _:  ld  b,(hl)
  387 D1:B4CB C9 -  -  -      ret
  388 D1:B4CC -  -  -  -  
  389 D1:B4CC -  -  -  -  subroutine6502_adc_combined_end:
  390 D1:B4CC DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  391 D1:B4CF 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  392 D1:B4D0 DD 7E 00 -      ld  a,(ix+REGA)
  393 D1:B4D3 89 -  -  -      adc a,c
  394 D1:B4D4 DD 77 00 -      ld  (ix+REGA),a
  395 D1:B4D7 DD 46 04 CB 
              B0 E2 E1 B4 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  396 D1:B4F8 C3 93 B2 D1     jp i6502NextLoad
  397 D1:B4FC -  -  -  -  
  398 D1:B4FC -  -  -  -  subroutine6502_sbc_combined_end:
  399 D1:B4FC DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  400 D1:B4FF 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  401 D1:B500 DD 7E 00 -      ld  a,(ix+REGA)
  402 D1:B503 3F -  -  -      ccf
  403 D1:B504 99 -  -  -      sbc a,c
  404 D1:B505 3F -  -  -      ccf
  405 D1:B506 DD 77 00 -      ld  (ix+REGA),a
  406 D1:B509 DD 46 04 CB 
              B0 E2 13 B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  407 D1:B52A C3 93 B2 D1     jp i6502NextLoad
  408 D1:B52E -  -  -  -  
  409 D1:B52E -  -  -  -  subroutine6502_cmp_combined_end:
  410 D1:B52E DD 7E 00 -      ld  a,(ix+REGA)
  411 D1:B531 B8 -  -  -      cp  b
  412 D1:B532 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  413 D1:B54B C3 93 B2 D1     jp i6502NextLoad
  414 D1:B54F -  -  -  -  
  415 D1:B54F -  -  -  -  subroutine6502_take_branch:
  416 D1:B54F FD 23 -  -      ADDCYC(1)
  417 D1:B551 7E -  -  -      ld  a,(hl)  ;offset byte
  418 D1:B552 6F -  -  -      ld  L,a
  419 D1:B553 87 -  -  -      add a,a
  420 D1:B554 9F -  -  -      sbc a,a
  421 D1:B555 67 -  -  -      ld  H,a     ;sign-extending offset byte
  422 D1:B556 DD 56 06 -      ld  d,(ix+REGPC+1)
  423 D1:B559 13 -  -  -      inc de
  424 D1:B55A 52 19 -  -      add.s hl,de
  425 D1:B55C 7C -  -  -      ld  a,h
  426 D1:B55D BA -  -  -      cp  d       ;is high byte the same?
  427 D1:B55E 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  428 D1:B560 FD 23 -  -      ADDCYC(1)
  429 D1:B562 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  430 D1:B566 C3 7D B2 D1     jp  i6502FirstLoad
  431 D1:B56A -  -  -  -  
  432 D1:B56A -  -  -  -  
  433 D1:B56A -  -  -  -  ;-----------------------------------------------------------------------------
  434 D1:B56A -  -  -  -  
  435 D1:B56A -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  436 D1:B56A -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  437 D1:B56A -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  438 D1:B56A -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  439 D1:B56A -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  440 D1:B56A -  -  -  -  
  441 D1:B56A -  -  -  -  ;-----------------------------------------------------------------------------
  442 D1:B56A -  -  -  -  
  443 D1:B56A -  -  -  -  ;-----------------------------------------------------------------------------
  444 D1:B56A -  -  -  -  ;-----------------------------------------------------------------------------
  445 D1:B56A -  -  -  -  ;-----------------------------------------------------------------------------
  446 D1:B56A -  -  -  -  ;Instructions by type: Transfer Instructions
  447 D1:B56A -  -  -  -  ;LDA - Load Accumulator with Memory
  448 D1:B56A -  -  -  -  ;    M -> A
  449 D1:B56A -  -  -  -  ;    N	Z	C	I	D	V
  450 D1:B56A -  -  -  -  ;    +	+	-	-	-	-
  451 D1:B56A -  -  -  -  
  452 D1:B56A -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  453 D1:B56A -  -  -  -  ;immediate	LDA #oper	A9	2	2
  454 D1:B56A -  -  -  -  inst6502_lda_imm:
  455 D1:B56A 7E -  -  -      ld  a,(hl)
  456 D1:B56B DD 77 00 -      ld  (ix+REGA),a
  457 D1:B56E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  458 D1:B581 ED 33 02 -      ADDCYC(2)
  459 D1:B584 C3 93 B2 D1     jp i6502NextLoad
  460 D1:B588 -  -  -  -  
  461 D1:B588 -  -  -  -  ;zeropage	LDA oper	A5	2	3
  462 D1:B588 -  -  -  -  inst6502_lda_zp:
  463 D1:B588 7E -  -  -      ld  a,(hl)
  464 D1:B589 01 00 38 D0     ld  bc,ZEROPAGE
  465 D1:B58D 81 -  -  -      add a,c
  466 D1:B58E 4F -  -  -      ld  c,a
  467 D1:B58F 0A -  -  -      ld  a,(bc)
  468 D1:B590 DD 77 00 -      ld  (ix+REGA),a
  469 D1:B593 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  470 D1:B5A6 ED 33 03 -      ADDCYC(3)
  471 D1:B5A9 C3 93 B2 D1     jp i6502NextLoad
  472 D1:B5AD -  -  -  -  
  473 D1:B5AD -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  474 D1:B5AD -  -  -  -  inst6502_lda_zpx:
  475 D1:B5AD 7E -  -  -      ld  a,(hl)
  476 D1:B5AE 01 00 38 D0     ld  bc,ZEROPAGE
  477 D1:B5B2 81 -  -  -      add a,c
  478 D1:B5B3 DD 86 01 -      add a,(ix+REGX)
  479 D1:B5B6 4F -  -  -      ld  c,a
  480 D1:B5B7 0A -  -  -      ld  a,(bc)
  481 D1:B5B8 DD 77 00 -      ld  (ix+REGA),a
  482 D1:B5BB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  483 D1:B5CE ED 33 04 -      ADDCYC(4)
  484 D1:B5D1 C3 93 B2 D1     jp i6502NextLoad
  485 D1:B5D5 -  -  -  -  
  486 D1:B5D5 -  -  -  -  ;absolute	LDA oper	AD	3	4
  487 D1:B5D5 -  -  -  -  inst6502_lda_abs:
  488 D1:B5D5 CD B0 B4 D1     call subroutine6502_abs_split_start
  489 D1:B5D9 E5 -  -  -      push hl
  490 D1:B5DA 50 -  -  -          ld  d,b
  491 D1:B5DB 79 -  -  -          ld  a,c
  492 D1:B5DC 0E 08 -  -          ld  c,BASETABLE_STRIDE
  493 D1:B5DE ED 4C -  -          mlt bc
  494 D1:B5E0 21 00 40 D0         ld  hl,PAGETABLE
  495 D1:B5E4 09 -  -  -          add hl,bc
  496 D1:B5E5 ED 27 -  -          ld  hl,(hl)
  497 D1:B5E7 06 00 -  -          ld  b,0
  498 D1:B5E9 4F -  -  -          ld  c,a
  499 D1:B5EA 09 -  -  -          add hl,bc   ;full address
  500 D1:B5EB 7E -  -  -          READ_ACCESS
  501 D1:B5EC DD 77 00 -          ld (ix+REGA),a
  502 D1:B5EF DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  503 D1:B602 ED 33 04 -          ADDCYC(4)
  504 D1:B605 E1 -  -  -      pop hl
  505 D1:B606 C3 93 B2 D1     jp i6502NextLoad
  506 D1:B60A -  -  -  -  
  507 D1:B60A -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  508 D1:B60A -  -  -  -  inst6502_lda_absx:
  509 D1:B60A CD B0 B4 D1     call subroutine6502_abs_split_start
  510 D1:B60E E5 -  -  -      push hl
  511 D1:B60F 50 -  -  -          ld  d,b
  512 D1:B610 79 -  -  -          ld  a,c
  513 D1:B611 0E 08 -  -          ld  c,BASETABLE_STRIDE
  514 D1:B613 ED 4C -  -          mlt bc
  515 D1:B615 21 00 40 D0         ld  hl,PAGETABLE
  516 D1:B619 09 -  -  -          add hl,bc
  517 D1:B61A ED 27 -  -          ld  hl,(hl)
  518 D1:B61C 06 00 -  -          ld  b,0
  519 D1:B61E DD 86 01 -          add a,(ix+REGX)
  520 D1:B621 4F -  -  -          ld  c,a
  521 D1:B622 30 04 -  -          jr  nc,+_
  522 D1:B624 FD 23 -  -          ADDCYC(1)
  523 D1:B626 04 -  -  -          inc b
  524 D1:B627 14 -  -  -          inc d
  525 D1:B628 09 -  -  -  _:      add hl,bc   ;full address
  526 D1:B629 7E -  -  -          READ_ACCESS
  527 D1:B62A DD 77 00 -          ld (ix+REGA),a
  528 D1:B62D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  529 D1:B640 ED 33 04 -          ADDCYC(4)
  530 D1:B643 E1 -  -  -      pop hl
  531 D1:B644 C3 93 B2 D1     jp i6502NextLoad
  532 D1:B648 -  -  -  -  
  533 D1:B648 -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  534 D1:B648 -  -  -  -  inst6502_lda_absy:
  535 D1:B648 CD B0 B4 D1     call subroutine6502_abs_split_start
  536 D1:B64C E5 -  -  -      push hl
  537 D1:B64D 50 -  -  -          ld  d,b
  538 D1:B64E 79 -  -  -          ld  a,c
  539 D1:B64F 0E 08 -  -          ld  c,BASETABLE_STRIDE
  540 D1:B651 ED 4C -  -          mlt bc
  541 D1:B653 21 00 40 D0         ld  hl,PAGETABLE
  542 D1:B657 09 -  -  -          add hl,bc
  543 D1:B658 ED 27 -  -          ld  hl,(hl)
  544 D1:B65A 06 00 -  -          ld  b,0
  545 D1:B65C DD 86 02 -          add a,(ix+REGY)
  546 D1:B65F 4F -  -  -          ld  c,a
  547 D1:B660 30 04 -  -          jr  nc,+_
  548 D1:B662 FD 23 -  -          ADDCYC(1)
  549 D1:B664 04 -  -  -          inc b
  550 D1:B665 14 -  -  -          inc d
  551 D1:B666 09 -  -  -  _:      add hl,bc   ;full address
  552 D1:B667 7E -  -  -          READ_ACCESS
  553 D1:B668 DD 77 00 -          ld (ix+REGA),a
  554 D1:B66B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  555 D1:B67E ED 33 04 -          ADDCYC(4)
  556 D1:B681 E1 -  -  -      pop hl
  557 D1:B682 C3 93 B2 D1     jp i6502NextLoad
  558 D1:B686 -  -  -  -  
  559 D1:B686 -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  560 D1:B686 -  -  -  -  inst6502_lda_indx:
  561 D1:B686 E5 -  -  -      push hl
  562 D1:B687 7E -  -  -          ld  a,(hl)
  563 D1:B688 21 00 38 D0         ld  hl,ZEROPAGE
  564 D1:B68C 85 -  -  -          add a,L
  565 D1:B68D DD 86 01 -          add a,(ix+REGX)
  566 D1:B690 6F -  -  -          ld  L,a
  567 D1:B691 7E -  -  -          ld  a,(hl)
  568 D1:B692 2C -  -  -          inc L
  569 D1:B693 56 -  -  -          ld  d,(hl)
  570 D1:B694 42 -  -  -          ld  b,d
  571 D1:B695 0E 08 -  -          ld  c,BASETABLE_STRIDE
  572 D1:B697 ED 4C -  -          mlt bc
  573 D1:B699 21 00 40 D0         ld  hl,PAGETABLE
  574 D1:B69D 09 -  -  -          add hl,bc
  575 D1:B69E ED 27 -  -          ld  hl,(hl)
  576 D1:B6A0 06 00 -  -          ld  b,0
  577 D1:B6A2 4F -  -  -          ld  c,a
  578 D1:B6A3 09 -  -  -          add hl,bc
  579 D1:B6A4 7E -  -  -          READ_ACCESS
  580 D1:B6A5 DD 77 00 -          ld (ix+REGA),a
  581 D1:B6A8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  582 D1:B6BB ED 33 06 -          ADDCYC(6)
  583 D1:B6BE E1 -  -  -      pop hl
  584 D1:B6BF C3 93 B2 D1     jp i6502NextLoad
  585 D1:B6C3 -  -  -  -  
  586 D1:B6C3 -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  587 D1:B6C3 -  -  -  -  inst6502_lda_indy:
  588 D1:B6C3 E5 -  -  -      push hl
  589 D1:B6C4 7E -  -  -          ld  a,(hl)
  590 D1:B6C5 21 00 38 D0         ld  hl,ZEROPAGE
  591 D1:B6C9 85 -  -  -          add a,L
  592 D1:B6CA 6F -  -  -          ld  L,a
  593 D1:B6CB 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  594 D1:B6CC 2C -  -  -          inc L
  595 D1:B6CD DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  596 D1:B6D0 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  597 D1:B6D1 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  598 D1:B6D3 FD 23 -  -          ADDCYC(1)
  599 D1:B6D5 24 -  -  -          inc h
  600 D1:B6D6 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  601 D1:B6D7 2E 08 -  -          ld  L,BASETABLE_STRIDE
  602 D1:B6D9 ED 6C -  -          mlt hl          ;23.
  603 D1:B6DB 01 00 40 D0         ld  bc,PAGETABLE
  604 D1:B6DF 09 -  -  -          add hl,bc
  605 D1:B6E0 ED 27 -  -          ld  hl,(hl)     ;address get.
  606 D1:B6E2 01 00 00 00         ld  bc,0
  607 D1:B6E6 4F -  -  -          ld  c,a
  608 D1:B6E7 09 -  -  -          add hl,bc       ;Full address get.
  609 D1:B6E8 7E -  -  -          READ_ACCESS
  610 D1:B6E9 DD 77 00 -          ld  (ix+REGA),a
  611 D1:B6EC DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  612 D1:B6FF ED 33 05 -          ADDCYC(5)
  613 D1:B702 E1 -  -  -      pop hl
  614 D1:B703 C3 93 B2 D1     jp i6502NextLoad
  615 D1:B707 -  -  -  -  
  616 D1:B707 -  -  -  -  ;-----------------------------------------------------------------------------
  617 D1:B707 -  -  -  -  ;LDX - Load Index X with Memory
  618 D1:B707 -  -  -  -  ;    M -> X
  619 D1:B707 -  -  -  -  ;    N	Z	C	I	D	V
  620 D1:B707 -  -  -  -  ;    +	+	-	-	-	-
  621 D1:B707 -  -  -  -  
  622 D1:B707 -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  623 D1:B707 -  -  -  -  inst6502_ldx_imm:
  624 D1:B707 7E -  -  -      ld  a,(hl)
  625 D1:B708 DD 77 01 -      ld  (ix+REGX),a
  626 D1:B70B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  627 D1:B71E ED 33 02 -      ADDCYC(2)
  628 D1:B721 C3 93 B2 D1     jp i6502NextLoad
  629 D1:B725 -  -  -  -  
  630 D1:B725 -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  631 D1:B725 -  -  -  -  inst6502_ldx_zp:
  632 D1:B725 7E -  -  -      ld  a,(hl)
  633 D1:B726 01 00 38 D0     ld  bc,ZEROPAGE
  634 D1:B72A 81 -  -  -      add a,c
  635 D1:B72B 4F -  -  -      ld  c,a
  636 D1:B72C 0A -  -  -      ld  a,(bc)
  637 D1:B72D DD 77 01 -      ld  (ix+REGX),a
  638 D1:B730 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  639 D1:B743 ED 33 03 -      ADDCYC(3)
  640 D1:B746 C3 93 B2 D1     jp i6502NextLoad
  641 D1:B74A -  -  -  -  
  642 D1:B74A -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  643 D1:B74A -  -  -  -  inst6502_ldx_zpy:
  644 D1:B74A 7E -  -  -      ld  a,(hl)
  645 D1:B74B 01 00 38 D0     ld  bc,ZEROPAGE
  646 D1:B74F 81 -  -  -      add a,c
  647 D1:B750 DD 86 02 -      add a,(ix+REGY)
  648 D1:B753 4F -  -  -      ld  c,a
  649 D1:B754 0A -  -  -      ld  a,(bc)
  650 D1:B755 DD 77 01 -      ld  (ix+REGX),a
  651 D1:B758 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  652 D1:B76B ED 33 04 -      ADDCYC(4)
  653 D1:B76E C3 93 B2 D1     jp i6502NextLoad
  654 D1:B772 -  -  -  -  
  655 D1:B772 -  -  -  -  ;absolute	LDX oper	AE	3	4  
  656 D1:B772 -  -  -  -  inst6502_ldx_abs:
  657 D1:B772 CD B0 B4 D1     call subroutine6502_abs_split_start
  658 D1:B776 E5 -  -  -      push hl
  659 D1:B777 50 -  -  -          ld  d,b
  660 D1:B778 79 -  -  -          ld  a,c
  661 D1:B779 0E 08 -  -          ld  c,BASETABLE_STRIDE
  662 D1:B77B ED 4C -  -          mlt bc
  663 D1:B77D 21 00 40 D0         ld  hl,PAGETABLE
  664 D1:B781 09 -  -  -          add hl,bc
  665 D1:B782 ED 27 -  -          ld  hl,(hl)
  666 D1:B784 06 00 -  -          ld  b,0
  667 D1:B786 4F -  -  -          ld  c,a
  668 D1:B787 09 -  -  -          add hl,bc   ;full address
  669 D1:B788 7E -  -  -          READ_ACCESS
  670 D1:B789 DD 77 01 -          ld (ix+REGX),a
  671 D1:B78C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  672 D1:B79F ED 33 04 -          ADDCYC(4)
  673 D1:B7A2 E1 -  -  -      pop hl
  674 D1:B7A3 C3 93 B2 D1     jp i6502NextLoad
  675 D1:B7A7 -  -  -  -  
  676 D1:B7A7 -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  677 D1:B7A7 -  -  -  -  inst6502_ldx_absy:
  678 D1:B7A7 CD B0 B4 D1     call subroutine6502_abs_split_start
  679 D1:B7AB E5 -  -  -      push hl
  680 D1:B7AC 50 -  -  -          ld  d,b
  681 D1:B7AD 79 -  -  -          ld  a,c
  682 D1:B7AE 0E 08 -  -          ld  c,BASETABLE_STRIDE
  683 D1:B7B0 ED 4C -  -          mlt bc
  684 D1:B7B2 21 00 40 D0         ld  hl,PAGETABLE
  685 D1:B7B6 09 -  -  -          add hl,bc
  686 D1:B7B7 ED 27 -  -          ld  hl,(hl)
  687 D1:B7B9 06 00 -  -          ld  b,0
  688 D1:B7BB DD 86 02 -          add a,(ix+REGY)
  689 D1:B7BE 4F -  -  -          ld  c,a
  690 D1:B7BF 30 04 -  -          jr  nc,+_
  691 D1:B7C1 FD 23 -  -          ADDCYC(1)
  692 D1:B7C3 04 -  -  -          inc b
  693 D1:B7C4 14 -  -  -          inc d
  694 D1:B7C5 09 -  -  -  _:      add hl,bc   ;full address
  695 D1:B7C6 7E -  -  -          READ_ACCESS
  696 D1:B7C7 DD 77 01 -          ld (ix+REGX),a
  697 D1:B7CA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  698 D1:B7DD ED 33 04 -          ADDCYC(4)
  699 D1:B7E0 E1 -  -  -      pop hl
  700 D1:B7E1 C3 93 B2 D1     jp i6502NextLoad
  701 D1:B7E5 -  -  -  -  
  702 D1:B7E5 -  -  -  -  ;-----------------------------------------------------------------------------
  703 D1:B7E5 -  -  -  -  ;LDY -  Load Index Y with Memory
  704 D1:B7E5 -  -  -  -  ;    M -> Y
  705 D1:B7E5 -  -  -  -  ;    N	Z	C	I	D	V
  706 D1:B7E5 -  -  -  -  ;    +	+	-	-	-	-
  707 D1:B7E5 -  -  -  -  
  708 D1:B7E5 -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  709 D1:B7E5 -  -  -  -  inst6502_ldy_imm:
  710 D1:B7E5 7E -  -  -      ld  a,(hl)
  711 D1:B7E6 DD 77 02 -      ld  (ix+REGY),a
  712 D1:B7E9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  713 D1:B7FC ED 33 02 -      ADDCYC(2)
  714 D1:B7FF C3 93 B2 D1     jp i6502NextLoad
  715 D1:B803 -  -  -  -  
  716 D1:B803 -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  717 D1:B803 -  -  -  -  inst6502_ldy_zp:
  718 D1:B803 7E -  -  -      ld  a,(hl)
  719 D1:B804 01 00 38 D0     ld  bc,ZEROPAGE
  720 D1:B808 81 -  -  -      add a,c
  721 D1:B809 4F -  -  -      ld  c,a
  722 D1:B80A 0A -  -  -      ld  a,(bc)
  723 D1:B80B DD 77 02 -      ld  (ix+REGY),a
  724 D1:B80E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  725 D1:B821 ED 33 03 -      ADDCYC(3)
  726 D1:B824 C3 93 B2 D1     jp i6502NextLoad
  727 D1:B828 -  -  -  -  
  728 D1:B828 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  729 D1:B828 -  -  -  -  inst6502_ldy_zpx:
  730 D1:B828 7E -  -  -      ld  a,(hl)
  731 D1:B829 01 00 38 D0     ld  bc,ZEROPAGE
  732 D1:B82D 81 -  -  -      add a,c
  733 D1:B82E DD 86 01 -      add a,(ix+REGX)
  734 D1:B831 4F -  -  -      ld  c,a
  735 D1:B832 0A -  -  -      ld  a,(bc)
  736 D1:B833 DD 77 02 -      ld  (ix+REGY),a
  737 D1:B836 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  738 D1:B849 ED 33 04 -      ADDCYC(4)
  739 D1:B84C C3 93 B2 D1     jp i6502NextLoad
  740 D1:B850 -  -  -  -  
  741 D1:B850 -  -  -  -  ;absolute	LDY oper	AC	3	4  
  742 D1:B850 -  -  -  -  inst6502_ldy_abs:
  743 D1:B850 CD B0 B4 D1     call subroutine6502_abs_split_start
  744 D1:B854 E5 -  -  -      push hl
  745 D1:B855 50 -  -  -          ld  d,b
  746 D1:B856 79 -  -  -          ld  a,c
  747 D1:B857 0E 08 -  -          ld  c,BASETABLE_STRIDE
  748 D1:B859 ED 4C -  -          mlt bc
  749 D1:B85B 21 00 40 D0         ld  hl,PAGETABLE
  750 D1:B85F 09 -  -  -          add hl,bc
  751 D1:B860 ED 27 -  -          ld  hl,(hl)
  752 D1:B862 06 00 -  -          ld  b,0
  753 D1:B864 4F -  -  -          ld  c,a
  754 D1:B865 09 -  -  -          add hl,bc   ;full address
  755 D1:B866 7E -  -  -          READ_ACCESS
  756 D1:B867 DD 77 02 -          ld (ix+REGY),a
  757 D1:B86A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  758 D1:B87D ED 33 04 -          ADDCYC(4)
  759 D1:B880 E1 -  -  -      pop hl
  760 D1:B881 C3 93 B2 D1     jp i6502NextLoad
  761 D1:B885 -  -  -  -  
  762 D1:B885 -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  763 D1:B885 -  -  -  -  inst6502_ldy_absx:
  764 D1:B885 CD B0 B4 D1     call subroutine6502_abs_split_start
  765 D1:B889 E5 -  -  -      push hl
  766 D1:B88A 50 -  -  -          ld  d,b
  767 D1:B88B 79 -  -  -          ld  a,c
  768 D1:B88C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  769 D1:B88E ED 4C -  -          mlt bc
  770 D1:B890 21 00 40 D0         ld  hl,PAGETABLE
  771 D1:B894 09 -  -  -          add hl,bc
  772 D1:B895 ED 27 -  -          ld  hl,(hl)
  773 D1:B897 06 00 -  -          ld  b,0
  774 D1:B899 DD 86 01 -          add a,(ix+REGX)
  775 D1:B89C 4F -  -  -          ld  c,a
  776 D1:B89D 30 04 -  -          jr  nc,+_
  777 D1:B89F FD 23 -  -          ADDCYC(1)
  778 D1:B8A1 04 -  -  -          inc b
  779 D1:B8A2 14 -  -  -          inc d
  780 D1:B8A3 09 -  -  -  _:      add hl,bc   ;full address
  781 D1:B8A4 7E -  -  -          READ_ACCESS
  782 D1:B8A5 DD 77 02 -          ld (ix+REGY),a
  783 D1:B8A8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  784 D1:B8BB ED 33 04 -          ADDCYC(4)
  785 D1:B8BE E1 -  -  -      pop hl
  786 D1:B8BF C3 93 B2 D1     jp i6502NextLoad
  787 D1:B8C3 -  -  -  -  
  788 D1:B8C3 -  -  -  -  ;-----------------------------------------------------------------------------
  789 D1:B8C3 -  -  -  -  ;STA - Store Accumulator in Memory
  790 D1:B8C3 -  -  -  -  ;    A -> M
  791 D1:B8C3 -  -  -  -  ;    N	Z	C	I	D	V
  792 D1:B8C3 -  -  -  -  ;    -	-	-	-	-	-
  793 D1:B8C3 -  -  -  -  
  794 D1:B8C3 -  -  -  -  ;zeropage	STA oper	85	2	3  
  795 D1:B8C3 -  -  -  -  inst6502_sta_zp:
  796 D1:B8C3 7E -  -  -      ld  a,(hl)
  797 D1:B8C4 01 00 38 D0     ld  bc,ZEROPAGE
  798 D1:B8C8 81 -  -  -      add a,c
  799 D1:B8C9 4F -  -  -      ld  c,a
  800 D1:B8CA DD 7E 00 -      ld  a,(ix+REGA)
  801 D1:B8CD 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  802 D1:B8CE ED 33 03 -      ADDCYC(3)
  803 D1:B8D1 C3 93 B2 D1     jp i6502NextLoad
  804 D1:B8D5 -  -  -  -  
  805 D1:B8D5 -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  806 D1:B8D5 -  -  -  -  inst6502_sta_zpx:
  807 D1:B8D5 7E -  -  -      ld  a,(hl)
  808 D1:B8D6 01 00 38 D0     ld  bc,ZEROPAGE
  809 D1:B8DA 81 -  -  -      add a,c
  810 D1:B8DB DD 86 01 -      add a,(ix+REGX)
  811 D1:B8DE 4F -  -  -      ld  c,a
  812 D1:B8DF DD 7E 00 -      ld  a,(ix+REGA)
  813 D1:B8E2 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  814 D1:B8E3 ED 33 04 -      ADDCYC(4)
  815 D1:B8E6 C3 93 B2 D1     jp i6502NextLoad
  816 D1:B8EA -  -  -  -  
  817 D1:B8EA -  -  -  -  ;absolute	STA oper	8D	3	4
  818 D1:B8EA -  -  -  -  inst6502_sta_abs:
  819 D1:B8EA CD B0 B4 D1     call subroutine6502_abs_split_start
  820 D1:B8EE E5 -  -  -      push hl
  821 D1:B8EF 50 -  -  -          ld  d,b
  822 D1:B8F0 79 -  -  -          ld  a,c
  823 D1:B8F1 0E 08 -  -          ld  c,BASETABLE_STRIDE
  824 D1:B8F3 ED 4C -  -          mlt bc
  825 D1:B8F5 21 00 40 D0         ld  hl,PAGETABLE
  826 D1:B8F9 09 -  -  -          add hl,bc
  827 D1:B8FA ED 27 -  -          ld  hl,(hl)
  828 D1:B8FC 06 00 -  -          ld  b,0
  829 D1:B8FE 4F -  -  -          ld  c,a
  830 D1:B8FF 09 -  -  -          add hl,bc   ;full address
  831 D1:B900 DD 46 00 -          ld  b,(ix+REGA)
  832 D1:B903 70 -  -  -          WRITE_ACCESS
  833 D1:B904 ED 33 04 -          ADDCYC(4)
  834 D1:B907 E1 -  -  -      pop hl
  835 D1:B908 C3 93 B2 D1     jp i6502NextLoad
  836 D1:B90C -  -  -  -  
  837 D1:B90C -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  838 D1:B90C -  -  -  -  inst6502_sta_absx:
  839 D1:B90C CD B0 B4 D1     call subroutine6502_abs_split_start
  840 D1:B910 E5 -  -  -      push hl
  841 D1:B911 50 -  -  -          ld  d,b
  842 D1:B912 79 -  -  -          ld  a,c
  843 D1:B913 0E 08 -  -          ld  c,BASETABLE_STRIDE
  844 D1:B915 ED 4C -  -          mlt bc
  845 D1:B917 21 00 40 D0         ld  hl,PAGETABLE
  846 D1:B91B 09 -  -  -          add hl,bc
  847 D1:B91C ED 27 -  -          ld  hl,(hl)
  848 D1:B91E 06 00 -  -          ld  b,0
  849 D1:B920 DD 86 01 -          add a,(ix+REGX)
  850 D1:B923 4F -  -  -          ld  c,a
  851 D1:B924 30 02 -  -          jr  nc,+_
  852 D1:B926 04 -  -  -          inc b
  853 D1:B927 14 -  -  -          inc d
  854 D1:B928 09 -  -  -  _:      add hl,bc   ;full address
  855 D1:B929 DD 46 00 -          ld  b,(ix+REGA)
  856 D1:B92C 70 -  -  -          WRITE_ACCESS
  857 D1:B92D ED 33 05 -          ADDCYC(5)
  858 D1:B930 E1 -  -  -      pop hl
  859 D1:B931 C3 93 B2 D1     jp i6502NextLoad
  860 D1:B935 -  -  -  -  
  861 D1:B935 -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  862 D1:B935 -  -  -  -  inst6502_sta_absy:
  863 D1:B935 CD B0 B4 D1     call subroutine6502_abs_split_start
  864 D1:B939 E5 -  -  -      push hl
  865 D1:B93A 50 -  -  -          ld  d,b
  866 D1:B93B 79 -  -  -          ld  a,c
  867 D1:B93C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  868 D1:B93E ED 4C -  -          mlt bc
  869 D1:B940 21 00 40 D0         ld  hl,PAGETABLE
  870 D1:B944 09 -  -  -          add hl,bc
  871 D1:B945 ED 27 -  -          ld  hl,(hl)
  872 D1:B947 06 00 -  -          ld  b,0
  873 D1:B949 DD 86 02 -          add a,(ix+REGY)
  874 D1:B94C 4F -  -  -          ld  c,a
  875 D1:B94D 30 02 -  -          jr  nc,+_
  876 D1:B94F 04 -  -  -          inc b
  877 D1:B950 14 -  -  -          inc d
  878 D1:B951 09 -  -  -  _:      add hl,bc   ;full address
  879 D1:B952 DD 46 00 -          ld  b,(ix+REGA)
  880 D1:B955 70 -  -  -          WRITE_ACCESS
  881 D1:B956 ED 33 05 -          ADDCYC(5)
  882 D1:B959 E1 -  -  -      pop hl
  883 D1:B95A C3 93 B2 D1     jp i6502NextLoad
  884 D1:B95E -  -  -  -  
  885 D1:B95E -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  886 D1:B95E -  -  -  -  inst6502_sta_indx:
  887 D1:B95E E5 -  -  -      push hl
  888 D1:B95F 7E -  -  -          ld  a,(hl)
  889 D1:B960 21 00 38 D0         ld  hl,ZEROPAGE
  890 D1:B964 85 -  -  -          add a,L
  891 D1:B965 DD 86 01 -          add a,(ix+REGX)
  892 D1:B968 6F -  -  -          ld  L,a
  893 D1:B969 7E -  -  -          ld  a,(hl)
  894 D1:B96A 2C -  -  -          inc L
  895 D1:B96B 56 -  -  -          ld  d,(hl)
  896 D1:B96C 42 -  -  -          ld  b,d
  897 D1:B96D 0E 08 -  -          ld  c,BASETABLE_STRIDE
  898 D1:B96F ED 4C -  -          mlt bc
  899 D1:B971 21 00 40 D0         ld  hl,PAGETABLE
  900 D1:B975 09 -  -  -          add hl,bc
  901 D1:B976 ED 27 -  -          ld  hl,(hl)
  902 D1:B978 06 00 -  -          ld  b,0
  903 D1:B97A 4F -  -  -          ld  c,a
  904 D1:B97B 09 -  -  -          add hl,bc
  905 D1:B97C DD 46 00 -          ld  b,(ix+REGA)
  906 D1:B97F 70 -  -  -          WRITE_ACCESS
  907 D1:B980 ED 33 06 -          ADDCYC(6)
  908 D1:B983 E1 -  -  -      pop hl
  909 D1:B984 C3 93 B2 D1     jp i6502NextLoad
  910 D1:B988 -  -  -  -  
  911 D1:B988 -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  912 D1:B988 -  -  -  -  inst6502_sta_indy:
  913 D1:B988 E5 -  -  -      push hl
  914 D1:B989 7E -  -  -          ld  a,(hl)
  915 D1:B98A 21 00 38 D0         ld  hl,ZEROPAGE
  916 D1:B98E 85 -  -  -          add a,L
  917 D1:B98F 6F -  -  -          ld  L,a
  918 D1:B990 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  919 D1:B991 2C -  -  -          inc L
  920 D1:B992 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  921 D1:B995 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  922 D1:B996 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  923 D1:B998 24 -  -  -          inc h
  924 D1:B999 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  925 D1:B99A 2E 08 -  -          ld  L,BASETABLE_STRIDE
  926 D1:B99C ED 6C -  -          mlt hl          ;23.
  927 D1:B99E 01 00 40 D0         ld  bc,PAGETABLE
  928 D1:B9A2 09 -  -  -          add hl,bc
  929 D1:B9A3 ED 27 -  -          ld  hl,(hl)     ;address get.
  930 D1:B9A5 01 00 00 00         ld  bc,0
  931 D1:B9A9 4F -  -  -          ld  c,a
  932 D1:B9AA 09 -  -  -          add hl,bc       ;Full address get.
  933 D1:B9AB DD 46 00 -          ld  b,(ix+REGA)
  934 D1:B9AE 70 -  -  -          WRITE_ACCESS
  935 D1:B9AF ED 33 06 -          ADDCYC(6)
  936 D1:B9B2 E1 -  -  -      pop hl
  937 D1:B9B3 C3 93 B2 D1     jp i6502NextLoad
  938 D1:B9B7 -  -  -  -  
  939 D1:B9B7 -  -  -  -  ;-----------------------------------------------------------------------------
  940 D1:B9B7 -  -  -  -  ;STX - Store Index X in Memory
  941 D1:B9B7 -  -  -  -  ;    X -> M
  942 D1:B9B7 -  -  -  -  ;    N	Z	C	I	D	V
  943 D1:B9B7 -  -  -  -  ;    -	-	-	-	-	-
  944 D1:B9B7 -  -  -  -  
  945 D1:B9B7 -  -  -  -  ;zeropage	STX oper	86	2	3  
  946 D1:B9B7 -  -  -  -  inst6502_stx_zp:
  947 D1:B9B7 7E -  -  -      ld  a,(hl)
  948 D1:B9B8 01 00 38 D0     ld  bc,ZEROPAGE
  949 D1:B9BC 81 -  -  -      add a,c
  950 D1:B9BD 4F -  -  -      ld  c,a
  951 D1:B9BE DD 7E 01 -      ld  a,(ix+REGX)
  952 D1:B9C1 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  953 D1:B9C2 ED 33 03 -      ADDCYC(3)
  954 D1:B9C5 C3 93 B2 D1     jp i6502NextLoad
  955 D1:B9C9 -  -  -  -  
  956 D1:B9C9 -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
  957 D1:B9C9 -  -  -  -  inst6502_stx_zpy:
  958 D1:B9C9 7E -  -  -      ld  a,(hl)
  959 D1:B9CA 01 00 38 D0     ld  bc,ZEROPAGE
  960 D1:B9CE 81 -  -  -      add a,c
  961 D1:B9CF DD 86 02 -      add a,(ix+REGY)
  962 D1:B9D2 4F -  -  -      ld  c,a
  963 D1:B9D3 DD 7E 01 -      ld  a,(ix+REGX)
  964 D1:B9D6 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  965 D1:B9D7 ED 33 04 -      ADDCYC(4)
  966 D1:B9DA C3 93 B2 D1     jp i6502NextLoad
  967 D1:B9DE -  -  -  -  
  968 D1:B9DE -  -  -  -  ;absolute	STX oper	8E	3	4  
  969 D1:B9DE -  -  -  -  inst6502_stx_abs:
  970 D1:B9DE CD B0 B4 D1     call subroutine6502_abs_split_start
  971 D1:B9E2 E5 -  -  -      push hl
  972 D1:B9E3 50 -  -  -          ld  d,b
  973 D1:B9E4 79 -  -  -          ld  a,c
  974 D1:B9E5 0E 08 -  -          ld  c,BASETABLE_STRIDE
  975 D1:B9E7 ED 4C -  -          mlt bc
  976 D1:B9E9 21 00 40 D0         ld  hl,PAGETABLE
  977 D1:B9ED 09 -  -  -          add hl,bc
  978 D1:B9EE ED 27 -  -          ld  hl,(hl)
  979 D1:B9F0 06 00 -  -          ld  b,0
  980 D1:B9F2 4F -  -  -          ld  c,a
  981 D1:B9F3 09 -  -  -          add hl,bc   ;full address
  982 D1:B9F4 DD 46 01 -          ld  b,(ix+REGX)
  983 D1:B9F7 70 -  -  -          WRITE_ACCESS
  984 D1:B9F8 ED 33 04 -          ADDCYC(4)
  985 D1:B9FB E1 -  -  -      pop hl
  986 D1:B9FC C3 93 B2 D1     jp i6502NextLoad
  987 D1:BA00 -  -  -  -  
  988 D1:BA00 -  -  -  -  ;-----------------------------------------------------------------------------
  989 D1:BA00 -  -  -  -  ;STY - Store Index Y in Memory
  990 D1:BA00 -  -  -  -  ;    Y -> M
  991 D1:BA00 -  -  -  -  ;    N	Z	C	I	D	V
  992 D1:BA00 -  -  -  -  ;    -	-	-	-	-	-
  993 D1:BA00 -  -  -  -  
  994 D1:BA00 -  -  -  -  ;zeropage	STY oper	84	2	3  
  995 D1:BA00 -  -  -  -  inst6502_sty_zp:
  996 D1:BA00 7E -  -  -      ld  a,(hl)
  997 D1:BA01 01 00 38 D0     ld  bc,ZEROPAGE
  998 D1:BA05 81 -  -  -      add a,c
  999 D1:BA06 4F -  -  -      ld  c,a
 1000 D1:BA07 DD 7E 02 -      ld  a,(ix+REGY)
 1001 D1:BA0A 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1002 D1:BA0B ED 33 03 -      ADDCYC(3)
 1003 D1:BA0E C3 93 B2 D1     jp i6502NextLoad
 1004 D1:BA12 -  -  -  -  
 1005 D1:BA12 -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1006 D1:BA12 -  -  -  -  inst6502_sty_zpx:
 1007 D1:BA12 7E -  -  -      ld  a,(hl)
 1008 D1:BA13 01 00 38 D0     ld  bc,ZEROPAGE
 1009 D1:BA17 81 -  -  -      add a,c
 1010 D1:BA18 DD 86 01 -      add a,(ix+REGX)
 1011 D1:BA1B 4F -  -  -      ld  c,a
 1012 D1:BA1C DD 7E 02 -      ld  a,(ix+REGY)
 1013 D1:BA1F 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1014 D1:BA20 ED 33 04 -      ADDCYC(4)
 1015 D1:BA23 C3 93 B2 D1     jp i6502NextLoad
 1016 D1:BA27 -  -  -  -  
 1017 D1:BA27 -  -  -  -  ;absolute	STY oper	8C	3	4  
 1018 D1:BA27 -  -  -  -  inst6502_sty_abs:
 1019 D1:BA27 CD B0 B4 D1     call subroutine6502_abs_split_start
 1020 D1:BA2B E5 -  -  -      push hl
 1021 D1:BA2C 50 -  -  -          ld  d,b
 1022 D1:BA2D 79 -  -  -          ld  a,c
 1023 D1:BA2E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1024 D1:BA30 ED 4C -  -          mlt bc
 1025 D1:BA32 21 00 40 D0         ld  hl,PAGETABLE
 1026 D1:BA36 09 -  -  -          add hl,bc
 1027 D1:BA37 ED 27 -  -          ld  hl,(hl)
 1028 D1:BA39 06 00 -  -          ld  b,0
 1029 D1:BA3B 4F -  -  -          ld  c,a
 1030 D1:BA3C 09 -  -  -          add hl,bc   ;full address
 1031 D1:BA3D DD 46 02 -          ld  b,(ix+REGY)
 1032 D1:BA40 70 -  -  -          WRITE_ACCESS
 1033 D1:BA41 ED 33 04 -          ADDCYC(4)
 1034 D1:BA44 E1 -  -  -      pop hl
 1035 D1:BA45 C3 93 B2 D1     jp i6502NextLoad
 1036 D1:BA49 -  -  -  -  
 1037 D1:BA49 -  -  -  -  ;-----------------------------------------------------------------------------
 1038 D1:BA49 -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1039 D1:BA49 -  -  -  -  ;N	Z	C	I	D	V
 1040 D1:BA49 -  -  -  -  ;+	+	-	-	-	-
 1041 D1:BA49 -  -  -  -  ;implied	TAX	AA	1	2
 1042 D1:BA49 -  -  -  -  inst6502_tax:
 1043 D1:BA49 DD 7E 00 -      ld  a,(ix+REGA)
 1044 D1:BA4C DD 77 01 -      ld  (ix+REGX),a
 1045 D1:BA4F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1046 D1:BA62 ED 33 02 -      ADDCYC(2)
 1047 D1:BA65 C3 AC B2 D1     jp i6502FinishLoad
 1048 D1:BA69 -  -  -  -  
 1049 D1:BA69 -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1050 D1:BA69 -  -  -  -  ;N	Z	C	I	D	V
 1051 D1:BA69 -  -  -  -  ;+	+	-	-	-	-
 1052 D1:BA69 -  -  -  -  ;implied	TAY	A8	1	2
 1053 D1:BA69 -  -  -  -  inst6502_tay:
 1054 D1:BA69 DD 7E 00 -      ld  a,(ix+REGA)
 1055 D1:BA6C DD 77 02 -      ld  (ix+REGY),a
 1056 D1:BA6F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1057 D1:BA82 ED 33 02 -      ADDCYC(2)
 1058 D1:BA85 C3 AC B2 D1     jp i6502FinishLoad
 1059 D1:BA89 -  -  -  -  
 1060 D1:BA89 -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1061 D1:BA89 -  -  -  -  ;N	Z	C	I	D	V
 1062 D1:BA89 -  -  -  -  ;+	+	-	-	-	-
 1063 D1:BA89 -  -  -  -  ;implied	TSX	BA	1	2
 1064 D1:BA89 -  -  -  -  inst6502_tsx:
 1065 D1:BA89 DD 7E 03 -      ld  a,(ix+REGSP)
 1066 D1:BA8C DD 77 01 -      ld  (ix+REGX),a
 1067 D1:BA8F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1068 D1:BAA2 ED 33 02 -      ADDCYC(2)
 1069 D1:BAA5 C3 AC B2 D1     jp i6502FinishLoad
 1070 D1:BAA9 -  -  -  -  
 1071 D1:BAA9 -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1072 D1:BAA9 -  -  -  -  ;N	Z	C	I	D	V
 1073 D1:BAA9 -  -  -  -  ;+	+	-	-	-	-
 1074 D1:BAA9 -  -  -  -  ;implied	TXA	8A	1	2
 1075 D1:BAA9 -  -  -  -  inst6502_txa:
 1076 D1:BAA9 DD 7E 01 -      ld  a,(ix+REGX)
 1077 D1:BAAC DD 77 00 -      ld  (ix+REGA),a
 1078 D1:BAAF DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1079 D1:BAC2 ED 33 02 -      ADDCYC(2)
 1080 D1:BAC5 C3 AC B2 D1     jp i6502FinishLoad
 1081 D1:BAC9 -  -  -  -  
 1082 D1:BAC9 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1083 D1:BAC9 -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:BAC9 -  -  -  -  ;-	-	-	-	-	-
 1085 D1:BAC9 -  -  -  -  ;implied	TXS	9A	1	2
 1086 D1:BAC9 -  -  -  -  inst6502_txs:
 1087 D1:BAC9 DD 7E 01 -      ld  a,(ix+REGX)
 1088 D1:BACC DD 77 03 -      ld  (ix+REGSP),a
 1089 D1:BACF ED 33 02 -      ADDCYC(2)
 1090 D1:BAD2 C3 AC B2 D1     jp i6502FinishLoad
 1091 D1:BAD6 -  -  -  -  
 1092 D1:BAD6 -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1093 D1:BAD6 -  -  -  -  ;N	Z	C	I	D	V
 1094 D1:BAD6 -  -  -  -  ;+	+	-	-	-	-
 1095 D1:BAD6 -  -  -  -  ;implied	TYA	98	1	2
 1096 D1:BAD6 -  -  -  -  inst6502_tya:
 1097 D1:BAD6 DD 7E 02 -      ld  a,(ix+REGY)
 1098 D1:BAD9 DD 77 00 -      ld  (ix+REGA),a
 1099 D1:BADC DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1100 D1:BAEF ED 33 02 -      ADDCYC(2)
 1101 D1:BAF2 C3 AC B2 D1     jp i6502FinishLoad
 1102 D1:BAF6 -  -  -  -  
 1103 D1:BAF6 -  -  -  -  ;-----------------------------------------------------------------------------
 1104 D1:BAF6 -  -  -  -  ;-----------------------------------------------------------------------------
 1105 D1:BAF6 -  -  -  -  ;-----------------------------------------------------------------------------
 1106 D1:BAF6 -  -  -  -  ;Instructions by type: Stack Instructions
 1107 D1:BAF6 -  -  -  -  ;PHA - Push Accumulator on Stack
 1108 D1:BAF6 -  -  -  -  ;    push A
 1109 D1:BAF6 -  -  -  -  ;    N	Z	C	I	D	V
 1110 D1:BAF6 -  -  -  -  ;    -	-	-	-	-	-
 1111 D1:BAF6 -  -  -  -  ;implied	PHA	48	1	3 
 1112 D1:BAF6 -  -  -  -  inst6502_pha:
 1113 D1:BAF6 DD 7E 00 -      ld  a,(ix+REGA)
 1114 D1:BAF9 01 00 39 D0     ld  bc,STACKBASE
 1115 D1:BAFD DD 4E 03 -      ld  c,(ix+REGSP)
 1116 D1:BB00 02 -  -  -      ld  (bc),a
 1117 D1:BB01 0D -  -  -      dec c
 1118 D1:BB02 DD 71 03 -      ld  (ix+REGSP),c
 1119 D1:BB05 C3 AC B2 D1     jp i6502FinishLoad
 1120 D1:BB09 -  -  -  -  
 1121 D1:BB09 -  -  -  -  ;PHP - Push Processor Status on Stack
 1122 D1:BB09 -  -  -  -  ;    The status register will be pushed with the break
 1123 D1:BB09 -  -  -  -  ;    flag and bit 5 set to 1.
 1124 D1:BB09 -  -  -  -  ;    push SR
 1125 D1:BB09 -  -  -  -  ;    N	Z	C	I	D	V
 1126 D1:BB09 -  -  -  -  ;    -	-	-	-	-	-
 1127 D1:BB09 -  -  -  -  ;implied	PHP	08	1	3  
 1128 D1:BB09 -  -  -  -  inst6502_php:
 1129 D1:BB09 DD 7E 04 -      ld  a,(ix+REGSR)
 1130 D1:BB0C F6 30 -  -      or  a,%00110000
 1131 D1:BB0E 01 00 39 D0     ld  bc,STACKBASE
 1132 D1:BB12 DD 4E 03 -      ld  c,(ix+REGSP)
 1133 D1:BB15 02 -  -  -      ld  (bc),a
 1134 D1:BB16 0D -  -  -      dec c
 1135 D1:BB17 DD 71 03 -      ld  (ix+REGSP),c
 1136 D1:BB1A C3 AC B2 D1     jp i6502FinishLoad
 1137 D1:BB1E -  -  -  -  
 1138 D1:BB1E -  -  -  -  
 1139 D1:BB1E -  -  -  -  
 1140 D1:BB1E -  -  -  -  ;PLA - Pull Accumulator from Stack
 1141 D1:BB1E -  -  -  -  ;    pull A
 1142 D1:BB1E -  -  -  -  ;    N	Z	C	I	D	V
 1143 D1:BB1E -  -  -  -  ;    +	+	-	-	-	-
 1144 D1:BB1E -  -  -  -  ;implied	PLA	68	1	4  
 1145 D1:BB1E -  -  -  -  inst6502_pla:
 1146 D1:BB1E 01 00 39 D0     ld  bc,STACKBASE
 1147 D1:BB22 DD 4E 03 -      ld  c,(ix+REGSP)
 1148 D1:BB25 0C -  -  -      inc c
 1149 D1:BB26 0A -  -  -      ld  a,(bc)
 1150 D1:BB27 DD 71 03 -      ld  (ix+REGSP),c
 1151 D1:BB2A DD 77 00 -      ld  (ix+REGA),a
 1152 D1:BB2D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1153 D1:BB40 C3 AC B2 D1     jp i6502FinishLoad
 1154 D1:BB44 -  -  -  -  
 1155 D1:BB44 -  -  -  -  ;PLP - Pull Processor Status from Stack
 1156 D1:BB44 -  -  -  -  ;    The status register will be pulled with the break
 1157 D1:BB44 -  -  -  -  ;    flag and bit 5 ignored.
 1158 D1:BB44 -  -  -  -  ;    pull SR
 1159 D1:BB44 -  -  -  -  ;    N	Z	C	I	D	V
 1160 D1:BB44 -  -  -  -  ;    from stack
 1161 D1:BB44 -  -  -  -  ;implied	PLP	28	1	4  
 1162 D1:BB44 -  -  -  -  inst6502_plp:
 1163 D1:BB44 01 00 39 D0     ld  bc,STACKBASE
 1164 D1:BB48 DD 4E 03 -      ld  c,(ix+REGSP)
 1165 D1:BB4B 0C -  -  -      inc c
 1166 D1:BB4C 0A -  -  -      ld  a,(bc)
 1167 D1:BB4D DD 71 03 -      ld  (ix+REGSP),c
 1168 D1:BB50 DD 46 04 -      ld  b,(ix+REGSR)
 1169 D1:BB53 A8 -  -  -      xor a,b
 1170 D1:BB54 E6 CF -  -      and a,%11001111
 1171 D1:BB56 A8 -  -  -      xor a,b
 1172 D1:BB57 DD 77 04 -      ld  (ix+REGSR),a
 1173 D1:BB5A C3 AC B2 D1     jp i6502FinishLoad
 1174 D1:BB5E -  -  -  -  
 1175 D1:BB5E -  -  -  -  
 1176 D1:BB5E -  -  -  -  ;-----------------------------------------------------------------------------
 1177 D1:BB5E -  -  -  -  ;-----------------------------------------------------------------------------
 1178 D1:BB5E -  -  -  -  ;-----------------------------------------------------------------------------
 1179 D1:BB5E -  -  -  -  ;Instructions by type: Decrements and Increments
 1180 D1:BB5E -  -  -  -  
 1181 D1:BB5E -  -  -  -  ;DEC -  Decrement Memory by One
 1182 D1:BB5E -  -  -  -  ;    M - 1 -> M
 1183 D1:BB5E -  -  -  -  ;    N	Z	C	I	D	V
 1184 D1:BB5E -  -  -  -  ;    +	+	-	-	-	-
 1185 D1:BB5E -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1186 D1:BB5E -  -  -  -  
 1187 D1:BB5E -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1188 D1:BB5E -  -  -  -  inst6502_dec_zp:
 1189 D1:BB5E 7E -  -  -      ld  a,(hl)
 1190 D1:BB5F 01 00 38 D0     ld  bc,ZEROPAGE
 1191 D1:BB63 81 -  -  -      add a,c
 1192 D1:BB64 4F -  -  -      ld  c,a
 1193 D1:BB65 0A -  -  -      ld  a,(bc)
 1194 D1:BB66 3D -  -  -      dec a
 1195 D1:BB67 02 -  -  -      ld  (bc),a
 1196 D1:BB68 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1197 D1:BB7B ED 33 05 -      ADDCYC(5)
 1198 D1:BB7E C3 93 B2 D1     jp i6502NextLoad
 1199 D1:BB82 -  -  -  -  
 1200 D1:BB82 -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1201 D1:BB82 -  -  -  -  inst6502_dec_zpx:
 1202 D1:BB82 7E -  -  -      ld  a,(hl)
 1203 D1:BB83 01 00 38 D0     ld  bc,ZEROPAGE
 1204 D1:BB87 81 -  -  -      add a,c
 1205 D1:BB88 DD 86 01 -      add a,(ix+REGX)
 1206 D1:BB8B 4F -  -  -      ld  c,a
 1207 D1:BB8C 0A -  -  -      ld  a,(bc)
 1208 D1:BB8D 3D -  -  -      dec a
 1209 D1:BB8E 02 -  -  -      ld  (bc),a
 1210 D1:BB8F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1211 D1:BBA2 ED 33 06 -      ADDCYC(6)
 1212 D1:BBA5 C3 93 B2 D1     jp i6502NextLoad
 1213 D1:BBA9 -  -  -  -  
 1214 D1:BBA9 -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1215 D1:BBA9 -  -  -  -  inst6502_dec_abs:
 1216 D1:BBA9 CD B0 B4 D1     call subroutine6502_abs_split_start
 1217 D1:BBAD E5 -  -  -      push hl
 1218 D1:BBAE 50 -  -  -          ld  d,b
 1219 D1:BBAF 79 -  -  -          ld  a,c
 1220 D1:BBB0 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1221 D1:BBB2 ED 4C -  -          mlt bc
 1222 D1:BBB4 21 00 40 D0         ld  hl,PAGETABLE
 1223 D1:BBB8 09 -  -  -          add hl,bc
 1224 D1:BBB9 ED 27 -  -          ld  hl,(hl)
 1225 D1:BBBB 06 00 -  -          ld  b,0
 1226 D1:BBBD 4F -  -  -          ld  c,a
 1227 D1:BBBE 09 -  -  -          add hl,bc   ;full address
 1228 D1:BBBF 7E -  -  -          READ_ACCESS
 1229 D1:BBC0 3D -  -  -          dec a
 1230 D1:BBC1 47 -  -  -          ld  b,a
 1231 D1:BBC2 -  -  -  -          ;
 1232 D1:BBC2 DD 7E 04 -          ld  a,(ix+REGSR)
 1233 D1:BBC5 CB 8F -  -          res SF_ZERO,a
 1234 D1:BBC7 20 02 -  -          jr  nz,$+4
 1235 D1:BBC9 CB CF -  -          set SF_ZERO,a
 1236 D1:BBCB CB BF -  -          res SF_NEG,a
 1237 D1:BBCD FA D2 BB D1         jp  m,$+5
 1238 D1:BBD1 CB FF -  -          set SF_NEG,a
 1239 D1:BBD3 DD 77 04 -          ld  (ix+REGSR),a
 1240 D1:BBD6 -  -  -  -          ;
 1241 D1:BBD6 70 -  -  -          WRITE_ACCESS
 1242 D1:BBD7 ED 33 06 -          ADDCYC(6)
 1243 D1:BBDA E1 -  -  -      pop hl
 1244 D1:BBDB C3 93 B2 D1     jp i6502NextLoad
 1245 D1:BBDF -  -  -  -  
 1246 D1:BBDF -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1247 D1:BBDF -  -  -  -  inst6502_dec_absx:
 1248 D1:BBDF CD B0 B4 D1     call subroutine6502_abs_split_start
 1249 D1:BBE3 E5 -  -  -      push hl
 1250 D1:BBE4 50 -  -  -          ld  d,b
 1251 D1:BBE5 79 -  -  -          ld  a,c
 1252 D1:BBE6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1253 D1:BBE8 ED 4C -  -          mlt bc
 1254 D1:BBEA 21 00 40 D0         ld  hl,PAGETABLE
 1255 D1:BBEE 09 -  -  -          add hl,bc
 1256 D1:BBEF ED 27 -  -          ld  hl,(hl)
 1257 D1:BBF1 06 00 -  -          ld  b,0
 1258 D1:BBF3 DD 86 01 -          add a,(ix+REGX)
 1259 D1:BBF6 4F -  -  -          ld  c,a
 1260 D1:BBF7 30 02 -  -          jr  nc,+_
 1261 D1:BBF9 04 -  -  -          inc b
 1262 D1:BBFA 14 -  -  -          inc d
 1263 D1:BBFB 09 -  -  -  _:      add hl,bc   ;full address
 1264 D1:BBFC 7E -  -  -          READ_ACCESS
 1265 D1:BBFD 3D -  -  -          dec a
 1266 D1:BBFE 47 -  -  -          ld  b,a
 1267 D1:BBFF -  -  -  -          ;
 1268 D1:BBFF DD 7E 04 -          ld  a,(ix+REGSR)
 1269 D1:BC02 CB 8F -  -          res SF_ZERO,a
 1270 D1:BC04 20 02 -  -          jr  nz,$+4
 1271 D1:BC06 CB CF -  -          set SF_ZERO,a
 1272 D1:BC08 CB BF -  -          res SF_NEG,a
 1273 D1:BC0A FA 0F BC D1         jp  m,$+5
 1274 D1:BC0E CB FF -  -          set SF_NEG,a
 1275 D1:BC10 DD 77 04 -          ld  (ix+REGSR),a
 1276 D1:BC13 -  -  -  -          ;
 1277 D1:BC13 70 -  -  -          WRITE_ACCESS
 1278 D1:BC14 ED 33 07 -          ADDCYC(7)
 1279 D1:BC17 E1 -  -  -      pop hl
 1280 D1:BC18 C3 93 B2 D1     jp i6502NextLoad
 1281 D1:BC1C -  -  -  -  
 1282 D1:BC1C -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1283 D1:BC1C -  -  -  -  ;Flags altered: NZ
 1284 D1:BC1C -  -  -  -  ;implied	DEX	CA	1	2  
 1285 D1:BC1C -  -  -  -  inst6502_dex:
 1286 D1:BC1C DD 35 01 -      dec (ix+REGX)
 1287 D1:BC1F DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1288 D1:BC22 CB 8F -  -      res SF_ZERO,a
 1289 D1:BC24 20 02 -  -      jr  nz,$+4
 1290 D1:BC26 CB CF -  -      set SF_ZERO,a
 1291 D1:BC28 CB BF -  -      res SF_NEG,a
 1292 D1:BC2A FA 2F BC D1     jp  m,$+5
 1293 D1:BC2E CB FF -  -      set SF_NEG,a
 1294 D1:BC30 DD 77 04 -      ld  (ix+REGSR),a
 1295 D1:BC33 ED 33 02 -      ADDCYC(2)
 1296 D1:BC36 C3 AC B2 D1     jp i6502FinishLoad
 1297 D1:BC3A -  -  -  -  
 1298 D1:BC3A -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1299 D1:BC3A -  -  -  -  ;Flags altered: NZ
 1300 D1:BC3A -  -  -  -  ;implied	DEY	88	1	2  
 1301 D1:BC3A -  -  -  -  inst6502_dey:
 1302 D1:BC3A DD 35 02 -      dec (ix+REGY)
 1303 D1:BC3D 18 E0 -  -      jr  -_
 1304 D1:BC3F -  -  -  -  
 1305 D1:BC3F -  -  -  -  
 1306 D1:BC3F -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1307 D1:BC3F -  -  -  -  ;Flags altered: NZ
 1308 D1:BC3F -  -  -  -  ;implied	INX	E8	1	2  
 1309 D1:BC3F -  -  -  -  inst6502_inx:
 1310 D1:BC3F DD 34 01 -      inc (ix+REGX)
 1311 D1:BC42 18 DB -  -      jr  -_
 1312 D1:BC44 -  -  -  -  
 1313 D1:BC44 -  -  -  -  
 1314 D1:BC44 -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1315 D1:BC44 -  -  -  -  ;Flags altered: NZ
 1316 D1:BC44 -  -  -  -  ;implied	INY	C8	1	2  
 1317 D1:BC44 -  -  -  -  inst6502_iny:
 1318 D1:BC44 DD 34 02 -      inc (ix+REGY)
 1319 D1:BC47 18 D6 -  -      jr  -_
 1320 D1:BC49 -  -  -  -  
 1321 D1:BC49 -  -  -  -  
 1322 D1:BC49 -  -  -  -  ;INC - Increment Memory by One
 1323 D1:BC49 -  -  -  -  ;    M + 1 -> M
 1324 D1:BC49 -  -  -  -  ;    N	Z	C	I	D	V
 1325 D1:BC49 -  -  -  -  ;    +	+	-	-	-	-
 1326 D1:BC49 -  -  -  -  
 1327 D1:BC49 -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1328 D1:BC49 -  -  -  -  inst6502_inc_zp:
 1329 D1:BC49 7E -  -  -      ld  a,(hl)
 1330 D1:BC4A 01 00 38 D0     ld  bc,ZEROPAGE
 1331 D1:BC4E 81 -  -  -      add a,c
 1332 D1:BC4F 4F -  -  -      ld  c,a
 1333 D1:BC50 0A -  -  -      ld  a,(bc)
 1334 D1:BC51 3C -  -  -      inc a
 1335 D1:BC52 02 -  -  -      ld  (bc),a
 1336 D1:BC53 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1337 D1:BC66 ED 33 05 -      ADDCYC(5)
 1338 D1:BC69 C3 93 B2 D1     jp i6502NextLoad
 1339 D1:BC6D -  -  -  -  
 1340 D1:BC6D -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1341 D1:BC6D -  -  -  -  inst6502_inc_zpx:
 1342 D1:BC6D 7E -  -  -      ld  a,(hl)
 1343 D1:BC6E 01 00 38 D0     ld  bc,ZEROPAGE
 1344 D1:BC72 81 -  -  -      add a,c
 1345 D1:BC73 DD 86 01 -      add a,(ix+REGX)
 1346 D1:BC76 4F -  -  -      ld  c,a
 1347 D1:BC77 0A -  -  -      ld  a,(bc)
 1348 D1:BC78 3C -  -  -      inc a
 1349 D1:BC79 02 -  -  -      ld  (bc),a
 1350 D1:BC7A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1351 D1:BC8D ED 33 06 -      ADDCYC(6)
 1352 D1:BC90 C3 93 B2 D1     jp i6502NextLoad
 1353 D1:BC94 -  -  -  -      
 1354 D1:BC94 -  -  -  -  ;absolute	INC oper	EE	3	6
 1355 D1:BC94 -  -  -  -  inst6502_inc_abs:
 1356 D1:BC94 CD B0 B4 D1     call subroutine6502_abs_split_start
 1357 D1:BC98 E5 -  -  -      push hl
 1358 D1:BC99 50 -  -  -          ld  d,b
 1359 D1:BC9A 79 -  -  -          ld  a,c
 1360 D1:BC9B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1361 D1:BC9D ED 4C -  -          mlt bc
 1362 D1:BC9F 21 00 40 D0         ld  hl,PAGETABLE
 1363 D1:BCA3 09 -  -  -          add hl,bc
 1364 D1:BCA4 ED 27 -  -          ld  hl,(hl)
 1365 D1:BCA6 06 00 -  -          ld  b,0
 1366 D1:BCA8 4F -  -  -          ld  c,a
 1367 D1:BCA9 09 -  -  -          add hl,bc   ;full address
 1368 D1:BCAA 7E -  -  -          READ_ACCESS
 1369 D1:BCAB 3C -  -  -          inc a
 1370 D1:BCAC 47 -  -  -          ld  b,a
 1371 D1:BCAD -  -  -  -          ;
 1372 D1:BCAD DD 7E 04 -          ld  a,(ix+REGSR)
 1373 D1:BCB0 CB 8F -  -          res SF_ZERO,a
 1374 D1:BCB2 20 02 -  -          jr  nz,$+4
 1375 D1:BCB4 CB CF -  -          set SF_ZERO,a
 1376 D1:BCB6 CB BF -  -          res SF_NEG,a
 1377 D1:BCB8 FA BD BC D1         jp  m,$+5
 1378 D1:BCBC CB FF -  -          set SF_NEG,a
 1379 D1:BCBE DD 77 04 -          ld  (ix+REGSR),a
 1380 D1:BCC1 -  -  -  -          ;
 1381 D1:BCC1 70 -  -  -          WRITE_ACCESS
 1382 D1:BCC2 ED 33 06 -          ADDCYC(6)
 1383 D1:BCC5 E1 -  -  -      pop hl
 1384 D1:BCC6 C3 93 B2 D1     jp i6502NextLoad
 1385 D1:BCCA -  -  -  -  
 1386 D1:BCCA -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1387 D1:BCCA -  -  -  -  inst6502_inc_absx:
 1388 D1:BCCA CD B0 B4 D1     call subroutine6502_abs_split_start
 1389 D1:BCCE E5 -  -  -      push hl
 1390 D1:BCCF 50 -  -  -          ld  d,b
 1391 D1:BCD0 79 -  -  -          ld  a,c
 1392 D1:BCD1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1393 D1:BCD3 ED 4C -  -          mlt bc
 1394 D1:BCD5 21 00 40 D0         ld  hl,PAGETABLE
 1395 D1:BCD9 09 -  -  -          add hl,bc
 1396 D1:BCDA ED 27 -  -          ld  hl,(hl)
 1397 D1:BCDC 06 00 -  -          ld  b,0
 1398 D1:BCDE DD 86 01 -          add a,(ix+REGX)
 1399 D1:BCE1 4F -  -  -          ld  c,a
 1400 D1:BCE2 30 02 -  -          jr nc,+_
 1401 D1:BCE4 04 -  -  -          inc b
 1402 D1:BCE5 14 -  -  -          inc d
 1403 D1:BCE6 09 -  -  -  _:      add hl,bc   ;full address
 1404 D1:BCE7 7E -  -  -          READ_ACCESS
 1405 D1:BCE8 3C -  -  -          inc a
 1406 D1:BCE9 47 -  -  -          ld  b,a
 1407 D1:BCEA -  -  -  -          ;
 1408 D1:BCEA DD 7E 04 -          ld  a,(ix+REGSR)
 1409 D1:BCED CB 8F -  -          res SF_ZERO,a
 1410 D1:BCEF 20 02 -  -          jr  nz,$+4
 1411 D1:BCF1 CB CF -  -          set SF_ZERO,a
 1412 D1:BCF3 CB BF -  -          res SF_NEG,a
 1413 D1:BCF5 FA FA BC D1         jp  m,$+5
 1414 D1:BCF9 CB FF -  -          set SF_NEG,a
 1415 D1:BCFB DD 77 04 -          ld  (ix+REGSR),a
 1416 D1:BCFE -  -  -  -          ;
 1417 D1:BCFE 70 -  -  -          WRITE_ACCESS
 1418 D1:BCFF ED 33 07 -          ADDCYC(7)
 1419 D1:BD02 E1 -  -  -      pop hl
 1420 D1:BD03 C3 93 B2 D1     jp i6502NextLoad
 1421 D1:BD07 -  -  -  -  
 1422 D1:BD07 -  -  -  -  ;-----------------------------------------------------------------------------
 1423 D1:BD07 -  -  -  -  ;-----------------------------------------------------------------------------
 1424 D1:BD07 -  -  -  -  ;-----------------------------------------------------------------------------
 1425 D1:BD07 -  -  -  -  ;Instructions by type: Arithmetic Operations
 1426 D1:BD07 -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1427 D1:BD07 -  -  -  -  ;    N	Z	C	I	D	V
 1428 D1:BD07 -  -  -  -  ;    +	+	+	-	-	+
 1429 D1:BD07 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1430 D1:BD07 -  -  -  -  
 1431 D1:BD07 -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1432 D1:BD07 -  -  -  -  inst6502_adc_imm:
 1433 D1:BD07 ED 33 02 -      ADDCYC(2)
 1434 D1:BD0A 4E -  -  -      ld  c,(hl)
 1435 D1:BD0B C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1436 D1:BD0F -  -  -  -      
 1437 D1:BD0F -  -  -  -  
 1438 D1:BD0F -  -  -  -  ;zeropage	ADC oper	65	2	3
 1439 D1:BD0F -  -  -  -  inst6502_adc_zp:
 1440 D1:BD0F ED 33 03 -      ADDCYC(3)
 1441 D1:BD12 7E -  -  -      ld  a,(hl)
 1442 D1:BD13 01 00 38 D0     ld  bc,ZEROPAGE
 1443 D1:BD17 81 -  -  -      add a,c
 1444 D1:BD18 4F -  -  -      ld  c,a
 1445 D1:BD19 0A -  -  -      ld  a,(bc)
 1446 D1:BD1A 4F -  -  -      ld  c,a
 1447 D1:BD1B C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1448 D1:BD1F -  -  -  -  
 1449 D1:BD1F -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1450 D1:BD1F -  -  -  -  inst6502_adc_zpx:
 1451 D1:BD1F ED 33 04 -      ADDCYC(4)
 1452 D1:BD22 7E -  -  -      ld  a,(hl)
 1453 D1:BD23 DD 86 01 -      add a,(ix+REGX)
 1454 D1:BD26 01 00 38 D0     ld  bc,ZEROPAGE
 1455 D1:BD2A 81 -  -  -      add a,c
 1456 D1:BD2B 4F -  -  -      ld  c,a
 1457 D1:BD2C 0A -  -  -      ld  a,(bc)
 1458 D1:BD2D 4F -  -  -      ld  c,a
 1459 D1:BD2E C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1460 D1:BD32 -  -  -  -  
 1461 D1:BD32 -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1462 D1:BD32 -  -  -  -  inst6502_adc_abs:
 1463 D1:BD32 ED 33 04 -      ADDCYC(4)
 1464 D1:BD35 CD B0 B4 D1     call subroutine6502_abs_split_start
 1465 D1:BD39 E5 -  -  -      push hl
 1466 D1:BD3A 50 -  -  -          ld  d,b
 1467 D1:BD3B 79 -  -  -          ld  a,c
 1468 D1:BD3C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1469 D1:BD3E ED 4C -  -          mlt bc
 1470 D1:BD40 21 00 40 D0         ld  hl,PAGETABLE
 1471 D1:BD44 09 -  -  -          add hl,bc
 1472 D1:BD45 ED 27 -  -          ld  hl,(hl)
 1473 D1:BD47 06 00 -  -          ld  b,0
 1474 D1:BD49 4F -  -  -          ld  c,a
 1475 D1:BD4A 09 -  -  -          add hl,bc   ;full address
 1476 D1:BD4B 7E -  -  -          READ_ACCESS
 1477 D1:BD4C E1 -  -  -      pop hl
 1478 D1:BD4D 4F -  -  -      ld  c,a
 1479 D1:BD4E C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1480 D1:BD52 -  -  -  -  
 1481 D1:BD52 -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1482 D1:BD52 -  -  -  -  inst6502_adc_absx:
 1483 D1:BD52 ED 33 04 -      ADDCYC(4)
 1484 D1:BD55 CD B0 B4 D1     call subroutine6502_abs_split_start
 1485 D1:BD59 E5 -  -  -      push hl
 1486 D1:BD5A 50 -  -  -          ld  d,b
 1487 D1:BD5B 79 -  -  -          ld  a,c
 1488 D1:BD5C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1489 D1:BD5E ED 4C -  -          mlt bc
 1490 D1:BD60 21 00 40 D0         ld  hl,PAGETABLE
 1491 D1:BD64 09 -  -  -          add hl,bc
 1492 D1:BD65 ED 27 -  -          ld  hl,(hl)
 1493 D1:BD67 06 00 -  -          ld  b,0
 1494 D1:BD69 DD 86 01 -          add a,(ix+REGX)
 1495 D1:BD6C 4F -  -  -          ld  c,a
 1496 D1:BD6D 30 04 -  -          jr  nc,+_
 1497 D1:BD6F FD 23 -  -          ADDCYC(1)
 1498 D1:BD71 04 -  -  -          inc b
 1499 D1:BD72 14 -  -  -          inc d
 1500 D1:BD73 09 -  -  -  _:      add hl,bc   ;full address
 1501 D1:BD74 7E -  -  -          READ_ACCESS
 1502 D1:BD75 E1 -  -  -      pop hl
 1503 D1:BD76 4F -  -  -      ld  c,a
 1504 D1:BD77 C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1505 D1:BD7B -  -  -  -  
 1506 D1:BD7B -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1507 D1:BD7B -  -  -  -  inst6502_adc_absy:
 1508 D1:BD7B ED 33 04 -      ADDCYC(4)
 1509 D1:BD7E CD B0 B4 D1     call subroutine6502_abs_split_start
 1510 D1:BD82 E5 -  -  -      push hl
 1511 D1:BD83 50 -  -  -          ld  d,b
 1512 D1:BD84 79 -  -  -          ld  a,c
 1513 D1:BD85 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1514 D1:BD87 ED 4C -  -          mlt bc
 1515 D1:BD89 21 00 40 D0         ld  hl,PAGETABLE
 1516 D1:BD8D 09 -  -  -          add hl,bc
 1517 D1:BD8E ED 27 -  -          ld  hl,(hl)
 1518 D1:BD90 06 00 -  -          ld  b,0
 1519 D1:BD92 DD 86 02 -          add a,(ix+REGY)
 1520 D1:BD95 4F -  -  -          ld  c,a
 1521 D1:BD96 30 04 -  -          jr  nc,+_
 1522 D1:BD98 FD 23 -  -          ADDCYC(1)
 1523 D1:BD9A 04 -  -  -          inc b
 1524 D1:BD9B 14 -  -  -          inc d
 1525 D1:BD9C 09 -  -  -  _:      add hl,bc   ;full address
 1526 D1:BD9D 7E -  -  -          READ_ACCESS
 1527 D1:BD9E E1 -  -  -      pop hl
 1528 D1:BD9F 4F -  -  -      ld  c,a
 1529 D1:BDA0 C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1530 D1:BDA4 -  -  -  -  
 1531 D1:BDA4 -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1532 D1:BDA4 -  -  -  -  inst6502_adc_indx:
 1533 D1:BDA4 ED 33 06 -      ADDCYC(6)
 1534 D1:BDA7 E5 -  -  -      push hl
 1535 D1:BDA8 7E -  -  -          ld  a,(hl)
 1536 D1:BDA9 21 00 38 D0         ld  hl,ZEROPAGE
 1537 D1:BDAD 85 -  -  -          add a,L
 1538 D1:BDAE DD 86 01 -          add a,(ix+REGX)
 1539 D1:BDB1 6F -  -  -          ld  L,a
 1540 D1:BDB2 7E -  -  -          ld  a,(hl)
 1541 D1:BDB3 2C -  -  -          inc L
 1542 D1:BDB4 56 -  -  -          ld  d,(hl)
 1543 D1:BDB5 42 -  -  -          ld  b,d
 1544 D1:BDB6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1545 D1:BDB8 ED 4C -  -          mlt bc
 1546 D1:BDBA 21 00 40 D0         ld  hl,PAGETABLE
 1547 D1:BDBE 09 -  -  -          add hl,bc
 1548 D1:BDBF ED 27 -  -          ld  hl,(hl)
 1549 D1:BDC1 06 00 -  -          ld  b,0
 1550 D1:BDC3 4F -  -  -          ld  c,a
 1551 D1:BDC4 09 -  -  -          add hl,bc
 1552 D1:BDC5 7E -  -  -          READ_ACCESS
 1553 D1:BDC6 E1 -  -  -      pop hl
 1554 D1:BDC7 4F -  -  -      ld  c,a
 1555 D1:BDC8 C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1556 D1:BDCC -  -  -  -  
 1557 D1:BDCC -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1558 D1:BDCC -  -  -  -  inst6502_adc_indy:
 1559 D1:BDCC E5 -  -  -      push hl
 1560 D1:BDCD 7E -  -  -          ld  a,(hl)
 1561 D1:BDCE 21 00 38 D0         ld  hl,ZEROPAGE
 1562 D1:BDD2 85 -  -  -          add a,L
 1563 D1:BDD3 6F -  -  -          ld  L,a
 1564 D1:BDD4 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1565 D1:BDD5 2C -  -  -          inc L
 1566 D1:BDD6 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1567 D1:BDD9 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1568 D1:BDDA 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1569 D1:BDDC FD 23 -  -          ADDCYC(1)
 1570 D1:BDDE 24 -  -  -          inc h
 1571 D1:BDDF 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1572 D1:BDE0 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1573 D1:BDE2 ED 6C -  -          mlt hl          ;23.
 1574 D1:BDE4 01 00 40 D0         ld  bc,PAGETABLE
 1575 D1:BDE8 09 -  -  -          add hl,bc
 1576 D1:BDE9 ED 27 -  -          ld  hl,(hl)     ;address get.
 1577 D1:BDEB 01 00 00 00         ld  bc,0
 1578 D1:BDEF 4F -  -  -          ld  c,a
 1579 D1:BDF0 09 -  -  -          add hl,bc       ;Full address get.
 1580 D1:BDF1 7E -  -  -          READ_ACCESS
 1581 D1:BDF2 E1 -  -  -      pop hl
 1582 D1:BDF3 4F -  -  -      ld  c,a
 1583 D1:BDF4 C3 CC B4 D1     jp  subroutine6502_adc_combined_end
 1584 D1:BDF8 -  -  -  -  
 1585 D1:BDF8 -  -  -  -  
 1586 D1:BDF8 -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1587 D1:BDF8 -  -  -  -  ;A - M - C̅ -> A
 1588 D1:BDF8 -  -  -  -  ;N	Z	C	I	D	V
 1589 D1:BDF8 -  -  -  -  ;+	+	+	-	-	+
 1590 D1:BDF8 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1591 D1:BDF8 -  -  -  -  
 1592 D1:BDF8 -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1593 D1:BDF8 -  -  -  -  inst6502_sbc_imm:
 1594 D1:BDF8 ED 33 02 -      ADDCYC(2)
 1595 D1:BDFB 4E -  -  -      ld  c,(hl)
 1596 D1:BDFC C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1597 D1:BE00 -  -  -  -  
 1598 D1:BE00 -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1599 D1:BE00 -  -  -  -  inst6502_sbc_zp:
 1600 D1:BE00 ED 33 03 -      ADDCYC(3)
 1601 D1:BE03 7E -  -  -      ld  a,(hl)
 1602 D1:BE04 01 00 38 D0     ld  bc,ZEROPAGE
 1603 D1:BE08 81 -  -  -      add a,c
 1604 D1:BE09 4F -  -  -      ld  c,a
 1605 D1:BE0A 0A -  -  -      ld  a,(bc)
 1606 D1:BE0B 4F -  -  -      ld  c,a
 1607 D1:BE0C C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1608 D1:BE10 -  -  -  -  
 1609 D1:BE10 -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1610 D1:BE10 -  -  -  -  inst6502_sbc_zpx:
 1611 D1:BE10 ED 33 04 -      ADDCYC(4)
 1612 D1:BE13 7E -  -  -      ld  a,(hl)
 1613 D1:BE14 DD 86 01 -      add a,(ix+REGX)
 1614 D1:BE17 01 00 38 D0     ld  bc,ZEROPAGE
 1615 D1:BE1B 81 -  -  -      add a,c
 1616 D1:BE1C 4F -  -  -      ld  c,a
 1617 D1:BE1D 0A -  -  -      ld  a,(bc)
 1618 D1:BE1E 4F -  -  -      ld  c,a
 1619 D1:BE1F C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1620 D1:BE23 -  -  -  -  
 1621 D1:BE23 -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1622 D1:BE23 -  -  -  -  inst6502_sbc_abs:
 1623 D1:BE23 ED 33 04 -      ADDCYC(4)
 1624 D1:BE26 CD B0 B4 D1     call subroutine6502_abs_split_start
 1625 D1:BE2A E5 -  -  -      push hl
 1626 D1:BE2B 50 -  -  -          ld  d,b
 1627 D1:BE2C 79 -  -  -          ld  a,c
 1628 D1:BE2D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1629 D1:BE2F ED 4C -  -          mlt bc
 1630 D1:BE31 21 00 40 D0         ld  hl,PAGETABLE
 1631 D1:BE35 09 -  -  -          add hl,bc
 1632 D1:BE36 ED 27 -  -          ld  hl,(hl)
 1633 D1:BE38 06 00 -  -          ld  b,0
 1634 D1:BE3A 4F -  -  -          ld  c,a
 1635 D1:BE3B 09 -  -  -          add hl,bc   ;full address
 1636 D1:BE3C 7E -  -  -          READ_ACCESS
 1637 D1:BE3D E1 -  -  -      pop hl
 1638 D1:BE3E 4F -  -  -      ld  c,a
 1639 D1:BE3F C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1640 D1:BE43 -  -  -  -  
 1641 D1:BE43 -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1642 D1:BE43 -  -  -  -  inst6502_sbc_absx:
 1643 D1:BE43 ED 33 04 -      ADDCYC(4)
 1644 D1:BE46 CD B0 B4 D1     call subroutine6502_abs_split_start
 1645 D1:BE4A E5 -  -  -      push hl
 1646 D1:BE4B 50 -  -  -          ld  d,b
 1647 D1:BE4C 79 -  -  -          ld  a,c
 1648 D1:BE4D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1649 D1:BE4F ED 4C -  -          mlt bc
 1650 D1:BE51 21 00 40 D0         ld  hl,PAGETABLE
 1651 D1:BE55 09 -  -  -          add hl,bc
 1652 D1:BE56 ED 27 -  -          ld  hl,(hl)
 1653 D1:BE58 06 00 -  -          ld  b,0
 1654 D1:BE5A DD 86 01 -          add a,(ix+REGX)
 1655 D1:BE5D 4F -  -  -          ld  c,a
 1656 D1:BE5E 30 04 -  -          jr  nc,+_
 1657 D1:BE60 FD 23 -  -          ADDCYC(1)
 1658 D1:BE62 04 -  -  -          inc b
 1659 D1:BE63 14 -  -  -          inc d
 1660 D1:BE64 09 -  -  -  _:      add hl,bc   ;full address
 1661 D1:BE65 7E -  -  -          READ_ACCESS
 1662 D1:BE66 E1 -  -  -      pop hl
 1663 D1:BE67 4F -  -  -      ld  c,a
 1664 D1:BE68 C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1665 D1:BE6C -  -  -  -  
 1666 D1:BE6C -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1667 D1:BE6C -  -  -  -  inst6502_sbc_absy:
 1668 D1:BE6C ED 33 04 -      ADDCYC(4)
 1669 D1:BE6F CD B0 B4 D1     call subroutine6502_abs_split_start
 1670 D1:BE73 E5 -  -  -      push hl
 1671 D1:BE74 50 -  -  -          ld  d,b
 1672 D1:BE75 79 -  -  -          ld  a,c
 1673 D1:BE76 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1674 D1:BE78 ED 4C -  -          mlt bc
 1675 D1:BE7A 21 00 40 D0         ld  hl,PAGETABLE
 1676 D1:BE7E 09 -  -  -          add hl,bc
 1677 D1:BE7F ED 27 -  -          ld  hl,(hl)
 1678 D1:BE81 06 00 -  -          ld  b,0
 1679 D1:BE83 DD 86 02 -          add a,(ix+REGY)
 1680 D1:BE86 4F -  -  -          ld  c,a
 1681 D1:BE87 30 04 -  -          jr  nc,+_
 1682 D1:BE89 FD 23 -  -          ADDCYC(1)
 1683 D1:BE8B 04 -  -  -          inc b
 1684 D1:BE8C 14 -  -  -          inc d
 1685 D1:BE8D 09 -  -  -  _:      add hl,bc   ;full address
 1686 D1:BE8E 7E -  -  -          READ_ACCESS
 1687 D1:BE8F E1 -  -  -      pop hl
 1688 D1:BE90 4F -  -  -      ld  c,a
 1689 D1:BE91 C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1690 D1:BE95 -  -  -  -  
 1691 D1:BE95 -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1692 D1:BE95 -  -  -  -  inst6502_sbc_indx:
 1693 D1:BE95 ED 33 06 -      ADDCYC(6)
 1694 D1:BE98 E5 -  -  -      push hl
 1695 D1:BE99 7E -  -  -          ld  a,(hl)
 1696 D1:BE9A 21 00 38 D0         ld  hl,ZEROPAGE
 1697 D1:BE9E 85 -  -  -          add a,L
 1698 D1:BE9F DD 86 01 -          add a,(ix+REGX)
 1699 D1:BEA2 6F -  -  -          ld  L,a
 1700 D1:BEA3 7E -  -  -          ld  a,(hl)
 1701 D1:BEA4 2C -  -  -          inc L
 1702 D1:BEA5 56 -  -  -          ld  d,(hl)
 1703 D1:BEA6 42 -  -  -          ld  b,d
 1704 D1:BEA7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1705 D1:BEA9 ED 4C -  -          mlt bc
 1706 D1:BEAB 21 00 40 D0         ld  hl,PAGETABLE
 1707 D1:BEAF 09 -  -  -          add hl,bc
 1708 D1:BEB0 ED 27 -  -          ld  hl,(hl)
 1709 D1:BEB2 06 00 -  -          ld  b,0
 1710 D1:BEB4 4F -  -  -          ld  c,a
 1711 D1:BEB5 09 -  -  -          add hl,bc
 1712 D1:BEB6 7E -  -  -          READ_ACCESS
 1713 D1:BEB7 E1 -  -  -      pop hl
 1714 D1:BEB8 4F -  -  -      ld  c,a
 1715 D1:BEB9 C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1716 D1:BEBD -  -  -  -  
 1717 D1:BEBD -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1718 D1:BEBD -  -  -  -  inst6502_sbc_indy:
 1719 D1:BEBD E5 -  -  -      push hl
 1720 D1:BEBE 7E -  -  -          ld  a,(hl)
 1721 D1:BEBF 21 00 38 D0         ld  hl,ZEROPAGE
 1722 D1:BEC3 85 -  -  -          add a,L
 1723 D1:BEC4 6F -  -  -          ld  L,a
 1724 D1:BEC5 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1725 D1:BEC6 2C -  -  -          inc L
 1726 D1:BEC7 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1727 D1:BECA 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1728 D1:BECB 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1729 D1:BECD FD 23 -  -          ADDCYC(1)
 1730 D1:BECF 24 -  -  -          inc h
 1731 D1:BED0 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1732 D1:BED1 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1733 D1:BED3 ED 6C -  -          mlt hl          ;23.
 1734 D1:BED5 01 00 40 D0         ld  bc,PAGETABLE
 1735 D1:BED9 09 -  -  -          add hl,bc
 1736 D1:BEDA ED 27 -  -          ld  hl,(hl)     ;address get.
 1737 D1:BEDC 01 00 00 00         ld  bc,0
 1738 D1:BEE0 4F -  -  -          ld  c,a
 1739 D1:BEE1 09 -  -  -          add hl,bc       ;Full address get.
 1740 D1:BEE2 7E -  -  -          READ_ACCESS
 1741 D1:BEE3 E1 -  -  -      pop hl
 1742 D1:BEE4 4F -  -  -      ld  c,a
 1743 D1:BEE5 C3 FC B4 D1     jp  subroutine6502_sbc_combined_end
 1744 D1:BEE9 -  -  -  -  
 1745 D1:BEE9 -  -  -  -  
 1746 D1:BEE9 -  -  -  -  
 1747 D1:BEE9 -  -  -  -  ;-----------------------------------------------------------------------------
 1748 D1:BEE9 -  -  -  -  ;-----------------------------------------------------------------------------
 1749 D1:BEE9 -  -  -  -  ;-----------------------------------------------------------------------------
 1750 D1:BEE9 -  -  -  -  ;Instructions by type: Logical Operations
 1751 D1:BEE9 -  -  -  -  
 1752 D1:BEE9 -  -  -  -  ;AND - AND Memory with Accumulator
 1753 D1:BEE9 -  -  -  -  ;A AND M -> A
 1754 D1:BEE9 -  -  -  -  ;N	Z	C	I	D	V
 1755 D1:BEE9 -  -  -  -  ;+	+	-	-	-	-
 1756 D1:BEE9 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1757 D1:BEE9 -  -  -  -  
 1758 D1:BEE9 -  -  -  -  ;immediate	AND #oper	29	2	2  
 1759 D1:BEE9 -  -  -  -  inst6502_and_imm:
 1760 D1:BEE9 ED 33 02 -      ADDCYC(2)
 1761 D1:BEEC 7E -  -  -      ld  a,(hl)
 1762 D1:BEED DD A6 00 -      and a,(ix+REGA)
 1763 D1:BEF0 DD 77 00 -      ld  (ix+REGA),A
 1764 D1:BEF3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1765 D1:BF06 C3 93 B2 D1     jp i6502NextLoad
 1766 D1:BF0A -  -  -  -  
 1767 D1:BF0A -  -  -  -  ;zeropage	AND oper	25	2	3  
 1768 D1:BF0A -  -  -  -  inst6502_and_zp:
 1769 D1:BF0A ED 33 03 -      ADDCYC(3)
 1770 D1:BF0D 7E -  -  -      ld  a,(hl)
 1771 D1:BF0E 01 00 38 D0     ld  bc,ZEROPAGE
 1772 D1:BF12 81 -  -  -      add a,c
 1773 D1:BF13 4F -  -  -      ld  c,a
 1774 D1:BF14 0A -  -  -      ld  a,(bc)
 1775 D1:BF15 DD A6 00 -      and a,(ix+REGA)
 1776 D1:BF18 DD 77 00 -      ld  (ix+REGA),A
 1777 D1:BF1B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1778 D1:BF2E C3 93 B2 D1     jp i6502NextLoad
 1779 D1:BF32 -  -  -  -  
 1780 D1:BF32 -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1781 D1:BF32 -  -  -  -  inst6502_and_zpx:
 1782 D1:BF32 ED 33 04 -      ADDCYC(4)
 1783 D1:BF35 7E -  -  -      ld  a,(hl)
 1784 D1:BF36 01 00 38 D0     ld  bc,ZEROPAGE
 1785 D1:BF3A 81 -  -  -      add a,c
 1786 D1:BF3B DD 86 01 -      add a,(ix+REGX)
 1787 D1:BF3E 4F -  -  -      ld  c,a
 1788 D1:BF3F 0A -  -  -      ld  a,(bc)
 1789 D1:BF40 DD A6 00 -      and a,(ix+REGA)
 1790 D1:BF43 DD 77 00 -      ld  (ix+REGA),A
 1791 D1:BF46 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1792 D1:BF59 C3 93 B2 D1     jp i6502NextLoad
 1793 D1:BF5D -  -  -  -  
 1794 D1:BF5D -  -  -  -  ;absolute	AND oper	2D	3	4  
 1795 D1:BF5D -  -  -  -  inst6502_and_abs:
 1796 D1:BF5D ED 33 04 -      ADDCYC(4)
 1797 D1:BF60 CD B0 B4 D1     call subroutine6502_abs_split_start
 1798 D1:BF64 E5 -  -  -      push hl
 1799 D1:BF65 50 -  -  -          ld  d,b
 1800 D1:BF66 79 -  -  -          ld  a,c
 1801 D1:BF67 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1802 D1:BF69 ED 4C -  -          mlt bc
 1803 D1:BF6B 21 00 40 D0         ld  hl,PAGETABLE
 1804 D1:BF6F 09 -  -  -          add hl,bc
 1805 D1:BF70 ED 27 -  -          ld  hl,(hl)
 1806 D1:BF72 06 00 -  -          ld  b,0
 1807 D1:BF74 4F -  -  -          ld  c,a
 1808 D1:BF75 09 -  -  -          add hl,bc   ;full address
 1809 D1:BF76 7E -  -  -          READ_ACCESS
 1810 D1:BF77 E1 -  -  -      pop hl
 1811 D1:BF78 DD A6 00 -      and a,(ix+REGA)
 1812 D1:BF7B DD 77 00 -      ld  (ix+REGA),A
 1813 D1:BF7E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1814 D1:BF91 C3 93 B2 D1     jp i6502NextLoad
 1815 D1:BF95 -  -  -  -  
 1816 D1:BF95 -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1817 D1:BF95 -  -  -  -  inst6502_and_absx:
 1818 D1:BF95 ED 33 04 -      ADDCYC(4)
 1819 D1:BF98 CD B0 B4 D1     call subroutine6502_abs_split_start
 1820 D1:BF9C E5 -  -  -      push hl
 1821 D1:BF9D 50 -  -  -          ld  d,b
 1822 D1:BF9E 79 -  -  -          ld  a,c
 1823 D1:BF9F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1824 D1:BFA1 ED 4C -  -          mlt bc
 1825 D1:BFA3 21 00 40 D0         ld  hl,PAGETABLE
 1826 D1:BFA7 09 -  -  -          add hl,bc
 1827 D1:BFA8 ED 27 -  -          ld  hl,(hl)
 1828 D1:BFAA 06 00 -  -          ld  b,0
 1829 D1:BFAC DD 86 01 -          add a,(ix+REGX)
 1830 D1:BFAF 4F -  -  -          ld  c,a
 1831 D1:BFB0 30 04 -  -          jr  nc,+_
 1832 D1:BFB2 04 -  -  -          inc b
 1833 D1:BFB3 14 -  -  -          inc d
 1834 D1:BFB4 FD 23 -  -          ADDCYC(1)
 1835 D1:BFB6 09 -  -  -  _:      add hl,bc   ;full address
 1836 D1:BFB7 7E -  -  -          READ_ACCESS
 1837 D1:BFB8 E1 -  -  -      pop hl
 1838 D1:BFB9 DD A6 00 -      and a,(ix+REGA)
 1839 D1:BFBC DD 77 00 -      ld  (ix+REGA),A
 1840 D1:BFBF DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1841 D1:BFD2 C3 93 B2 D1     jp i6502NextLoad
 1842 D1:BFD6 -  -  -  -  
 1843 D1:BFD6 -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1844 D1:BFD6 -  -  -  -  inst6502_and_absy:
 1845 D1:BFD6 ED 33 04 -      ADDCYC(4)
 1846 D1:BFD9 CD B0 B4 D1     call subroutine6502_abs_split_start
 1847 D1:BFDD E5 -  -  -      push hl
 1848 D1:BFDE 50 -  -  -          ld  d,b
 1849 D1:BFDF 79 -  -  -          ld  a,c
 1850 D1:BFE0 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1851 D1:BFE2 ED 4C -  -          mlt bc
 1852 D1:BFE4 21 00 40 D0         ld  hl,PAGETABLE
 1853 D1:BFE8 09 -  -  -          add hl,bc
 1854 D1:BFE9 ED 27 -  -          ld  hl,(hl)
 1855 D1:BFEB 06 00 -  -          ld  b,0
 1856 D1:BFED DD 86 02 -          add a,(ix+REGY)
 1857 D1:BFF0 4F -  -  -          ld  c,a
 1858 D1:BFF1 30 04 -  -          jr  nc,+_
 1859 D1:BFF3 04 -  -  -          inc b
 1860 D1:BFF4 14 -  -  -          inc d
 1861 D1:BFF5 FD 23 -  -          ADDCYC(1)
 1862 D1:BFF7 09 -  -  -  _:      add hl,bc   ;full address
 1863 D1:BFF8 7E -  -  -          READ_ACCESS
 1864 D1:BFF9 E1 -  -  -      pop hl
 1865 D1:BFFA DD A6 00 -      and a,(ix+REGA)
 1866 D1:BFFD DD 77 00 -      ld  (ix+REGA),A
 1867 D1:C000 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1868 D1:C013 C3 93 B2 D1     jp i6502NextLoad
 1869 D1:C017 -  -  -  -  
 1870 D1:C017 -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1871 D1:C017 -  -  -  -  inst6502_and_indx:
 1872 D1:C017 ED 33 06 -      ADDCYC(6)
 1873 D1:C01A E5 -  -  -      push hl
 1874 D1:C01B 7E -  -  -          ld  a,(hl)
 1875 D1:C01C 21 00 38 D0         ld  hl,ZEROPAGE
 1876 D1:C020 85 -  -  -          add a,L
 1877 D1:C021 DD 86 01 -          add a,(ix+REGX)
 1878 D1:C024 6F -  -  -          ld  L,a
 1879 D1:C025 7E -  -  -          ld  a,(hl)
 1880 D1:C026 2C -  -  -          inc L
 1881 D1:C027 56 -  -  -          ld  d,(hl)
 1882 D1:C028 42 -  -  -          ld  b,d
 1883 D1:C029 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1884 D1:C02B ED 4C -  -          mlt bc
 1885 D1:C02D 21 00 40 D0         ld  hl,PAGETABLE
 1886 D1:C031 09 -  -  -          add hl,bc
 1887 D1:C032 ED 27 -  -          ld  hl,(hl)
 1888 D1:C034 06 00 -  -          ld  b,0
 1889 D1:C036 4F -  -  -          ld  c,a
 1890 D1:C037 09 -  -  -          add hl,bc
 1891 D1:C038 7E -  -  -          READ_ACCESS
 1892 D1:C039 E1 -  -  -      pop hl
 1893 D1:C03A DD A6 00 -      and a,(ix+REGA)
 1894 D1:C03D DD 77 00 -      ld  (ix+REGA),A
 1895 D1:C040 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1896 D1:C053 C3 93 B2 D1     jp i6502NextLoad
 1897 D1:C057 -  -  -  -  
 1898 D1:C057 -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1899 D1:C057 -  -  -  -  inst6502_and_indy:
 1900 D1:C057 ED 33 05 -      ADDCYC(5)
 1901 D1:C05A E5 -  -  -      push hl
 1902 D1:C05B 7E -  -  -          ld  a,(hl)
 1903 D1:C05C 21 00 38 D0         ld  hl,ZEROPAGE
 1904 D1:C060 85 -  -  -          add a,L
 1905 D1:C061 6F -  -  -          ld  L,a
 1906 D1:C062 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1907 D1:C063 2C -  -  -          inc L
 1908 D1:C064 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1909 D1:C067 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1910 D1:C068 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1911 D1:C06A 24 -  -  -          inc h
 1912 D1:C06B FD 23 -  -          ADDCYC(1)
 1913 D1:C06D 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1914 D1:C06E 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1915 D1:C070 ED 6C -  -          mlt hl          ;23.
 1916 D1:C072 01 00 40 D0         ld  bc,PAGETABLE
 1917 D1:C076 09 -  -  -          add hl,bc
 1918 D1:C077 ED 27 -  -          ld  hl,(hl)     ;address get.
 1919 D1:C079 01 00 00 00         ld  bc,0
 1920 D1:C07D 4F -  -  -          ld  c,a
 1921 D1:C07E 09 -  -  -          add hl,bc       ;Full address get.
 1922 D1:C07F 7E -  -  -          READ_ACCESS
 1923 D1:C080 E1 -  -  -      pop hl
 1924 D1:C081 DD A6 00 -      and a,(ix+REGA)
 1925 D1:C084 DD 77 00 -      ld  (ix+REGA),A
 1926 D1:C087 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1927 D1:C09A C3 93 B2 D1     jp i6502NextLoad
 1928 D1:C09E -  -  -  -  
 1929 D1:C09E -  -  -  -  ;-----------------------------------------------------------------------------
 1930 D1:C09E -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1931 D1:C09E -  -  -  -  ;A EOR M -> A
 1932 D1:C09E -  -  -  -  ;N	Z	C	I	D	V
 1933 D1:C09E -  -  -  -  ;+	+	-	-	-	-
 1934 D1:C09E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1935 D1:C09E -  -  -  -  
 1936 D1:C09E -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1937 D1:C09E -  -  -  -  inst6502_eor_imm:
 1938 D1:C09E ED 33 02 -      ADDCYC(2)
 1939 D1:C0A1 7E -  -  -      ld  a,(hl)
 1940 D1:C0A2 DD AE 00 -      xor a,(ix+REGA)
 1941 D1:C0A5 DD 77 00 -      ld  (ix+REGA),A
 1942 D1:C0A8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1943 D1:C0BB C3 93 B2 D1     jp i6502NextLoad
 1944 D1:C0BF -  -  -  -  
 1945 D1:C0BF -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1946 D1:C0BF -  -  -  -  inst6502_eor_zp:
 1947 D1:C0BF ED 33 03 -      ADDCYC(3)
 1948 D1:C0C2 7E -  -  -      ld  a,(hl)
 1949 D1:C0C3 01 00 38 D0     ld  bc,ZEROPAGE
 1950 D1:C0C7 81 -  -  -      add a,c
 1951 D1:C0C8 4F -  -  -      ld  c,a
 1952 D1:C0C9 0A -  -  -      ld  a,(bc)
 1953 D1:C0CA DD AE 00 -      xor a,(ix+REGA)
 1954 D1:C0CD DD 77 00 -      ld  (ix+REGA),A
 1955 D1:C0D0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1956 D1:C0E3 C3 93 B2 D1     jp i6502NextLoad
 1957 D1:C0E7 -  -  -  -  
 1958 D1:C0E7 -  -  -  -  
 1959 D1:C0E7 -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 1960 D1:C0E7 -  -  -  -  inst6502_eor_zpx:
 1961 D1:C0E7 ED 33 04 -      ADDCYC(4)
 1962 D1:C0EA 7E -  -  -      ld  a,(hl)
 1963 D1:C0EB 01 00 38 D0     ld  bc,ZEROPAGE
 1964 D1:C0EF 81 -  -  -      add a,c
 1965 D1:C0F0 DD 86 01 -      add a,(ix+REGX)
 1966 D1:C0F3 4F -  -  -      ld  c,a
 1967 D1:C0F4 0A -  -  -      ld  a,(bc)
 1968 D1:C0F5 DD AE 00 -      xor a,(ix+REGA)
 1969 D1:C0F8 DD 77 00 -      ld  (ix+REGA),A
 1970 D1:C0FB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1971 D1:C10E C3 93 B2 D1     jp i6502NextLoad
 1972 D1:C112 -  -  -  -  
 1973 D1:C112 -  -  -  -  ;absolute	EOR oper	4D	3	4  
 1974 D1:C112 -  -  -  -  inst6502_eor_abs:
 1975 D1:C112 ED 33 04 -      ADDCYC(4)
 1976 D1:C115 CD B0 B4 D1     call subroutine6502_abs_split_start
 1977 D1:C119 E5 -  -  -      push hl
 1978 D1:C11A 50 -  -  -          ld  d,b
 1979 D1:C11B 79 -  -  -          ld  a,c
 1980 D1:C11C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1981 D1:C11E ED 4C -  -          mlt bc
 1982 D1:C120 21 00 40 D0         ld  hl,PAGETABLE
 1983 D1:C124 09 -  -  -          add hl,bc
 1984 D1:C125 ED 27 -  -          ld  hl,(hl)
 1985 D1:C127 06 00 -  -          ld  b,0
 1986 D1:C129 4F -  -  -          ld  c,a
 1987 D1:C12A 09 -  -  -          add hl,bc   ;full address
 1988 D1:C12B 7E -  -  -          READ_ACCESS
 1989 D1:C12C E1 -  -  -      pop hl
 1990 D1:C12D DD AE 00 -      xor a,(ix+REGA)
 1991 D1:C130 DD 77 00 -      ld  (ix+REGA),A
 1992 D1:C133 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1993 D1:C146 C3 93 B2 D1     jp i6502NextLoad
 1994 D1:C14A -  -  -  -  
 1995 D1:C14A -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 1996 D1:C14A -  -  -  -  inst6502_eor_absx:
 1997 D1:C14A ED 33 04 -      ADDCYC(4)
 1998 D1:C14D CD B0 B4 D1     call subroutine6502_abs_split_start
 1999 D1:C151 E5 -  -  -      push hl
 2000 D1:C152 50 -  -  -          ld  d,b
 2001 D1:C153 79 -  -  -          ld  a,c
 2002 D1:C154 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2003 D1:C156 ED 4C -  -          mlt bc
 2004 D1:C158 21 00 40 D0         ld  hl,PAGETABLE
 2005 D1:C15C 09 -  -  -          add hl,bc
 2006 D1:C15D ED 27 -  -          ld  hl,(hl)
 2007 D1:C15F 06 00 -  -          ld  b,0
 2008 D1:C161 DD 86 01 -          add a,(ix+REGX)
 2009 D1:C164 4F -  -  -          ld  c,a
 2010 D1:C165 30 04 -  -          jr  nc,+_
 2011 D1:C167 04 -  -  -          inc b
 2012 D1:C168 14 -  -  -          inc d
 2013 D1:C169 FD 23 -  -          ADDCYC(1)
 2014 D1:C16B 09 -  -  -  _:      add hl,bc   ;full address
 2015 D1:C16C 7E -  -  -          READ_ACCESS
 2016 D1:C16D E1 -  -  -      pop hl
 2017 D1:C16E DD AE 00 -      xor a,(ix+REGA)
 2018 D1:C171 DD 77 00 -      ld  (ix+REGA),A
 2019 D1:C174 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2020 D1:C187 C3 93 B2 D1     jp i6502NextLoad
 2021 D1:C18B -  -  -  -  
 2022 D1:C18B -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2023 D1:C18B -  -  -  -  inst6502_eor_absy:
 2024 D1:C18B ED 33 04 -      ADDCYC(4)
 2025 D1:C18E CD B0 B4 D1     call subroutine6502_abs_split_start
 2026 D1:C192 E5 -  -  -      push hl
 2027 D1:C193 50 -  -  -          ld  d,b
 2028 D1:C194 79 -  -  -          ld  a,c
 2029 D1:C195 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2030 D1:C197 ED 4C -  -          mlt bc
 2031 D1:C199 21 00 40 D0         ld  hl,PAGETABLE
 2032 D1:C19D 09 -  -  -          add hl,bc
 2033 D1:C19E ED 27 -  -          ld  hl,(hl)
 2034 D1:C1A0 06 00 -  -          ld  b,0
 2035 D1:C1A2 DD 86 02 -          add a,(ix+REGY)
 2036 D1:C1A5 4F -  -  -          ld  c,a
 2037 D1:C1A6 30 04 -  -          jr  nc,+_
 2038 D1:C1A8 04 -  -  -          inc b
 2039 D1:C1A9 14 -  -  -          inc d
 2040 D1:C1AA FD 23 -  -          ADDCYC(1)
 2041 D1:C1AC 09 -  -  -  _:      add hl,bc   ;full address
 2042 D1:C1AD 7E -  -  -          READ_ACCESS
 2043 D1:C1AE E1 -  -  -      pop hl
 2044 D1:C1AF DD AE 00 -      xor a,(ix+REGA)
 2045 D1:C1B2 DD 77 00 -      ld  (ix+REGA),A
 2046 D1:C1B5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2047 D1:C1C8 C3 93 B2 D1     jp i6502NextLoad
 2048 D1:C1CC -  -  -  -  
 2049 D1:C1CC -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2050 D1:C1CC -  -  -  -  inst6502_eor_indx:
 2051 D1:C1CC ED 33 06 -      ADDCYC(6)
 2052 D1:C1CF E5 -  -  -      push hl
 2053 D1:C1D0 7E -  -  -          ld  a,(hl)
 2054 D1:C1D1 21 00 38 D0         ld  hl,ZEROPAGE
 2055 D1:C1D5 85 -  -  -          add a,L
 2056 D1:C1D6 DD 86 01 -          add a,(ix+REGX)
 2057 D1:C1D9 6F -  -  -          ld  L,a
 2058 D1:C1DA 7E -  -  -          ld  a,(hl)
 2059 D1:C1DB 2C -  -  -          inc L
 2060 D1:C1DC 56 -  -  -          ld  d,(hl)
 2061 D1:C1DD 42 -  -  -          ld  b,d
 2062 D1:C1DE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2063 D1:C1E0 ED 4C -  -          mlt bc
 2064 D1:C1E2 21 00 40 D0         ld  hl,PAGETABLE
 2065 D1:C1E6 09 -  -  -          add hl,bc
 2066 D1:C1E7 ED 27 -  -          ld  hl,(hl)
 2067 D1:C1E9 06 00 -  -          ld  b,0
 2068 D1:C1EB 4F -  -  -          ld  c,a
 2069 D1:C1EC 09 -  -  -          add hl,bc
 2070 D1:C1ED 7E -  -  -          READ_ACCESS
 2071 D1:C1EE E1 -  -  -      pop hl
 2072 D1:C1EF DD AE 00 -      xor a,(ix+REGA)
 2073 D1:C1F2 DD 77 00 -      ld  (ix+REGA),A
 2074 D1:C1F5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2075 D1:C208 C3 93 B2 D1     jp i6502NextLoad
 2076 D1:C20C -  -  -  -  
 2077 D1:C20C -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2078 D1:C20C -  -  -  -  inst6502_eor_indy:
 2079 D1:C20C ED 33 05 -      ADDCYC(5)
 2080 D1:C20F E5 -  -  -      push hl
 2081 D1:C210 7E -  -  -          ld  a,(hl)
 2082 D1:C211 21 00 38 D0         ld  hl,ZEROPAGE
 2083 D1:C215 85 -  -  -          add a,L
 2084 D1:C216 6F -  -  -          ld  L,a
 2085 D1:C217 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2086 D1:C218 2C -  -  -          inc L
 2087 D1:C219 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2088 D1:C21C 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2089 D1:C21D 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2090 D1:C21F 24 -  -  -          inc h
 2091 D1:C220 FD 23 -  -          ADDCYC(1)
 2092 D1:C222 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2093 D1:C223 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2094 D1:C225 ED 6C -  -          mlt hl          ;23.
 2095 D1:C227 01 00 40 D0         ld  bc,PAGETABLE
 2096 D1:C22B 09 -  -  -          add hl,bc
 2097 D1:C22C ED 27 -  -          ld  hl,(hl)     ;address get.
 2098 D1:C22E 01 00 00 00         ld  bc,0
 2099 D1:C232 4F -  -  -          ld  c,a
 2100 D1:C233 09 -  -  -          add hl,bc       ;Full address get.
 2101 D1:C234 7E -  -  -          READ_ACCESS
 2102 D1:C235 E1 -  -  -      pop hl
 2103 D1:C236 DD AE 00 -      xor a,(ix+REGA)
 2104 D1:C239 DD 77 00 -      ld  (ix+REGA),A
 2105 D1:C23C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2106 D1:C24F C3 93 B2 D1     jp i6502NextLoad
 2107 D1:C253 -  -  -  -  
 2108 D1:C253 -  -  -  -  ;-----------------------------------------------------------------------------
 2109 D1:C253 -  -  -  -  ;ORA - OR Memory with Accumulator
 2110 D1:C253 -  -  -  -  ;A OR M -> A
 2111 D1:C253 -  -  -  -  ;N	Z	C	I	D	V
 2112 D1:C253 -  -  -  -  ;+	+	-	-	-	-
 2113 D1:C253 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2114 D1:C253 -  -  -  -  
 2115 D1:C253 -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2116 D1:C253 -  -  -  -  inst6502_ora_imm:
 2117 D1:C253 ED 33 02 -      ADDCYC(2)
 2118 D1:C256 7E -  -  -      ld  a,(hl)
 2119 D1:C257 DD B6 00 -      or  a,(ix+REGA)
 2120 D1:C25A DD 77 00 -      ld  (ix+REGA),A
 2121 D1:C25D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2122 D1:C270 C3 93 B2 D1     jp i6502NextLoad
 2123 D1:C274 -  -  -  -  
 2124 D1:C274 -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2125 D1:C274 -  -  -  -  inst6502_ora_zp:
 2126 D1:C274 ED 33 03 -      ADDCYC(3)
 2127 D1:C277 7E -  -  -      ld  a,(hl)
 2128 D1:C278 01 00 38 D0     ld  bc,ZEROPAGE
 2129 D1:C27C 81 -  -  -      add a,c
 2130 D1:C27D 4F -  -  -      ld  c,a
 2131 D1:C27E 0A -  -  -      ld  a,(bc)
 2132 D1:C27F DD B6 00 -      or  a,(ix+REGA)
 2133 D1:C282 DD 77 00 -      ld  (ix+REGA),A
 2134 D1:C285 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2135 D1:C298 C3 93 B2 D1     jp i6502NextLoad
 2136 D1:C29C -  -  -  -  
 2137 D1:C29C -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2138 D1:C29C -  -  -  -  inst6502_ora_zpx:
 2139 D1:C29C ED 33 04 -      ADDCYC(4)
 2140 D1:C29F 7E -  -  -      ld  a,(hl)
 2141 D1:C2A0 01 00 38 D0     ld  bc,ZEROPAGE
 2142 D1:C2A4 81 -  -  -      add a,c
 2143 D1:C2A5 DD 86 01 -      add a,(ix+REGX)
 2144 D1:C2A8 4F -  -  -      ld  c,a
 2145 D1:C2A9 0A -  -  -      ld  a,(bc)
 2146 D1:C2AA DD B6 00 -      or  a,(ix+REGA)
 2147 D1:C2AD DD 77 00 -      ld  (ix+REGA),A
 2148 D1:C2B0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2149 D1:C2C3 C3 93 B2 D1     jp i6502NextLoad
 2150 D1:C2C7 -  -  -  -  
 2151 D1:C2C7 -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2152 D1:C2C7 -  -  -  -  inst6502_ora_abs:
 2153 D1:C2C7 ED 33 04 -      ADDCYC(4)
 2154 D1:C2CA CD B0 B4 D1     call subroutine6502_abs_split_start
 2155 D1:C2CE E5 -  -  -      push hl
 2156 D1:C2CF 50 -  -  -          ld  d,b
 2157 D1:C2D0 79 -  -  -          ld  a,c
 2158 D1:C2D1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2159 D1:C2D3 ED 4C -  -          mlt bc
 2160 D1:C2D5 21 00 40 D0         ld  hl,PAGETABLE
 2161 D1:C2D9 09 -  -  -          add hl,bc
 2162 D1:C2DA ED 27 -  -          ld  hl,(hl)
 2163 D1:C2DC 06 00 -  -          ld  b,0
 2164 D1:C2DE 4F -  -  -          ld  c,a
 2165 D1:C2DF 09 -  -  -          add hl,bc   ;full address
 2166 D1:C2E0 7E -  -  -          READ_ACCESS
 2167 D1:C2E1 E1 -  -  -      pop hl
 2168 D1:C2E2 DD B6 00 -      or  a,(ix+REGA)
 2169 D1:C2E5 DD 77 00 -      ld  (ix+REGA),A
 2170 D1:C2E8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2171 D1:C2FB C3 93 B2 D1     jp i6502NextLoad
 2172 D1:C2FF -  -  -  -  
 2173 D1:C2FF -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2174 D1:C2FF -  -  -  -  inst6502_ora_absx:
 2175 D1:C2FF ED 33 04 -      ADDCYC(4)
 2176 D1:C302 CD B0 B4 D1     call subroutine6502_abs_split_start
 2177 D1:C306 E5 -  -  -      push hl
 2178 D1:C307 50 -  -  -          ld  d,b
 2179 D1:C308 79 -  -  -          ld  a,c
 2180 D1:C309 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2181 D1:C30B ED 4C -  -          mlt bc
 2182 D1:C30D 21 00 40 D0         ld  hl,PAGETABLE
 2183 D1:C311 09 -  -  -          add hl,bc
 2184 D1:C312 ED 27 -  -          ld  hl,(hl)
 2185 D1:C314 06 00 -  -          ld  b,0
 2186 D1:C316 DD 86 01 -          add a,(ix+REGX)
 2187 D1:C319 4F -  -  -          ld  c,a
 2188 D1:C31A 30 04 -  -          jr  nc,+_
 2189 D1:C31C 04 -  -  -          inc b
 2190 D1:C31D 14 -  -  -          inc d
 2191 D1:C31E FD 23 -  -          ADDCYC(1)
 2192 D1:C320 09 -  -  -  _:      add hl,bc   ;full address
 2193 D1:C321 7E -  -  -          READ_ACCESS
 2194 D1:C322 E1 -  -  -      pop hl
 2195 D1:C323 DD B6 00 -      or  a,(ix+REGA)
 2196 D1:C326 DD 77 00 -      ld  (ix+REGA),A
 2197 D1:C329 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2198 D1:C33C C3 93 B2 D1     jp i6502NextLoad
 2199 D1:C340 -  -  -  -  
 2200 D1:C340 -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2201 D1:C340 -  -  -  -  inst6502_ora_absy:
 2202 D1:C340 ED 33 04 -      ADDCYC(4)
 2203 D1:C343 CD B0 B4 D1     call subroutine6502_abs_split_start
 2204 D1:C347 E5 -  -  -      push hl
 2205 D1:C348 50 -  -  -          ld  d,b
 2206 D1:C349 79 -  -  -          ld  a,c
 2207 D1:C34A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2208 D1:C34C ED 4C -  -          mlt bc
 2209 D1:C34E 21 00 40 D0         ld  hl,PAGETABLE
 2210 D1:C352 09 -  -  -          add hl,bc
 2211 D1:C353 ED 27 -  -          ld  hl,(hl)
 2212 D1:C355 06 00 -  -          ld  b,0
 2213 D1:C357 DD 86 02 -          add a,(ix+REGY)
 2214 D1:C35A 4F -  -  -          ld  c,a
 2215 D1:C35B 30 04 -  -          jr  nc,+_
 2216 D1:C35D 04 -  -  -          inc b
 2217 D1:C35E 14 -  -  -          inc d
 2218 D1:C35F FD 23 -  -          ADDCYC(1)
 2219 D1:C361 09 -  -  -  _:      add hl,bc   ;full address
 2220 D1:C362 7E -  -  -          READ_ACCESS
 2221 D1:C363 E1 -  -  -      pop hl
 2222 D1:C364 DD B6 00 -      or  a,(ix+REGA)
 2223 D1:C367 DD 77 00 -      ld  (ix+REGA),A
 2224 D1:C36A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2225 D1:C37D C3 93 B2 D1     jp i6502NextLoad
 2226 D1:C381 -  -  -  -  
 2227 D1:C381 -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2228 D1:C381 -  -  -  -  inst6502_ora_indx:
 2229 D1:C381 ED 33 06 -      ADDCYC(6)
 2230 D1:C384 E5 -  -  -      push hl
 2231 D1:C385 7E -  -  -          ld  a,(hl)
 2232 D1:C386 21 00 38 D0         ld  hl,ZEROPAGE
 2233 D1:C38A 85 -  -  -          add a,L
 2234 D1:C38B DD 86 01 -          add a,(ix+REGX)
 2235 D1:C38E 6F -  -  -          ld  L,a
 2236 D1:C38F 7E -  -  -          ld  a,(hl)
 2237 D1:C390 2C -  -  -          inc L
 2238 D1:C391 56 -  -  -          ld  d,(hl)
 2239 D1:C392 42 -  -  -          ld  b,d
 2240 D1:C393 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2241 D1:C395 ED 4C -  -          mlt bc
 2242 D1:C397 21 00 40 D0         ld  hl,PAGETABLE
 2243 D1:C39B 09 -  -  -          add hl,bc
 2244 D1:C39C ED 27 -  -          ld  hl,(hl)
 2245 D1:C39E 06 00 -  -          ld  b,0
 2246 D1:C3A0 4F -  -  -          ld  c,a
 2247 D1:C3A1 09 -  -  -          add hl,bc
 2248 D1:C3A2 7E -  -  -          READ_ACCESS
 2249 D1:C3A3 E1 -  -  -      pop hl
 2250 D1:C3A4 DD B6 00 -      or  a,(ix+REGA)
 2251 D1:C3A7 DD 77 00 -      ld  (ix+REGA),A
 2252 D1:C3AA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2253 D1:C3BD C3 93 B2 D1     jp i6502NextLoad
 2254 D1:C3C1 -  -  -  -  
 2255 D1:C3C1 -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2256 D1:C3C1 -  -  -  -  inst6502_ora_indy:
 2257 D1:C3C1 ED 33 05 -      ADDCYC(5)
 2258 D1:C3C4 E5 -  -  -      push hl
 2259 D1:C3C5 7E -  -  -          ld  a,(hl)
 2260 D1:C3C6 21 00 38 D0         ld  hl,ZEROPAGE
 2261 D1:C3CA 85 -  -  -          add a,L
 2262 D1:C3CB 6F -  -  -          ld  L,a
 2263 D1:C3CC 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2264 D1:C3CD 2C -  -  -          inc L
 2265 D1:C3CE DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2266 D1:C3D1 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2267 D1:C3D2 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2268 D1:C3D4 24 -  -  -          inc h
 2269 D1:C3D5 FD 23 -  -          ADDCYC(1)
 2270 D1:C3D7 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2271 D1:C3D8 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2272 D1:C3DA ED 6C -  -          mlt hl          ;23.
 2273 D1:C3DC 01 00 40 D0         ld  bc,PAGETABLE
 2274 D1:C3E0 09 -  -  -          add hl,bc
 2275 D1:C3E1 ED 27 -  -          ld  hl,(hl)     ;address get.
 2276 D1:C3E3 01 00 00 00         ld  bc,0
 2277 D1:C3E7 4F -  -  -          ld  c,a
 2278 D1:C3E8 09 -  -  -          add hl,bc       ;Full address get.
 2279 D1:C3E9 7E -  -  -          READ_ACCESS
 2280 D1:C3EA E1 -  -  -      pop hl
 2281 D1:C3EB DD B6 00 -      or  a,(ix+REGA)
 2282 D1:C3EE DD 77 00 -      ld  (ix+REGA),A
 2283 D1:C3F1 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2284 D1:C404 C3 93 B2 D1     jp i6502NextLoad
 2285 D1:C408 -  -  -  -  
 2286 D1:C408 -  -  -  -  ;-----------------------------------------------------------------------------
 2287 D1:C408 -  -  -  -  ;-----------------------------------------------------------------------------
 2288 D1:C408 -  -  -  -  ;-----------------------------------------------------------------------------
 2289 D1:C408 -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2290 D1:C408 -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2291 D1:C408 -  -  -  -  ;C <- [76543210] <- 0
 2292 D1:C408 -  -  -  -  ;N	Z	C	I	D	V
 2293 D1:C408 -  -  -  -  ;+	+	+	-	-	-
 2294 D1:C408 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2295 D1:C408 -  -  -  -  
 2296 D1:C408 -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2297 D1:C408 -  -  -  -  inst6502_asl:
 2298 D1:C408 ED 33 02 -      ADDCYC(2)
 2299 D1:C40B DD CB 00 26     sla (ix+REGA)
 2300 D1:C40F DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2301 D1:C428 C3 AC B2 D1     jp i6502FinishLoad
 2302 D1:C42C -  -  -  -  
 2303 D1:C42C -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2304 D1:C42C -  -  -  -  inst6502_asl_zp:
 2305 D1:C42C ED 33 05 -      ADDCYC(5)
 2306 D1:C42F 7E -  -  -      ld  a,(hl)
 2307 D1:C430 01 00 38 D0     ld  bc,ZEROPAGE
 2308 D1:C434 81 -  -  -      add a,c
 2309 D1:C435 4F -  -  -      ld  c,a
 2310 D1:C436 0A -  -  -      ld  a,(bc)
 2311 D1:C437 CB 27 -  -      sla a
 2312 D1:C439 02 -  -  -      ld  (bc),a
 2313 D1:C43A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2314 D1:C453 C3 93 B2 D1     jp i6502NextLoad
 2315 D1:C457 -  -  -  -  
 2316 D1:C457 -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2317 D1:C457 -  -  -  -  inst6502_asl_zpx:
 2318 D1:C457 ED 33 06 -      ADDCYC(6)
 2319 D1:C45A 7E -  -  -      ld  a,(hl)
 2320 D1:C45B 01 00 38 D0     ld  bc,ZEROPAGE
 2321 D1:C45F 81 -  -  -      add a,c
 2322 D1:C460 DD 86 01 -      add a,(ix+REGX)
 2323 D1:C463 4F -  -  -      ld  c,a
 2324 D1:C464 0A -  -  -      ld  a,(bc)
 2325 D1:C465 CB 27 -  -      sla a
 2326 D1:C467 02 -  -  -      ld  (bc),a
 2327 D1:C468 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2328 D1:C481 C3 93 B2 D1     jp i6502NextLoad
 2329 D1:C485 -  -  -  -  
 2330 D1:C485 -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2331 D1:C485 -  -  -  -  inst6502_asl_abs:
 2332 D1:C485 ED 33 06 -      ADDCYC(6)
 2333 D1:C488 CD B0 B4 D1     call subroutine6502_abs_split_start
 2334 D1:C48C E5 -  -  -      push hl
 2335 D1:C48D 50 -  -  -          ld  d,b
 2336 D1:C48E 79 -  -  -          ld  a,c
 2337 D1:C48F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2338 D1:C491 ED 4C -  -          mlt bc
 2339 D1:C493 21 00 40 D0         ld  hl,PAGETABLE
 2340 D1:C497 09 -  -  -          add hl,bc
 2341 D1:C498 ED 27 -  -          ld  hl,(hl)
 2342 D1:C49A 06 00 -  -          ld  b,0
 2343 D1:C49C 4F -  -  -          ld  c,a
 2344 D1:C49D 09 -  -  -          add hl,bc   ;full address
 2345 D1:C49E 7E -  -  -          READ_ACCESS
 2346 D1:C49F E1 -  -  -      pop hl
 2347 D1:C4A0 7E -  -  -      ld  a,(hl)
 2348 D1:C4A1 CB 27 -  -      sla a
 2349 D1:C4A3 47 -  -  -      ld  b,a
 2350 D1:C4A4 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2351 D1:C4BD 70 -  -  -      WRITE_ACCESS
 2352 D1:C4BE C3 93 B2 D1     jp i6502NextLoad
 2353 D1:C4C2 -  -  -  -  
 2354 D1:C4C2 -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2355 D1:C4C2 -  -  -  -  inst6502_asl_absx:
 2356 D1:C4C2 ED 33 07 -      ADDCYC(7)
 2357 D1:C4C5 CD B0 B4 D1     call subroutine6502_abs_split_start
 2358 D1:C4C9 E5 -  -  -      push hl
 2359 D1:C4CA 50 -  -  -          ld  d,b
 2360 D1:C4CB 79 -  -  -          ld  a,c
 2361 D1:C4CC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2362 D1:C4CE ED 4C -  -          mlt bc
 2363 D1:C4D0 21 00 40 D0         ld  hl,PAGETABLE
 2364 D1:C4D4 09 -  -  -          add hl,bc
 2365 D1:C4D5 ED 27 -  -          ld  hl,(hl)
 2366 D1:C4D7 06 00 -  -          ld  b,0
 2367 D1:C4D9 DD 86 01 -          add a,(ix+REGX)
 2368 D1:C4DC 4F -  -  -          ld  c,a
 2369 D1:C4DD 30 02 -  -          jr  nc,+_
 2370 D1:C4DF 04 -  -  -          inc b
 2371 D1:C4E0 14 -  -  -          inc d
 2372 D1:C4E1 09 -  -  -  _:      add hl,bc   ;full address
 2373 D1:C4E2 7E -  -  -          READ_ACCESS
 2374 D1:C4E3 E1 -  -  -      pop hl
 2375 D1:C4E4 7E -  -  -      ld  a,(hl)
 2376 D1:C4E5 CB 27 -  -      sla a
 2377 D1:C4E7 47 -  -  -      ld  b,a
 2378 D1:C4E8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2379 D1:C501 70 -  -  -      WRITE_ACCESS
 2380 D1:C502 C3 93 B2 D1     jp i6502NextLoad
 2381 D1:C506 -  -  -  -  
 2382 D1:C506 -  -  -  -  ;-----------------------------------------------------------------------------
 2383 D1:C506 -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2384 D1:C506 -  -  -  -  ;0 -> [76543210] -> C
 2385 D1:C506 -  -  -  -  ;N	Z	C	I	D	V
 2386 D1:C506 -  -  -  -  ;0	+	+	-	-	-
 2387 D1:C506 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2388 D1:C506 -  -  -  -  
 2389 D1:C506 -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2390 D1:C506 -  -  -  -  inst6502_lsr:
 2391 D1:C506 ED 33 02 -      ADDCYC(2)
 2392 D1:C509 DD CB 00 3E     srl (ix+REGA)
 2393 D1:C50D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2394 D1:C526 C3 AC B2 D1     jp i6502FinishLoad
 2395 D1:C52A -  -  -  -  
 2396 D1:C52A -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2397 D1:C52A -  -  -  -  inst6502_lsr_zp:
 2398 D1:C52A ED 33 05 -      ADDCYC(5)
 2399 D1:C52D 7E -  -  -      ld  a,(hl)
 2400 D1:C52E 01 00 38 D0     ld  bc,ZEROPAGE
 2401 D1:C532 81 -  -  -      add a,c
 2402 D1:C533 4F -  -  -      ld  c,a
 2403 D1:C534 0A -  -  -      ld  a,(bc)
 2404 D1:C535 CB 3F -  -      srl a
 2405 D1:C537 02 -  -  -      ld  (bc),a
 2406 D1:C538 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2407 D1:C551 C3 93 B2 D1     jp i6502NextLoad
 2408 D1:C555 -  -  -  -  
 2409 D1:C555 -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2410 D1:C555 -  -  -  -  inst6502_lsr_zpx:
 2411 D1:C555 ED 33 06 -      ADDCYC(6)
 2412 D1:C558 7E -  -  -      ld  a,(hl)
 2413 D1:C559 01 00 38 D0     ld  bc,ZEROPAGE
 2414 D1:C55D 81 -  -  -      add a,c
 2415 D1:C55E DD 86 01 -      add a,(ix+REGX)
 2416 D1:C561 4F -  -  -      ld  c,a
 2417 D1:C562 0A -  -  -      ld  a,(bc)
 2418 D1:C563 CB 3F -  -      srl a
 2419 D1:C565 02 -  -  -      ld  (bc),a
 2420 D1:C566 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2421 D1:C57F C3 93 B2 D1     jp i6502NextLoad
 2422 D1:C583 -  -  -  -      
 2423 D1:C583 -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2424 D1:C583 -  -  -  -  inst6502_lsr_abs:
 2425 D1:C583 ED 33 06 -      ADDCYC(6)
 2426 D1:C586 CD B0 B4 D1     call subroutine6502_abs_split_start
 2427 D1:C58A E5 -  -  -      push hl
 2428 D1:C58B 50 -  -  -          ld  d,b
 2429 D1:C58C 79 -  -  -          ld  a,c
 2430 D1:C58D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2431 D1:C58F ED 4C -  -          mlt bc
 2432 D1:C591 21 00 40 D0         ld  hl,PAGETABLE
 2433 D1:C595 09 -  -  -          add hl,bc
 2434 D1:C596 ED 27 -  -          ld  hl,(hl)
 2435 D1:C598 06 00 -  -          ld  b,0
 2436 D1:C59A 4F -  -  -          ld  c,a
 2437 D1:C59B 09 -  -  -          add hl,bc   ;full address
 2438 D1:C59C 7E -  -  -          READ_ACCESS
 2439 D1:C59D E1 -  -  -      pop hl
 2440 D1:C59E 7E -  -  -      ld  a,(hl)
 2441 D1:C59F CB 3F -  -      srl a
 2442 D1:C5A1 47 -  -  -      ld  b,a
 2443 D1:C5A2 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2444 D1:C5BB 70 -  -  -      WRITE_ACCESS
 2445 D1:C5BC C3 93 B2 D1     jp i6502NextLoad
 2446 D1:C5C0 -  -  -  -  
 2447 D1:C5C0 -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2448 D1:C5C0 -  -  -  -  inst6502_lsr_absx:
 2449 D1:C5C0 ED 33 07 -      ADDCYC(7)
 2450 D1:C5C3 CD B0 B4 D1     call subroutine6502_abs_split_start
 2451 D1:C5C7 E5 -  -  -      push hl
 2452 D1:C5C8 50 -  -  -          ld  d,b
 2453 D1:C5C9 79 -  -  -          ld  a,c
 2454 D1:C5CA 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2455 D1:C5CC ED 4C -  -          mlt bc
 2456 D1:C5CE 21 00 40 D0         ld  hl,PAGETABLE
 2457 D1:C5D2 09 -  -  -          add hl,bc
 2458 D1:C5D3 ED 27 -  -          ld  hl,(hl)
 2459 D1:C5D5 06 00 -  -          ld  b,0
 2460 D1:C5D7 DD 86 01 -          add a,(ix+REGX)
 2461 D1:C5DA 4F -  -  -          ld  c,a
 2462 D1:C5DB 30 02 -  -          jr  nc,+_
 2463 D1:C5DD 04 -  -  -          inc b
 2464 D1:C5DE 14 -  -  -          inc d
 2465 D1:C5DF 09 -  -  -  _:      add hl,bc   ;full address
 2466 D1:C5E0 7E -  -  -          READ_ACCESS
 2467 D1:C5E1 E1 -  -  -      pop hl
 2468 D1:C5E2 7E -  -  -      ld  a,(hl)
 2469 D1:C5E3 CB 3F -  -      srl a
 2470 D1:C5E5 47 -  -  -      ld  b,a
 2471 D1:C5E6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2472 D1:C5FF 70 -  -  -      WRITE_ACCESS
 2473 D1:C600 C3 93 B2 D1     jp i6502NextLoad
 2474 D1:C604 -  -  -  -  
 2475 D1:C604 -  -  -  -  ;-----------------------------------------------------------------------------
 2476 D1:C604 -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2477 D1:C604 -  -  -  -  ;C <- [76543210] <- C
 2478 D1:C604 -  -  -  -  ;N	Z	C	I	D	V
 2479 D1:C604 -  -  -  -  ;+	+	+	-	-	-
 2480 D1:C604 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2481 D1:C604 -  -  -  -  
 2482 D1:C604 -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2483 D1:C604 -  -  -  -  inst6502_rol:
 2484 D1:C604 ED 33 02 -      ADDCYC(2)
 2485 D1:C607 DD 7E 04 -      ld  a,(ix+REGSR)
 2486 D1:C60A 1F -  -  -      rra
 2487 D1:C60B DD CB 00 16     rl (ix+REGA)
 2488 D1:C60F DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2489 D1:C628 C3 AC B2 D1     jp i6502FinishLoad
 2490 D1:C62C -  -  -  -  
 2491 D1:C62C -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2492 D1:C62C -  -  -  -  inst6502_rol_zp:
 2493 D1:C62C ED 33 05 -      ADDCYC(5)
 2494 D1:C62F 7E -  -  -      ld  a,(hl)
 2495 D1:C630 01 00 38 D0     ld  bc,ZEROPAGE
 2496 D1:C634 81 -  -  -      add a,c
 2497 D1:C635 4F -  -  -      ld  c,a
 2498 D1:C636 DD 7E 04 -      ld  a,(ix+REGSR)
 2499 D1:C639 1F -  -  -      rra
 2500 D1:C63A 0A -  -  -      ld  a,(bc)
 2501 D1:C63B 17 -  -  -      rla
 2502 D1:C63C 02 -  -  -      ld  (bc),a
 2503 D1:C63D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2504 D1:C656 C3 93 B2 D1     jp i6502NextLoad
 2505 D1:C65A -  -  -  -  
 2506 D1:C65A -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2507 D1:C65A -  -  -  -  inst6502_rol_zpx:
 2508 D1:C65A ED 33 06 -      ADDCYC(6)
 2509 D1:C65D 7E -  -  -      ld  a,(hl)
 2510 D1:C65E 01 00 38 D0     ld  bc,ZEROPAGE
 2511 D1:C662 81 -  -  -      add a,c
 2512 D1:C663 DD 86 01 -      add a,(ix+REGX)
 2513 D1:C666 4F -  -  -      ld  c,a
 2514 D1:C667 DD 7E 04 -      ld  a,(ix+REGSR)
 2515 D1:C66A 1F -  -  -      rra
 2516 D1:C66B 0A -  -  -      ld  a,(bc)
 2517 D1:C66C 17 -  -  -      rla
 2518 D1:C66D 02 -  -  -      ld  (bc),a
 2519 D1:C66E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2520 D1:C687 C3 93 B2 D1     jp i6502NextLoad
 2521 D1:C68B -  -  -  -  
 2522 D1:C68B -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2523 D1:C68B -  -  -  -  inst6502_rol_abs:
 2524 D1:C68B ED 33 06 -      ADDCYC(6)
 2525 D1:C68E CD B0 B4 D1     call subroutine6502_abs_split_start
 2526 D1:C692 E5 -  -  -      push hl
 2527 D1:C693 50 -  -  -          ld  d,b
 2528 D1:C694 79 -  -  -          ld  a,c
 2529 D1:C695 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2530 D1:C697 ED 4C -  -          mlt bc
 2531 D1:C699 21 00 40 D0         ld  hl,PAGETABLE
 2532 D1:C69D 09 -  -  -          add hl,bc
 2533 D1:C69E ED 27 -  -          ld  hl,(hl)
 2534 D1:C6A0 06 00 -  -          ld  b,0
 2535 D1:C6A2 4F -  -  -          ld  c,a
 2536 D1:C6A3 09 -  -  -          add hl,bc   ;full address
 2537 D1:C6A4 7E -  -  -          READ_ACCESS
 2538 D1:C6A5 E1 -  -  -      pop hl
 2539 D1:C6A6 DD 7E 04 -      ld  a,(ix+REGSR)
 2540 D1:C6A9 1F -  -  -      rra
 2541 D1:C6AA 7E -  -  -      ld  a,(hl)
 2542 D1:C6AB 17 -  -  -      rla
 2543 D1:C6AC 47 -  -  -      ld  b,a
 2544 D1:C6AD DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2545 D1:C6C6 70 -  -  -      WRITE_ACCESS
 2546 D1:C6C7 C3 93 B2 D1     jp i6502NextLoad
 2547 D1:C6CB -  -  -  -  
 2548 D1:C6CB -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2549 D1:C6CB -  -  -  -  inst6502_rol_absx:
 2550 D1:C6CB ED 33 07 -      ADDCYC(7)
 2551 D1:C6CE CD B0 B4 D1     call subroutine6502_abs_split_start
 2552 D1:C6D2 E5 -  -  -      push hl
 2553 D1:C6D3 50 -  -  -          ld  d,b
 2554 D1:C6D4 79 -  -  -          ld  a,c
 2555 D1:C6D5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2556 D1:C6D7 ED 4C -  -          mlt bc
 2557 D1:C6D9 21 00 40 D0         ld  hl,PAGETABLE
 2558 D1:C6DD 09 -  -  -          add hl,bc
 2559 D1:C6DE ED 27 -  -          ld  hl,(hl)
 2560 D1:C6E0 06 00 -  -          ld  b,0
 2561 D1:C6E2 DD 86 01 -          add a,(ix+REGX)
 2562 D1:C6E5 4F -  -  -          ld  c,a
 2563 D1:C6E6 30 02 -  -          jr  nc,+_
 2564 D1:C6E8 04 -  -  -          inc b
 2565 D1:C6E9 14 -  -  -          inc d
 2566 D1:C6EA 09 -  -  -  _:      add hl,bc   ;full address
 2567 D1:C6EB 7E -  -  -          READ_ACCESS
 2568 D1:C6EC E1 -  -  -      pop hl
 2569 D1:C6ED DD 7E 04 -      ld  a,(ix+REGSR)
 2570 D1:C6F0 1F -  -  -      rra
 2571 D1:C6F1 7E -  -  -      ld  a,(hl)
 2572 D1:C6F2 17 -  -  -      rla
 2573 D1:C6F3 47 -  -  -      ld  b,a
 2574 D1:C6F4 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2575 D1:C70D 70 -  -  -      WRITE_ACCESS
 2576 D1:C70E C3 93 B2 D1     jp i6502NextLoad
 2577 D1:C712 -  -  -  -  
 2578 D1:C712 -  -  -  -  ;-----------------------------------------------------------------------------
 2579 D1:C712 -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2580 D1:C712 -  -  -  -  ;C -> [76543210] -> C
 2581 D1:C712 -  -  -  -  ;N	Z	C	I	D	V
 2582 D1:C712 -  -  -  -  ;+	+	+	-	-	-
 2583 D1:C712 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2584 D1:C712 -  -  -  -  
 2585 D1:C712 -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2586 D1:C712 -  -  -  -  inst6502_ror:
 2587 D1:C712 ED 33 02 -      ADDCYC(2)
 2588 D1:C715 DD 7E 04 -      ld  a,(ix+REGSR)
 2589 D1:C718 1F -  -  -      rra
 2590 D1:C719 DD CB 00 1E     rr  (ix+REGA)
 2591 D1:C71D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2592 D1:C736 C3 AC B2 D1     jp i6502FinishLoad
 2593 D1:C73A -  -  -  -  
 2594 D1:C73A -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2595 D1:C73A -  -  -  -  inst6502_ror_zp:
 2596 D1:C73A ED 33 05 -      ADDCYC(5)
 2597 D1:C73D 7E -  -  -      ld  a,(hl)
 2598 D1:C73E 01 00 38 D0     ld  bc,ZEROPAGE
 2599 D1:C742 81 -  -  -      add a,c
 2600 D1:C743 4F -  -  -      ld  c,a
 2601 D1:C744 DD 7E 04 -      ld  a,(ix+REGSR)
 2602 D1:C747 1F -  -  -      rra
 2603 D1:C748 0A -  -  -      ld  a,(bc)
 2604 D1:C749 1F -  -  -      rra
 2605 D1:C74A 02 -  -  -      ld  (bc),a
 2606 D1:C74B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2607 D1:C764 C3 93 B2 D1     jp i6502NextLoad
 2608 D1:C768 -  -  -  -  
 2609 D1:C768 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2610 D1:C768 -  -  -  -  inst6502_ror_zpx:
 2611 D1:C768 ED 33 06 -      ADDCYC(6)
 2612 D1:C76B 7E -  -  -      ld  a,(hl)
 2613 D1:C76C 01 00 38 D0     ld  bc,ZEROPAGE
 2614 D1:C770 81 -  -  -      add a,c
 2615 D1:C771 DD 86 01 -      add a,(ix+REGX)
 2616 D1:C774 4F -  -  -      ld  c,a
 2617 D1:C775 DD 7E 04 -      ld  a,(ix+REGSR)
 2618 D1:C778 1F -  -  -      rra
 2619 D1:C779 0A -  -  -      ld  a,(bc)
 2620 D1:C77A 1F -  -  -      rra
 2621 D1:C77B 02 -  -  -      ld  (bc),a
 2622 D1:C77C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2623 D1:C795 C3 93 B2 D1     jp i6502NextLoad
 2624 D1:C799 -  -  -  -  
 2625 D1:C799 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2626 D1:C799 -  -  -  -  inst6502_ror_abs:
 2627 D1:C799 ED 33 06 -      ADDCYC(6)
 2628 D1:C79C CD B0 B4 D1     call subroutine6502_abs_split_start
 2629 D1:C7A0 E5 -  -  -      push hl
 2630 D1:C7A1 50 -  -  -          ld  d,b
 2631 D1:C7A2 79 -  -  -          ld  a,c
 2632 D1:C7A3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2633 D1:C7A5 ED 4C -  -          mlt bc
 2634 D1:C7A7 21 00 40 D0         ld  hl,PAGETABLE
 2635 D1:C7AB 09 -  -  -          add hl,bc
 2636 D1:C7AC ED 27 -  -          ld  hl,(hl)
 2637 D1:C7AE 06 00 -  -          ld  b,0
 2638 D1:C7B0 4F -  -  -          ld  c,a
 2639 D1:C7B1 09 -  -  -          add hl,bc   ;full address
 2640 D1:C7B2 7E -  -  -          READ_ACCESS
 2641 D1:C7B3 E1 -  -  -      pop hl
 2642 D1:C7B4 DD 7E 04 -      ld  a,(ix+REGSR)
 2643 D1:C7B7 1F -  -  -      rra
 2644 D1:C7B8 7E -  -  -      ld  a,(hl)
 2645 D1:C7B9 1F -  -  -      rra
 2646 D1:C7BA 47 -  -  -      ld  b,a
 2647 D1:C7BB DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2648 D1:C7D4 70 -  -  -      WRITE_ACCESS
 2649 D1:C7D5 C3 93 B2 D1     jp i6502NextLoad
 2650 D1:C7D9 -  -  -  -  
 2651 D1:C7D9 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2652 D1:C7D9 -  -  -  -  inst6502_ror_absx:
 2653 D1:C7D9 ED 33 07 -      ADDCYC(7)
 2654 D1:C7DC CD B0 B4 D1     call subroutine6502_abs_split_start
 2655 D1:C7E0 E5 -  -  -      push hl
 2656 D1:C7E1 50 -  -  -          ld  d,b
 2657 D1:C7E2 79 -  -  -          ld  a,c
 2658 D1:C7E3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2659 D1:C7E5 ED 4C -  -          mlt bc
 2660 D1:C7E7 21 00 40 D0         ld  hl,PAGETABLE
 2661 D1:C7EB 09 -  -  -          add hl,bc
 2662 D1:C7EC ED 27 -  -          ld  hl,(hl)
 2663 D1:C7EE 06 00 -  -          ld  b,0
 2664 D1:C7F0 DD 86 01 -          add a,(ix+REGX)
 2665 D1:C7F3 4F -  -  -          ld  c,a
 2666 D1:C7F4 30 02 -  -          jr  nc,+_
 2667 D1:C7F6 04 -  -  -          inc b
 2668 D1:C7F7 14 -  -  -          inc d
 2669 D1:C7F8 09 -  -  -  _:      add hl,bc   ;full address
 2670 D1:C7F9 7E -  -  -          READ_ACCESS
 2671 D1:C7FA E1 -  -  -      pop hl
 2672 D1:C7FB DD 7E 04 -      ld  a,(ix+REGSR)
 2673 D1:C7FE 1F -  -  -      rra
 2674 D1:C7FF 7E -  -  -      ld  a,(hl)
 2675 D1:C800 1F -  -  -      rra
 2676 D1:C801 47 -  -  -      ld  b,a
 2677 D1:C802 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2678 D1:C81B 70 -  -  -      WRITE_ACCESS
 2679 D1:C81C C3 93 B2 D1     jp i6502NextLoad
 2680 D1:C820 -  -  -  -  
 2681 D1:C820 -  -  -  -  ;-----------------------------------------------------------------------------
 2682 D1:C820 -  -  -  -  ;-----------------------------------------------------------------------------
 2683 D1:C820 -  -  -  -  ;-----------------------------------------------------------------------------
 2684 D1:C820 -  -  -  -  ;Instructions by type: Flag Instructions
 2685 D1:C820 -  -  -  -  
 2686 D1:C820 -  -  -  -  ;CLC - Clear Carry Flag
 2687 D1:C820 -  -  -  -  ;0 -> C
 2688 D1:C820 -  -  -  -  ;N	Z	C	I	D	V
 2689 D1:C820 -  -  -  -  ;-	-	0	-	-	-
 2690 D1:C820 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2691 D1:C820 -  -  -  -  ;implied	CLC	18	1	2  
 2692 D1:C820 -  -  -  -  inst6502_clc:
 2693 D1:C820 DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2694 D1:C824 C3 AC B2 D1     jp  i6502FinishLoad
 2695 D1:C828 -  -  -  -  
 2696 D1:C828 -  -  -  -  ;CLD - Clear Decimal Mode
 2697 D1:C828 -  -  -  -  ;0 -> D
 2698 D1:C828 -  -  -  -  ;N	Z	C	I	D	V
 2699 D1:C828 -  -  -  -  ;-	-	-	-	0	-
 2700 D1:C828 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2701 D1:C828 -  -  -  -  ;implied	CLD	D8	1	2  
 2702 D1:C828 -  -  -  -  inst6502_cld:
 2703 D1:C828 DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2704 D1:C82C C3 AC B2 D1     jp  i6502FinishLoad
 2705 D1:C830 -  -  -  -  
 2706 D1:C830 -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2707 D1:C830 -  -  -  -  ;0 -> I
 2708 D1:C830 -  -  -  -  ;N	Z	C	I	D	V
 2709 D1:C830 -  -  -  -  ;-	-	-	0	-	-
 2710 D1:C830 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2711 D1:C830 -  -  -  -  ;implied	CLI	58	1	2  
 2712 D1:C830 -  -  -  -  inst6502_cli:
 2713 D1:C830 DD CB 04 96     res SF_INT,(ix+REGSR)
 2714 D1:C834 C3 AC B2 D1     jp  i6502FinishLoad
 2715 D1:C838 -  -  -  -  
 2716 D1:C838 -  -  -  -  ;CLV - Clear Overflow Flag
 2717 D1:C838 -  -  -  -  ;0 -> V
 2718 D1:C838 -  -  -  -  ;N	Z	C	I	D	V
 2719 D1:C838 -  -  -  -  ;-	-	-	-	-	0
 2720 D1:C838 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2721 D1:C838 -  -  -  -  ;implied	CLV	B8	1	2  
 2722 D1:C838 -  -  -  -  inst6502_clv:
 2723 D1:C838 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2724 D1:C83C C3 AC B2 D1     jp  i6502FinishLoad
 2725 D1:C840 -  -  -  -  
 2726 D1:C840 -  -  -  -  ;SEC - Set Carry Flag
 2727 D1:C840 -  -  -  -  ;1 -> C
 2728 D1:C840 -  -  -  -  ;N	Z	C	I	D	V
 2729 D1:C840 -  -  -  -  ;-	-	1	-	-	-
 2730 D1:C840 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2731 D1:C840 -  -  -  -  ;implied	SEC	38	1	2  
 2732 D1:C840 -  -  -  -  inst6502_sec:
 2733 D1:C840 DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2734 D1:C844 C3 AC B2 D1     jp  i6502FinishLoad
 2735 D1:C848 -  -  -  -  
 2736 D1:C848 -  -  -  -  ;SED - Set Decimal Flag
 2737 D1:C848 -  -  -  -  ;1 -> D
 2738 D1:C848 -  -  -  -  ;N	Z	C	I	D	V
 2739 D1:C848 -  -  -  -  ;-	-	-	-	1	-
 2740 D1:C848 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2741 D1:C848 -  -  -  -  ;implied	SED	F8	1	2  
 2742 D1:C848 -  -  -  -  inst6502_sed:
 2743 D1:C848 DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2744 D1:C84C C3 AC B2 D1     jp  i6502FinishLoad
 2745 D1:C850 -  -  -  -  
 2746 D1:C850 -  -  -  -  ;SEI - Set Interrupt Disable Status
 2747 D1:C850 -  -  -  -  ;1 -> I
 2748 D1:C850 -  -  -  -  ;N	Z	C	I	D	V
 2749 D1:C850 -  -  -  -  ;-	-	-	1	-	-
 2750 D1:C850 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2751 D1:C850 -  -  -  -  ;implied	SEI	78	1	2  
 2752 D1:C850 -  -  -  -  inst6502_sei:
 2753 D1:C850 DD CB 04 D6     set SF_INT,(ix+REGSR)
 2754 D1:C854 C3 AC B2 D1     jp  i6502FinishLoad
 2755 D1:C858 -  -  -  -  
 2756 D1:C858 -  -  -  -  ;-----------------------------------------------------------------------------
 2757 D1:C858 -  -  -  -  ;-----------------------------------------------------------------------------
 2758 D1:C858 -  -  -  -  ;-----------------------------------------------------------------------------
 2759 D1:C858 -  -  -  -  ;Instructions by type: Comparisons
 2760 D1:C858 -  -  -  -  
 2761 D1:C858 -  -  -  -  ;CMP - Compare Memory with Accumulator
 2762 D1:C858 -  -  -  -  ;A - M
 2763 D1:C858 -  -  -  -  ;N	Z	C	I	D	V
 2764 D1:C858 -  -  -  -  ;+	+	+	-	-	-
 2765 D1:C858 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2766 D1:C858 -  -  -  -  
 2767 D1:C858 -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2768 D1:C858 -  -  -  -  inst6502_cmp_imm:
 2769 D1:C858 ED 33 02 -      ADDCYC(2)
 2770 D1:C85B 46 -  -  -      ld  b,(hl)
 2771 D1:C85C C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2772 D1:C860 -  -  -  -  
 2773 D1:C860 -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2774 D1:C860 -  -  -  -  inst6502_cmp_zp:
 2775 D1:C860 ED 33 03 -      ADDCYC(3)
 2776 D1:C863 7E -  -  -      ld  a,(hl)
 2777 D1:C864 01 00 38 D0     ld  bc,ZEROPAGE
 2778 D1:C868 81 -  -  -      add a,c
 2779 D1:C869 4F -  -  -      ld  c,a
 2780 D1:C86A 0A -  -  -      ld  a,(bc)
 2781 D1:C86B 47 -  -  -      ld  b,a
 2782 D1:C86C C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2783 D1:C870 -  -  -  -  
 2784 D1:C870 -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2785 D1:C870 -  -  -  -  inst6502_cmp_zpx:
 2786 D1:C870 ED 33 04 -      ADDCYC(4)
 2787 D1:C873 7E -  -  -      ld  a,(hl)
 2788 D1:C874 01 00 38 D0     ld  bc,ZEROPAGE
 2789 D1:C878 81 -  -  -      add a,c
 2790 D1:C879 DD 86 01 -      add a,(ix+REGX)
 2791 D1:C87C 4F -  -  -      ld  c,a
 2792 D1:C87D 0A -  -  -      ld  a,(bc)
 2793 D1:C87E 47 -  -  -      ld  b,a
 2794 D1:C87F C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2795 D1:C883 -  -  -  -  
 2796 D1:C883 -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2797 D1:C883 -  -  -  -  inst6502_cmp_abs:
 2798 D1:C883 ED 33 04 -      ADDCYC(4)
 2799 D1:C886 CD B0 B4 D1     call subroutine6502_abs_split_start
 2800 D1:C88A E5 -  -  -      push hl
 2801 D1:C88B 50 -  -  -          ld  d,b
 2802 D1:C88C 79 -  -  -          ld  a,c
 2803 D1:C88D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2804 D1:C88F ED 4C -  -          mlt bc
 2805 D1:C891 21 00 40 D0         ld  hl,PAGETABLE
 2806 D1:C895 09 -  -  -          add hl,bc
 2807 D1:C896 ED 27 -  -          ld  hl,(hl)
 2808 D1:C898 06 00 -  -          ld  b,0
 2809 D1:C89A 4F -  -  -          ld  c,a
 2810 D1:C89B 09 -  -  -          add hl,bc   ;full address
 2811 D1:C89C 7E -  -  -          READ_ACCESS
 2812 D1:C89D E1 -  -  -      pop hl
 2813 D1:C89E 47 -  -  -      ld  b,a
 2814 D1:C89F C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2815 D1:C8A3 -  -  -  -  
 2816 D1:C8A3 -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2817 D1:C8A3 -  -  -  -  inst6502_cmp_absx:
 2818 D1:C8A3 ED 33 04 -      ADDCYC(4)
 2819 D1:C8A6 CD B0 B4 D1     call subroutine6502_abs_split_start
 2820 D1:C8AA E5 -  -  -      push hl
 2821 D1:C8AB 50 -  -  -          ld  d,b
 2822 D1:C8AC 79 -  -  -          ld  a,c
 2823 D1:C8AD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2824 D1:C8AF ED 4C -  -          mlt bc
 2825 D1:C8B1 21 00 40 D0         ld  hl,PAGETABLE
 2826 D1:C8B5 09 -  -  -          add hl,bc
 2827 D1:C8B6 ED 27 -  -          ld  hl,(hl)
 2828 D1:C8B8 06 00 -  -          ld  b,0
 2829 D1:C8BA DD 86 01 -          add a,(ix+REGX)
 2830 D1:C8BD 4F -  -  -          ld  c,a
 2831 D1:C8BE 30 04 -  -          jr  nc,+_
 2832 D1:C8C0 04 -  -  -          inc b
 2833 D1:C8C1 14 -  -  -          inc d
 2834 D1:C8C2 FD 23 -  -          ADDCYC(1)
 2835 D1:C8C4 09 -  -  -  _:      add hl,bc   ;full address
 2836 D1:C8C5 7E -  -  -          READ_ACCESS
 2837 D1:C8C6 E1 -  -  -      pop hl
 2838 D1:C8C7 47 -  -  -      ld  b,a
 2839 D1:C8C8 C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2840 D1:C8CC -  -  -  -  
 2841 D1:C8CC -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2842 D1:C8CC -  -  -  -  inst6502_cmp_absy:
 2843 D1:C8CC ED 33 04 -      ADDCYC(4)
 2844 D1:C8CF CD B0 B4 D1     call subroutine6502_abs_split_start
 2845 D1:C8D3 E5 -  -  -      push hl
 2846 D1:C8D4 50 -  -  -          ld  d,b
 2847 D1:C8D5 79 -  -  -          ld  a,c
 2848 D1:C8D6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2849 D1:C8D8 ED 4C -  -          mlt bc
 2850 D1:C8DA 21 00 40 D0         ld  hl,PAGETABLE
 2851 D1:C8DE 09 -  -  -          add hl,bc
 2852 D1:C8DF ED 27 -  -          ld  hl,(hl)
 2853 D1:C8E1 06 00 -  -          ld  b,0
 2854 D1:C8E3 DD 86 02 -          add a,(ix+REGY)
 2855 D1:C8E6 4F -  -  -          ld  c,a
 2856 D1:C8E7 30 04 -  -          jr  nc,+_
 2857 D1:C8E9 04 -  -  -          inc b
 2858 D1:C8EA 14 -  -  -          inc d
 2859 D1:C8EB FD 23 -  -          ADDCYC(1)
 2860 D1:C8ED 09 -  -  -  _:      add hl,bc   ;full address
 2861 D1:C8EE 7E -  -  -          READ_ACCESS
 2862 D1:C8EF E1 -  -  -      pop hl
 2863 D1:C8F0 47 -  -  -      ld  b,a
 2864 D1:C8F1 C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2865 D1:C8F5 -  -  -  -  
 2866 D1:C8F5 -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2867 D1:C8F5 -  -  -  -  inst6502_cmp_indx:
 2868 D1:C8F5 ED 33 06 -      ADDCYC(6)
 2869 D1:C8F8 E5 -  -  -      push hl
 2870 D1:C8F9 7E -  -  -          ld  a,(hl)
 2871 D1:C8FA 21 00 38 D0         ld  hl,ZEROPAGE
 2872 D1:C8FE 85 -  -  -          add a,L
 2873 D1:C8FF DD 86 01 -          add a,(ix+REGX)
 2874 D1:C902 6F -  -  -          ld  L,a
 2875 D1:C903 7E -  -  -          ld  a,(hl)
 2876 D1:C904 2C -  -  -          inc L
 2877 D1:C905 56 -  -  -          ld  d,(hl)
 2878 D1:C906 42 -  -  -          ld  b,d
 2879 D1:C907 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2880 D1:C909 ED 4C -  -          mlt bc
 2881 D1:C90B 21 00 40 D0         ld  hl,PAGETABLE
 2882 D1:C90F 09 -  -  -          add hl,bc
 2883 D1:C910 ED 27 -  -          ld  hl,(hl)
 2884 D1:C912 06 00 -  -          ld  b,0
 2885 D1:C914 4F -  -  -          ld  c,a
 2886 D1:C915 09 -  -  -          add hl,bc
 2887 D1:C916 7E -  -  -          READ_ACCESS
 2888 D1:C917 E1 -  -  -      pop hl
 2889 D1:C918 47 -  -  -      ld  b,a
 2890 D1:C919 C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2891 D1:C91D -  -  -  -  
 2892 D1:C91D -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2893 D1:C91D -  -  -  -  inst6502_cmp_indy:
 2894 D1:C91D ED 33 05 -      ADDCYC(5)
 2895 D1:C920 E5 -  -  -      push hl
 2896 D1:C921 7E -  -  -          ld  a,(hl)
 2897 D1:C922 21 00 38 D0         ld  hl,ZEROPAGE
 2898 D1:C926 85 -  -  -          add a,L
 2899 D1:C927 6F -  -  -          ld  L,a
 2900 D1:C928 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2901 D1:C929 2C -  -  -          inc L
 2902 D1:C92A DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2903 D1:C92D 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2904 D1:C92E 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2905 D1:C930 24 -  -  -          inc h
 2906 D1:C931 FD 23 -  -          ADDCYC(1)
 2907 D1:C933 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2908 D1:C934 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2909 D1:C936 ED 6C -  -          mlt hl          ;23.
 2910 D1:C938 01 00 40 D0         ld  bc,PAGETABLE
 2911 D1:C93C 09 -  -  -          add hl,bc
 2912 D1:C93D ED 27 -  -          ld  hl,(hl)     ;address get.
 2913 D1:C93F 01 00 00 00         ld  bc,0
 2914 D1:C943 4F -  -  -          ld  c,a
 2915 D1:C944 09 -  -  -          add hl,bc       ;Full address get.
 2916 D1:C945 7E -  -  -          READ_ACCESS
 2917 D1:C946 E1 -  -  -      pop hl
 2918 D1:C947 47 -  -  -      ld  b,a
 2919 D1:C948 C3 2E B5 D1     jp  subroutine6502_cmp_combined_end
 2920 D1:C94C -  -  -  -  
 2921 D1:C94C -  -  -  -  ;-----------------------------------------------------------------------------
 2922 D1:C94C -  -  -  -  ;CPX - Compare Memory and Index X
 2923 D1:C94C -  -  -  -  ;X - M
 2924 D1:C94C -  -  -  -  ;N	Z	C	I	D	V
 2925 D1:C94C -  -  -  -  ;+	+	+	-	-	-
 2926 D1:C94C -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2927 D1:C94C -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2928 D1:C94C -  -  -  -  inst6502_cpx_imm:
 2929 D1:C94C ED 33 02 -      ADDCYC(2)
 2930 D1:C94F DD 7E 01 -      ld  a,(ix+REGX)
 2931 D1:C952 BE -  -  -      cp  (hl)
 2932 D1:C953 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2933 D1:C96C C3 93 B2 D1     jp  i6502NextLoad
 2934 D1:C970 -  -  -  -  
 2935 D1:C970 -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2936 D1:C970 -  -  -  -  inst6502_cpx_zp:
 2937 D1:C970 ED 33 03 -      ADDCYC(3)
 2938 D1:C973 7E -  -  -      ld  a,(hl)
 2939 D1:C974 01 00 38 D0     ld  bc,ZEROPAGE
 2940 D1:C978 81 -  -  -      add a,c
 2941 D1:C979 4F -  -  -      ld  c,a
 2942 D1:C97A 0A -  -  -      ld  a,(bc)
 2943 D1:C97B 47 -  -  -      ld  b,a
 2944 D1:C97C DD 7E 01 -      ld  a,(ix+REGX)
 2945 D1:C97F B8 -  -  -      cp  b
 2946 D1:C980 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2947 D1:C999 C3 93 B2 D1     jp i6502NextLoad
 2948 D1:C99D -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2949 D1:C99D -  -  -  -  inst6502_cpx_abs:
 2950 D1:C99D ED 33 04 -      ADDCYC(4)
 2951 D1:C9A0 CD B0 B4 D1     call subroutine6502_abs_split_start
 2952 D1:C9A4 E5 -  -  -      push hl
 2953 D1:C9A5 50 -  -  -          ld  d,b
 2954 D1:C9A6 79 -  -  -          ld  a,c
 2955 D1:C9A7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2956 D1:C9A9 ED 4C -  -          mlt bc
 2957 D1:C9AB 21 00 40 D0         ld  hl,PAGETABLE
 2958 D1:C9AF 09 -  -  -          add hl,bc
 2959 D1:C9B0 ED 27 -  -          ld  hl,(hl)
 2960 D1:C9B2 06 00 -  -          ld  b,0
 2961 D1:C9B4 4F -  -  -          ld  c,a
 2962 D1:C9B5 09 -  -  -          add hl,bc   ;full address
 2963 D1:C9B6 7E -  -  -          READ_ACCESS
 2964 D1:C9B7 E1 -  -  -      pop hl
 2965 D1:C9B8 47 -  -  -      ld  b,a
 2966 D1:C9B9 DD 7E 01 -      ld  a,(ix+REGX)
 2967 D1:C9BC B8 -  -  -      cp  b
 2968 D1:C9BD DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2969 D1:C9D6 C3 93 B2 D1     jp i6502NextLoad
 2970 D1:C9DA -  -  -  -  
 2971 D1:C9DA -  -  -  -  ;-----------------------------------------------------------------------------
 2972 D1:C9DA -  -  -  -  ;CPY - Compare Memory and Index Y
 2973 D1:C9DA -  -  -  -  ;Y - M
 2974 D1:C9DA -  -  -  -  ;N	Z	C	I	D	V
 2975 D1:C9DA -  -  -  -  ;+	+	+	-	-	-
 2976 D1:C9DA -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2977 D1:C9DA -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 2978 D1:C9DA -  -  -  -  inst6502_cpy_imm:
 2979 D1:C9DA ED 33 02 -      ADDCYC(2)
 2980 D1:C9DD DD 7E 02 -      ld  a,(ix+REGY)
 2981 D1:C9E0 BE -  -  -      cp  (hl)
 2982 D1:C9E1 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2983 D1:C9FA C3 93 B2 D1     jp  i6502NextLoad
 2984 D1:C9FE -  -  -  -  
 2985 D1:C9FE -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 2986 D1:C9FE -  -  -  -  inst6502_cpy_zp:
 2987 D1:C9FE ED 33 03 -      ADDCYC(3)
 2988 D1:CA01 7E -  -  -      ld  a,(hl)
 2989 D1:CA02 01 00 38 D0     ld  bc,ZEROPAGE
 2990 D1:CA06 81 -  -  -      add a,c
 2991 D1:CA07 4F -  -  -      ld  c,a
 2992 D1:CA08 0A -  -  -      ld  a,(bc)
 2993 D1:CA09 47 -  -  -      ld  b,a
 2994 D1:CA0A DD 7E 02 -      ld  a,(ix+REGY)
 2995 D1:CA0D B8 -  -  -      cp  b
 2996 D1:CA0E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2997 D1:CA27 C3 93 B2 D1     jp i6502NextLoad
 2998 D1:CA2B -  -  -  -  
 2999 D1:CA2B -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3000 D1:CA2B -  -  -  -  inst6502_cpy_abs:
 3001 D1:CA2B ED 33 04 -      ADDCYC(4)
 3002 D1:CA2E CD B0 B4 D1     call subroutine6502_abs_split_start
 3003 D1:CA32 E5 -  -  -      push hl
 3004 D1:CA33 50 -  -  -          ld  d,b
 3005 D1:CA34 79 -  -  -          ld  a,c
 3006 D1:CA35 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3007 D1:CA37 ED 4C -  -          mlt bc
 3008 D1:CA39 21 00 40 D0         ld  hl,PAGETABLE
 3009 D1:CA3D 09 -  -  -          add hl,bc
 3010 D1:CA3E ED 27 -  -          ld  hl,(hl)
 3011 D1:CA40 06 00 -  -          ld  b,0
 3012 D1:CA42 4F -  -  -          ld  c,a
 3013 D1:CA43 09 -  -  -          add hl,bc   ;full address
 3014 D1:CA44 7E -  -  -          READ_ACCESS
 3015 D1:CA45 E1 -  -  -      pop hl
 3016 D1:CA46 47 -  -  -      ld  b,a
 3017 D1:CA47 DD 7E 02 -      ld  a,(ix+REGY)
 3018 D1:CA4A B8 -  -  -      cp  b
 3019 D1:CA4B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3020 D1:CA64 C3 93 B2 D1     jp i6502NextLoad
 3021 D1:CA68 -  -  -  -  
 3022 D1:CA68 -  -  -  -  
 3023 D1:CA68 -  -  -  -  ;-----------------------------------------------------------------------------
 3024 D1:CA68 -  -  -  -  ;-----------------------------------------------------------------------------
 3025 D1:CA68 -  -  -  -  ;-----------------------------------------------------------------------------
 3026 D1:CA68 -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3027 D1:CA68 -  -  -  -  
 3028 D1:CA68 -  -  -  -  ;branch on C=0
 3029 D1:CA68 -  -  -  -  ;relative	BCC oper	90	2	2**
 3030 D1:CA68 -  -  -  -  inst6502_bcc:
 3031 D1:CA68 ED 33 02 -      ADDCYC(2)
 3032 D1:CA6B DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3033 D1:CA6F C2 93 B2 D1     jp  nz,i6502NextLoad
 3034 D1:CA73 C3 4F B5 D1     jp  subroutine6502_take_branch
 3035 D1:CA77 -  -  -  -  
 3036 D1:CA77 -  -  -  -  ;branch on C=1
 3037 D1:CA77 -  -  -  -  ;relative	BCS oper	B0	2	2**
 3038 D1:CA77 -  -  -  -  inst6502_bcs:
 3039 D1:CA77 ED 33 02 -      ADDCYC(2)
 3040 D1:CA7A DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3041 D1:CA7E CA 93 B2 D1     jp  z,i6502NextLoad
 3042 D1:CA82 C3 4F B5 D1     jp  subroutine6502_take_branch
 3043 D1:CA86 -  -  -  -  
 3044 D1:CA86 -  -  -  -  ;branch on Z=1
 3045 D1:CA86 -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3046 D1:CA86 -  -  -  -  inst6502_beq:
 3047 D1:CA86 ED 33 02 -      ADDCYC(2)
 3048 D1:CA89 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3049 D1:CA8D CA 93 B2 D1     jp  z,i6502NextLoad
 3050 D1:CA91 C3 4F B5 D1     jp  subroutine6502_take_branch
 3051 D1:CA95 -  -  -  -  
 3052 D1:CA95 -  -  -  -  ;branch on N=1
 3053 D1:CA95 -  -  -  -  ;relative	BMI oper	30	2	2**
 3054 D1:CA95 -  -  -  -  inst6502_bmi:
 3055 D1:CA95 ED 33 02 -      ADDCYC(2)
 3056 D1:CA98 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3057 D1:CA9C CA 93 B2 D1     jp  z,i6502NextLoad
 3058 D1:CAA0 C3 4F B5 D1     jp  subroutine6502_take_branch
 3059 D1:CAA4 -  -  -  -  
 3060 D1:CAA4 -  -  -  -  
 3061 D1:CAA4 -  -  -  -  ;branch on Z=0
 3062 D1:CAA4 -  -  -  -  ;relative	BNE oper	D0	2	2**
 3063 D1:CAA4 -  -  -  -  inst6502_bne:
 3064 D1:CAA4 ED 33 02 -      ADDCYC(2)
 3065 D1:CAA7 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3066 D1:CAAB C2 93 B2 D1     jp  nz,i6502NextLoad
 3067 D1:CAAF C3 4F B5 D1     jp  subroutine6502_take_branch
 3068 D1:CAB3 -  -  -  -  
 3069 D1:CAB3 -  -  -  -  ;branch on N=0
 3070 D1:CAB3 -  -  -  -  ;relative	BPL oper	10	2	2**
 3071 D1:CAB3 -  -  -  -  inst6502_bpl:
 3072 D1:CAB3 ED 33 02 -      ADDCYC(2)
 3073 D1:CAB6 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3074 D1:CABA C2 93 B2 D1     jp  nz,i6502NextLoad
 3075 D1:CABE C3 4F B5 D1     jp  subroutine6502_take_branch
 3076 D1:CAC2 -  -  -  -  
 3077 D1:CAC2 -  -  -  -  ;branch on V=0
 3078 D1:CAC2 -  -  -  -  ;relative	BVC oper	50	2	2**
 3079 D1:CAC2 -  -  -  -  inst6502_bvc:
 3080 D1:CAC2 ED 33 02 -      ADDCYC(2)
 3081 D1:CAC5 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3082 D1:CAC9 C2 93 B2 D1     jp  nz,i6502NextLoad
 3083 D1:CACD C3 4F B5 D1     jp  subroutine6502_take_branch
 3084 D1:CAD1 -  -  -  -  
 3085 D1:CAD1 -  -  -  -  ;branch on V=1
 3086 D1:CAD1 -  -  -  -  ;relative	BVS oper	70	2	2**
 3087 D1:CAD1 -  -  -  -  inst6502_bvs:
 3088 D1:CAD1 ED 33 02 -      ADDCYC(2)
 3089 D1:CAD4 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3090 D1:CAD8 CA 93 B2 D1     jp  z,i6502NextLoad
 3091 D1:CADC C3 4F B5 D1     jp  subroutine6502_take_branch
 3092 D1:CAE0 -  -  -  -  
 3093 D1:CAE0 -  -  -  -  ;-----------------------------------------------------------------------------
 3094 D1:CAE0 -  -  -  -  ;-----------------------------------------------------------------------------
 3095 D1:CAE0 -  -  -  -  ;-----------------------------------------------------------------------------
 3096 D1:CAE0 -  -  -  -  ;Instructions by type: Interrupts
 3097 D1:CAE0 -  -  -  -  
 3098 D1:CAE0 -  -  -  -  ;BRK - Force Break
 3099 D1:CAE0 -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3100 D1:CAE0 -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3101 D1:CAE0 -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3102 D1:CAE0 -  -  -  -  ;(identifying a reason for the break.)
 3103 D1:CAE0 -  -  -  -  ;The status register will be pushed to the stack with the break
 3104 D1:CAE0 -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3105 D1:CAE0 -  -  -  -  ;instruction, the break flag will be ignored.
 3106 D1:CAE0 -  -  -  -  ;The interrupt disable flag is not set automatically.
 3107 D1:CAE0 -  -  -  -  ;
 3108 D1:CAE0 -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3109 D1:CAE0 -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3110 D1:CAE0 -  -  -  -  ;implied	BRK	00	1	7  
 3111 D1:CAE0 -  -  -  -  inst6502_brk:
 3112 D1:CAE0 ED 33 07 -      ADDCYC(7)
 3113 D1:CAE3 21 00 39 D0     ld  hl,STACKBASE
 3114 D1:CAE7 DD 6E 03 -      ld  L,(ix+REGSP)
 3115 D1:CAEA 52 DD 17 05     ld.s de,(ix+REGPC)
 3116 D1:CAEE 13 -  -  -      inc de      ;that extra spacer.
 3117 D1:CAEF 72 -  -  -      ld  (hl),d
 3118 D1:CAF0 2D -  -  -      dec L
 3119 D1:CAF1 73 -  -  -      ld  (hl),e
 3120 D1:CAF2 2D -  -  -      dec L
 3121 D1:CAF3 DD 7E 04 -      ld  a,(ix+REGSR)
 3122 D1:CAF6 CB D7 -  -      set SF_INT,a
 3123 D1:CAF8 77 -  -  -      ld  (hl),a
 3124 D1:CAF9 2D -  -  -      dec L
 3125 D1:CAFA DD 75 03 -      ld  (ix+REGSP),L
 3126 D1:CAFD B7 -  -  -      WAS_NMI_TRIGGERED
 3127 D1:CAFE 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3128 D1:CB02 28 04 -  -      jr  z,+_
 3129 D1:CB04 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3130 D1:CB08 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3131 D1:CB0C ED 27 -  -      ld  hl,(hl)
 3132 D1:CB0E 09 -  -  -      add hl,bc
 3133 D1:CB0F ED 17 -  -      ld  de,(hl)
 3134 D1:CB11 52 DD 1F 05     ld.s (ix+REGPC),de
 3135 D1:CB15 C3 7D B2 D1     jp  i6502FirstLoad
 3136 D1:CB19 -  -  -  -  
 3137 D1:CB19 -  -  -  -  ;RTI - Return from Interrupt
 3138 D1:CB19 -  -  -  -  ;The status register is pulled with the break flag
 3139 D1:CB19 -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3140 D1:CB19 -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3141 D1:CB19 -  -  -  -  ;                      from stack
 3142 D1:CB19 -  -  -  -  ;implied	RTI	40	1	6  
 3143 D1:CB19 -  -  -  -  inst6502_rti:
 3144 D1:CB19 21 00 39 D0     ld  hl,STACKBASE
 3145 D1:CB1D DD 6E 03 -      ld  l,(ix+REGSP)
 3146 D1:CB20 2C -  -  -      inc l
 3147 D1:CB21 7E -  -  -      ld  a,(hl)
 3148 D1:CB22 2C -  -  -      inc l
 3149 D1:CB23 5E -  -  -      ld  e,(hl)
 3150 D1:CB24 2C -  -  -      inc l
 3151 D1:CB25 56 -  -  -      ld  d,(hl)
 3152 D1:CB26 DD 75 03 -      ld  (ix+REGSP),l
 3153 D1:CB29 52 DD 1F 05     ld.s (ix+REGPC),de
 3154 D1:CB2D DD 46 04 -      ld  b,(ix+REGSR)
 3155 D1:CB30 A8 -  -  -      xor a,b
 3156 D1:CB31 E6 DF -  -      and a,%11011111
 3157 D1:CB33 A8 -  -  -      xor a,b
 3158 D1:CB34 DD 77 04 -      ld  (ix+REGSR),a
 3159 D1:CB37 ED 33 06 -      ADDCYC(6)
 3160 D1:CB3A C3 7D B2 D1     jp  i6502FirstLoad
 3161 D1:CB3E -  -  -  -  
 3162 D1:CB3E -  -  -  -  
 3163 D1:CB3E -  -  -  -  
 3164 D1:CB3E -  -  -  -  ;-----------------------------------------------------------------------------
 3165 D1:CB3E -  -  -  -  ;-----------------------------------------------------------------------------
 3166 D1:CB3E -  -  -  -  ;-----------------------------------------------------------------------------
 3167 D1:CB3E -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3168 D1:CB3E -  -  -  -  
 3169 D1:CB3E -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3170 D1:CB3E -  -  -  -  inst6052_jmp_abs:
 3171 D1:CB3E 7E -  -  -      ld  a,(hl)
 3172 D1:CB3F 23 -  -  -      inc hl
 3173 D1:CB40 1C -  -  -      inc e
 3174 D1:CB41 20 0F -  -      jr  nz,+_
 3175 D1:CB43 DD 56 06 -      ld  d,(ix+REGPC+1)
 3176 D1:CB46 14 -  -  -      inc d
 3177 D1:CB47 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3178 D1:CB49 ED 5C -  -      mlt de
 3179 D1:CB4B 21 00 40 D0     ld  hl,PAGETABLE
 3180 D1:CB4F 19 -  -  -      add hl,de
 3181 D1:CB50 ED 27 -  -      ld  hl,(hl)
 3182 D1:CB52 DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3183 D1:CB55 7E -  -  -      ld  a,(hl)
 3184 D1:CB56 DD 77 06 -      ld  (ix+REGPC+1),a
 3185 D1:CB59 ED 33 03 -      ADDCYC(3)
 3186 D1:CB5C C3 7D B2 D1     jp i6502FirstLoad
 3187 D1:CB60 -  -  -  -  
 3188 D1:CB60 -  -  -  -  
 3189 D1:CB60 -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3190 D1:CB60 -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3191 D1:CB60 -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3192 D1:CB60 -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3193 D1:CB60 -  -  -  -  inst6502_jmp_indir:
 3194 D1:CB60 ED 33 05 -      ADDCYC(5)
 3195 D1:CB63 5E -  -  -      ld  e,(hl)
 3196 D1:CB64 7B -  -  -      ld  a,e
 3197 D1:CB65 23 -  -  -      inc hl
 3198 D1:CB66 3C -  -  -      inc a
 3199 D1:CB67 20 0F -  -      jr  nz,+_
 3200 D1:CB69 DD 46 06 -      ld  b,(ix+REGPC+1)
 3201 D1:CB6C 04 -  -  -      inc b
 3202 D1:CB6D 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3203 D1:CB6F ED 4C -  -      mlt bc
 3204 D1:CB71 21 00 40 D0     ld  hl,PAGETABLE
 3205 D1:CB75 09 -  -  -      add hl,bc
 3206 D1:CB76 ED 27 -  -      ld  hl,(hl)
 3207 D1:CB78 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3208 D1:CB79 1C -  -  -      inc e
 3209 D1:CB7A 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3210 D1:CB7C 1D -  -  -      dec e
 3211 D1:CB7D 4B -  -  -      ld  c,e
 3212 D1:CB7E 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3213 D1:CB80 ED 5C -  -      mlt de
 3214 D1:CB82 21 00 40 D0     ld  hl,PAGETABLE
 3215 D1:CB86 19 -  -  -      add hl,de
 3216 D1:CB87 ED 27 -  -      ld  hl,(hl)
 3217 D1:CB89 16 00 -  -      ld  d,0
 3218 D1:CB8B 59 -  -  -      ld  e,c
 3219 D1:CB8C 19 -  -  -      add hl,de   ;full real address reconstructed.
 3220 D1:CB8D ED 17 -  -      ld  de,(hl)
 3221 D1:CB8F 52 DD 1F 05     ld.s (ix+REGPC),de
 3222 D1:CB93 C3 7D B2 D1     jp  i6502FirstLoad
 3223 D1:CB97 -  -  -  -  inst6502_jmp_indir_splitread:
 3224 D1:CB97 -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3225 D1:CB97 -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3226 D1:CB97 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3227 D1:CB99 ED 5C -  -      mlt de
 3228 D1:CB9B 21 00 40 D0     ld  hl,PAGETABLE
 3229 D1:CB9F 19 -  -  -      add hl,de
 3230 D1:CBA0 ED 27 -  -      ld  hl,(hl)
 3231 D1:CBA2 56 -  -  -      ld  d,(hl)
 3232 D1:CBA3 01 FF 00 00     ld  bc,255
 3233 D1:CBA7 09 -  -  -      add hl,bc
 3234 D1:CBA8 5E -  -  -      ld  e,(hl)
 3235 D1:CBA9 52 DD 1F 05     ld.s (ix+REGPC),de
 3236 D1:CBAD C3 7D B2 D1     jp  i6502FirstLoad
 3237 D1:CBB1 -  -  -  -  
 3238 D1:CBB1 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3239 D1:CBB1 -  -  -  -  ;    mlt de
 3240 D1:CBB1 -  -  -  -  ;    ld  hl,PAGETABLE
 3241 D1:CBB1 -  -  -  -  ;    add hl,de
 3242 D1:CBB1 -  -  -  -  ;    ld  de,(hl) ;
 3243 D1:CBB1 -  -  -  -  ;    ex  de,hl
 3244 D1:CBB1 -  -  -  -  ;    ld  bc,255
 3245 D1:CBB1 -  -  -  -  ;    add hl,bc
 3246 D1:CBB1 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3247 D1:CBB1 -  -  -  -  ;    ex  de,hl
 3248 D1:CBB1 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3249 D1:CBB1 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3250 D1:CBB1 -  -  -  -  ;    ld  e,(hl)
 3251 D1:CBB1 -  -  -  -  ;    ld  d,a
 3252 D1:CBB1 -  -  -  -  ;    ld.s (ix+REGPC),de
 3253 D1:CBB1 -  -  -  -  ;    jp  i6502FirstLoad
 3254 D1:CBB1 -  -  -  -  
 3255 D1:CBB1 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3256 D1:CBB1 -  -  -  -  inst6502_jsr:
 3257 D1:CBB1 DD 56 06 -      ld  d,(ix+REGPC+1)
 3258 D1:CBB4 4E -  -  -      ld  c,(hl)
 3259 D1:CBB5 23 -  -  -      inc hl
 3260 D1:CBB6 1C -  -  -      inc e
 3261 D1:CBB7 20 0E -  -      jr  nz,+_
 3262 D1:CBB9 14 -  -  -      inc d
 3263 D1:CBBA 7A -  -  -      ld  a,d
 3264 D1:CBBB 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3265 D1:CBBD ED 5C -  -      mlt de
 3266 D1:CBBF 21 00 40 D0     ld  hl,PAGETABLE
 3267 D1:CBC3 19 -  -  -      add hl,de
 3268 D1:CBC4 ED 27 -  -      ld  hl,(hl)
 3269 D1:CBC6 57 -  -  -      ld  d,a
 3270 D1:CBC7 46 -  -  -  _:  ld  b,(hl)
 3271 D1:CBC8 -  -  -  -      ;push de to 6502stack
 3272 D1:CBC8 21 00 39 D0     ld  hl,STACKBASE
 3273 D1:CBCC DD 6E 03 -      ld  l,(ix+REGSP)
 3274 D1:CBCF 72 -  -  -      ld  (hl),d
 3275 D1:CBD0 2D -  -  -      dec l
 3276 D1:CBD1 73 -  -  -      ld  (hl),e
 3277 D1:CBD2 2D -  -  -      dec l
 3278 D1:CBD3 DD 75 03 -      ld  (ix+REGSP),l
 3279 D1:CBD6 52 DD 0F 05     ld.s (ix+REGPC),bc
 3280 D1:CBDA ED 33 06 -      ADDCYC(6)
 3281 D1:CBDD C3 7D B2 D1     jp  i6502FirstLoad
 3282 D1:CBE1 -  -  -  -  
 3283 D1:CBE1 -  -  -  -  ;implied	RTS	60	1	6
 3284 D1:CBE1 -  -  -  -  inst6502_rts:
 3285 D1:CBE1 21 00 39 D0     ld  hl,STACKBASE
 3286 D1:CBE5 DD 6E 03 -      ld  l,(ix+REGSP)
 3287 D1:CBE8 2C -  -  -      inc l
 3288 D1:CBE9 5E -  -  -      ld  e,(hl)
 3289 D1:CBEA 2C -  -  -      inc l
 3290 D1:CBEB 56 -  -  -      ld  d,(hl)
 3291 D1:CBEC DD 75 03 -      ld  (ix+REGSP),l
 3292 D1:CBEF 52 DD 1F 05     ld.s (ix+REGPC),de
 3293 D1:CBF3 ED 33 06 -      ADDCYC(6)
 3294 D1:CBF6 C3 7D B2 D1     jp  i6502FirstLoad
 3295 D1:CBFA -  -  -  -  
 3296 D1:CBFA -  -  -  -  
 3297 D1:CBFA -  -  -  -  ;-----------------------------------------------------------------------------
 3298 D1:CBFA -  -  -  -  ;-----------------------------------------------------------------------------
 3299 D1:CBFA -  -  -  -  ;-----------------------------------------------------------------------------
 3300 D1:CBFA -  -  -  -  ;Instructions by type: Miscellaneous
 3301 D1:CBFA -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3302 D1:CBFA -  -  -  -  ;
 3303 D1:CBFA -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3304 D1:CBFA -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3305 D1:CBFA -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3306 D1:CBFA -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3307 D1:CBFA -  -  -  -  ;any of the registers, other than the status register (SR).
 3308 D1:CBFA -  -  -  -  
 3309 D1:CBFA -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3310 D1:CBFA -  -  -  -  ;                                           M7	+	-	-	-	M6
 3311 D1:CBFA -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3312 D1:CBFA -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3313 D1:CBFA -  -  -  -  inst6502_bit_zp:
 3314 D1:CBFA ED 33 03 -      ADDCYC(3)
 3315 D1:CBFD 7E -  -  -      ld  a,(hl)
 3316 D1:CBFE 01 00 38 D0     ld  bc,ZEROPAGE
 3317 D1:CC02 81 -  -  -      add a,c
 3318 D1:CC03 4F -  -  -      ld  c,a
 3319 D1:CC04 0A -  -  -      ld  a,(bc)
 3320 D1:CC05 DD A6 00 -  _:  and a,(ix+REGA)
 3321 D1:CC08 CB 8F -  -      res SF_ZERO,a
 3322 D1:CC0A 20 02 -  -      jr  nz,$+4
 3323 D1:CC0C CB CF -  -      set SF_ZERO,a
 3324 D1:CC0E DD 46 04 -      ld  b,(ix+REGSR)
 3325 D1:CC11 A8 -  -  -      xor a,b
 3326 D1:CC12 E6 C2 -  -      and a,%11000010
 3327 D1:CC14 A8 -  -  -      xor a,b
 3328 D1:CC15 DD 77 04 -      ld  (ix+REGSR),a
 3329 D1:CC18 C3 93 B2 D1     jp  i6502NextLoad
 3330 D1:CC1C -  -  -  -  
 3331 D1:CC1C -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3332 D1:CC1C -  -  -  -  inst6502_bit_abs:
 3333 D1:CC1C ED 33 04 -      ADDCYC(4)
 3334 D1:CC1F CD B0 B4 D1     call subroutine6502_abs_split_start
 3335 D1:CC23 E5 -  -  -      push hl
 3336 D1:CC24 50 -  -  -          ld  d,b
 3337 D1:CC25 79 -  -  -          ld  a,c
 3338 D1:CC26 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3339 D1:CC28 ED 4C -  -          mlt bc
 3340 D1:CC2A 21 00 40 D0         ld  hl,PAGETABLE
 3341 D1:CC2E 09 -  -  -          add hl,bc
 3342 D1:CC2F ED 27 -  -          ld  hl,(hl)
 3343 D1:CC31 06 00 -  -          ld  b,0
 3344 D1:CC33 4F -  -  -          ld  c,a
 3345 D1:CC34 09 -  -  -          add hl,bc   ;full address
 3346 D1:CC35 7E -  -  -          READ_ACCESS
 3347 D1:CC36 E1 -  -  -      pop hl
 3348 D1:CC37 18 CC -  -      jr  -_    
 3349 D1:CC39 -  -  -  -  
 3350 D1:CC39 -  -  -  -  ;NOP - No Operation
 3351 D1:CC39 -  -  -  -  ;implied	NOP	EA	1	2  
 3352 D1:CC39 -  -  -  -  inst6502_nop:
 3353 D1:CC39 ED 33 02 -      ADDCYC(2)
 3354 D1:CC3C C3 AC B2 D1     jp  i6502FinishLoad
 3355 D1:CC40 -  -  -  -  
 3356 D1:CC40 -  -  -  -  ;-----------------------------------------------------------------------------
 3357 D1:CC40 -  -  -  -  ;-----------------------------------------------------------------------------
 3358 D1:CC40 -  -  -  -  ;-----------------------------------------------------------------------------
 3359 D1:CC40 -  -  -  -  ;Instruction not mapped: Terminate emulation
 3360 D1:CC40 -  -  -  -  inst6502_:
 3361 D1:CC40 C9 -  -  -      ret
 3362 D1:CC41 -  -  -  -  
 3363 D1:CC41 -  -  -  -  inst6502_halt:
 3364 D1:CC41 18 FE -  -      jr $
 3365 D1:CC43 C3 AC B2 D1     jp i6502FinishLoad
 3366 D1:CC47 -  -  -  -  
 3367 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3368 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3369 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3370 D1:CC47 -  -  -  -  ;Instructions by type: Illegal Instructions
 3371 D1:CC47 -  -  -  -  
 3372 D1:CC47 -  -  -  -  
 3373 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3374 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3375 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3376 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3377 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3378 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3379 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3380 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3381 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3382 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3383 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3384 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3385 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3386 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3387 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3388 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3389 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3390 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3391 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3392 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3393 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3394 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3395 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3396 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3397 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3398 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3399 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3400 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3401 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3402 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3403 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3404 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3405 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3406 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3407 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3408 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3412 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3413 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3414 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3415 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3416 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3417 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3418 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3419 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3423 D1:CC47 -  -  -  -  ;-----------------------------------------------------------------------------
 3424 D1:CC47 -  -  -  -  
 3425 D1:CC47 -  -  -  -  inst6502_instruction_set:
 3426 D1:CC47 E0 CA D1 -  .dl	inst6502_brk					;00
 3427 D1:CC4A 81 C3 D1 -  .dl	inst6502_ora_indx				;01
 3428 D1:CC4D 40 CC D1 -  .dl	inst6502_				;02
 3429 D1:CC50 40 CC D1 -  .dl	inst6502_				;03
 3430 D1:CC53 40 CC D1 -  .dl	inst6502_				;04
 3431 D1:CC56 74 C2 D1 -  .dl	inst6502_ora_zp					;05
 3432 D1:CC59 2C C4 D1 -  .dl	inst6502_asl_zp					;06
 3433 D1:CC5C 40 CC D1 -  .dl	inst6502_				;07
 3434 D1:CC5F 09 BB D1 -  .dl	inst6502_php					;08
 3435 D1:CC62 53 C2 D1 -  .dl	inst6502_ora_imm				;09
 3436 D1:CC65 08 C4 D1 -  .dl	inst6502_asl					;0A
 3437 D1:CC68 40 CC D1 -  .dl	inst6502_				;0B
 3438 D1:CC6B 40 CC D1 -  .dl	inst6502_				;0C
 3439 D1:CC6E C7 C2 D1 -  .dl	inst6502_ora_abs				;0D
 3440 D1:CC71 85 C4 D1 -  .dl	inst6502_asl_abs				;0E
 3441 D1:CC74 40 CC D1 -  .dl	inst6502_				;0F
 3442 D1:CC77 B3 CA D1 -  .dl	inst6502_bpl					;10
 3443 D1:CC7A C1 C3 D1 -  .dl	inst6502_ora_indy				;11
 3444 D1:CC7D 41 CC D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3445 D1:CC80 40 CC D1 -  .dl	inst6502_				;13
 3446 D1:CC83 40 CC D1 -  .dl	inst6502_				;14
 3447 D1:CC86 9C C2 D1 -  .dl	inst6502_ora_zpx				;15
 3448 D1:CC89 57 C4 D1 -  .dl	inst6502_asl_zpx				;16
 3449 D1:CC8C 40 CC D1 -  .dl	inst6502_				;17
 3450 D1:CC8F 20 C8 D1 -  .dl	inst6502_clc					;18
 3451 D1:CC92 40 C3 D1 -  .dl	inst6502_ora_absy				;19
 3452 D1:CC95 40 CC D1 -  .dl	inst6502_				;1A
 3453 D1:CC98 40 CC D1 -  .dl	inst6502_				;1B
 3454 D1:CC9B 40 CC D1 -  .dl	inst6502_				;1C
 3455 D1:CC9E FF C2 D1 -  .dl	inst6502_ora_absx				;1D
 3456 D1:CCA1 C2 C4 D1 -  .dl	inst6502_asl_absx				;1E
 3457 D1:CCA4 40 CC D1 -  .dl	inst6502_				;1F
 3458 D1:CCA7 B1 CB D1 -  .dl	inst6502_jsr					;20
 3459 D1:CCAA 17 C0 D1 -  .dl	inst6502_and_indx				;21
 3460 D1:CCAD 40 CC D1 -  .dl	inst6502_				;22
 3461 D1:CCB0 40 CC D1 -  .dl	inst6502_				;23
 3462 D1:CCB3 FA CB D1 -  .dl	inst6502_bit_zp					;24
 3463 D1:CCB6 0A BF D1 -  .dl	inst6502_and_zp					;25
 3464 D1:CCB9 2C C6 D1 -  .dl	inst6502_rol_zp					;26
 3465 D1:CCBC 40 CC D1 -  .dl	inst6502_				;27
 3466 D1:CCBF 44 BB D1 -  .dl	inst6502_plp					;28
 3467 D1:CCC2 E9 BE D1 -  .dl	inst6502_and_imm				;29
 3468 D1:CCC5 04 C6 D1 -  .dl	inst6502_rol					;2A
 3469 D1:CCC8 40 CC D1 -  .dl	inst6502_				;2B
 3470 D1:CCCB 1C CC D1 -  .dl	inst6502_bit_abs				;2C
 3471 D1:CCCE 5D BF D1 -  .dl	inst6502_and_abs				;2D
 3472 D1:CCD1 8B C6 D1 -  .dl	inst6502_rol_abs				;2E
 3473 D1:CCD4 40 CC D1 -  .dl	inst6502_				;2F
 3474 D1:CCD7 95 CA D1 -  .dl	inst6502_bmi					;30
 3475 D1:CCDA 57 C0 D1 -  .dl	inst6502_and_indy				;31
 3476 D1:CCDD 40 CC D1 -  .dl	inst6502_				;32
 3477 D1:CCE0 40 CC D1 -  .dl	inst6502_				;33
 3478 D1:CCE3 40 CC D1 -  .dl	inst6502_				;34
 3479 D1:CCE6 32 BF D1 -  .dl	inst6502_and_zpx				;35
 3480 D1:CCE9 5A C6 D1 -  .dl	inst6502_rol_zpx				;36
 3481 D1:CCEC 40 CC D1 -  .dl	inst6502_						;37
 3482 D1:CCEF 40 C8 D1 -  .dl	inst6502_sec					;38
 3483 D1:CCF2 D6 BF D1 -  .dl	inst6502_and_absy				;39
 3484 D1:CCF5 40 CC D1 -  .dl	inst6502_			;3A
 3485 D1:CCF8 40 CC D1 -  .dl	inst6502_			;3B
 3486 D1:CCFB 40 CC D1 -  .dl	inst6502_			;3C
 3487 D1:CCFE 95 BF D1 -  .dl	inst6502_and_absx				;3D
 3488 D1:CD01 CB C6 D1 -  .dl	inst6502_rol_absx				;3E
 3489 D1:CD04 40 CC D1 -  .dl	inst6502_			;3F
 3490 D1:CD07 E1 CB D1 -  .dl	inst6502_rts					;40
 3491 D1:CD0A CC C1 D1 -  .dl	inst6502_eor_indx				;41
 3492 D1:CD0D 40 CC D1 -  .dl	inst6502_			;42
 3493 D1:CD10 40 CC D1 -  .dl	inst6502_			;43
 3494 D1:CD13 40 CC D1 -  .dl	inst6502_			;44
 3495 D1:CD16 BF C0 D1 -  .dl	inst6502_eor_zp					;45
 3496 D1:CD19 2A C5 D1 -  .dl	inst6502_lsr_zp					;46
 3497 D1:CD1C 40 CC D1 -  .dl	inst6502_			;47
 3498 D1:CD1F F6 BA D1 -  .dl	inst6502_pha					;48
 3499 D1:CD22 9E C0 D1 -  .dl	inst6502_eor_imm				;49
 3500 D1:CD25 06 C5 D1 -  .dl	inst6502_lsr					;4A
 3501 D1:CD28 40 CC D1 -  .dl	inst6502_			;4B
 3502 D1:CD2B 3E CB D1 -  .dl	inst6052_jmp_abs				;4C
 3503 D1:CD2E 12 C1 D1 -  .dl	inst6502_eor_abs				;4D
 3504 D1:CD31 83 C5 D1 -  .dl	inst6502_lsr_abs				;4E
 3505 D1:CD34 40 CC D1 -  .dl	inst6502_			;4F
 3506 D1:CD37 C2 CA D1 -  .dl	inst6502_bvc					;50
 3507 D1:CD3A 0C C2 D1 -  .dl	inst6502_eor_indy				;51
 3508 D1:CD3D 40 CC D1 -  .dl	inst6502_			;52
 3509 D1:CD40 40 CC D1 -  .dl	inst6502_			;53
 3510 D1:CD43 40 CC D1 -  .dl	inst6502_			;54
 3511 D1:CD46 E7 C0 D1 -  .dl	inst6502_eor_zpx				;55
 3512 D1:CD49 55 C5 D1 -  .dl	inst6502_lsr_zpx				;56
 3513 D1:CD4C 40 CC D1 -  .dl	inst6502_			;57
 3514 D1:CD4F 30 C8 D1 -  .dl	inst6502_cli					;58
 3515 D1:CD52 8B C1 D1 -  .dl	inst6502_eor_absy				;59
 3516 D1:CD55 40 CC D1 -  .dl	inst6502_			;5A
 3517 D1:CD58 40 CC D1 -  .dl	inst6502_			;5B
 3518 D1:CD5B 40 CC D1 -  .dl	inst6502_			;5C
 3519 D1:CD5E 4A C1 D1 -  .dl	inst6502_eor_absx				;5D
 3520 D1:CD61 C0 C5 D1 -  .dl	inst6502_lsr_absx				;5E
 3521 D1:CD64 40 CC D1 -  .dl	inst6502_			;5F
 3522 D1:CD67 E1 CB D1 -  .dl	inst6502_rts					;60
 3523 D1:CD6A A4 BD D1 -  .dl	inst6502_adc_indx				;61
 3524 D1:CD6D 40 CC D1 -  .dl	inst6502_			;62
 3525 D1:CD70 40 CC D1 -  .dl	inst6502_			;63
 3526 D1:CD73 40 CC D1 -  .dl	inst6502_			;64
 3527 D1:CD76 0F BD D1 -  .dl	inst6502_adc_zp					;65
 3528 D1:CD79 3A C7 D1 -  .dl	inst6502_ror_zp					;66
 3529 D1:CD7C 40 CC D1 -  .dl	inst6502_			;67
 3530 D1:CD7F 1E BB D1 -  .dl	inst6502_pla					;68
 3531 D1:CD82 07 BD D1 -  .dl	inst6502_adc_imm				;69
 3532 D1:CD85 12 C7 D1 -  .dl	inst6502_ror					;6A
 3533 D1:CD88 40 CC D1 -  .dl	inst6502_			;6B
 3534 D1:CD8B 60 CB D1 -  .dl	inst6502_jmp_indir				;6C
 3535 D1:CD8E 32 BD D1 -  .dl	inst6502_adc_abs				;6D
 3536 D1:CD91 99 C7 D1 -  .dl	inst6502_ror_abs				;6E
 3537 D1:CD94 40 CC D1 -  .dl	inst6502_			;6F
 3538 D1:CD97 D1 CA D1 -  .dl	inst6502_bvs					;70
 3539 D1:CD9A CC BD D1 -  .dl	inst6502_adc_indy				;71
 3540 D1:CD9D 40 CC D1 -  .dl	inst6502_			;72
 3541 D1:CDA0 40 CC D1 -  .dl	inst6502_			;73
 3542 D1:CDA3 40 CC D1 -  .dl	inst6502_			;74
 3543 D1:CDA6 1F BD D1 -  .dl	inst6502_adc_zpx				;75
 3544 D1:CDA9 68 C7 D1 -  .dl	inst6502_ror_zpx				;76
 3545 D1:CDAC 40 CC D1 -  .dl	inst6502_			;77
 3546 D1:CDAF 50 C8 D1 -  .dl	inst6502_sei					;78
 3547 D1:CDB2 7B BD D1 -  .dl	inst6502_adc_absy				;79
 3548 D1:CDB5 40 CC D1 -  .dl	inst6502_			;7A
 3549 D1:CDB8 40 CC D1 -  .dl	inst6502_			;7B
 3550 D1:CDBB 40 CC D1 -  .dl	inst6502_			;7C
 3551 D1:CDBE 52 BD D1 -  .dl	inst6502_adc_absx				;7D
 3552 D1:CDC1 D9 C7 D1 -  .dl	inst6502_ror_absx				;7E
 3553 D1:CDC4 40 CC D1 -  .dl	inst6502_			;7F
 3554 D1:CDC7 40 CC D1 -  .dl	inst6502_			;80
 3555 D1:CDCA 5E B9 D1 -  .dl	inst6502_sta_indx				;81
 3556 D1:CDCD 40 CC D1 -  .dl	inst6502_			;82
 3557 D1:CDD0 40 CC D1 -  .dl	inst6502_			;83
 3558 D1:CDD3 00 BA D1 -  .dl	inst6502_sty_zp					;84
 3559 D1:CDD6 C3 B8 D1 -  .dl	inst6502_sta_zp					;85
 3560 D1:CDD9 B7 B9 D1 -  .dl	inst6502_stx_zp					;86
 3561 D1:CDDC 40 CC D1 -  .dl	inst6502_			;87
 3562 D1:CDDF 3A BC D1 -  .dl	inst6502_dey					;88
 3563 D1:CDE2 40 CC D1 -  .dl	inst6502_			;89
 3564 D1:CDE5 A9 BA D1 -  .dl	inst6502_txa					;8A
 3565 D1:CDE8 40 CC D1 -  .dl	inst6502_			;8B
 3566 D1:CDEB 27 BA D1 -  .dl	inst6502_sty_abs				;8C
 3567 D1:CDEE EA B8 D1 -  .dl	inst6502_sta_abs				;8D
 3568 D1:CDF1 DE B9 D1 -  .dl	inst6502_stx_abs				;8E
 3569 D1:CDF4 40 CC D1 -  .dl	inst6502_			;8F
 3570 D1:CDF7 68 CA D1 -  .dl	inst6502_bcc					;90
 3571 D1:CDFA 88 B9 D1 -  .dl	inst6502_sta_indy				;91
 3572 D1:CDFD 40 CC D1 -  .dl	inst6502_			;92
 3573 D1:CE00 40 CC D1 -  .dl	inst6502_			;93
 3574 D1:CE03 12 BA D1 -  .dl	inst6502_sty_zpx				;94
 3575 D1:CE06 D5 B8 D1 -  .dl	inst6502_sta_zpx				;95
 3576 D1:CE09 C9 B9 D1 -  .dl	inst6502_stx_zpy				;96
 3577 D1:CE0C 40 CC D1 -  .dl	inst6502_			;97
 3578 D1:CE0F D6 BA D1 -  .dl	inst6502_tya					;98
 3579 D1:CE12 35 B9 D1 -  .dl	inst6502_sta_absy				;99
 3580 D1:CE15 C9 BA D1 -  .dl	inst6502_txs					;9A
 3581 D1:CE18 40 CC D1 -  .dl	inst6502_			;9B
 3582 D1:CE1B 40 CC D1 -  .dl	inst6502_			;9C
 3583 D1:CE1E 0C B9 D1 -  .dl	inst6502_sta_absx				;9D
 3584 D1:CE21 40 CC D1 -  .dl	inst6502_			;9E
 3585 D1:CE24 40 CC D1 -  .dl	inst6502_			;9F
 3586 D1:CE27 E5 B7 D1 -  .dl	inst6502_ldy_imm				;A0
 3587 D1:CE2A 86 B6 D1 -  .dl	inst6502_lda_indx				;A1
 3588 D1:CE2D 07 B7 D1 -  .dl	inst6502_ldx_imm				;A2
 3589 D1:CE30 40 CC D1 -  .dl	inst6502_			;A3
 3590 D1:CE33 03 B8 D1 -  .dl	inst6502_ldy_zp					;A4
 3591 D1:CE36 88 B5 D1 -  .dl	inst6502_lda_zp					;A5
 3592 D1:CE39 25 B7 D1 -  .dl	inst6502_ldx_zp					;A6
 3593 D1:CE3C 40 CC D1 -  .dl	inst6502_			;A7
 3594 D1:CE3F 69 BA D1 -  .dl	inst6502_tay					;A8
 3595 D1:CE42 6A B5 D1 -  .dl	inst6502_lda_imm				;A9
 3596 D1:CE45 49 BA D1 -  .dl	inst6502_tax					;AA
 3597 D1:CE48 40 CC D1 -  .dl	inst6502_			;AB
 3598 D1:CE4B 50 B8 D1 -  .dl	inst6502_ldy_abs				;AC
 3599 D1:CE4E D5 B5 D1 -  .dl	inst6502_lda_abs				;AD
 3600 D1:CE51 72 B7 D1 -  .dl	inst6502_ldx_abs				;AE
 3601 D1:CE54 40 CC D1 -  .dl	inst6502_			;AF
 3602 D1:CE57 77 CA D1 -  .dl	inst6502_bcs					;B0
 3603 D1:CE5A C3 B6 D1 -  .dl	inst6502_lda_indy				;B1
 3604 D1:CE5D 40 CC D1 -  .dl	inst6502_			;B2
 3605 D1:CE60 40 CC D1 -  .dl	inst6502_			;B3
 3606 D1:CE63 28 B8 D1 -  .dl	inst6502_ldy_zpx				;B4
 3607 D1:CE66 AD B5 D1 -  .dl	inst6502_lda_zpx				;B5
 3608 D1:CE69 4A B7 D1 -  .dl	inst6502_ldx_zpy				;B6
 3609 D1:CE6C 40 CC D1 -  .dl	inst6502_			;B7
 3610 D1:CE6F 38 C8 D1 -  .dl	inst6502_clv					;B8
 3611 D1:CE72 48 B6 D1 -  .dl	inst6502_lda_absy				;B9
 3612 D1:CE75 89 BA D1 -  .dl	inst6502_tsx					;BA
 3613 D1:CE78 40 CC D1 -  .dl	inst6502_			;BB
 3614 D1:CE7B 85 B8 D1 -  .dl	inst6502_ldy_absx				;BC
 3615 D1:CE7E 0A B6 D1 -  .dl	inst6502_lda_absx				;BD
 3616 D1:CE81 A7 B7 D1 -  .dl	inst6502_ldx_absy				;BE
 3617 D1:CE84 40 CC D1 -  .dl	inst6502_			;BF
 3618 D1:CE87 DA C9 D1 -  .dl	inst6502_cpy_imm				;C0
 3619 D1:CE8A F5 C8 D1 -  .dl	inst6502_cmp_indx				;C1
 3620 D1:CE8D 40 CC D1 -  .dl	inst6502_			;C2
 3621 D1:CE90 40 CC D1 -  .dl	inst6502_			;C3
 3622 D1:CE93 FE C9 D1 -  .dl	inst6502_cpy_zp					;C4
 3623 D1:CE96 60 C8 D1 -  .dl	inst6502_cmp_zp					;C5
 3624 D1:CE99 5E BB D1 -  .dl	inst6502_dec_zp					;C6
 3625 D1:CE9C 40 CC D1 -  .dl	inst6502_			;C7
 3626 D1:CE9F 44 BC D1 -  .dl	inst6502_iny					;C8
 3627 D1:CEA2 58 C8 D1 -  .dl	inst6502_cmp_imm				;C9
 3628 D1:CEA5 1C BC D1 -  .dl	inst6502_dex					;CA
 3629 D1:CEA8 40 CC D1 -  .dl	inst6502_			;CB
 3630 D1:CEAB 2B CA D1 -  .dl	inst6502_cpy_abs				;CC
 3631 D1:CEAE 83 C8 D1 -  .dl	inst6502_cmp_abs				;CD
 3632 D1:CEB1 A9 BB D1 -  .dl	inst6502_dec_abs				;CE
 3633 D1:CEB4 40 CC D1 -  .dl	inst6502_			;CF
 3634 D1:CEB7 A4 CA D1 -  .dl	inst6502_bne					;D0
 3635 D1:CEBA 1D C9 D1 -  .dl	inst6502_cmp_indy				;D1
 3636 D1:CEBD 40 CC D1 -  .dl	inst6502_			;D2
 3637 D1:CEC0 40 CC D1 -  .dl	inst6502_			;D3
 3638 D1:CEC3 40 CC D1 -  .dl	inst6502_			;D4
 3639 D1:CEC6 70 C8 D1 -  .dl	inst6502_cmp_zpx				;D5
 3640 D1:CEC9 82 BB D1 -  .dl	inst6502_dec_zpx				;D6
 3641 D1:CECC 40 CC D1 -  .dl	inst6502_			;D7
 3642 D1:CECF 28 C8 D1 -  .dl	inst6502_cld					;D8
 3643 D1:CED2 CC C8 D1 -  .dl	inst6502_cmp_absy				;D9
 3644 D1:CED5 40 CC D1 -  .dl	inst6502_			;DA
 3645 D1:CED8 40 CC D1 -  .dl	inst6502_			;DB
 3646 D1:CEDB 40 CC D1 -  .dl	inst6502_			;DC
 3647 D1:CEDE A3 C8 D1 -  .dl	inst6502_cmp_absx				;DD
 3648 D1:CEE1 DF BB D1 -  .dl	inst6502_dec_absx				;DE
 3649 D1:CEE4 40 CC D1 -  .dl	inst6502_			;DF
 3650 D1:CEE7 4C C9 D1 -  .dl	inst6502_cpx_imm				;E0
 3651 D1:CEEA 95 BE D1 -  .dl	inst6502_sbc_indx				;E1
 3652 D1:CEED 40 CC D1 -  .dl	inst6502_			;E2
 3653 D1:CEF0 40 CC D1 -  .dl	inst6502_			;E3
 3654 D1:CEF3 70 C9 D1 -  .dl	inst6502_cpx_zp					;E4
 3655 D1:CEF6 00 BE D1 -  .dl	inst6502_sbc_zp					;E5
 3656 D1:CEF9 49 BC D1 -  .dl	inst6502_inc_zp					;E6
 3657 D1:CEFC 40 CC D1 -  .dl	inst6502_			;E7
 3658 D1:CEFF 3F BC D1 -  .dl	inst6502_inx					;E8
 3659 D1:CF02 F8 BD D1 -  .dl	inst6502_sbc_imm				;E9
 3660 D1:CF05 39 CC D1 -  .dl	inst6502_nop					;EA
 3661 D1:CF08 40 CC D1 -  .dl	inst6502_			;EB
 3662 D1:CF0B 9D C9 D1 -  .dl	inst6502_cpx_abs				;EC
 3663 D1:CF0E 23 BE D1 -  .dl	inst6502_sbc_abs				;ED
 3664 D1:CF11 94 BC D1 -  .dl	inst6502_inc_abs				;EE
 3665 D1:CF14 40 CC D1 -  .dl	inst6502_			;EF
 3666 D1:CF17 86 CA D1 -  .dl	inst6502_beq					;F0
 3667 D1:CF1A BD BE D1 -  .dl	inst6502_sbc_indy				;F1
 3668 D1:CF1D 40 CC D1 -  .dl	inst6502_			;F2
 3669 D1:CF20 40 CC D1 -  .dl	inst6502_			;F3
 3670 D1:CF23 40 CC D1 -  .dl	inst6502_			;F4
 3671 D1:CF26 10 BE D1 -  .dl	inst6502_sbc_zpx				;F5
 3672 D1:CF29 6D BC D1 -  .dl	inst6502_inc_zpx				;F6
 3673 D1:CF2C 40 CC D1 -  .dl	inst6502_			;F7
 3674 D1:CF2F 48 C8 D1 -  .dl	inst6502_sed					;F8
 3675 D1:CF32 6C BE D1 -  .dl	inst6502_sbc_absy				;F9
 3676 D1:CF35 40 CC D1 -  .dl	inst6502_			;FA
 3677 D1:CF38 40 CC D1 -  .dl	inst6502_			;FB
 3678 D1:CF3B 40 CC D1 -  .dl	inst6502_			;FC
 3679 D1:CF3E 43 BE D1 -  .dl	inst6502_sbc_absx				;FD
 3680 D1:CF41 CA BC D1 -  .dl	inst6502_inc_absx				;FE
 3681 D1:CF44 40 CC D1 -  .dl	inst6502_			;FF
 3682 D1:CF47 -  -  -  -  
 3683 D1:CF47 -  -  -  -  
 3684 D1:CF47 -  -  -  -  
 3685 D1:CF47 -  -  -  -  
 3686 D1:CF47 -  -  -  -  
 3687 D1:CF47 -  -  -  -  
 3688 D1:CF47 -  -  -  -  
 3689 D1:CF47 -  -  -  -  
 3690 D1:CF47 -  -  -  -  
 3691 D1:CF47 -  -  -  -  
 3692 D1:CF47 -  -  -  -  
 3693 D1:CF47 -  -  -  -  
 3694 D1:CF47 -  -  -  -  
Listing for file "main.z80"
  601 D1:CF47 -  -  -  -  .echo "Main program size: ",$-programStart
