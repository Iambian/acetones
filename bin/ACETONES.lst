    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD 18 AE D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 21 00 00 D4     ld  hl,screenBuf1
   44 D1:A899 11 01 00 D4     ld  de,screenBuf1+1
   45 D1:A89D 01 FF 57 02     ld  bc,(2*240*320)-1
   46 D1:A8A1 36 00 -  -      ld  (hl),$00
   47 D1:A8A3 ED B0 -  -      ldir
   48 D1:A8A5 -  -  -  -  
   49 D1:A8A5 -  -  -  -      ;Makes sure all non-ROM areas have a mapping
   50 D1:A8A5 21 00 33 D0     ld  hl,scrap_mapping
   51 D1:A8A9 01 01 80 00     ld  bc,$008001
   52 D1:A8AD 1E 00 -  -      ld  e,0
   53 D1:A8AF CD 5C B5 D1     call i6502_map_pages
   54 D1:A8B3 -  -  -  -  
   55 D1:A8B3 -  -  -  -  
   56 D1:A8B3 -  -  -  -      ;load reset vectors
   57 D1:A8B3 21 68 A8 D1     ld  hl,testVectors
   58 D1:A8B7 01 01 01 00     ld  bc,$000101
   59 D1:A8BB 1E FF -  -      ld  e,$FF
   60 D1:A8BD CD 5C B5 D1     call i6502_map_pages
   61 D1:A8C1 -  -  -  -      ;load program ROM to lowmem
   62 D1:A8C1 21 68 A9 D1     ld  hl,testCode
   63 D1:A8C5 01 08 20 00     ld  bc,$002008
   64 D1:A8C9 1E 80 -  -      ld  e,$80
   65 D1:A8CB CD 5C B5 D1     call i6502_map_pages
   66 D1:A8CF -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   67 D1:A8CF -  -  -  -      ;memory to screen.
   68 D1:A8CF 21 00 50 D0     ld  hl,NAMETABLE1
   69 D1:A8D3 01 04 20 00     ld  bc,$002004
   70 D1:A8D7 1E 40 -  -      ld  e,$40
   71 D1:A8D9 CD 5C B5 D1     call i6502_map_pages
   72 D1:A8DD -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   73 D1:A8DD -  -  -  -      ;start the emulation.
   74 D1:A8DD -  -  -  -      ;jr $
   75 D1:A8DD CD 6B AE D1     call clearTextBuf
   76 D1:A8E1 3E 01 -  -      ld  a,1
   77 D1:A8E3 CD B8 AE D1     call setLineStart
   78 D1:A8E7 CD C1 AE D1     call setCurLine
   79 D1:A8EB 21 E5 A9 D1     ld  hl,text001
   80 D1:A8EF CD E3 AE D1     call printString
   81 D1:A8F3 FD 21 2C AA 
              D1 -  -  -      ld  iy,firstFileHeader
   82 D1:A8F8 01 00 00 00     ld  bc,0
   83 D1:A8FC FD 4E FF -      ld  c,(iy-1)
   84 D1:A8FF CD 93 AD D1     call vatTraverse
   85 D1:A903 DA 49 AA D1     jp  c,err_noContainersFound
   86 D1:A907 D5 -  -  -      push de
   87 D1:A908 21 FC A9 D1         ld  hl,text003
   88 D1:A90C CD E3 AE D1         call printString
   89 D1:A910 DD 46 FA -          ld  b,(ix-6)
   90 D1:A913 ED 22 F9 -          lea hl,ix-7
   91 D1:A916 7E -  -  -  _:      ld  a,(hl)
   92 D1:A917 2B -  -  -          dec hl
   93 D1:A918 E5 -  -  -          push hl
   94 D1:A919 C5 -  -  -              push bc
   95 D1:A91A CD F9 AE D1                 call PrintBigFont
   96 D1:A91E C1 -  -  -              pop bc
   97 D1:A91F E1 -  -  -          pop hl
   98 D1:A920 10 F4 -  -          djnz -_
   99 D1:A922 CD CC AE D1         call newLine
  100 D1:A926 D1 -  -  -      pop de
  101 D1:A927 CD 62 AB D1     call loadROMFile
  102 D1:A92B -  -  -  -  
  103 D1:A92B 21 09 AA D1     ld  hl,text004
  104 D1:A92F CD E3 AE D1     call printString
  105 D1:A933 -  -  -  -  
  106 D1:A933 -  -  -  -      ;jr $
  107 D1:A933 -  -  -  -  #ifdef COREDEBUG
  108 D1:A933                 call dbg_resetScreen
  109 D1:A933             #endif
  110 D1:A933 CD D8 B2 D1     call i6502Init
  111 D1:A937 -  -  -  -  
  112 D1:A937 -  -  -  -  ;    call clearTextBuf
  113 D1:A937 -  -  -  -  ;    ld  hl,helloWorld
  114 D1:A937 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  115 D1:A937 -  -  -  -  ;    ld  bc,13
  116 D1:A937 -  -  -  -  ;    ldir
  117 D1:A937 -  -  -  -  
  118 D1:A937 -  -  -  -  endCurrentRun:
  119 D1:A937 -  -  -  -      ;call printTextBuf
  120 D1:A937 CD EF AD D1     call fastCopy
  121 D1:A93B 00 -  -  -      nop
  122 D1:A93C CD D9 A9 D1     call waituntilnewkeypress
  123 D1:A940 CD D1 A9 D1     call waituntilkeyrelease
  124 D1:A944 -  -  -  -  
  125 D1:A944 -  -  -  -      ;
  126 D1:A944 -  -  -  -      ;
  127 D1:A944 -  -  -  -      ;
  128 D1:A944 -  -  -  -  programExit:
  129 D1:A944 CD 0A AE D1     call stopGfx
  130 D1:A948 ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  131 D1:A94D 3A FF 31 D0     ld  a,(save_mbase)
  132 D1:A951 ED 6D -  -      ld  MB,a
  133 D1:A953 FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  134 D1:A958 C9 -  -  -      ret
  135 D1:A959 -  -  -  -  
  136 D1:A959 -  -  -  -  
  137 D1:A959 -  -  -  -  testFilename:
  138 D1:A959 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  139 D1:A962 -  -  -  -  
  140 D1:A962 -  -  -  -  
  141 D1:A962 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  142 D1:A962 -  -  -  -  testVectors .equ $-(256-6)
  143 D1:A962 00 80 -  -  .dw $8000
  144 D1:A964 00 80 -  -  .dw $8000
  145 D1:A966 00 80 -  -  .dw $8000
  146 D1:A968 -  -  -  -  testCode:
  147 D1:A968 A9 00 AA A8 .db $A9,$00,$AA,$A8
  148 D1:A96C BD 14 80 -  .db $BD,$14,$80
  149 D1:A96F C9 00 -  -  .db $C9,$00
  150 D1:A971 F0 08 -  -  .db $F0,$08
  151 D1:A973 99 21 40 -  .db $99,$21,$40
  152 D1:A976 E8 C8 -  -  .db $E8,$C8
  153 D1:A978 -  -  -  -  ;.db $12
  154 D1:A978 4C 04 80 02 .db $4C,$04,$80,$02
  155 D1:A97C 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  156 D1:A985 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  157 D1:A98A -  -  -  -  
  158 D1:A98A -  -  -  -  
  159 D1:A98A A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  160 D1:A999 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  161 D1:A9A9 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  162 D1:A9AA -  -  -  -  
  163 D1:A9AA -  -  -  -  helloWorld:
  164 D1:A9AA 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  165 D1:A9B8 -  -  -  -  
  166 D1:A9B8 -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  167 D1:A9B8 -  -  -  -  ;find yet another hardware reference for something I already did.
  168 D1:A9B8 -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  169 D1:A9B8 -  -  -  -  ;what we're looking for. Here, we output the same sort of
  170 D1:A9B8 -  -  -  -  ;game keys that I've used basically all my programming life.
  171 D1:A9B8 -  -  -  -  ;Anyhoo. We'll be using the following:
  172 D1:A9B8 -  -  -  -  ;kbitDown	equ 00h
  173 D1:A9B8 -  -  -  -  ;kbitLeft	equ 01h
  174 D1:A9B8 -  -  -  -  ;kbitRight	equ 02h
  175 D1:A9B8 -  -  -  -  ;kbitUp		equ 03h
  176 D1:A9B8 -  -  -  -  ;kbitYequ equ 04h
  177 D1:A9B8 -  -  -  -  ;kbit2nd		equ 05h
  178 D1:A9B8 -  -  -  -  ;kbitMode	equ 06h
  179 D1:A9B8 -  -  -  -  ;kbitDel		equ 07h
  180 D1:A9B8 -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  181 D1:A9B8 -  -  -  -  
  182 D1:A9B8 -  -  -  -  getkbd_adl:
  183 D1:A9B8 DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  184 D1:A9BD ED 22 00 -  	lea hl,ix+0
  185 D1:A9C0 36 02 -  -  	ld  (hl),keyModeScanOnce
  186 D1:A9C2 AF -  -  -  	xor a
  187 D1:A9C3 BE -  -  -  _:  cp  (hl)
  188 D1:A9C4 20 FD -  -  	jr  nz,-_
  189 D1:A9C6 DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  190 D1:A9C9 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  191 D1:A9CC AD -  -  -  	xor L
  192 D1:A9CD E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  193 D1:A9CF AD -  -  -  	xor L
  194 D1:A9D0 C9 -  -  -  	ret
  195 D1:A9D1 -  -  -  -  
  196 D1:A9D1 -  -  -  -  
  197 D1:A9D1 -  -  -  -  waituntilkeyrelease:
  198 D1:A9D1 CD B8 A9 D1     call getkbd_adl
  199 D1:A9D5 B7 -  -  -      or  a,a
  200 D1:A9D6 20 F9 -  -      jr  nz,waituntilkeyrelease
  201 D1:A9D8 C9 -  -  -  	ret
  202 D1:A9D9 -  -  -  -  
  203 D1:A9D9 -  -  -  -  waituntilnewkeypress:
  204 D1:A9D9 CD D1 A9 D1     call waituntilkeyrelease
  205 D1:A9DD CD B8 A9 D1 _:  call getkbd_adl
  206 D1:A9E1 B7 -  -  -  	or  a,a
  207 D1:A9E2 28 F9 -  -  	jr  z,-_
  208 D1:A9E4 C9 -  -  -      ret
  209 D1:A9E5 -  -  -  -  
  210 D1:A9E5 -  -  -  -  
  211 D1:A9E5 -  -  -  -  text001:
  212 D1:A9E5 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  213 D1:A9FC -  -  -  -  text003:
  214 D1:A9FC 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  215 D1:AA09 -  -  -  -  text004:
  216 D1:AA09 52 4F 4D 46 
              69 6C 65 20 
              6C 6F 61 64 
              65 64 20 61 
              6E 64 20 72 
              65 61 64 79 
              20 74 6F 20 
              72 75 6E 2E 
              0A 00 -  -  .db "ROMFile loaded and ready to run.\n",0
  217 D1:AA2B -  -  -  -  
  218 D1:AA2B -  -  -  -  
  219 D1:AA2B 07 -  -  -  .db 7
  220 D1:AA2C -  -  -  -  firstFileHeader:
  221 D1:AA2C 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  222 D1:AA33 -  -  -  -  
  223 D1:AA33 -  -  -  -  err_:
  224 D1:AA33 -  -  -  -  
  225 D1:AA33 -  -  -  -  err_err:
  226 D1:AA33 E1 -  -  -      pop hl
  227 D1:AA34 CD E3 AE D1     call printString
  228 D1:AA38 -  -  -  -  err_err_quit:
  229 D1:AA38 CD EF AD D1     call fastCopy
  230 D1:AA3C 00 -  -  -      nop
  231 D1:AA3D CD D9 A9 D1     call waituntilnewkeypress
  232 D1:AA41 CD D1 A9 D1     call waituntilkeyrelease
  233 D1:AA45 C3 44 A9 D1     jp programExit
  234 D1:AA49 -  -  -  -  
  235 D1:AA49 -  -  -  -  err_noContainersFound:
  236 D1:AA49 CD 33 AA D1     call err_err
  237 D1:AA4D 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  238 D1:AA6C -  -  -  -  
  239 D1:AA6C -  -  -  -  err_missingFiles:
  240 D1:AA6C F5 -  -  -      push af
  241 D1:AA6D 21 7E AA D1         ld  hl,err_missingFiles_str
  242 D1:AA71 CD E3 AE D1         call printString
  243 D1:AA75 F1 -  -  -      pop af
  244 D1:AA76 CD 29 AF D1     call printSmallNumPair
  245 D1:AA7A C3 38 AA D1     jp err_err_quit
  246 D1:AA7E -  -  -  -  err_missingFiles_str:
  247 D1:AA7E 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  248 D1:AA98 -  -  -  -  
  249 D1:AA98 -  -  -  -  err_tooManyFiles:
  250 D1:AA98 CD 33 AA D1     call err_err
  251 D1:AA9C 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  252 D1:AAB2 -  -  -  -  
  253 D1:AAB2 -  -  -  -  err_PRGROMTooLarge:
  254 D1:AAB2 CD 33 AA D1     call err_err
  255 D1:AAB6 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  256 D1:AAC9 -  -  -  -  err_CHRROMTooLarge:
  257 D1:AAC9 CD 33 AA D1     call err_err
  258 D1:AACD 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  259 D1:AAE0 -  -  -  -  
  260 D1:AAE0 -  -  -  -  err_missingROMDetected:
  261 D1:AAE0 CD 33 AA D1     call err_err
  262 D1:AAE4 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  263 D1:AB00 -  -  -  -  
  264 D1:AB00 -  -  -  -  err_ROMHeaderDamaged:
  265 D1:AB00 CD 33 AA D1     call err_err
  266 D1:AB04 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  267 D1:AB1D -  -  -  -  
  268 D1:AB1D -  -  -  -  err_MapperOutOfRange:
  269 D1:AB1D CD 33 AA D1     call err_err
  270 D1:AB21 4D 61 70 70 
              65 72 20 73 
              70 65 63 69 
              66 69 65 64 
              20 6F 75 74 
              20 6F 66 20 
              72 61 6E 67 
              65 2E 00 -  .db "Mapper specified out of range.",0
  271 D1:AB40 -  -  -  -  
  272 D1:AB40 -  -  -  -  err_CHRROMNotFound:
  273 D1:AB40 CD 33 AA D1     call err_err
  274 D1:AB44 43 48 52 5F 
              52 4F 4D 20 
              6E 6F 74 20 
              66 6F 75 6E 
              64 20 69 6E 
              73 69 64 65 
              20 66 69 6C 
              65 00 -  -  .db "CHR_ROM not found inside file",0
  275 D1:AB62 -  -  -  -  
  276 D1:AB62 -  -  -  -  
  277 D1:AB62 -  -  -  -  ;Input: DE = Address of first file after the container header signature
  278 D1:AB62 -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  279 D1:AB62 -  -  -  -  ;Destroys: All registers.
  280 D1:AB62 -  -  -  -  loadROMFile:
  281 D1:AB62 EB -  -  -      ex  de,hl
  282 D1:AB63 AF -  -  -      xor a,a
  283 D1:AB64 32 08 34 D0     ld  (missing_files),a
  284 D1:AB68 BE -  -  -  _:  cp  (hl)    ;
  285 D1:AB69 23 -  -  -      inc hl      ;
  286 D1:AB6A 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  287 D1:AB6C 22 05 34 D0     ld  (basefile_sig),hl
  288 D1:AB70 01 10 00 00     ld  bc,SIZEOF_INTEGRITY_HASH
  289 D1:AB74 09 -  -  -      add hl,bc
  290 D1:AB75 7E -  -  -      ld  a,(hl)
  291 D1:AB76 FE 01 -  -      cp  a,MAXNUMFILES
  292 D1:AB78 D2 98 AA D1     jp  nc,err_tooManyFiles
  293 D1:AB7C 32 04 34 D0     ld  (inputNumFiles),a
  294 D1:AB80 47 -  -  -      ld  b,a
  295 D1:AB81 -  -  -  -  ;    ld  c,SIZEOF_INTEGRITY_HASH     ;c already set to this value from earlier.
  296 D1:AB81 ED 4C -  -      mlt bc
  297 D1:AB83 23 -  -  -      inc hl
  298 D1:AB84 E5 -  -  -      push hl
  299 D1:AB85 09 -  -  -          add hl,bc
  300 D1:AB86 FD 21 21 34 
              D0 -  -  -          ld  iy,FILETABLE
  301 D1:AB8B 4E -  -  -          ld  c,(hl)
  302 D1:AB8C 23 -  -  -          inc hl
  303 D1:AB8D 46 -  -  -          ld  b,(hl)
  304 D1:AB8E 23 -  -  -          inc hl
  305 D1:AB8F 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  306 D1:AB93 FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  307 D1:AB96 E1 -  -  -      pop hl
  308 D1:AB97 3C -  -  -      inc a
  309 D1:AB98 3D -  -  -      dec a
  310 D1:AB99 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  311 D1:AB9B -  -  -  -      ;If more than one file, fill FILETABLE.
  312 D1:AB9B -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  313 D1:AB9B ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  314 D1:AB9E 47 -  -  -      ld  b,a
  315 D1:AB9F -  -  -  -  loadROMFile_multiFileLoadLoop:
  316 D1:AB9F C5 -  -  -      push bc
  317 D1:ABA0 FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  318 D1:ABA3 01 10 00 00         ld  bc,16
  319 D1:ABA7 11 83 AD D1         ld  de,loadROMFile_tempSigHash
  320 D1:ABAB ED B0 -  -          ldir
  321 D1:ABAD E5 -  -  -          push hl
  322 D1:ABAE FD E5 -  -              push iy
  323 D1:ABB0 01 17 00 00                 ld  bc,23
  324 D1:ABB4 FD 21 7C AD 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  325 D1:ABB9 CD 93 AD D1                 call vatTraverse    ;returns DE @ datasection size if found
  326 D1:ABBD 30 05 -  -                  jr  nc,+_
  327 D1:ABBF 21 08 34 D0                 ld  hl,missing_files
  328 D1:ABC3 34 -  -  -                  inc (hl)
  329 D1:ABC4 FD E1 -  -  _:          pop iy
  330 D1:ABC6 EB -  -  -              ex  de,hl
  331 D1:ABC7 5E -  -  -              ld  e,(hl)
  332 D1:ABC8 23 -  -  -              inc hl
  333 D1:ABC9 56 -  -  -              ld  d,(hl)
  334 D1:ABCA 23 -  -  -              inc hl
  335 D1:ABCB 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  336 D1:ABCF FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  337 D1:ABD2 E1 -  -  -          pop hl
  338 D1:ABD3 C1 -  -  -      pop bc
  339 D1:ABD4 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  340 D1:ABD7 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  341 D1:ABD9 3A 08 34 D0     ld  a,(missing_files)
  342 D1:ABDD B7 -  -  -      or  a,a
  343 D1:ABDE C2 6C AA D1     jp  nz,err_missingFiles
  344 D1:ABE2 -  -  -  -  loadROMFile_singleFileLoad:
  345 D1:ABE2 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  346 D1:ABE2 3A 04 34 D0     ld  a,(inputNumFiles)
  347 D1:ABE6 3C -  -  -      inc a
  348 D1:ABE7 47 -  -  -      ld  b,a
  349 D1:ABE8 21 00 00 00     ld  hl,0
  350 D1:ABEC DD 21 21 34 
              D0 -  -  -      ld  ix,FILETABLE
  351 D1:ABF1 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  352 D1:ABF5 19 -  -  -      add hl,de
  353 D1:ABF6 ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  354 D1:ABF9 10 F6 -  -      djnz -_
  355 D1:ABFB 01 F0 FF FF     ld  bc,-16
  356 D1:ABFF 09 -  -  -      add hl,bc   ;subtract INES header
  357 D1:AC00 22 09 34 D0     ld  (total_rom_size),hl
  358 D1:AC04 -  -  -  -      ;Verify that the file actually contains an INES header.
  359 D1:AC04 -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  360 D1:AC04 DD 2A 23 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  361 D1:AC09 DD 27 00 -      ld  hl,(ix+0)
  362 D1:AC0C 11 4E 45 53     ld  de,$53454E         ;4E 45 53 == "NES"
  363 D1:AC10 B7 -  -  -      or  a,a
  364 D1:AC11 ED 52 -  -      sbc hl,de   ;Note: add does not affect zero flag. Can't test this via -DE
  365 D1:AC13 C2 00 AB D1 _:  jp  nz,err_ROMHeaderDamaged
  366 D1:AC17 DD 7E 03 -      ld  a,(ix+3)
  367 D1:AC1A FE 1A -  -      cp  a,$1A
  368 D1:AC1C 20 F5 -  -      jr  nz,-_   ;19
  369 D1:AC1E -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  370 D1:AC1E -  -  -  -      ;Note: The below line is optimized from...
  371 D1:AC1E DD 2A 23 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  372 D1:AC23 -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  373 D1:AC23 -  -  -  -      ;these here just in case there's ever a question about it.
  374 D1:AC23 -  -  -  -  ;    ld  ix,FILETABLE
  375 D1:AC23 -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  376 D1:AC23 DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  377 D1:AC26 DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  378 D1:AC29 26 00 -  -      ld  h,0
  379 D1:AC2B 54 -  -  -      ld  d,h
  380 D1:AC2C DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  381 D1:AC2F E6 0C -  -      and a,%00001100
  382 D1:AC31 FE 08 -  -      cp  a,%00001000
  383 D1:AC33 20 1B -  -      jr  nz,+_
  384 D1:AC35 DD 7E 09 -      ld  a,(ix+9)
  385 D1:AC38 47 -  -  -      ld  b,a
  386 D1:AC39 E6 0F -  -      and a,$0F
  387 D1:AC3B FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  388 D1:AC3D D2 B2 AA D1     jp  nc,err_PRGROMTooLarge
  389 D1:AC41 67 -  -  -      ld  h,a
  390 D1:AC42 78 -  -  -      ld  a,b
  391 D1:AC43 E6 F0 -  -      and a,$F0
  392 D1:AC45 07 -  -  -      rlca
  393 D1:AC46 07 -  -  -      rlca
  394 D1:AC47 07 -  -  -      rlca
  395 D1:AC48 07 -  -  -      rlca
  396 D1:AC49 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  397 D1:AC4B D2 C9 AA D1     jp  nc,err_CHRROMTooLarge
  398 D1:AC4F 57 -  -  -      ld  d,a
  399 D1:AC50 AF -  -  -  _:  xor a,a
  400 D1:AC51 32 0C 34 D0     ld  (prg_rom_size),a
  401 D1:AC55 32 0F 34 D0     ld  (chr_rom_size),a
  402 D1:AC59 29 -  -  -      add hl,hl   ;x2
  403 D1:AC5A 29 -  -  -      add hl,hl   ;x4
  404 D1:AC5B 29 -  -  -      add hl,hl   ;x8
  405 D1:AC5C 29 -  -  -      add hl,hl   ;x16
  406 D1:AC5D 29 -  -  -      add hl,hl   ;x32
  407 D1:AC5E 29 -  -  -      add hl,hl   ;x64
  408 D1:AC5F 52 22 0D 34 
              D0 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  409 D1:AC64 EB -  -  -      ex  de,hl
  410 D1:AC65 29 -  -  -      add hl,hl   ;x2
  411 D1:AC66 29 -  -  -      add hl,hl   ;x4
  412 D1:AC67 29 -  -  -      add hl,hl   ;x8
  413 D1:AC68 29 -  -  -      add hl,hl   ;x16
  414 D1:AC69 29 -  -  -      add hl,hl   ;x32
  415 D1:AC6A 52 22 10 34 
              D0 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  416 D1:AC6F 2A 0F 34 D0     ld  hl,(chr_rom_size)
  417 D1:AC73 ED 5B 0C 34 
              D0 -  -  -      ld  de,(prg_rom_size)
  418 D1:AC78 19 -  -  -      add hl,de
  419 D1:AC79 ED 5B 09 34 
              D0 -  -  -      ld  de,(total_rom_size)
  420 D1:AC7E B7 -  -  -      or  a,a
  421 D1:AC7F ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  422 D1:AC81 28 04 -  -      jr  z,+_
  423 D1:AC83 D2 E0 AA D1     jp  nc,err_missingROMDetected
  424 D1:AC87 -  -  -  -  _:  ;Find trainer, PRG, and CHR base addresses
  425 D1:AC87 ED 22 10 -      lea hl,ix+16
  426 D1:AC8A 22 18 34 D0     ld  (trainer_base),hl   ;whether it exists or not.
  427 D1:AC8E 11 00 00 00     ld  de,0
  428 D1:AC92 DD CB 06 56     bit 2,(ix+6)
  429 D1:AC96 28 04 -  -      jr  z,+_
  430 D1:AC98 11 00 02 00     ld  de,512
  431 D1:AC9C 19 -  -  -  _:  add hl,de
  432 D1:AC9D 22 18 34 D0     ld  (prg_rom_base),hl
  433 D1:ACA1 FD 21 21 34 
              D0 -  -  -      ld  iy,FILETABLE
  434 D1:ACA6 52 FD 27 00     ld.s hl,(iy+FILE_SIZE_OFFSET)
  435 D1:ACAA B7 -  -  -      or  a,a
  436 D1:ACAB ED 52 -  -      sbc hl,de   ;less possible trainer
  437 D1:ACAD 11 10 00 00     ld  de,16
  438 D1:ACB1 ED 52 -  -      sbc hl,de   ;less iNES header. Remaining is now size of current file.
  439 D1:ACB3 EB -  -  -      ex  de,hl   ;curfilesize is now in DE
  440 D1:ACB4 2A 0C 34 D0     ld  hl,(prg_rom_size)   ;keep subtracting filesize from this until carry.
  441 D1:ACB8 B7 -  -  -      or  a,a
  442 D1:ACB9 ED 52 -  -      sbc hl,de   ;if carry, prg_rom end is inside this file. Undo: HL is offset.
  443 D1:ACBB 0E 00 -  -      ld  c,0     ;0th file current
  444 D1:ACBD 38 1D -  -      jr  c,loadROMFile_locatedCHRROM
  445 D1:ACBF 3A 04 34 D0     ld  a,(inputNumFiles)
  446 D1:ACC3 B7 -  -  -      or  a,a
  447 D1:ACC4 28 12 -  -      jr  z,loadROMFile_noCHRROMFound
  448 D1:ACC6 47 -  -  -      ld  b,a
  449 D1:ACC7 ED 33 08 -  _:  lea iy,iy+FILETABLE_STRIDE
  450 D1:ACCA 52 ED 5B 00 
              00 00 -  -      ld.s de,(FILE_SIZE_OFFSET)
  451 D1:ACD0 0C -  -  -      inc c
  452 D1:ACD1 B7 -  -  -      or  a,a
  453 D1:ACD2 ED 52 -  -      sbc hl,de   ;
  454 D1:ACD4 38 06 -  -      jr  c,loadROMFile_locatedCHRROM
  455 D1:ACD6 10 EF -  -      djnz -_
  456 D1:ACD8 -  -  -  -  loadROMFile_noCHRROMFound:
  457 D1:ACD8 C3 40 AB D1     jp  err_CHRROMNotFound
  458 D1:ACDC -  -  -  -  loadROMFile_locatedCHRROM:
  459 D1:ACDC 19 -  -  -      add hl,de       ;Undid subtract. HL is now offset in current file
  460 D1:ACDD FD 17 02 -      ld  de,(iy+FILE_ADR_OFFSET) ;so get address inside that file.
  461 D1:ACE0 19 -  -  -      add hl,de
  462 D1:ACE1 79 -  -  -      ld  a,c
  463 D1:ACE2 22 1B 34 D0     ld  (chr_rom_base),hl
  464 D1:ACE6 32 1E 34 D0     ld  (chr_rom_base_file),a
  465 D1:ACEA -  -  -  -      ;Detect mapper and run its initializer
  466 D1:ACEA DD 7E 06 -      ld  a,(ix+6)
  467 D1:ACED DD 46 07 -      ld  b,(ix+7)
  468 D1:ACF0 07 -  -  -      rlca
  469 D1:ACF1 07 -  -  -      rlca
  470 D1:ACF2 07 -  -  -      rlca
  471 D1:ACF3 07 -  -  -      rlca
  472 D1:ACF4 A8 -  -  -      xor a,b
  473 D1:ACF5 E6 0F -  -      and a,$0F
  474 D1:ACF7 A8 -  -  -      xor a,b
  475 D1:ACF8 52 EB -  -      ex.s de,hl  ;clears HLU,DEU
  476 D1:ACFA 5F -  -  -      ld  e,a
  477 D1:ACFB 21 12 34 D0     ld  hl,submapper
  478 D1:ACFF 36 00 -  -      ld  (hl),0
  479 D1:AD01 78 -  -  -      ld  a,b
  480 D1:AD02 E6 0C -  -      and a,%00001100
  481 D1:AD04 FE 08 -  -      cp  a,%00001000
  482 D1:AD06 3E 00 -  -      ld  a,0
  483 D1:AD08 20 0E -  -      jr  nz,+_
  484 D1:AD0A DD 46 08 -      ld  b,(ix+8)
  485 D1:AD0D 78 -  -  -      ld  a,b
  486 D1:AD0E 07 -  -  -      rlca
  487 D1:AD0F 07 -  -  -      rlca
  488 D1:AD10 07 -  -  -      rlca
  489 D1:AD11 07 -  -  -      rlca
  490 D1:AD12 E6 0F -  -      and a,$0F
  491 D1:AD14 77 -  -  -      ld  (hl),a
  492 D1:AD15 78 -  -  -      ld  a,b
  493 D1:AD16 E6 0F -  -      and a,$0F
  494 D1:AD18 57 -  -  -  _:  ld  d,a
  495 D1:AD19 ED 53 14 34 
              D0 -  -  -      ld  (mapper_id),de
  496 D1:AD1E 21 FF FF FF     ld  hl,-NUMBER_OF_MAPPERS
  497 D1:AD22 19 -  -  -      add hl,de
  498 D1:AD23 DA 1D AB D1     jp  c,err_MapperOutOfRange
  499 D1:AD27 ED 62 -  -      sbc hl,hl
  500 D1:AD29 19 -  -  -      add hl,de               ;hl=de. both are mapper IDs
  501 D1:AD2A 2E 09 -  -      ld  L,MAPPER_STRIDE
  502 D1:AD2C 55 -  -  -      ld  d,L
  503 D1:AD2D ED 6C -  -      mlt hl                  ;high byte multiply
  504 D1:AD2F 65 -  -  -      ld  h,L
  505 D1:AD30 2E 00 -  -      ld  L,0
  506 D1:AD32 ED 5C -  -      mlt de                  ;low byte multiply
  507 D1:AD34 19 -  -  -      add hl,de               ;This is the best 16bit * 8bit I know to do.
  508 D1:AD35 11 41 AD D1     ld  de,mapper_table
  509 D1:AD39 19 -  -  -      add hl,de
  510 D1:AD3A 22 15 34 D0     ld  (mapper_adr_base),hl
  511 D1:AD3E ED 27 -  -      ld  hl,(hl)
  512 D1:AD40 E9 -  -  -      jp  (hl)
  513 D1:AD41 -  -  -  -  
  514 D1:AD41 -  -  -  -  mapper_table:   ;entries 9 wide
  515 D1:AD41 4A AD D1 -  .dl mapper0_init
  516 D1:AD44 78 AD D1 -  .dl mapper0_read
  517 D1:AD47 7A AD D1 -  .dl mapper0_write
  518 D1:AD4A -  -  -  -  
  519 D1:AD4A -  -  -  -  mapper0_init:
  520 D1:AD4A -  -  -  -      ;map trainer, if exist
  521 D1:AD4A DD CB 06 56     bit 2,(ix+6)
  522 D1:AD4E 28 0D -  -      jr  z,+_
  523 D1:AD50 2A 18 34 D0     ld  hl,(trainer_base)
  524 D1:AD54 1E 70 -  -      ld  e,$70
  525 D1:AD56 0E 02 -  -      ld  c,2
  526 D1:AD58 41 -  -  -      ld  b,c
  527 D1:AD59 CD 5C B5 D1     call i6502_map_pages
  528 D1:AD5D 2A 0C 34 D0 _:  ld  hl,(prg_rom_size)
  529 D1:AD61 11 FF BF FF     ld  de,-(16384+1)
  530 D1:AD65 19 -  -  -      add hl,de   ;carry if more than 1 16KB segment
  531 D1:AD66 2A 18 34 D0     ld  hl,(prg_rom_base)
  532 D1:AD6A -  -  -  -      ;jr  $
  533 D1:AD6A 06 80 -  -      ld  b,$80
  534 D1:AD6C 58 -  -  -      ld  e,b
  535 D1:AD6D 0E 40 -  -      ld  c,$40
  536 D1:AD6F 30 02 -  -      jr  nc,+_
  537 D1:AD71 CB 21 -  -      sla c
  538 D1:AD73 CD 5C B5 D1 _:  call i6502_map_pages
  539 D1:AD77 C9 -  -  -      ret
  540 D1:AD78 -  -  -  -  
  541 D1:AD78 -  -  -  -  
  542 D1:AD78 -  -  -  -  mapper0_read:
  543 D1:AD78 7E -  -  -      ld  a,(hl)
  544 D1:AD79 C9 -  -  -      ret
  545 D1:AD7A -  -  -  -  mapper0_write:
  546 D1:AD7A 70 -  -  -      ld  (hl),b
  547 D1:AD7B C9 -  -  -      ret
  548 D1:AD7C -  -  -  -  
  549 D1:AD7C -  -  -  -  
  550 D1:AD7C -  -  -  -  
  551 D1:AD7C -  -  -  -  
  552 D1:AD7C -  -  -  -  
  553 D1:AD7C -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  554 D1:AD7C 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  555 D1:AD83 -  -  -  -  loadROMFile_tempSigHash:
  556 D1:AD83 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  557 D1:AD93 -  -  -  -  
  558 D1:AD93 -  -  -  -  
  559 D1:AD93 -  -  -  -  ;Input: IY = locationOfSignature. 
  560 D1:AD93 -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  561 D1:AD93 -  -  -  -  ;Output: carry=1: Variable not found.
  562 D1:AD93 -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  563 D1:AD93 -  -  -  -  ;        IX=location of current variable's VAT location.
  564 D1:AD93 -  -  -  -  ;Destroys: All registers not in use.
  565 D1:AD93 -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  566 D1:AD93 -  -  -  -  
  567 D1:AD93 -  -  -  -  ;To continue searching:
  568 D1:AD93 -  -  -  -  ;call vatTraverse_continue with the following inputs:
  569 D1:AD93 -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  570 D1:AD93 -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  571 D1:AD93 -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  572 D1:AD93 -  -  -  -  vatTraverse:
  573 D1:AD93 -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  574 D1:AD93 DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  575 D1:AD98 -  -  -  -  vatTraverse_loop:
  576 D1:AD98 2A 9A 25 D0     ld  hl,(pTemp)
  577 D1:AD9C ED 12 00 -      lea de,ix+0
  578 D1:AD9F B7 -  -  -      or  a,a
  579 D1:ADA0 ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  580 D1:ADA2 3F -  -  -      ccf
  581 D1:ADA3 D8 -  -  -      ret c
  582 D1:ADA4 1A -  -  -      ld  a,(de)
  583 D1:ADA5 E6 1F -  -      and a,$1F
  584 D1:ADA7 FE 15 -  -      cp  a,AppVarObj
  585 D1:ADA9 20 34 -  -      jr  nz,vatTraverse_skip
  586 D1:ADAB DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  587 D1:ADAE DD 5E FD -      ld  e,(ix-3)
  588 D1:ADB1 DD 56 FC -      ld  d,(ix-4)
  589 D1:ADB4 CD 98 1F 02     call _ChkInRam
  590 D1:ADB8 EB -  -  -      ex  de,hl
  591 D1:ADB9 30 08 -  -      jr  nc,+_
  592 D1:ADBB 11 09 00 00     ld  de,9
  593 D1:ADBF 19 -  -  -      add hl,de
  594 D1:ADC0 5E -  -  -      ld  e,(hl)
  595 D1:ADC1 19 -  -  -      add hl,de
  596 D1:ADC2 23 -  -  -      inc hl
  597 D1:ADC3 5E -  -  -  _:  ld  e,(hl)
  598 D1:ADC4 23 -  -  -      inc hl
  599 D1:ADC5 56 -  -  -      ld  d,(hl)
  600 D1:ADC6 23 -  -  -      inc hl
  601 D1:ADC7 EB -  -  -      ex  de,hl
  602 D1:ADC8 B7 -  -  -      or  a,a
  603 D1:ADC9 ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  604 D1:ADCB 38 12 -  -      jr  c,vatTraverse_skip
  605 D1:ADCD ED 23 00 -      lea hl,iy+0
  606 D1:ADD0 C5 -  -  -      push bc
  607 D1:ADD1 1A -  -  -  _:      ld  a,(de)
  608 D1:ADD2 13 -  -  -          inc de
  609 D1:ADD3 ED A1 -  -          cpi
  610 D1:ADD5 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  611 D1:ADD7 EA D1 AD D1         jp  pe,-_
  612 D1:ADDB C1 -  -  -      pop bc
  613 D1:ADDC B7 -  -  -      or  a,a
  614 D1:ADDD C9 -  -  -      ret         ;NC. DE = past the signature.
  615 D1:ADDE -  -  -  -  vatTraverse_sigNoMatch:
  616 D1:ADDE C1 -  -  -      pop bc
  617 D1:ADDF -  -  -  -  vatTraverse_continue:
  618 D1:ADDF -  -  -  -  vatTraverse_skip:
  619 D1:ADDF 3E 07 -  -      ld  a,7
  620 D1:ADE1 11 FF FF FF     ld  de,-1
  621 D1:ADE5 DD 86 FA -      add a,(ix-6)
  622 D1:ADE8 ED 44 -  -      neg
  623 D1:ADEA 5F -  -  -      ld  e,a
  624 D1:ADEB DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  625 D1:ADED 18 A9 -  -      jr  vatTraverse_loop
  626 D1:ADEF -  -  -  -  
  627 D1:ADEF -  -  -  -  
  628 D1:ADEF -  -  -  -  
  629 D1:ADEF -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:ADEF -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:ADEF -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:ADEF -  -  -  -  
    3 D1:ADEF -  -  -  -  ;Various Parts Contributed by
    4 D1:ADEF -  -  -  -  ;- BrandonW
    5 D1:ADEF -  -  -  -  ;- calc84
    6 D1:ADEF -  -  -  -  ;- MateoConLechuga
    7 D1:ADEF -  -  -  -  ;- Runer112
    8 D1:ADEF -  -  -  -  ;- tr1p1ea
    9 D1:ADEF -  -  -  -  ;- Kerm Martian
   10 D1:ADEF -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:ADEF -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:ADEF -  -  -  -  ;
    6 D1:ADEF -  -  -  -  ;
    7 D1:ADEF -  -  -  -  ;
    8 D1:ADEF -  -  -  -  
    9 D1:ADEF -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:ADEF -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:ADEF -  -  -  -  
   12 D1:ADEF -  -  -  -  screenBuf1      .equ vRam
   13 D1:ADEF -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:ADEF -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:ADEF -  -  -  -  xPos                .equ $D031F6
   16 D1:ADEF -  -  -  -  yPos                .equ $D031F7
   17 D1:ADEF -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:ADEF -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:ADEF -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:ADEF -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:ADEF -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:ADEF -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:ADEF -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:ADEF -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:ADEF -  -  -  -  
   26 D1:ADEF -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:ADEF -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:ADEF -  -  -  -  
   29 D1:ADEF -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:ADEF -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:ADEF -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:ADEF -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:ADEF -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:ADEF -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:ADEF -  -  -  -  
   36 D1:ADEF -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:ADEF -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:ADEF -  -  -  -  
   39 D1:ADEF -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:ADEF -  -  -  -  ;
   41 D1:ADEF -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:ADEF -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:ADEF -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   44 D1:ADEF -  -  -  -  basefile_sig        .equ inputNumFiles+1    ;3b pointer to 16b hash
   45 D1:ADEF -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   46 D1:ADEF -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   47 D1:ADEF -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   48 D1:ADEF -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   49 D1:ADEF -  -  -  -  submapper           .equ chr_rom_size+3     ;1b. iNES2 thing. Not often used.
   50 D1:ADEF -  -  -  -  ines_flag_6         .equ submapper+1        ;1b. Flags that a mapper may need.
   51 D1:ADEF -  -  -  -  mapper_id           .equ ines_flag_6+1      ;3b. Convenience load for 12 bits
   52 D1:ADEF -  -  -  -  mapper_adr_base     .equ mapper_id+1        ;3b. Used to load mapper
   53 D1:ADEF -  -  -  -  trainer_base        .equ mapper_adr_base+3  ;3b. If exist, starts here
   54 D1:ADEF -  -  -  -  prg_rom_base        .equ mapper_adr_base+3  ;3b. Adjusted in case of trainer.
   55 D1:ADEF -  -  -  -  chr_rom_base        .equ prg_rom_base+3     ;3b. Located somewhere.
   56 D1:ADEF -  -  -  -  chr_rom_base_file   .equ chr_rom_base+3     ;1b. Nonzero if not in first file.
   57 D1:ADEF -  -  -  -  
   58 D1:ADEF -  -  -  -  SIZEOF_INTEGRITY_HASH    .equ 16
   59 D1:ADEF -  -  -  -  MAXPRGROM_HINIB     .equ 1
   60 D1:ADEF -  -  -  -  MAXCHRROM_HINIB     .equ 3
   61 D1:ADEF -  -  -  -  NUMBER_OF_MAPPERS   .equ 1
   62 D1:ADEF -  -  -  -  MAPPER_STRIDE       .equ 9
   63 D1:ADEF -  -  -  -  
   64 D1:ADEF -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   65 D1:ADEF -  -  -  -  FILETABLE_STRIDE    .equ 8
   66 D1:ADEF -  -  -  -  FILETABLE           .equ chr_rom_base_file+3   ;(MAXNUMFILES*FILETABLE_STRIDE)b
   67 D1:ADEF -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   68 D1:ADEF -  -  -  -  FILE_ADR_OFFSET     .equ 2
   69 D1:ADEF -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   70 D1:ADEF -  -  -  -  
   71 D1:ADEF -  -  -  -  
   72 D1:ADEF -  -  -  -  
   73 D1:ADEF -  -  -  -  ;
   74 D1:ADEF -  -  -  -  ;
   75 D1:ADEF -  -  -  -  
   76 D1:ADEF -  -  -  -  ;Undefine this to speed up core process by losing debug state
   77 D1:ADEF -  -  -  -  #define COREDEBUG
   78 D1:ADEF -  -  -  -  
   79 D1:ADEF -  -  -  -  ;core memory
   80 D1:ADEF -  -  -  -  #define REGA 0
   81 D1:ADEF -  -  -  -  #define REGX 1
   82 D1:ADEF -  -  -  -  #define REGY 2
   83 D1:ADEF -  -  -  -  #define REGSP 3
   84 D1:ADEF -  -  -  -  #define REGSR 4
   85 D1:ADEF -  -  -  -  #define REGPC 5
   86 D1:ADEF -  -  -  -  #define CYCLES_REMAIN 8
   87 D1:ADEF -  -  -  -  #define CYCLES_CURRENT 11
   88 D1:ADEF -  -  -  -  #define CURRENT_OPCODES 14
   89 D1:ADEF -  -  -  -  ;flag IDs
   90 D1:ADEF -  -  -  -  #define SF_NEG 7
   91 D1:ADEF -  -  -  -  #define SF_OVER 6 
   92 D1:ADEF -  -  -  -  #define SF_RESERVED 5 
   93 D1:ADEF -  -  -  -  #define SF_BRK 4
   94 D1:ADEF -  -  -  -  #define SF_DEC 3
   95 D1:ADEF -  -  -  -  #define SF_INT 2
   96 D1:ADEF -  -  -  -  #define SF_ZERO 1
   97 D1:ADEF -  -  -  -  #define SF_CARRY 0
   98 D1:ADEF -  -  -  -  
   99 D1:ADEF -  -  -  -  #macro ADDCYC(X)
  100 D1:ADEF                 #if (x < 1)
  101 D1:ADEF                     nop
  102 D1:ADEF                 #elif (X = 1)
  103 D1:ADEF                     inc iy
  104 D1:ADEF                 #else
  105 D1:ADEF                     lea iy,iy+X
  106 D1:ADEF                 #endif
  107 D1:ADEF             #endmacro
  108 D1:ADEF -  -  -  -  
  109 D1:ADEF -  -  -  -  ;
  110 D1:ADEF -  -  -  -  ;
  111 D1:ADEF -  -  -  -  ;
  112 D1:ADEF -  -  -  -  #endif
  113 D1:ADEF -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:ADEF -  -  -  -  
    4 D1:ADEF -  -  -  -  ;Function list:
    5 D1:ADEF -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:ADEF -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:ADEF -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:ADEF -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:ADEF -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:ADEF -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:ADEF -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:ADEF -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:ADEF -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:ADEF -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:ADEF -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:ADEF -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:ADEF -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:ADEF -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:ADEF -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into HL= screen buffer address.
   20 D1:ADEF -  -  -  -  ; calculateScreenPtrDE - Converts E=xPos,D=yPos into HL= screen buffer address.
   21 D1:ADEF -  -  -  -  ;
   22 D1:ADEF -  -  -  -  ;
   23 D1:ADEF -  -  -  -  ;
   24 D1:ADEF -  -  -  -  ;
   25 D1:ADEF -  -  -  -  ;
   26 D1:ADEF -  -  -  -  ;
   27 D1:ADEF -  -  -  -  ;
   28 D1:ADEF -  -  -  -  
   29 D1:ADEF -  -  -  -  
   30 D1:ADEF -  -  -  -  
   31 D1:ADEF -  -  -  -  
   32 D1:ADEF -  -  -  -  ;-----------------------------------------------------------------------------
   33 D1:ADEF -  -  -  -  ;Screen hardware interface stuff
   34 D1:ADEF -  -  -  -  
   35 D1:ADEF -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   36 D1:ADEF -  -  -  -  fastCopy:
   37 D1:ADEF 11 00 00 D4     ld  de,screenBuf1
   38 D1:ADF3 2A 10 00 E3     ld  hl,(mpLcdBase)
   39 D1:ADF7 22 00 34 D0     ld  (curScreenBuf),hl
   40 D1:ADFB B7 -  -  -      or  a,a
   41 D1:ADFC ED 52 -  -      sbc hl,de
   42 D1:ADFE EB -  -  -      ex  de,hl
   43 D1:ADFF 20 04 -  -      jr  nz,+_
   44 D1:AE01 21 00 2C D5     ld  hl,screenBuf2
   45 D1:AE05 22 10 00 E3 _:  ld  (mpLcdBase),hl
   46 D1:AE09 C9 -  -  -      ret
   47 D1:AE0A -  -  -  -  
   48 D1:AE0A -  -  -  -  stopGfx:
   49 D1:AE0A CD 74 03 00     call _boot_ClearVRAM
   50 D1:AE0E 11 2D 09 00     ld  de,lcdNormalMode
   51 D1:AE12 01 00 00 D4     ld  bc,screenBuf1
   52 D1:AE16 18 0C -  -      jr  configureScreen
   53 D1:AE18 -  -  -  -  
   54 D1:AE18 -  -  -  -  startGfx:
   55 D1:AE18 CD 74 03 00     call _boot_ClearVRAM
   56 D1:AE1C 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   57 D1:AE20 01 00 00 D4     ld  bc,screenBuf1
   58 D1:AE24 -  -  -  -  configureScreen:
   59 D1:AE24 21 10 00 E3     ld  hl,mpLcdBase
   60 D1:AE28 ED 0F -  -      ld  (hl),bc
   61 D1:AE2A 2E 18 -  -      ld  L,lcdCtrl
   62 D1:AE2C ED 1F -  -      ld  (hl),de
   63 D1:AE2E 2E 01 -  -      ld  L,lcdTiming0 + 1
   64 D1:AE30 01 08 00 00     ld  bc,8
   65 D1:AE34 11 63 AE D1     ld  de,screenSettings
   66 D1:AE38 1A -  -  -  _:  ld  a,(de)
   67 D1:AE39 ED A0 -  -      ldi
   68 D1:AE3B 2B -  -  -      dec hl
   69 D1:AE3C 77 -  -  -      ld  (hl),a
   70 D1:AE3D 23 -  -  -      inc hl
   71 D1:AE3E EA 38 AE D1     jp  pe,-_
   72 D1:AE42 21 00 2C D5     ld  hl,screenBuf2
   73 D1:AE46 22 00 34 D0     ld  (curScreenBuf),hl
   74 D1:AE4A -  -  -  -  ;Also copied from graphx
   75 D1:AE4A -  -  -  -  setDefaultPalette:
   76 D1:AE4A 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   77 D1:AE4E 43 -  -  -  	ld	b,e			        ; b = 0
   78 D1:AE4F 78 -  -  -  _:	ld	a,b
   79 D1:AE50 0F -  -  -  	rrca
   80 D1:AE51 A8 -  -  -  	xor	a,b
   81 D1:AE52 E6 E0 -  -  	and	a,224
   82 D1:AE54 A8 -  -  -  	xor	a,b
   83 D1:AE55 12 -  -  -  	ld	(de),a
   84 D1:AE56 13 -  -  -  	inc	de
   85 D1:AE57 78 -  -  -  	ld	a,b
   86 D1:AE58 17 -  -  -  	rla
   87 D1:AE59 17 -  -  -  	rla
   88 D1:AE5A 17 -  -  -  	rla
   89 D1:AE5B 78 -  -  -  	ld	a,b
   90 D1:AE5C 1F -  -  -  	rra
   91 D1:AE5D 12 -  -  -  	ld	(de),a
   92 D1:AE5E 13 -  -  -  	inc	de
   93 D1:AE5F 04 -  -  -  	inc	b
   94 D1:AE60 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   95 D1:AE62 C9 -  -  -  	ret
   96 D1:AE63 -  -  -  -  
   97 D1:AE63 -  -  -  -  screenSettings:
   98 D1:AE63 -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   99 D1:AE63 -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
  100 D1:AE63 07 -  -  -  	.db	7					; HSW
  101 D1:AE64 57 -  -  -  	.db	87					; HFP
  102 D1:AE65 3F -  -  -  	.db	63					; HBP
  103 D1:AE66 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  104 D1:AE68 B3 -  -  -  	.db	179					; VFP
  105 D1:AE69 00 -  -  -  	.db	0					; VBP
  106 D1:AE6A 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  107 D1:AE6B -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  108 D1:AE6B -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  109 D1:AE6B -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  110 D1:AE6B -  -  -  -  ; Hz = 48000000/CC = 60
  111 D1:AE6B -  -  -  -  
  112 D1:AE6B -  -  -  -  
  113 D1:AE6B -  -  -  -  ;-----------------------------------------------------------------------------
  114 D1:AE6B -  -  -  -  ; Text Rendering
  115 D1:AE6B -  -  -  -  
  116 D1:AE6B -  -  -  -  clearTextBuf:
  117 D1:AE6B 21 00 50 D0     ld  hl,NAMETABLE1
  118 D1:AE6F 11 01 50 D0     ld  de,NAMETABLE1+1
  119 D1:AE73 01 FF 03 00     ld  bc,1023
  120 D1:AE77 36 20 -  -      ld  (hl),' '
  121 D1:AE79 ED B0 -  -      ldir
  122 D1:AE7B C9 -  -  -      ret
  123 D1:AE7C -  -  -  -  
  124 D1:AE7C -  -  -  -  printTextBuf:
  125 D1:AE7C 2A F6 31 D0     ld  hl,(xPos)
  126 D1:AE80 22 B0 AE D1     ld  (printTextBuf_smcPosRecovery),hl
  127 D1:AE84 21 00 50 D0     ld  hl,NAMETABLE1
  128 D1:AE88 AF -  -  -      xor a,a
  129 D1:AE89 32 F7 31 D0     ld  (yPos),a
  130 D1:AE8D 0E 1E -  -      ld  c,30
  131 D1:AE8F 3E 08 -  -  _:  ld  a,8
  132 D1:AE91 32 F6 31 D0     ld  (xPos),a
  133 D1:AE95 06 20 -  -      ld  b,$20
  134 D1:AE97 7E -  -  -  _:  ld  a,(hl)
  135 D1:AE98 23 -  -  -      inc hl
  136 D1:AE99 C5 -  -  -      push bc
  137 D1:AE9A E5 -  -  -          push hl
  138 D1:AE9B CD F9 AE D1             call printBigFont
  139 D1:AE9F E1 -  -  -          pop hl
  140 D1:AEA0 C1 -  -  -      pop bc
  141 D1:AEA1 10 F4 -  -      djnz -_
  142 D1:AEA3 3A F7 31 D0     ld  a,(yPos)
  143 D1:AEA7 3C -  -  -      inc a
  144 D1:AEA8 32 F7 31 D0     ld  (yPos),a
  145 D1:AEAC 0D -  -  -      dec  c
  146 D1:AEAD 20 E0 -  -      jr  nz,--_
  147 D1:AEAF -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  148 D1:AEAF 21 00 00 00     ld  hl,0
  149 D1:AEB3 22 F6 31 D0     ld  (xPos),hl
  150 D1:AEB7 C9 -  -  -      ret
  151 D1:AEB8 -  -  -  -  
  152 D1:AEB8 -  -  -  -  ;A=column to start on
  153 D1:AEB8 -  -  -  -  setLineStart:
  154 D1:AEB8 32 F6 31 D0     ld  (xPos),a
  155 D1:AEBC 32 03 34 D0     ld  (linestart),a
  156 D1:AEC0 C9 -  -  -      ret
  157 D1:AEC1 -  -  -  -  
  158 D1:AEC1 -  -  -  -  ;A=row to start on
  159 D1:AEC1 -  -  -  -  setCurLine:
  160 D1:AEC1 32 F7 31 D0     ld  (yPos),a
  161 D1:AEC5 C9 -  -  -      ret
  162 D1:AEC6 -  -  -  -  
  163 D1:AEC6 -  -  -  -  newPage:
  164 D1:AEC6 3E FF -  -      ld  a,$FF
  165 D1:AEC8 32 F7 31 D0     ld  (yPos),a
  166 D1:AECC -  -  -  -  newLine:
  167 D1:AECC 3A 03 34 D0     ld  a,(linestart)
  168 D1:AED0 32 F6 31 D0     ld  (xPos),a
  169 D1:AED4 3A F7 31 D0     ld  a,(yPos)
  170 D1:AED8 3C -  -  -      inc a
  171 D1:AED9 FE 1E -  -      cp  30
  172 D1:AEDB 38 01 -  -      jr  c,+_
  173 D1:AEDD AF -  -  -      xor a,a
  174 D1:AEDE 32 F7 31 D0 _:  ld  (yPos),a
  175 D1:AEE2 C9 -  -  -      ret
  176 D1:AEE3 -  -  -  -  
  177 D1:AEE3 -  -  -  -      
  178 D1:AEE3 -  -  -  -      
  179 D1:AEE3 -  -  -  -  
  180 D1:AEE3 -  -  -  -  ;HL=address to string
  181 D1:AEE3 -  -  -  -  printString:
  182 D1:AEE3 7E -  -  -      ld  a,(hl)
  183 D1:AEE4 23 -  -  -      inc hl
  184 D1:AEE5 B7 -  -  -      or  a,a
  185 D1:AEE6 C8 -  -  -      ret z
  186 D1:AEE7 FE 0A -  -      cp  a,'\n'
  187 D1:AEE9 20 06 -  -      jr nz,+_
  188 D1:AEEB CD CC AE D1     call newLine
  189 D1:AEEF 18 F2 -  -      jr  printString
  190 D1:AEF1 E5 -  -  -  _:  push hl
  191 D1:AEF2 CD F9 AE D1         call printBigFont
  192 D1:AEF6 E1 -  -  -      pop hl
  193 D1:AEF7 18 EA -  -      jr printString
  194 D1:AEF9 -  -  -  -  
  195 D1:AEF9 -  -  -  -  
  196 D1:AEF9 -  -  -  -  ;in: A=chrToPrint
  197 D1:AEF9 -  -  -  -  printBigFont:
  198 D1:AEF9 CD 8E AF D1     call calculateScreenPtr
  199 D1:AEFD EB -  -  -      ex  de,hl
  200 D1:AEFE 6F -  -  -      ld  L,a
  201 D1:AEFF 26 08 -  -      ld  H,8
  202 D1:AF01 ED 6C -  -      mlt hl
  203 D1:AF03 01 A8 AE D1     ld  bc,graphx_textdata
  204 D1:AF07 09 -  -  -      add hl,bc
  205 D1:AF08 EB -  -  -      ex  de,hl
  206 D1:AF09 0E 08 -  -      ld  c,8
  207 D1:AF0B 06 08 -  -  _:  ld  b,8
  208 D1:AF0D 1A -  -  -      ld  a,(de)
  209 D1:AF0E 87 -  -  -  _:  add a,a
  210 D1:AF0F -  -  -  -  fontBGColor_var .equ $+1
  211 D1:AF0F 36 00 -  -      ld  (hl),FONTBGCOLOR
  212 D1:AF11 30 02 -  -      jr  nc,$+4
  213 D1:AF13 -  -  -  -  fontFGColor_var .equ $+1
  214 D1:AF13 36 FF -  -      ld  (hl),FONTFGCOLOR
  215 D1:AF15 23 -  -  -      inc hl
  216 D1:AF16 10 F6 -  -      djnz -_
  217 D1:AF18 79 -  -  -      ld  a,c
  218 D1:AF19 01 38 01 00     ld  bc,320-8
  219 D1:AF1D 09 -  -  -      add hl,bc
  220 D1:AF1E 4F -  -  -      ld  c,a
  221 D1:AF1F 13 -  -  -      inc de
  222 D1:AF20 0D -  -  -      dec c
  223 D1:AF21 20 E8 -  -      jr  nz,--_
  224 D1:AF23 21 F6 31 D0     ld  hl,xPos
  225 D1:AF27 34 -  -  -      inc (hl)
  226 D1:AF28 C9 -  -  -      ret
  227 D1:AF29 -  -  -  -  
  228 D1:AF29 -  -  -  -  ;A= 0-255 numeric value to display as hex
  229 D1:AF29 -  -  -  -  printSmallNumPair:
  230 D1:AF29 CD 8E AF D1     call calculateScreenPtr
  231 D1:AF2D F5 -  -  -      push af
  232 D1:AF2E 1F -  -  -          rra
  233 D1:AF2F 1F -  -  -          rra
  234 D1:AF30 1F -  -  -          rra
  235 D1:AF31 1F -  -  -          rra
  236 D1:AF32 CD 41 AF D1         call +_
  237 D1:AF36 F1 -  -  -      pop af
  238 D1:AF37 CD 41 AF D1     call +_
  239 D1:AF3B 21 F6 31 D0     ld  hl,xPos
  240 D1:AF3F 34 -  -  -      inc (hl)
  241 D1:AF40 C9 -  -  -      ret
  242 D1:AF41 E6 0F -  -  _:  and a,$0F
  243 D1:AF43 01 40 01 00     ld  bc,320
  244 D1:AF47 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  245 D1:AF48 EB -  -  -      ex  de,hl
  246 D1:AF49 6F -  -  -      ld  L,a
  247 D1:AF4A 26 03 -  -      ld  H,3
  248 D1:AF4C ED 6C -  -      mlt hl
  249 D1:AF4E 01 A8 B2 D1     ld  bc,SmallHexFont
  250 D1:AF52 09 -  -  -      add hl,bc
  251 D1:AF53 EB -  -  -      ex  de,hl
  252 D1:AF54 0E 03 -  -      ld  c,3
  253 D1:AF56 18 14 -  -      jr  printSmallNumPair_2ndHalf
  254 D1:AF58 -  -  -  -  printSmallNumPair_1stHalf:
  255 D1:AF58 1A -  -  -      ld  a,(de)
  256 D1:AF59 06 04 -  -      ld  b,4
  257 D1:AF5B 87 -  -  -  _:  add a,a
  258 D1:AF5C 36 00 -  -      ld  (hl),FONTBGCOLOR
  259 D1:AF5E 30 02 -  -      jr  nc,$+4
  260 D1:AF60 36 FF -  -      ld  (hl),FONTFGCOLOR
  261 D1:AF62 23 -  -  -      inc hl
  262 D1:AF63 10 F6 -  -      djnz -_
  263 D1:AF65 79 -  -  -      ld  a,c
  264 D1:AF66 01 3C 01 00     ld  bc,320-4
  265 D1:AF6A 09 -  -  -      add hl,bc
  266 D1:AF6B 4F -  -  -      ld  c,a
  267 D1:AF6C -  -  -  -  printSmallNumPair_2ndHalf:
  268 D1:AF6C 1A -  -  -      ld  a,(de)
  269 D1:AF6D 07 -  -  -      rlca
  270 D1:AF6E 07 -  -  -      rlca
  271 D1:AF6F 07 -  -  -      rlca
  272 D1:AF70 07 -  -  -      rlca
  273 D1:AF71 06 04 -  -      ld  b,4
  274 D1:AF73 87 -  -  -  _:  add a,a
  275 D1:AF74 36 00 -  -      ld  (hl),FONTBGCOLOR
  276 D1:AF76 30 02 -  -      jr  nc,$+4
  277 D1:AF78 36 FF -  -      ld  (hl),FONTFGCOLOR
  278 D1:AF7A 23 -  -  -      inc hl
  279 D1:AF7B 10 F6 -  -      djnz -_
  280 D1:AF7D 13 -  -  -      inc de
  281 D1:AF7E 79 -  -  -      ld  a,c
  282 D1:AF7F 01 3C 01 00     ld  bc,320-4
  283 D1:AF83 09 -  -  -      add hl,bc
  284 D1:AF84 4F -  -  -      ld  c,a
  285 D1:AF85 0D -  -  -      dec c
  286 D1:AF86 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  287 D1:AF88 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  288 D1:AF8C 09 -  -  -      add hl,bc
  289 D1:AF8D C9 -  -  -      ret
  290 D1:AF8E -  -  -  -  
  291 D1:AF8E -  -  -  -  calculateScreenPtr:
  292 D1:AF8E -  -  -  -      ;xcoord: x * 8 
  293 D1:AF8E -  -  -  -      ;ycoord: 320 * 8 * y
  294 D1:AF8E -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  295 D1:AF8E ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  296 D1:AF93 -  -  -  -  calculateScreenPtrDE:
  297 D1:AF93 6A -  -  -      ld  L,d     ;yPos
  298 D1:AF94 26 A0 -  -      ld  h,160
  299 D1:AF96 ED 6C -  -      mlt hl
  300 D1:AF98 29 -  -  -      add hl,hl
  301 D1:AF99 16 01 -  -      ld  d,1
  302 D1:AF9B ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  303 D1:AF9D 19 -  -  -      add hl,de
  304 D1:AF9E 29 -  -  -      add hl,hl
  305 D1:AF9F 29 -  -  -      add hl,hl
  306 D1:AFA0 29 -  -  -      add hl,hl
  307 D1:AFA1 ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  308 D1:AFA6 19 -  -  -      add hl,de
  309 D1:AFA7 C9 -  -  -      ret
  310 D1:AFA8 -  -  -  -  
  311 D1:AFA8 -  -  -  -  
  312 D1:AFA8 -  -  -  -  
  313 D1:AFA8 -  -  -  -  
  314 D1:AFA8 -  -  -  -  
  315 D1:AFA8 -  -  -  -  
  316 D1:AFA8 -  -  -  -  
  317 D1:AFA8 -  -  -  -  
  318 D1:AFA8 -  -  -  -  
  319 D1:AFA8 -  -  -  -  ;-----------------------------------------------------------------------------
  320 D1:AFA8 -  -  -  -  ; Data Section
  321 D1:AFA8 -  -  -  -  
  322 D1:AFA8 -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  323 D1:AFA8 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  324 D1:AFB0 C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  325 D1:AFB8 D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  326 D1:AFC0 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  327 D1:AFC8 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  328 D1:AFD0 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  329 D1:AFD8 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  330 D1:AFE0 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  331 D1:AFE8 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  332 D1:AFF0 C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  333 D1:AFF8 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  334 D1:B000 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  335 D1:B008 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  336 D1:B010 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  337 D1:B018 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  338 D1:B020 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  339 D1:B028 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  340 D1:B030 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  341 D1:B038 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  342 D1:B040 FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  343 D1:B048 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  344 D1:B050 FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  345 D1:B058 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  346 D1:B060 FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  347 D1:B068 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  348 D1:B070 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  349 D1:B078 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  350 D1:B080 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  351 D1:B088 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  352 D1:B090 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  353 D1:B098 C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  354 D1:B0A0 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  355 D1:B0A8 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  356 D1:B0B0 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  357 D1:B0B8 FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  358 D1:B0C0 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  359 D1:B0C8 F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  360 D1:B0D0 FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  361 D1:B0D8 FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  362 D1:B0E0 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  363 D1:B0E8 C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  364 D1:B0F0 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  365 D1:B0F8 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  366 D1:B100 C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  367 D1:B108 C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  368 D1:B110 C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  369 D1:B118 C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  370 D1:B120 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  371 D1:B128 FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  372 D1:B130 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  373 D1:B138 FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  374 D1:B140 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  375 D1:B148 FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  376 D1:B150 C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  377 D1:B158 C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  378 D1:B160 C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  379 D1:B168 C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  380 D1:B170 C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  381 D1:B178 FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  382 D1:B180 F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  383 D1:B188 C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  384 D1:B190 F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  385 D1:B198 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  386 D1:B1A0 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  387 D1:B1A8 C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  388 D1:B1B0 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  389 D1:B1B8 C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  390 D1:B1C0 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  391 D1:B1C8 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  392 D1:B1D0 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  393 D1:B1D8 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  394 D1:B1E0 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  395 D1:B1E8 C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  396 D1:B1F0 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  397 D1:B1F8 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  398 D1:B200 C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  399 D1:B208 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  400 D1:B210 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  401 D1:B218 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  402 D1:B220 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  403 D1:B228 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  404 D1:B230 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  405 D1:B238 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  406 D1:B240 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  407 D1:B248 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  408 D1:B250 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  409 D1:B258 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  410 D1:B260 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  411 D1:B268 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  412 D1:B270 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  413 D1:B278 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  414 D1:B280 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  415 D1:B288 C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  416 D1:B290 E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  417 D1:B298 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  418 D1:B2A0 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  419 D1:B2A8 -  -  -  -  
  420 D1:B2A8 -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  421 D1:B2A8 -  -  -  -  ;whose format was copied from a (then-)authorized source
  422 D1:B2A8 -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  423 D1:B2A8 -  -  -  -  SmallHexFont:
  424 D1:B2A8 4E AA AE -  .db $4E,$AA,$AE				;zero
  425 D1:B2AB 44 C4 4E -  .db $44,$C4,$4E				;one
  426 D1:B2AE 4C 24 8E -  .db $4C,$24,$8E				;two
  427 D1:B2B1 4C 24 2C -  .db $4C,$24,$2C				;three
  428 D1:B2B4 48 AE 22 -  .db $48,$AE,$22				;four
  429 D1:B2B7 4E 8C 2C -  .db $4E,$8C,$2C				;five
  430 D1:B2BA 45 8E AE -  .db $45,$8E,$AE				;six
  431 D1:B2BD 4E 24 88 -  .db $4E,$24,$88				;seven
  432 D1:B2C0 4E AE AE -  .db $4E,$AE,$AE				;eight
  433 D1:B2C3 4E AE 2C -  .db $4E,$AE,$2C				;nine
  434 D1:B2C6 44 AE AA -  .db $44,$AE,$AA				;A
  435 D1:B2C9 4C AC AC -  .db $4C,$AC,$AC				;B
  436 D1:B2CC 46 88 86 -  .db $46,$88,$86				;C
  437 D1:B2CF 4C AA AC -  .db $4C,$AA,$AC				;D
  438 D1:B2D2 4E 8C 8E -  .db $4E,$8C,$8E				;E
  439 D1:B2D5 4E 8C 88 -  .db $4E,$8C,$88				;F
  440 D1:B2D8 -  -  -  -  
  441 D1:B2D8 -  -  -  -  
  442 D1:B2D8 -  -  -  -  
Listing for file "main.z80"
  630 D1:B2D8 -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B2D8 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B2D8 -  -  -  -  
    3 D1:B2D8 -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B2D8 -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B2D8 -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B2D8 -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B2D8 -  -  -  -  ;
    8 D1:B2D8 -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B2D8 -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B2D8 -  -  -  -  ;
   11 D1:B2D8 -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B2D8 -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B2D8 -  -  -  -  ;
   14 D1:B2D8 -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B2D8 -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B2D8 -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B2D8 -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B2D8 -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B2D8 -  -  -  -  
   20 D1:B2D8 -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B2D8 -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+5 \ set SF_OVER,b
   22 D1:B2D8 -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B2D8 -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B2D8 -  -  -  -  
   25 D1:B2D8 -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ add a,a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B2D8 -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B2D8 -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B2D8 -  -  -  -  
   29 D1:B2D8 -  -  -  -  
   30 D1:B2D8 -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B2D8 -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B2D8 -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B2D8 -  -  -  -  
   34 D1:B2D8 -  -  -  -  
   35 D1:B2D8 -  -  -  -  
   36 D1:B2D8 -  -  -  -  
   37 D1:B2D8 -  -  -  -  ;=============================================================================
   38 D1:B2D8 -  -  -  -  ;=============================================================================
   39 D1:B2D8 -  -  -  -  ;=============================================================================
   40 D1:B2D8 -  -  -  -  ;=============================================================================
   41 D1:B2D8 -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B2D8 -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B2D8 -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B2D8 -  -  -  -  i6502Init:
   45 D1:B2D8 -  -  -  -      ;
   46 D1:B2D8 -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B2D8 -  -  -  -      ;
   48 D1:B2D8 21 00 38 D0     ld  hl,main_ram
   49 D1:B2DC 01 08 20 00     ld  bc,$002008
   50 D1:B2E0 1E 00 -  -      ld  e,$00
   51 D1:B2E2 CD 5C B5 D1     call i6502_map_pages
   52 D1:B2E6 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B2EA 01 01 20 00     ld  bc,$002001
   54 D1:B2EE 1E 20 -  -      ld  e,$20
   55 D1:B2F0 CD 5C B5 D1     call i6502_map_pages
   56 D1:B2F4 FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B2F9 DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:B2FE ED 22 80 -      lea hl,ix-128
   59 D1:B301 ED 12 81 -      lea de,ix-127
   60 D1:B304 01 FF 00 00     ld  bc,255
   61 D1:B308 36 00 -  -      ld  (hl),$00
   62 D1:B30A ED B0 -  -      ldir
   63 D1:B30C CD 43 B5 D1     call i6502_load_instruction_set
   64 D1:B310 -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:B310 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:B314 ED 27 -  -      ld  hl,(hl)
   67 D1:B316 11 FC 00 00     ld  de,$0000FC
   68 D1:B31A 19 -  -  -      add hl,de
   69 D1:B31B -  -  -  -      ;jp inst6502_jsr
   70 D1:B31B -  -  -  -      ;Manual loading below. Uncomment "jp inst6502_jsr" to return to original.
   71 D1:B31B -  -  -  -      ;Settings below is to run nestest CPU-only test. The reset vector above
   72 D1:B31B -  -  -  -      ;requires a working PPU (and probably APU) to be present.
   73 D1:B31B 21 00 C0 00     ld  hl,$C000
   74 D1:B31F DD 2F 05 -      ld  (ix+REGPC),HL
   75 D1:B322 -  -  -  -  
   76 D1:B322 -  -  -  -  i6502FirstLoad:
   77 D1:B322 52 DD 17 05     ld.s de,(ix+REGPC)
   78 D1:B326 7B -  -  -      ld  a,e
   79 D1:B327 1E 08 -  -      ld  e,BASETABLE_STRIDE
   80 D1:B329 ED 5C -  -      mlt de
   81 D1:B32B 21 00 40 D0     ld  hl,PAGETABLE
   82 D1:B32F 19 -  -  -      add hl,de
   83 D1:B330 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   84 D1:B332 16 00 -  -      ld  d,0
   85 D1:B334 5F -  -  -      ld  e,a
   86 D1:B335 19 -  -  -      add hl,de       ;resolve final address
   87 D1:B336 18 19 -  -      jr  i6502FinishLoad
   88 D1:B338 -  -  -  -  i6502NextLoad:
   89 D1:B338 23 -  -  -      inc hl
   90 D1:B339 1C -  -  -      inc e
   91 D1:B33A 20 15 -  -      jr  nz,i6502FinishLoad
   92 D1:B33C DD 56 06 -      ld  d,(ix+REGPC+1)
   93 D1:B33F 14 -  -  -      inc d
   94 D1:B340 52 DD 1F 05     ld.s (ix+REGPC),de
   95 D1:B344 1E 08 -  -      ld  e,BASETABLE_STRIDE
   96 D1:B346 ED 5C -  -      mlt de
   97 D1:B348 21 00 40 D0     ld  hl,PAGETABLE
   98 D1:B34C 19 -  -  -      add hl,de
   99 D1:B34D ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
  100 D1:B34F 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
  101 D1:B351 -  -  -  -  i6502FinishLoad:
  102 D1:B351 7E -  -  -      ld  a,(hl)
  103 D1:B352 -  -  -  -  #ifdef COREDEBUG
  104 D1:B352 DD 77 0E -      ld  (ix+CURRENT_OPCODES+0),a
  105 D1:B355 DD 73 05 -      ld  (ix+REGPC+0),e
  106 D1:B358 -  -  -  -  #endif
  107 D1:B358 23 -  -  -      inc hl
  108 D1:B359 1C -  -  -      inc e
  109 D1:B35A 20 15 -  -      jr  nz,i6502PrepNextPage
  110 D1:B35C DD 56 06 -      ld  d,(ix+REGPC+1)
  111 D1:B35F 14 -  -  -      inc d
  112 D1:B360 52 DD 1F 05     ld.s (ix+REGPC),de
  113 D1:B364 1E 08 -  -      ld  e,BASETABLE_STRIDE
  114 D1:B366 ED 5C -  -      mlt de
  115 D1:B368 21 00 40 D0     ld  hl,PAGETABLE
  116 D1:B36C 19 -  -  -      add hl,de
  117 D1:B36D ED 27 -  -      ld  hl,(hl)
  118 D1:B36F 1E 00 -  -      ld  e,0
  119 D1:B371 -  -  -  -  i6502PrepNextPage:
  120 D1:B371 -  -  -  -  #ifdef COREDEBUG
  121 D1:B371 F5 -  -  -      push af
  122 D1:B372 7E -  -  -          ld  a,(hl)
  123 D1:B373 DD 77 0F -          ld  (ix+CURRENT_OPCODES+1),a
  124 D1:B376 D5 -  -  -          push de
  125 D1:B377 E5 -  -  -              push hl
  126 D1:B378 23 -  -  -                  inc hl
  127 D1:B379 1C -  -  -                  inc e
  128 D1:B37A 20 0F -  -                  jr  nz,+_
  129 D1:B37C DD 56 06 -                  ld  d,(ix+REGPC+1)
  130 D1:B37F 14 -  -  -                  inc d
  131 D1:B380 1E 08 -  -                  ld  e,BASETABLE_STRIDE
  132 D1:B382 ED 5C -  -                  mlt de
  133 D1:B384 21 00 40 D0                 ld  hl,PAGETABLE
  134 D1:B388 19 -  -  -                  add hl,de
  135 D1:B389 ED 27 -  -                  ld  hl,(hl)
  136 D1:B38B 7E -  -  -  _:              ld  a,(hl)
  137 D1:B38C DD 77 10 -                  ld  (ix+CURRENT_OPCODES+2),a
  138 D1:B38F -  -  -  -                  ;jr $
  139 D1:B38F CD 6C D4 D1                 call dbg_printLine
  140 D1:B393 E1 -  -  -              pop hl
  141 D1:B394 D1 -  -  -          pop de
  142 D1:B395 F1 -  -  -      pop af
  143 D1:B396 -  -  -  -  #endif
  144 D1:B396 E5 -  -  -      push hl
  145 D1:B397 67 -  -  -          ld  h,a
  146 D1:B398 2E 08 -  -          ld  l,BASETABLE_STRIDE
  147 D1:B39A ED 6C -  -          mlt hl
  148 D1:B39C 01 04 40 D0         ld  bc,JUMPTABLE
  149 D1:B3A0 09 -  -  -          add hl,bc
  150 D1:B3A1 ED 27 -  -          ld  hl,(hl)     ;jumptable
  151 D1:B3A3 E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  152 D1:B3A4 C9 -  -  -      ret
  153 D1:B3A5 -  -  -  -  
  154 D1:B3A5 -  -  -  -  
  155 D1:B3A5 -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  156 D1:B3A5 -  -  -  -  ;   JP i6502FinishLoad
  157 D1:B3A5 -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  158 D1:B3A5 -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  159 D1:B3A5 -  -  -  -  ;   JP i6502NextLoad
  160 D1:B3A5 -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  161 D1:B3A5 -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  162 D1:B3A5 -  -  -  -  ;   JP i6502FinishLoad
  163 D1:B3A5 -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  164 D1:B3A5 -  -  -  -  
  165 D1:B3A5 -  -  -  -  
  166 D1:B3A5 -  -  -  -  ;-----------------------------------------------------------------------------    
  167 D1:B3A5 -  -  -  -  ;-----------------------------------------------------------------------------    
  168 D1:B3A5 -  -  -  -  
  169 D1:B3A5 -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  170 D1:B3A5 -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  171 D1:B3A5 -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  172 D1:B3A5 -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  173 D1:B3A5 -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  174 D1:B3A5 -  -  -  -  
  175 D1:B3A5 -  -  -  -  ;-----------------------------------------------------------------------------    
  176 D1:B3A5 -  -  -  -  ;-----------------------------------------------------------------------------    
  177 D1:B3A5 -  -  -  -  outline6502_imm:
  178 D1:B3A5 7E -  -  -      ld  a,(hl)  ;oper uses A
  179 D1:B3A6 -  -  -  -      ;oper
  180 D1:B3A6 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  181 D1:B3B9 ED 33 02 -      ADDCYC(2)
  182 D1:B3BC C3 38 B3 D1     jp i6502NextLoad
  183 D1:B3C0 -  -  -  -  
  184 D1:B3C0 -  -  -  -  outline6502_abs:
  185 D1:B3C0 4E -  -  -      ld  c,(hl)
  186 D1:B3C1 23 -  -  -      inc hl
  187 D1:B3C2 1C -  -  -      inc e
  188 D1:B3C3 20 15 -  -      jr nz,+_
  189 D1:B3C5 DD 56 06 -      ld  d,(ix+REGPC+1)
  190 D1:B3C8 14 -  -  -      inc d
  191 D1:B3C9 52 DD 1F 05     ld.s (ix+REGPC),de
  192 D1:B3CD 1E 08 -  -      ld  e,BASETABLE_STRIDE
  193 D1:B3CF ED 5C -  -      mlt de
  194 D1:B3D1 21 00 40 D0     ld  hl,PAGETABLE
  195 D1:B3D5 19 -  -  -      add hl,de
  196 D1:B3D6 ED 27 -  -      ld  hl,(hl) ;
  197 D1:B3D8 1E 00 -  -      ld  e,0
  198 D1:B3DA 46 -  -  -  _:  ld  b,(hl)
  199 D1:B3DB E5 -  -  -      push hl
  200 D1:B3DC 50 -  -  -          ld  d,b
  201 D1:B3DD 79 -  -  -          ld  a,c
  202 D1:B3DE 0E 08 -  -          ld  c,BASETABLE_STRIDE
  203 D1:B3E0 ED 4C -  -          mlt bc
  204 D1:B3E2 21 00 40 D0         ld  hl,PAGETABLE
  205 D1:B3E6 09 -  -  -          add hl,bc
  206 D1:B3E7 ED 27 -  -          ld  hl,(hl)
  207 D1:B3E9 06 00 -  -          ld  b,0
  208 D1:B3EB 4F -  -  -          ld  c,a
  209 D1:B3EC 09 -  -  -          add hl,bc   ;full address
  210 D1:B3ED -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  211 D1:B3ED 7E -  -  -          ld  a,(hl)  ;oper uses A
  212 D1:B3EE -  -  -  -          ;oper
  213 D1:B3EE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  214 D1:B401 ED 33 03 -      ADDCYC(3)
  215 D1:B404 E1 -  -  -      pop hl
  216 D1:B405 C3 38 B3 D1     jp i6502NextLoad
  217 D1:B409 -  -  -  -  
  218 D1:B409 -  -  -  -  outline6502_zeropage:
  219 D1:B409 7E -  -  -      ld  a,(hl)
  220 D1:B40A 01 00 38 D0     ld  bc,ZEROPAGE
  221 D1:B40E 81 -  -  -      add a,c
  222 D1:B40F 4F -  -  -      ld  c,a
  223 D1:B410 0A -  -  -      ld  a,(bc)      ;oper uses A
  224 D1:B411 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  225 D1:B411 -  -  -  -      ;oper
  226 D1:B411 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  227 D1:B424 ED 33 03 -      ADDCYC(3)
  228 D1:B427 C3 38 B3 D1     jp i6502NextLoad
  229 D1:B42B -  -  -  -  
  230 D1:B42B -  -  -  -  
  231 D1:B42B -  -  -  -  ;Note: has same split start as abs
  232 D1:B42B -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  233 D1:B42B 4E -  -  -      ld  c,(hl)
  234 D1:B42C 23 -  -  -      inc hl
  235 D1:B42D 1C -  -  -      inc e
  236 D1:B42E 20 15 -  -      jr nz,+_
  237 D1:B430 DD 56 06 -      ld  d,(ix+REGPC+1)
  238 D1:B433 14 -  -  -      inc d
  239 D1:B434 52 DD 1F 05     ld.s (ix+REGPC),de
  240 D1:B438 1E 08 -  -      ld  e,BASETABLE_STRIDE
  241 D1:B43A ED 5C -  -      mlt de
  242 D1:B43C 21 00 40 D0     ld  hl,PAGETABLE
  243 D1:B440 19 -  -  -      add hl,de
  244 D1:B441 ED 27 -  -      ld  hl,(hl) ;
  245 D1:B443 1E 00 -  -      ld  e,0
  246 D1:B445 46 -  -  -  _:  ld  b,(hl)
  247 D1:B446 E5 -  -  -      push hl
  248 D1:B447 50 -  -  -          ld  d,b
  249 D1:B448 79 -  -  -          ld  a,c
  250 D1:B449 0E 08 -  -          ld  c,BASETABLE_STRIDE
  251 D1:B44B ED 4C -  -          mlt bc
  252 D1:B44D 21 00 40 D0         ld  hl,PAGETABLE
  253 D1:B451 09 -  -  -          add hl,bc
  254 D1:B452 ED 27 -  -          ld  hl,(hl)
  255 D1:B454 06 00 -  -          ld  b,0
  256 D1:B456 4F -  -  -          ld  c,a
  257 D1:B457 DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  258 D1:B45A 81 -  -  -          add a,c
  259 D1:B45B 30 04 -  -          jr  nc,+_
  260 D1:B45D 04 -  -  -          inc b
  261 D1:B45E 14 -  -  -          inc d
  262 D1:B45F FD 23 -  -          ADDCYC(1)
  263 D1:B461 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  264 D1:B461 09 -  -  -          add hl,bc   ;full address
  265 D1:B462 7E -  -  -          ld  a,(hl)  ;oper uses A
  266 D1:B463 -  -  -  -          ;oper
  267 D1:B463 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  268 D1:B476 ED 33 04 -      ADDCYC(4)
  269 D1:B479 E1 -  -  -      pop hl
  270 D1:B47A C3 38 B3 D1     jp i6502NextLoad
  271 D1:B47E -  -  -  -  
  272 D1:B47E -  -  -  -  
  273 D1:B47E -  -  -  -  outline6502_zpx:
  274 D1:B47E 7E -  -  -      ld  a,(hl)
  275 D1:B47F 01 00 38 D0     ld  bc,ZEROPAGE
  276 D1:B483 81 -  -  -      add a,c
  277 D1:B484 DD 86 01 -      add a,(ix+REGX)
  278 D1:B487 4F -  -  -      ld  c,a
  279 D1:B488 0A -  -  -      ld  a,(bc)      ;oper uses A
  280 D1:B489 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  281 D1:B489 -  -  -  -      ;oper
  282 D1:B489 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  283 D1:B49C ED 33 04 -      ADDCYC(4)
  284 D1:B49F C3 38 B3 D1     jp i6502NextLoad
  285 D1:B4A3 -  -  -  -      
  286 D1:B4A3 -  -  -  -  outline6502_zpy:
  287 D1:B4A3 7E -  -  -      ld  a,(hl)
  288 D1:B4A4 01 00 38 D0     ld  bc,ZEROPAGE
  289 D1:B4A8 81 -  -  -      add a,c
  290 D1:B4A9 DD 86 02 -      add a,(ix+REGY)
  291 D1:B4AC 4F -  -  -      ld  c,a
  292 D1:B4AD 0A -  -  -      ld  a,(bc)      ;oper uses A
  293 D1:B4AE -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  294 D1:B4AE -  -  -  -      ;oper
  295 D1:B4AE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  296 D1:B4C1 ED 33 04 -      ADDCYC(4)
  297 D1:B4C4 C3 38 B3 D1     jp i6502NextLoad
  298 D1:B4C8 -  -  -  -  
  299 D1:B4C8 -  -  -  -  outline6502_preidx_indir:
  300 D1:B4C8 E5 -  -  -      push hl
  301 D1:B4C9 7E -  -  -          ld  a,(hl)
  302 D1:B4CA 21 00 38 D0         ld  hl,ZEROPAGE
  303 D1:B4CE 85 -  -  -          add a,L
  304 D1:B4CF DD 86 01 -          add a,(ix+REGX)
  305 D1:B4D2 6F -  -  -          ld  L,a
  306 D1:B4D3 7E -  -  -          ld  a,(hl)
  307 D1:B4D4 2C -  -  -          inc L
  308 D1:B4D5 56 -  -  -          ld  d,(hl)
  309 D1:B4D6 42 -  -  -          ld  b,d
  310 D1:B4D7 0E 08 -  -          ld  c,BASETABLE_STRIDE
  311 D1:B4D9 ED 4C -  -          mlt bc
  312 D1:B4DB 21 00 40 D0         ld  hl,PAGETABLE
  313 D1:B4DF 09 -  -  -          add hl,bc
  314 D1:B4E0 ED 27 -  -          ld  hl,(hl)
  315 D1:B4E2 06 00 -  -          ld  b,0
  316 D1:B4E4 4F -  -  -          ld  c,a
  317 D1:B4E5 09 -  -  -          add hl,bc
  318 D1:B4E6 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  319 D1:B4E6 7E -  -  -          ld  a,(hl)  ;oper uses A.
  320 D1:B4E7 -  -  -  -          ;oper
  321 D1:B4E7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  322 D1:B4FA ED 33 06 -          ADDCYC(6)
  323 D1:B4FD E1 -  -  -      pop hl
  324 D1:B4FE C3 38 B3 D1     jp i6502NextLoad
  325 D1:B502 -  -  -  -  
  326 D1:B502 -  -  -  -  outline6502_postidx_indir:
  327 D1:B502 E5 -  -  -      push hl
  328 D1:B503 7E -  -  -          ld  a,(hl)
  329 D1:B504 21 00 38 D0         ld  hl,ZEROPAGE
  330 D1:B508 85 -  -  -          add a,L
  331 D1:B509 6F -  -  -          ld  L,a
  332 D1:B50A 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  333 D1:B50B 2C -  -  -          inc L
  334 D1:B50C DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  335 D1:B50F 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  336 D1:B510 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  337 D1:B512 FD 23 -  -          ADDCYC(1)
  338 D1:B514 24 -  -  -          inc h
  339 D1:B515 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  340 D1:B516 2E 08 -  -          ld  L,BASETABLE_STRIDE
  341 D1:B518 ED 6C -  -          mlt hl          ;23.
  342 D1:B51A 01 00 40 D0         ld  bc,PAGETABLE
  343 D1:B51E 09 -  -  -          add hl,bc
  344 D1:B51F ED 27 -  -          ld  hl,(hl)     ;address get.
  345 D1:B521 01 00 00 00         ld  bc,0
  346 D1:B525 4F -  -  -          ld  c,a
  347 D1:B526 09 -  -  -          add hl,bc       ;Full address get.
  348 D1:B527 7E -  -  -          ld  a,(hl)
  349 D1:B528 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  350 D1:B528 -  -  -  -          ;oper
  351 D1:B528 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  352 D1:B53B ED 33 05 -          ADDCYC(5)
  353 D1:B53E E1 -  -  -      pop hl
  354 D1:B53F C3 38 B3 D1     jp i6502NextLoad
  355 D1:B543 -  -  -  -  
  356 D1:B543 -  -  -  -  ;-----------------------------------------------------------------------------
  357 D1:B543 -  -  -  -  ;-----------------------------------------------------------------------------
  358 D1:B543 -  -  -  -  ;-----------------------------------------------------------------------------
  359 D1:B543 -  -  -  -  
  360 D1:B543 -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  361 D1:B543 -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  362 D1:B543 -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  363 D1:B543 -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  364 D1:B543 -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  365 D1:B543 -  -  -  -  
  366 D1:B543 -  -  -  -  ;-----------------------------------------------------------------------------
  367 D1:B543 -  -  -  -  
  368 D1:B543 -  -  -  -  i6502_load_instruction_set:
  369 D1:B543 DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  370 D1:B548 21 17 CD D1     ld  hl,inst6502_instruction_set
  371 D1:B54C 06 00 -  -      ld  b,0
  372 D1:B54E ED 17 -  -  _:  ld  de,(hl)
  373 D1:B550 DD 1F 00 -      ld  (ix+0),de
  374 D1:B553 23 -  -  -      inc hl
  375 D1:B554 23 -  -  -      inc hl
  376 D1:B555 23 -  -  -      inc hl
  377 D1:B556 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  378 D1:B559 10 F3 -  -      djnz -_
  379 D1:B55B C9 -  -  -      ret
  380 D1:B55C -  -  -  -  
  381 D1:B55C -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  382 D1:B55C -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  383 D1:B55C -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  384 D1:B55C -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  385 D1:B55C -  -  -  -  i6502_map_pages:
  386 D1:B55C 16 08 -  -      ld  d,BASETABLE_STRIDE
  387 D1:B55E ED 5C -  -      mlt de
  388 D1:B560 DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  389 D1:B565 DD 19 -  -      add ix,de
  390 D1:B567 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  391 D1:B568 11 00 01 00     ld  de,256
  392 D1:B56C E5 -  -  -      push hl
  393 D1:B56D FD E1 -  -      pop iy
  394 D1:B56F 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  395 D1:B570 DD 2F 00 -  _:  ld  (ix+0),hl
  396 D1:B573 19 -  -  -      add hl,de                   ;next page z80
  397 D1:B574 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  398 D1:B577 3D -  -  -      dec a
  399 D1:B578 C8 -  -  -      ret z
  400 D1:B579 10 F5 -  -      djnz -_
  401 D1:B57B ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  402 D1:B57E 18 EF -  -      jr --_
  403 D1:B580 -  -  -  -  
  404 D1:B580 -  -  -  -  
  405 D1:B580 -  -  -  -  subroutine6502_abs_split_start:
  406 D1:B580 4E -  -  -      ld  c,(hl)
  407 D1:B581 23 -  -  -      inc hl
  408 D1:B582 1C -  -  -      inc e
  409 D1:B583 20 15 -  -      jr nz,+_
  410 D1:B585 DD 56 06 -      ld  d,(ix+REGPC+1)
  411 D1:B588 14 -  -  -      inc d
  412 D1:B589 52 DD 1F 05     ld.s (ix+REGPC),de
  413 D1:B58D 1E 08 -  -      ld  e,BASETABLE_STRIDE
  414 D1:B58F ED 5C -  -      mlt de
  415 D1:B591 21 00 40 D0     ld  hl,PAGETABLE
  416 D1:B595 19 -  -  -      add hl,de
  417 D1:B596 ED 27 -  -      ld  hl,(hl) ;
  418 D1:B598 1E 00 -  -      ld  e,0
  419 D1:B59A 46 -  -  -  _:  ld  b,(hl)
  420 D1:B59B C9 -  -  -      ret
  421 D1:B59C -  -  -  -  
  422 D1:B59C -  -  -  -  subroutine6502_adc_combined_end:
  423 D1:B59C DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  424 D1:B59F 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  425 D1:B5A0 DD 7E 00 -      ld  a,(ix+REGA)
  426 D1:B5A3 89 -  -  -      adc a,c
  427 D1:B5A4 DD 77 00 -      ld  (ix+REGA),a
  428 D1:B5A7 DD 46 04 CB 
              B0 E2 B1 B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  429 D1:B5C8 C3 38 B3 D1     jp i6502NextLoad
  430 D1:B5CC -  -  -  -  
  431 D1:B5CC -  -  -  -  subroutine6502_sbc_combined_end:
  432 D1:B5CC DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  433 D1:B5CF 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  434 D1:B5D0 DD 7E 00 -      ld  a,(ix+REGA)
  435 D1:B5D3 3F -  -  -      ccf
  436 D1:B5D4 99 -  -  -      sbc a,c
  437 D1:B5D5 3F -  -  -      ccf
  438 D1:B5D6 DD 77 00 -      ld  (ix+REGA),a
  439 D1:B5D9 DD 46 04 CB 
              B0 E2 E3 B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  440 D1:B5FA C3 38 B3 D1     jp i6502NextLoad
  441 D1:B5FE -  -  -  -  
  442 D1:B5FE -  -  -  -  subroutine6502_cmp_combined_end:
  443 D1:B5FE DD 7E 00 -      ld  a,(ix+REGA)
  444 D1:B601 B8 -  -  -      cp  b
  445 D1:B602 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  446 D1:B61B C3 38 B3 D1     jp i6502NextLoad
  447 D1:B61F -  -  -  -  
  448 D1:B61F -  -  -  -  subroutine6502_take_branch:
  449 D1:B61F FD 23 -  -      ADDCYC(1)
  450 D1:B621 7E -  -  -      ld  a,(hl)  ;offset byte
  451 D1:B622 6F -  -  -      ld  L,a
  452 D1:B623 87 -  -  -      add a,a
  453 D1:B624 9F -  -  -      sbc a,a
  454 D1:B625 67 -  -  -      ld  H,a     ;sign-extending offset byte
  455 D1:B626 DD 56 06 -      ld  d,(ix+REGPC+1)
  456 D1:B629 13 -  -  -      inc de
  457 D1:B62A 52 19 -  -      add.s hl,de
  458 D1:B62C 7C -  -  -      ld  a,h
  459 D1:B62D BA -  -  -      cp  d       ;is high byte the same?
  460 D1:B62E 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  461 D1:B630 FD 23 -  -      ADDCYC(1)
  462 D1:B632 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  463 D1:B636 C3 22 B3 D1     jp  i6502FirstLoad
  464 D1:B63A -  -  -  -  
  465 D1:B63A -  -  -  -  
  466 D1:B63A -  -  -  -  ;-----------------------------------------------------------------------------
  467 D1:B63A -  -  -  -  
  468 D1:B63A -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  469 D1:B63A -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  470 D1:B63A -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  471 D1:B63A -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  472 D1:B63A -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  473 D1:B63A -  -  -  -  
  474 D1:B63A -  -  -  -  ;-----------------------------------------------------------------------------
  475 D1:B63A -  -  -  -  
  476 D1:B63A -  -  -  -  ;-----------------------------------------------------------------------------
  477 D1:B63A -  -  -  -  ;-----------------------------------------------------------------------------
  478 D1:B63A -  -  -  -  ;-----------------------------------------------------------------------------
  479 D1:B63A -  -  -  -  ;Instructions by type: Transfer Instructions
  480 D1:B63A -  -  -  -  ;LDA - Load Accumulator with Memory
  481 D1:B63A -  -  -  -  ;    M -> A
  482 D1:B63A -  -  -  -  ;    N	Z	C	I	D	V
  483 D1:B63A -  -  -  -  ;    +	+	-	-	-	-
  484 D1:B63A -  -  -  -  
  485 D1:B63A -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  486 D1:B63A -  -  -  -  ;immediate	LDA #oper	A9	2	2
  487 D1:B63A -  -  -  -  inst6502_lda_imm:
  488 D1:B63A 7E -  -  -      ld  a,(hl)
  489 D1:B63B DD 77 00 -      ld  (ix+REGA),a
  490 D1:B63E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  491 D1:B651 ED 33 02 -      ADDCYC(2)
  492 D1:B654 C3 38 B3 D1     jp i6502NextLoad
  493 D1:B658 -  -  -  -  
  494 D1:B658 -  -  -  -  ;zeropage	LDA oper	A5	2	3
  495 D1:B658 -  -  -  -  inst6502_lda_zp:
  496 D1:B658 7E -  -  -      ld  a,(hl)
  497 D1:B659 01 00 38 D0     ld  bc,ZEROPAGE
  498 D1:B65D 81 -  -  -      add a,c
  499 D1:B65E 4F -  -  -      ld  c,a
  500 D1:B65F 0A -  -  -      ld  a,(bc)
  501 D1:B660 DD 77 00 -      ld  (ix+REGA),a
  502 D1:B663 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  503 D1:B676 ED 33 03 -      ADDCYC(3)
  504 D1:B679 C3 38 B3 D1     jp i6502NextLoad
  505 D1:B67D -  -  -  -  
  506 D1:B67D -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  507 D1:B67D -  -  -  -  inst6502_lda_zpx:
  508 D1:B67D 7E -  -  -      ld  a,(hl)
  509 D1:B67E 01 00 38 D0     ld  bc,ZEROPAGE
  510 D1:B682 81 -  -  -      add a,c
  511 D1:B683 DD 86 01 -      add a,(ix+REGX)
  512 D1:B686 4F -  -  -      ld  c,a
  513 D1:B687 0A -  -  -      ld  a,(bc)
  514 D1:B688 DD 77 00 -      ld  (ix+REGA),a
  515 D1:B68B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  516 D1:B69E ED 33 04 -      ADDCYC(4)
  517 D1:B6A1 C3 38 B3 D1     jp i6502NextLoad
  518 D1:B6A5 -  -  -  -  
  519 D1:B6A5 -  -  -  -  ;absolute	LDA oper	AD	3	4
  520 D1:B6A5 -  -  -  -  inst6502_lda_abs:
  521 D1:B6A5 CD 80 B5 D1     call subroutine6502_abs_split_start
  522 D1:B6A9 E5 -  -  -      push hl
  523 D1:B6AA 50 -  -  -          ld  d,b
  524 D1:B6AB 79 -  -  -          ld  a,c
  525 D1:B6AC 0E 08 -  -          ld  c,BASETABLE_STRIDE
  526 D1:B6AE ED 4C -  -          mlt bc
  527 D1:B6B0 21 00 40 D0         ld  hl,PAGETABLE
  528 D1:B6B4 09 -  -  -          add hl,bc
  529 D1:B6B5 ED 27 -  -          ld  hl,(hl)
  530 D1:B6B7 06 00 -  -          ld  b,0
  531 D1:B6B9 4F -  -  -          ld  c,a
  532 D1:B6BA 09 -  -  -          add hl,bc   ;full address
  533 D1:B6BB 7E -  -  -          READ_ACCESS
  534 D1:B6BC DD 77 00 -          ld (ix+REGA),a
  535 D1:B6BF DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  536 D1:B6D2 ED 33 04 -          ADDCYC(4)
  537 D1:B6D5 E1 -  -  -      pop hl
  538 D1:B6D6 C3 38 B3 D1     jp i6502NextLoad
  539 D1:B6DA -  -  -  -  
  540 D1:B6DA -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  541 D1:B6DA -  -  -  -  inst6502_lda_absx:
  542 D1:B6DA CD 80 B5 D1     call subroutine6502_abs_split_start
  543 D1:B6DE E5 -  -  -      push hl
  544 D1:B6DF 50 -  -  -          ld  d,b
  545 D1:B6E0 79 -  -  -          ld  a,c
  546 D1:B6E1 0E 08 -  -          ld  c,BASETABLE_STRIDE
  547 D1:B6E3 ED 4C -  -          mlt bc
  548 D1:B6E5 21 00 40 D0         ld  hl,PAGETABLE
  549 D1:B6E9 09 -  -  -          add hl,bc
  550 D1:B6EA ED 27 -  -          ld  hl,(hl)
  551 D1:B6EC 06 00 -  -          ld  b,0
  552 D1:B6EE DD 86 01 -          add a,(ix+REGX)
  553 D1:B6F1 4F -  -  -          ld  c,a
  554 D1:B6F2 30 04 -  -          jr  nc,+_
  555 D1:B6F4 FD 23 -  -          ADDCYC(1)
  556 D1:B6F6 04 -  -  -          inc b
  557 D1:B6F7 14 -  -  -          inc d
  558 D1:B6F8 09 -  -  -  _:      add hl,bc   ;full address
  559 D1:B6F9 7E -  -  -          READ_ACCESS
  560 D1:B6FA DD 77 00 -          ld (ix+REGA),a
  561 D1:B6FD DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  562 D1:B710 ED 33 04 -          ADDCYC(4)
  563 D1:B713 E1 -  -  -      pop hl
  564 D1:B714 C3 38 B3 D1     jp i6502NextLoad
  565 D1:B718 -  -  -  -  
  566 D1:B718 -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  567 D1:B718 -  -  -  -  inst6502_lda_absy:
  568 D1:B718 CD 80 B5 D1     call subroutine6502_abs_split_start
  569 D1:B71C E5 -  -  -      push hl
  570 D1:B71D 50 -  -  -          ld  d,b
  571 D1:B71E 79 -  -  -          ld  a,c
  572 D1:B71F 0E 08 -  -          ld  c,BASETABLE_STRIDE
  573 D1:B721 ED 4C -  -          mlt bc
  574 D1:B723 21 00 40 D0         ld  hl,PAGETABLE
  575 D1:B727 09 -  -  -          add hl,bc
  576 D1:B728 ED 27 -  -          ld  hl,(hl)
  577 D1:B72A 06 00 -  -          ld  b,0
  578 D1:B72C DD 86 02 -          add a,(ix+REGY)
  579 D1:B72F 4F -  -  -          ld  c,a
  580 D1:B730 30 04 -  -          jr  nc,+_
  581 D1:B732 FD 23 -  -          ADDCYC(1)
  582 D1:B734 04 -  -  -          inc b
  583 D1:B735 14 -  -  -          inc d
  584 D1:B736 09 -  -  -  _:      add hl,bc   ;full address
  585 D1:B737 7E -  -  -          READ_ACCESS
  586 D1:B738 DD 77 00 -          ld (ix+REGA),a
  587 D1:B73B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  588 D1:B74E ED 33 04 -          ADDCYC(4)
  589 D1:B751 E1 -  -  -      pop hl
  590 D1:B752 C3 38 B3 D1     jp i6502NextLoad
  591 D1:B756 -  -  -  -  
  592 D1:B756 -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  593 D1:B756 -  -  -  -  inst6502_lda_indx:
  594 D1:B756 E5 -  -  -      push hl
  595 D1:B757 7E -  -  -          ld  a,(hl)
  596 D1:B758 21 00 38 D0         ld  hl,ZEROPAGE
  597 D1:B75C 85 -  -  -          add a,L
  598 D1:B75D DD 86 01 -          add a,(ix+REGX)
  599 D1:B760 6F -  -  -          ld  L,a
  600 D1:B761 7E -  -  -          ld  a,(hl)
  601 D1:B762 2C -  -  -          inc L
  602 D1:B763 56 -  -  -          ld  d,(hl)
  603 D1:B764 42 -  -  -          ld  b,d
  604 D1:B765 0E 08 -  -          ld  c,BASETABLE_STRIDE
  605 D1:B767 ED 4C -  -          mlt bc
  606 D1:B769 21 00 40 D0         ld  hl,PAGETABLE
  607 D1:B76D 09 -  -  -          add hl,bc
  608 D1:B76E ED 27 -  -          ld  hl,(hl)
  609 D1:B770 06 00 -  -          ld  b,0
  610 D1:B772 4F -  -  -          ld  c,a
  611 D1:B773 09 -  -  -          add hl,bc
  612 D1:B774 7E -  -  -          READ_ACCESS
  613 D1:B775 DD 77 00 -          ld (ix+REGA),a
  614 D1:B778 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  615 D1:B78B ED 33 06 -          ADDCYC(6)
  616 D1:B78E E1 -  -  -      pop hl
  617 D1:B78F C3 38 B3 D1     jp i6502NextLoad
  618 D1:B793 -  -  -  -  
  619 D1:B793 -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  620 D1:B793 -  -  -  -  inst6502_lda_indy:
  621 D1:B793 E5 -  -  -      push hl
  622 D1:B794 7E -  -  -          ld  a,(hl)
  623 D1:B795 21 00 38 D0         ld  hl,ZEROPAGE
  624 D1:B799 85 -  -  -          add a,L
  625 D1:B79A 6F -  -  -          ld  L,a
  626 D1:B79B 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  627 D1:B79C 2C -  -  -          inc L
  628 D1:B79D DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  629 D1:B7A0 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  630 D1:B7A1 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  631 D1:B7A3 FD 23 -  -          ADDCYC(1)
  632 D1:B7A5 24 -  -  -          inc h
  633 D1:B7A6 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  634 D1:B7A7 2E 08 -  -          ld  L,BASETABLE_STRIDE
  635 D1:B7A9 ED 6C -  -          mlt hl          ;23.
  636 D1:B7AB 01 00 40 D0         ld  bc,PAGETABLE
  637 D1:B7AF 09 -  -  -          add hl,bc
  638 D1:B7B0 ED 27 -  -          ld  hl,(hl)     ;address get.
  639 D1:B7B2 01 00 00 00         ld  bc,0
  640 D1:B7B6 4F -  -  -          ld  c,a
  641 D1:B7B7 09 -  -  -          add hl,bc       ;Full address get.
  642 D1:B7B8 7E -  -  -          READ_ACCESS
  643 D1:B7B9 DD 77 00 -          ld  (ix+REGA),a
  644 D1:B7BC DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  645 D1:B7CF ED 33 05 -          ADDCYC(5)
  646 D1:B7D2 E1 -  -  -      pop hl
  647 D1:B7D3 C3 38 B3 D1     jp i6502NextLoad
  648 D1:B7D7 -  -  -  -  
  649 D1:B7D7 -  -  -  -  ;-----------------------------------------------------------------------------
  650 D1:B7D7 -  -  -  -  ;LDX - Load Index X with Memory
  651 D1:B7D7 -  -  -  -  ;    M -> X
  652 D1:B7D7 -  -  -  -  ;    N	Z	C	I	D	V
  653 D1:B7D7 -  -  -  -  ;    +	+	-	-	-	-
  654 D1:B7D7 -  -  -  -  
  655 D1:B7D7 -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  656 D1:B7D7 -  -  -  -  inst6502_ldx_imm:
  657 D1:B7D7 7E -  -  -      ld  a,(hl)
  658 D1:B7D8 DD 77 01 -      ld  (ix+REGX),a
  659 D1:B7DB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  660 D1:B7EE ED 33 02 -      ADDCYC(2)
  661 D1:B7F1 C3 38 B3 D1     jp i6502NextLoad
  662 D1:B7F5 -  -  -  -  
  663 D1:B7F5 -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  664 D1:B7F5 -  -  -  -  inst6502_ldx_zp:
  665 D1:B7F5 7E -  -  -      ld  a,(hl)
  666 D1:B7F6 01 00 38 D0     ld  bc,ZEROPAGE
  667 D1:B7FA 81 -  -  -      add a,c
  668 D1:B7FB 4F -  -  -      ld  c,a
  669 D1:B7FC 0A -  -  -      ld  a,(bc)
  670 D1:B7FD DD 77 01 -      ld  (ix+REGX),a
  671 D1:B800 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  672 D1:B813 ED 33 03 -      ADDCYC(3)
  673 D1:B816 C3 38 B3 D1     jp i6502NextLoad
  674 D1:B81A -  -  -  -  
  675 D1:B81A -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  676 D1:B81A -  -  -  -  inst6502_ldx_zpy:
  677 D1:B81A 7E -  -  -      ld  a,(hl)
  678 D1:B81B 01 00 38 D0     ld  bc,ZEROPAGE
  679 D1:B81F 81 -  -  -      add a,c
  680 D1:B820 DD 86 02 -      add a,(ix+REGY)
  681 D1:B823 4F -  -  -      ld  c,a
  682 D1:B824 0A -  -  -      ld  a,(bc)
  683 D1:B825 DD 77 01 -      ld  (ix+REGX),a
  684 D1:B828 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  685 D1:B83B ED 33 04 -      ADDCYC(4)
  686 D1:B83E C3 38 B3 D1     jp i6502NextLoad
  687 D1:B842 -  -  -  -  
  688 D1:B842 -  -  -  -  ;absolute	LDX oper	AE	3	4  
  689 D1:B842 -  -  -  -  inst6502_ldx_abs:
  690 D1:B842 CD 80 B5 D1     call subroutine6502_abs_split_start
  691 D1:B846 E5 -  -  -      push hl
  692 D1:B847 50 -  -  -          ld  d,b
  693 D1:B848 79 -  -  -          ld  a,c
  694 D1:B849 0E 08 -  -          ld  c,BASETABLE_STRIDE
  695 D1:B84B ED 4C -  -          mlt bc
  696 D1:B84D 21 00 40 D0         ld  hl,PAGETABLE
  697 D1:B851 09 -  -  -          add hl,bc
  698 D1:B852 ED 27 -  -          ld  hl,(hl)
  699 D1:B854 06 00 -  -          ld  b,0
  700 D1:B856 4F -  -  -          ld  c,a
  701 D1:B857 09 -  -  -          add hl,bc   ;full address
  702 D1:B858 7E -  -  -          READ_ACCESS
  703 D1:B859 DD 77 01 -          ld (ix+REGX),a
  704 D1:B85C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  705 D1:B86F ED 33 04 -          ADDCYC(4)
  706 D1:B872 E1 -  -  -      pop hl
  707 D1:B873 C3 38 B3 D1     jp i6502NextLoad
  708 D1:B877 -  -  -  -  
  709 D1:B877 -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  710 D1:B877 -  -  -  -  inst6502_ldx_absy:
  711 D1:B877 CD 80 B5 D1     call subroutine6502_abs_split_start
  712 D1:B87B E5 -  -  -      push hl
  713 D1:B87C 50 -  -  -          ld  d,b
  714 D1:B87D 79 -  -  -          ld  a,c
  715 D1:B87E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  716 D1:B880 ED 4C -  -          mlt bc
  717 D1:B882 21 00 40 D0         ld  hl,PAGETABLE
  718 D1:B886 09 -  -  -          add hl,bc
  719 D1:B887 ED 27 -  -          ld  hl,(hl)
  720 D1:B889 06 00 -  -          ld  b,0
  721 D1:B88B DD 86 02 -          add a,(ix+REGY)
  722 D1:B88E 4F -  -  -          ld  c,a
  723 D1:B88F 30 04 -  -          jr  nc,+_
  724 D1:B891 FD 23 -  -          ADDCYC(1)
  725 D1:B893 04 -  -  -          inc b
  726 D1:B894 14 -  -  -          inc d
  727 D1:B895 09 -  -  -  _:      add hl,bc   ;full address
  728 D1:B896 7E -  -  -          READ_ACCESS
  729 D1:B897 DD 77 01 -          ld (ix+REGX),a
  730 D1:B89A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  731 D1:B8AD ED 33 04 -          ADDCYC(4)
  732 D1:B8B0 E1 -  -  -      pop hl
  733 D1:B8B1 C3 38 B3 D1     jp i6502NextLoad
  734 D1:B8B5 -  -  -  -  
  735 D1:B8B5 -  -  -  -  ;-----------------------------------------------------------------------------
  736 D1:B8B5 -  -  -  -  ;LDY -  Load Index Y with Memory
  737 D1:B8B5 -  -  -  -  ;    M -> Y
  738 D1:B8B5 -  -  -  -  ;    N	Z	C	I	D	V
  739 D1:B8B5 -  -  -  -  ;    +	+	-	-	-	-
  740 D1:B8B5 -  -  -  -  
  741 D1:B8B5 -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  742 D1:B8B5 -  -  -  -  inst6502_ldy_imm:
  743 D1:B8B5 7E -  -  -      ld  a,(hl)
  744 D1:B8B6 DD 77 02 -      ld  (ix+REGY),a
  745 D1:B8B9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  746 D1:B8CC ED 33 02 -      ADDCYC(2)
  747 D1:B8CF C3 38 B3 D1     jp i6502NextLoad
  748 D1:B8D3 -  -  -  -  
  749 D1:B8D3 -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  750 D1:B8D3 -  -  -  -  inst6502_ldy_zp:
  751 D1:B8D3 7E -  -  -      ld  a,(hl)
  752 D1:B8D4 01 00 38 D0     ld  bc,ZEROPAGE
  753 D1:B8D8 81 -  -  -      add a,c
  754 D1:B8D9 4F -  -  -      ld  c,a
  755 D1:B8DA 0A -  -  -      ld  a,(bc)
  756 D1:B8DB DD 77 02 -      ld  (ix+REGY),a
  757 D1:B8DE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  758 D1:B8F1 ED 33 03 -      ADDCYC(3)
  759 D1:B8F4 C3 38 B3 D1     jp i6502NextLoad
  760 D1:B8F8 -  -  -  -  
  761 D1:B8F8 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  762 D1:B8F8 -  -  -  -  inst6502_ldy_zpx:
  763 D1:B8F8 7E -  -  -      ld  a,(hl)
  764 D1:B8F9 01 00 38 D0     ld  bc,ZEROPAGE
  765 D1:B8FD 81 -  -  -      add a,c
  766 D1:B8FE DD 86 01 -      add a,(ix+REGX)
  767 D1:B901 4F -  -  -      ld  c,a
  768 D1:B902 0A -  -  -      ld  a,(bc)
  769 D1:B903 DD 77 02 -      ld  (ix+REGY),a
  770 D1:B906 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  771 D1:B919 ED 33 04 -      ADDCYC(4)
  772 D1:B91C C3 38 B3 D1     jp i6502NextLoad
  773 D1:B920 -  -  -  -  
  774 D1:B920 -  -  -  -  ;absolute	LDY oper	AC	3	4  
  775 D1:B920 -  -  -  -  inst6502_ldy_abs:
  776 D1:B920 CD 80 B5 D1     call subroutine6502_abs_split_start
  777 D1:B924 E5 -  -  -      push hl
  778 D1:B925 50 -  -  -          ld  d,b
  779 D1:B926 79 -  -  -          ld  a,c
  780 D1:B927 0E 08 -  -          ld  c,BASETABLE_STRIDE
  781 D1:B929 ED 4C -  -          mlt bc
  782 D1:B92B 21 00 40 D0         ld  hl,PAGETABLE
  783 D1:B92F 09 -  -  -          add hl,bc
  784 D1:B930 ED 27 -  -          ld  hl,(hl)
  785 D1:B932 06 00 -  -          ld  b,0
  786 D1:B934 4F -  -  -          ld  c,a
  787 D1:B935 09 -  -  -          add hl,bc   ;full address
  788 D1:B936 7E -  -  -          READ_ACCESS
  789 D1:B937 DD 77 02 -          ld (ix+REGY),a
  790 D1:B93A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  791 D1:B94D ED 33 04 -          ADDCYC(4)
  792 D1:B950 E1 -  -  -      pop hl
  793 D1:B951 C3 38 B3 D1     jp i6502NextLoad
  794 D1:B955 -  -  -  -  
  795 D1:B955 -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  796 D1:B955 -  -  -  -  inst6502_ldy_absx:
  797 D1:B955 CD 80 B5 D1     call subroutine6502_abs_split_start
  798 D1:B959 E5 -  -  -      push hl
  799 D1:B95A 50 -  -  -          ld  d,b
  800 D1:B95B 79 -  -  -          ld  a,c
  801 D1:B95C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  802 D1:B95E ED 4C -  -          mlt bc
  803 D1:B960 21 00 40 D0         ld  hl,PAGETABLE
  804 D1:B964 09 -  -  -          add hl,bc
  805 D1:B965 ED 27 -  -          ld  hl,(hl)
  806 D1:B967 06 00 -  -          ld  b,0
  807 D1:B969 DD 86 01 -          add a,(ix+REGX)
  808 D1:B96C 4F -  -  -          ld  c,a
  809 D1:B96D 30 04 -  -          jr  nc,+_
  810 D1:B96F FD 23 -  -          ADDCYC(1)
  811 D1:B971 04 -  -  -          inc b
  812 D1:B972 14 -  -  -          inc d
  813 D1:B973 09 -  -  -  _:      add hl,bc   ;full address
  814 D1:B974 7E -  -  -          READ_ACCESS
  815 D1:B975 DD 77 02 -          ld (ix+REGY),a
  816 D1:B978 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  817 D1:B98B ED 33 04 -          ADDCYC(4)
  818 D1:B98E E1 -  -  -      pop hl
  819 D1:B98F C3 38 B3 D1     jp i6502NextLoad
  820 D1:B993 -  -  -  -  
  821 D1:B993 -  -  -  -  ;-----------------------------------------------------------------------------
  822 D1:B993 -  -  -  -  ;STA - Store Accumulator in Memory
  823 D1:B993 -  -  -  -  ;    A -> M
  824 D1:B993 -  -  -  -  ;    N	Z	C	I	D	V
  825 D1:B993 -  -  -  -  ;    -	-	-	-	-	-
  826 D1:B993 -  -  -  -  
  827 D1:B993 -  -  -  -  ;zeropage	STA oper	85	2	3  
  828 D1:B993 -  -  -  -  inst6502_sta_zp:
  829 D1:B993 7E -  -  -      ld  a,(hl)
  830 D1:B994 01 00 38 D0     ld  bc,ZEROPAGE
  831 D1:B998 81 -  -  -      add a,c
  832 D1:B999 4F -  -  -      ld  c,a
  833 D1:B99A DD 7E 00 -      ld  a,(ix+REGA)
  834 D1:B99D 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  835 D1:B99E ED 33 03 -      ADDCYC(3)
  836 D1:B9A1 C3 38 B3 D1     jp i6502NextLoad
  837 D1:B9A5 -  -  -  -  
  838 D1:B9A5 -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  839 D1:B9A5 -  -  -  -  inst6502_sta_zpx:
  840 D1:B9A5 7E -  -  -      ld  a,(hl)
  841 D1:B9A6 01 00 38 D0     ld  bc,ZEROPAGE
  842 D1:B9AA 81 -  -  -      add a,c
  843 D1:B9AB DD 86 01 -      add a,(ix+REGX)
  844 D1:B9AE 4F -  -  -      ld  c,a
  845 D1:B9AF DD 7E 00 -      ld  a,(ix+REGA)
  846 D1:B9B2 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  847 D1:B9B3 ED 33 04 -      ADDCYC(4)
  848 D1:B9B6 C3 38 B3 D1     jp i6502NextLoad
  849 D1:B9BA -  -  -  -  
  850 D1:B9BA -  -  -  -  ;absolute	STA oper	8D	3	4
  851 D1:B9BA -  -  -  -  inst6502_sta_abs:
  852 D1:B9BA CD 80 B5 D1     call subroutine6502_abs_split_start
  853 D1:B9BE E5 -  -  -      push hl
  854 D1:B9BF 50 -  -  -          ld  d,b
  855 D1:B9C0 79 -  -  -          ld  a,c
  856 D1:B9C1 0E 08 -  -          ld  c,BASETABLE_STRIDE
  857 D1:B9C3 ED 4C -  -          mlt bc
  858 D1:B9C5 21 00 40 D0         ld  hl,PAGETABLE
  859 D1:B9C9 09 -  -  -          add hl,bc
  860 D1:B9CA ED 27 -  -          ld  hl,(hl)
  861 D1:B9CC 06 00 -  -          ld  b,0
  862 D1:B9CE 4F -  -  -          ld  c,a
  863 D1:B9CF 09 -  -  -          add hl,bc   ;full address
  864 D1:B9D0 DD 46 00 -          ld  b,(ix+REGA)
  865 D1:B9D3 70 -  -  -          WRITE_ACCESS
  866 D1:B9D4 ED 33 04 -          ADDCYC(4)
  867 D1:B9D7 E1 -  -  -      pop hl
  868 D1:B9D8 C3 38 B3 D1     jp i6502NextLoad
  869 D1:B9DC -  -  -  -  
  870 D1:B9DC -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  871 D1:B9DC -  -  -  -  inst6502_sta_absx:
  872 D1:B9DC CD 80 B5 D1     call subroutine6502_abs_split_start
  873 D1:B9E0 E5 -  -  -      push hl
  874 D1:B9E1 50 -  -  -          ld  d,b
  875 D1:B9E2 79 -  -  -          ld  a,c
  876 D1:B9E3 0E 08 -  -          ld  c,BASETABLE_STRIDE
  877 D1:B9E5 ED 4C -  -          mlt bc
  878 D1:B9E7 21 00 40 D0         ld  hl,PAGETABLE
  879 D1:B9EB 09 -  -  -          add hl,bc
  880 D1:B9EC ED 27 -  -          ld  hl,(hl)
  881 D1:B9EE 06 00 -  -          ld  b,0
  882 D1:B9F0 DD 86 01 -          add a,(ix+REGX)
  883 D1:B9F3 4F -  -  -          ld  c,a
  884 D1:B9F4 30 02 -  -          jr  nc,+_
  885 D1:B9F6 04 -  -  -          inc b
  886 D1:B9F7 14 -  -  -          inc d
  887 D1:B9F8 09 -  -  -  _:      add hl,bc   ;full address
  888 D1:B9F9 DD 46 00 -          ld  b,(ix+REGA)
  889 D1:B9FC 70 -  -  -          WRITE_ACCESS
  890 D1:B9FD ED 33 05 -          ADDCYC(5)
  891 D1:BA00 E1 -  -  -      pop hl
  892 D1:BA01 C3 38 B3 D1     jp i6502NextLoad
  893 D1:BA05 -  -  -  -  
  894 D1:BA05 -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  895 D1:BA05 -  -  -  -  inst6502_sta_absy:
  896 D1:BA05 CD 80 B5 D1     call subroutine6502_abs_split_start
  897 D1:BA09 E5 -  -  -      push hl
  898 D1:BA0A 50 -  -  -          ld  d,b
  899 D1:BA0B 79 -  -  -          ld  a,c
  900 D1:BA0C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  901 D1:BA0E ED 4C -  -          mlt bc
  902 D1:BA10 21 00 40 D0         ld  hl,PAGETABLE
  903 D1:BA14 09 -  -  -          add hl,bc
  904 D1:BA15 ED 27 -  -          ld  hl,(hl)
  905 D1:BA17 06 00 -  -          ld  b,0
  906 D1:BA19 DD 86 02 -          add a,(ix+REGY)
  907 D1:BA1C 4F -  -  -          ld  c,a
  908 D1:BA1D 30 02 -  -          jr  nc,+_
  909 D1:BA1F 04 -  -  -          inc b
  910 D1:BA20 14 -  -  -          inc d
  911 D1:BA21 09 -  -  -  _:      add hl,bc   ;full address
  912 D1:BA22 DD 46 00 -          ld  b,(ix+REGA)
  913 D1:BA25 70 -  -  -          WRITE_ACCESS
  914 D1:BA26 ED 33 05 -          ADDCYC(5)
  915 D1:BA29 E1 -  -  -      pop hl
  916 D1:BA2A C3 38 B3 D1     jp i6502NextLoad
  917 D1:BA2E -  -  -  -  
  918 D1:BA2E -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  919 D1:BA2E -  -  -  -  inst6502_sta_indx:
  920 D1:BA2E E5 -  -  -      push hl
  921 D1:BA2F 7E -  -  -          ld  a,(hl)
  922 D1:BA30 21 00 38 D0         ld  hl,ZEROPAGE
  923 D1:BA34 85 -  -  -          add a,L
  924 D1:BA35 DD 86 01 -          add a,(ix+REGX)
  925 D1:BA38 6F -  -  -          ld  L,a
  926 D1:BA39 7E -  -  -          ld  a,(hl)
  927 D1:BA3A 2C -  -  -          inc L
  928 D1:BA3B 56 -  -  -          ld  d,(hl)
  929 D1:BA3C 42 -  -  -          ld  b,d
  930 D1:BA3D 0E 08 -  -          ld  c,BASETABLE_STRIDE
  931 D1:BA3F ED 4C -  -          mlt bc
  932 D1:BA41 21 00 40 D0         ld  hl,PAGETABLE
  933 D1:BA45 09 -  -  -          add hl,bc
  934 D1:BA46 ED 27 -  -          ld  hl,(hl)
  935 D1:BA48 06 00 -  -          ld  b,0
  936 D1:BA4A 4F -  -  -          ld  c,a
  937 D1:BA4B 09 -  -  -          add hl,bc
  938 D1:BA4C DD 46 00 -          ld  b,(ix+REGA)
  939 D1:BA4F 70 -  -  -          WRITE_ACCESS
  940 D1:BA50 ED 33 06 -          ADDCYC(6)
  941 D1:BA53 E1 -  -  -      pop hl
  942 D1:BA54 C3 38 B3 D1     jp i6502NextLoad
  943 D1:BA58 -  -  -  -  
  944 D1:BA58 -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  945 D1:BA58 -  -  -  -  inst6502_sta_indy:
  946 D1:BA58 E5 -  -  -      push hl
  947 D1:BA59 7E -  -  -          ld  a,(hl)
  948 D1:BA5A 21 00 38 D0         ld  hl,ZEROPAGE
  949 D1:BA5E 85 -  -  -          add a,L
  950 D1:BA5F 6F -  -  -          ld  L,a
  951 D1:BA60 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  952 D1:BA61 2C -  -  -          inc L
  953 D1:BA62 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  954 D1:BA65 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  955 D1:BA66 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  956 D1:BA68 24 -  -  -          inc h
  957 D1:BA69 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  958 D1:BA6A 2E 08 -  -          ld  L,BASETABLE_STRIDE
  959 D1:BA6C ED 6C -  -          mlt hl          ;23.
  960 D1:BA6E 01 00 40 D0         ld  bc,PAGETABLE
  961 D1:BA72 09 -  -  -          add hl,bc
  962 D1:BA73 ED 27 -  -          ld  hl,(hl)     ;address get.
  963 D1:BA75 01 00 00 00         ld  bc,0
  964 D1:BA79 4F -  -  -          ld  c,a
  965 D1:BA7A 09 -  -  -          add hl,bc       ;Full address get.
  966 D1:BA7B DD 46 00 -          ld  b,(ix+REGA)
  967 D1:BA7E 70 -  -  -          WRITE_ACCESS
  968 D1:BA7F ED 33 06 -          ADDCYC(6)
  969 D1:BA82 E1 -  -  -      pop hl
  970 D1:BA83 C3 38 B3 D1     jp i6502NextLoad
  971 D1:BA87 -  -  -  -  
  972 D1:BA87 -  -  -  -  ;-----------------------------------------------------------------------------
  973 D1:BA87 -  -  -  -  ;STX - Store Index X in Memory
  974 D1:BA87 -  -  -  -  ;    X -> M
  975 D1:BA87 -  -  -  -  ;    N	Z	C	I	D	V
  976 D1:BA87 -  -  -  -  ;    -	-	-	-	-	-
  977 D1:BA87 -  -  -  -  
  978 D1:BA87 -  -  -  -  ;zeropage	STX oper	86	2	3  
  979 D1:BA87 -  -  -  -  inst6502_stx_zp:
  980 D1:BA87 7E -  -  -      ld  a,(hl)
  981 D1:BA88 01 00 38 D0     ld  bc,ZEROPAGE
  982 D1:BA8C 81 -  -  -      add a,c
  983 D1:BA8D 4F -  -  -      ld  c,a
  984 D1:BA8E DD 7E 01 -      ld  a,(ix+REGX)
  985 D1:BA91 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  986 D1:BA92 ED 33 03 -      ADDCYC(3)
  987 D1:BA95 C3 38 B3 D1     jp i6502NextLoad
  988 D1:BA99 -  -  -  -  
  989 D1:BA99 -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
  990 D1:BA99 -  -  -  -  inst6502_stx_zpy:
  991 D1:BA99 7E -  -  -      ld  a,(hl)
  992 D1:BA9A 01 00 38 D0     ld  bc,ZEROPAGE
  993 D1:BA9E 81 -  -  -      add a,c
  994 D1:BA9F DD 86 02 -      add a,(ix+REGY)
  995 D1:BAA2 4F -  -  -      ld  c,a
  996 D1:BAA3 DD 7E 01 -      ld  a,(ix+REGX)
  997 D1:BAA6 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  998 D1:BAA7 ED 33 04 -      ADDCYC(4)
  999 D1:BAAA C3 38 B3 D1     jp i6502NextLoad
 1000 D1:BAAE -  -  -  -  
 1001 D1:BAAE -  -  -  -  ;absolute	STX oper	8E	3	4  
 1002 D1:BAAE -  -  -  -  inst6502_stx_abs:
 1003 D1:BAAE CD 80 B5 D1     call subroutine6502_abs_split_start
 1004 D1:BAB2 E5 -  -  -      push hl
 1005 D1:BAB3 50 -  -  -          ld  d,b
 1006 D1:BAB4 79 -  -  -          ld  a,c
 1007 D1:BAB5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1008 D1:BAB7 ED 4C -  -          mlt bc
 1009 D1:BAB9 21 00 40 D0         ld  hl,PAGETABLE
 1010 D1:BABD 09 -  -  -          add hl,bc
 1011 D1:BABE ED 27 -  -          ld  hl,(hl)
 1012 D1:BAC0 06 00 -  -          ld  b,0
 1013 D1:BAC2 4F -  -  -          ld  c,a
 1014 D1:BAC3 09 -  -  -          add hl,bc   ;full address
 1015 D1:BAC4 DD 46 01 -          ld  b,(ix+REGX)
 1016 D1:BAC7 70 -  -  -          WRITE_ACCESS
 1017 D1:BAC8 ED 33 04 -          ADDCYC(4)
 1018 D1:BACB E1 -  -  -      pop hl
 1019 D1:BACC C3 38 B3 D1     jp i6502NextLoad
 1020 D1:BAD0 -  -  -  -  
 1021 D1:BAD0 -  -  -  -  ;-----------------------------------------------------------------------------
 1022 D1:BAD0 -  -  -  -  ;STY - Store Index Y in Memory
 1023 D1:BAD0 -  -  -  -  ;    Y -> M
 1024 D1:BAD0 -  -  -  -  ;    N	Z	C	I	D	V
 1025 D1:BAD0 -  -  -  -  ;    -	-	-	-	-	-
 1026 D1:BAD0 -  -  -  -  
 1027 D1:BAD0 -  -  -  -  ;zeropage	STY oper	84	2	3  
 1028 D1:BAD0 -  -  -  -  inst6502_sty_zp:
 1029 D1:BAD0 7E -  -  -      ld  a,(hl)
 1030 D1:BAD1 01 00 38 D0     ld  bc,ZEROPAGE
 1031 D1:BAD5 81 -  -  -      add a,c
 1032 D1:BAD6 4F -  -  -      ld  c,a
 1033 D1:BAD7 DD 7E 02 -      ld  a,(ix+REGY)
 1034 D1:BADA 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1035 D1:BADB ED 33 03 -      ADDCYC(3)
 1036 D1:BADE C3 38 B3 D1     jp i6502NextLoad
 1037 D1:BAE2 -  -  -  -  
 1038 D1:BAE2 -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1039 D1:BAE2 -  -  -  -  inst6502_sty_zpx:
 1040 D1:BAE2 7E -  -  -      ld  a,(hl)
 1041 D1:BAE3 01 00 38 D0     ld  bc,ZEROPAGE
 1042 D1:BAE7 81 -  -  -      add a,c
 1043 D1:BAE8 DD 86 01 -      add a,(ix+REGX)
 1044 D1:BAEB 4F -  -  -      ld  c,a
 1045 D1:BAEC DD 7E 02 -      ld  a,(ix+REGY)
 1046 D1:BAEF 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1047 D1:BAF0 ED 33 04 -      ADDCYC(4)
 1048 D1:BAF3 C3 38 B3 D1     jp i6502NextLoad
 1049 D1:BAF7 -  -  -  -  
 1050 D1:BAF7 -  -  -  -  ;absolute	STY oper	8C	3	4  
 1051 D1:BAF7 -  -  -  -  inst6502_sty_abs:
 1052 D1:BAF7 CD 80 B5 D1     call subroutine6502_abs_split_start
 1053 D1:BAFB E5 -  -  -      push hl
 1054 D1:BAFC 50 -  -  -          ld  d,b
 1055 D1:BAFD 79 -  -  -          ld  a,c
 1056 D1:BAFE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1057 D1:BB00 ED 4C -  -          mlt bc
 1058 D1:BB02 21 00 40 D0         ld  hl,PAGETABLE
 1059 D1:BB06 09 -  -  -          add hl,bc
 1060 D1:BB07 ED 27 -  -          ld  hl,(hl)
 1061 D1:BB09 06 00 -  -          ld  b,0
 1062 D1:BB0B 4F -  -  -          ld  c,a
 1063 D1:BB0C 09 -  -  -          add hl,bc   ;full address
 1064 D1:BB0D DD 46 02 -          ld  b,(ix+REGY)
 1065 D1:BB10 70 -  -  -          WRITE_ACCESS
 1066 D1:BB11 ED 33 04 -          ADDCYC(4)
 1067 D1:BB14 E1 -  -  -      pop hl
 1068 D1:BB15 C3 38 B3 D1     jp i6502NextLoad
 1069 D1:BB19 -  -  -  -  
 1070 D1:BB19 -  -  -  -  ;-----------------------------------------------------------------------------
 1071 D1:BB19 -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1072 D1:BB19 -  -  -  -  ;N	Z	C	I	D	V
 1073 D1:BB19 -  -  -  -  ;+	+	-	-	-	-
 1074 D1:BB19 -  -  -  -  ;implied	TAX	AA	1	2
 1075 D1:BB19 -  -  -  -  inst6502_tax:
 1076 D1:BB19 DD 7E 00 -      ld  a,(ix+REGA)
 1077 D1:BB1C DD 77 01 -      ld  (ix+REGX),a
 1078 D1:BB1F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1079 D1:BB32 ED 33 02 -      ADDCYC(2)
 1080 D1:BB35 C3 51 B3 D1     jp i6502FinishLoad
 1081 D1:BB39 -  -  -  -  
 1082 D1:BB39 -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1083 D1:BB39 -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:BB39 -  -  -  -  ;+	+	-	-	-	-
 1085 D1:BB39 -  -  -  -  ;implied	TAY	A8	1	2
 1086 D1:BB39 -  -  -  -  inst6502_tay:
 1087 D1:BB39 DD 7E 00 -      ld  a,(ix+REGA)
 1088 D1:BB3C DD 77 02 -      ld  (ix+REGY),a
 1089 D1:BB3F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1090 D1:BB52 ED 33 02 -      ADDCYC(2)
 1091 D1:BB55 C3 51 B3 D1     jp i6502FinishLoad
 1092 D1:BB59 -  -  -  -  
 1093 D1:BB59 -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1094 D1:BB59 -  -  -  -  ;N	Z	C	I	D	V
 1095 D1:BB59 -  -  -  -  ;+	+	-	-	-	-
 1096 D1:BB59 -  -  -  -  ;implied	TSX	BA	1	2
 1097 D1:BB59 -  -  -  -  inst6502_tsx:
 1098 D1:BB59 DD 7E 03 -      ld  a,(ix+REGSP)
 1099 D1:BB5C DD 77 01 -      ld  (ix+REGX),a
 1100 D1:BB5F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1101 D1:BB72 ED 33 02 -      ADDCYC(2)
 1102 D1:BB75 C3 51 B3 D1     jp i6502FinishLoad
 1103 D1:BB79 -  -  -  -  
 1104 D1:BB79 -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1105 D1:BB79 -  -  -  -  ;N	Z	C	I	D	V
 1106 D1:BB79 -  -  -  -  ;+	+	-	-	-	-
 1107 D1:BB79 -  -  -  -  ;implied	TXA	8A	1	2
 1108 D1:BB79 -  -  -  -  inst6502_txa:
 1109 D1:BB79 DD 7E 01 -      ld  a,(ix+REGX)
 1110 D1:BB7C DD 77 00 -      ld  (ix+REGA),a
 1111 D1:BB7F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1112 D1:BB92 ED 33 02 -      ADDCYC(2)
 1113 D1:BB95 C3 51 B3 D1     jp i6502FinishLoad
 1114 D1:BB99 -  -  -  -  
 1115 D1:BB99 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1116 D1:BB99 -  -  -  -  ;N	Z	C	I	D	V
 1117 D1:BB99 -  -  -  -  ;-	-	-	-	-	-
 1118 D1:BB99 -  -  -  -  ;implied	TXS	9A	1	2
 1119 D1:BB99 -  -  -  -  inst6502_txs:
 1120 D1:BB99 DD 7E 01 -      ld  a,(ix+REGX)
 1121 D1:BB9C DD 77 03 -      ld  (ix+REGSP),a
 1122 D1:BB9F ED 33 02 -      ADDCYC(2)
 1123 D1:BBA2 C3 51 B3 D1     jp i6502FinishLoad
 1124 D1:BBA6 -  -  -  -  
 1125 D1:BBA6 -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1126 D1:BBA6 -  -  -  -  ;N	Z	C	I	D	V
 1127 D1:BBA6 -  -  -  -  ;+	+	-	-	-	-
 1128 D1:BBA6 -  -  -  -  ;implied	TYA	98	1	2
 1129 D1:BBA6 -  -  -  -  inst6502_tya:
 1130 D1:BBA6 DD 7E 02 -      ld  a,(ix+REGY)
 1131 D1:BBA9 DD 77 00 -      ld  (ix+REGA),a
 1132 D1:BBAC DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1133 D1:BBBF ED 33 02 -      ADDCYC(2)
 1134 D1:BBC2 C3 51 B3 D1     jp i6502FinishLoad
 1135 D1:BBC6 -  -  -  -  
 1136 D1:BBC6 -  -  -  -  ;-----------------------------------------------------------------------------
 1137 D1:BBC6 -  -  -  -  ;-----------------------------------------------------------------------------
 1138 D1:BBC6 -  -  -  -  ;-----------------------------------------------------------------------------
 1139 D1:BBC6 -  -  -  -  ;Instructions by type: Stack Instructions
 1140 D1:BBC6 -  -  -  -  ;PHA - Push Accumulator on Stack
 1141 D1:BBC6 -  -  -  -  ;    push A
 1142 D1:BBC6 -  -  -  -  ;    N	Z	C	I	D	V
 1143 D1:BBC6 -  -  -  -  ;    -	-	-	-	-	-
 1144 D1:BBC6 -  -  -  -  ;implied	PHA	48	1	3 
 1145 D1:BBC6 -  -  -  -  inst6502_pha:
 1146 D1:BBC6 DD 7E 00 -      ld  a,(ix+REGA)
 1147 D1:BBC9 01 00 39 D0     ld  bc,STACKBASE
 1148 D1:BBCD DD 4E 03 -      ld  c,(ix+REGSP)
 1149 D1:BBD0 02 -  -  -      ld  (bc),a
 1150 D1:BBD1 0D -  -  -      dec c
 1151 D1:BBD2 DD 71 03 -      ld  (ix+REGSP),c
 1152 D1:BBD5 C3 51 B3 D1     jp i6502FinishLoad
 1153 D1:BBD9 -  -  -  -  
 1154 D1:BBD9 -  -  -  -  ;PHP - Push Processor Status on Stack
 1155 D1:BBD9 -  -  -  -  ;    The status register will be pushed with the break
 1156 D1:BBD9 -  -  -  -  ;    flag and bit 5 set to 1.
 1157 D1:BBD9 -  -  -  -  ;    push SR
 1158 D1:BBD9 -  -  -  -  ;    N	Z	C	I	D	V
 1159 D1:BBD9 -  -  -  -  ;    -	-	-	-	-	-
 1160 D1:BBD9 -  -  -  -  ;implied	PHP	08	1	3  
 1161 D1:BBD9 -  -  -  -  inst6502_php:
 1162 D1:BBD9 DD 7E 04 -      ld  a,(ix+REGSR)
 1163 D1:BBDC F6 30 -  -      or  a,%00110000
 1164 D1:BBDE 01 00 39 D0     ld  bc,STACKBASE
 1165 D1:BBE2 DD 4E 03 -      ld  c,(ix+REGSP)
 1166 D1:BBE5 02 -  -  -      ld  (bc),a
 1167 D1:BBE6 0D -  -  -      dec c
 1168 D1:BBE7 DD 71 03 -      ld  (ix+REGSP),c
 1169 D1:BBEA C3 51 B3 D1     jp i6502FinishLoad
 1170 D1:BBEE -  -  -  -  
 1171 D1:BBEE -  -  -  -  
 1172 D1:BBEE -  -  -  -  
 1173 D1:BBEE -  -  -  -  ;PLA - Pull Accumulator from Stack
 1174 D1:BBEE -  -  -  -  ;    pull A
 1175 D1:BBEE -  -  -  -  ;    N	Z	C	I	D	V
 1176 D1:BBEE -  -  -  -  ;    +	+	-	-	-	-
 1177 D1:BBEE -  -  -  -  ;implied	PLA	68	1	4  
 1178 D1:BBEE -  -  -  -  inst6502_pla:
 1179 D1:BBEE 01 00 39 D0     ld  bc,STACKBASE
 1180 D1:BBF2 DD 4E 03 -      ld  c,(ix+REGSP)
 1181 D1:BBF5 0C -  -  -      inc c
 1182 D1:BBF6 0A -  -  -      ld  a,(bc)
 1183 D1:BBF7 DD 71 03 -      ld  (ix+REGSP),c
 1184 D1:BBFA DD 77 00 -      ld  (ix+REGA),a
 1185 D1:BBFD DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1186 D1:BC10 C3 51 B3 D1     jp i6502FinishLoad
 1187 D1:BC14 -  -  -  -  
 1188 D1:BC14 -  -  -  -  ;PLP - Pull Processor Status from Stack
 1189 D1:BC14 -  -  -  -  ;    The status register will be pulled with the break
 1190 D1:BC14 -  -  -  -  ;    flag and bit 5 ignored.
 1191 D1:BC14 -  -  -  -  ;    pull SR
 1192 D1:BC14 -  -  -  -  ;    N	Z	C	I	D	V
 1193 D1:BC14 -  -  -  -  ;    from stack
 1194 D1:BC14 -  -  -  -  ;implied	PLP	28	1	4  
 1195 D1:BC14 -  -  -  -  inst6502_plp:
 1196 D1:BC14 01 00 39 D0     ld  bc,STACKBASE
 1197 D1:BC18 DD 4E 03 -      ld  c,(ix+REGSP)
 1198 D1:BC1B 0C -  -  -      inc c
 1199 D1:BC1C 0A -  -  -      ld  a,(bc)
 1200 D1:BC1D DD 71 03 -      ld  (ix+REGSP),c
 1201 D1:BC20 DD 46 04 -      ld  b,(ix+REGSR)
 1202 D1:BC23 A8 -  -  -      xor a,b
 1203 D1:BC24 E6 CF -  -      and a,%11001111
 1204 D1:BC26 A8 -  -  -      xor a,b
 1205 D1:BC27 DD 77 04 -      ld  (ix+REGSR),a
 1206 D1:BC2A C3 51 B3 D1     jp i6502FinishLoad
 1207 D1:BC2E -  -  -  -  
 1208 D1:BC2E -  -  -  -  
 1209 D1:BC2E -  -  -  -  ;-----------------------------------------------------------------------------
 1210 D1:BC2E -  -  -  -  ;-----------------------------------------------------------------------------
 1211 D1:BC2E -  -  -  -  ;-----------------------------------------------------------------------------
 1212 D1:BC2E -  -  -  -  ;Instructions by type: Decrements and Increments
 1213 D1:BC2E -  -  -  -  
 1214 D1:BC2E -  -  -  -  ;DEC -  Decrement Memory by One
 1215 D1:BC2E -  -  -  -  ;    M - 1 -> M
 1216 D1:BC2E -  -  -  -  ;    N	Z	C	I	D	V
 1217 D1:BC2E -  -  -  -  ;    +	+	-	-	-	-
 1218 D1:BC2E -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1219 D1:BC2E -  -  -  -  
 1220 D1:BC2E -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1221 D1:BC2E -  -  -  -  inst6502_dec_zp:
 1222 D1:BC2E 7E -  -  -      ld  a,(hl)
 1223 D1:BC2F 01 00 38 D0     ld  bc,ZEROPAGE
 1224 D1:BC33 81 -  -  -      add a,c
 1225 D1:BC34 4F -  -  -      ld  c,a
 1226 D1:BC35 0A -  -  -      ld  a,(bc)
 1227 D1:BC36 3D -  -  -      dec a
 1228 D1:BC37 02 -  -  -      ld  (bc),a
 1229 D1:BC38 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1230 D1:BC4B ED 33 05 -      ADDCYC(5)
 1231 D1:BC4E C3 38 B3 D1     jp i6502NextLoad
 1232 D1:BC52 -  -  -  -  
 1233 D1:BC52 -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1234 D1:BC52 -  -  -  -  inst6502_dec_zpx:
 1235 D1:BC52 7E -  -  -      ld  a,(hl)
 1236 D1:BC53 01 00 38 D0     ld  bc,ZEROPAGE
 1237 D1:BC57 81 -  -  -      add a,c
 1238 D1:BC58 DD 86 01 -      add a,(ix+REGX)
 1239 D1:BC5B 4F -  -  -      ld  c,a
 1240 D1:BC5C 0A -  -  -      ld  a,(bc)
 1241 D1:BC5D 3D -  -  -      dec a
 1242 D1:BC5E 02 -  -  -      ld  (bc),a
 1243 D1:BC5F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1244 D1:BC72 ED 33 06 -      ADDCYC(6)
 1245 D1:BC75 C3 38 B3 D1     jp i6502NextLoad
 1246 D1:BC79 -  -  -  -  
 1247 D1:BC79 -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1248 D1:BC79 -  -  -  -  inst6502_dec_abs:
 1249 D1:BC79 CD 80 B5 D1     call subroutine6502_abs_split_start
 1250 D1:BC7D E5 -  -  -      push hl
 1251 D1:BC7E 50 -  -  -          ld  d,b
 1252 D1:BC7F 79 -  -  -          ld  a,c
 1253 D1:BC80 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1254 D1:BC82 ED 4C -  -          mlt bc
 1255 D1:BC84 21 00 40 D0         ld  hl,PAGETABLE
 1256 D1:BC88 09 -  -  -          add hl,bc
 1257 D1:BC89 ED 27 -  -          ld  hl,(hl)
 1258 D1:BC8B 06 00 -  -          ld  b,0
 1259 D1:BC8D 4F -  -  -          ld  c,a
 1260 D1:BC8E 09 -  -  -          add hl,bc   ;full address
 1261 D1:BC8F 7E -  -  -          READ_ACCESS
 1262 D1:BC90 3D -  -  -          dec a
 1263 D1:BC91 47 -  -  -          ld  b,a
 1264 D1:BC92 -  -  -  -          ;
 1265 D1:BC92 DD 7E 04 -          ld  a,(ix+REGSR)
 1266 D1:BC95 CB 8F -  -          res SF_ZERO,a
 1267 D1:BC97 20 02 -  -          jr  nz,$+4
 1268 D1:BC99 CB CF -  -          set SF_ZERO,a
 1269 D1:BC9B CB BF -  -          res SF_NEG,a
 1270 D1:BC9D FA A2 BC D1         jp  m,$+5
 1271 D1:BCA1 CB FF -  -          set SF_NEG,a
 1272 D1:BCA3 DD 77 04 -          ld  (ix+REGSR),a
 1273 D1:BCA6 -  -  -  -          ;
 1274 D1:BCA6 70 -  -  -          WRITE_ACCESS
 1275 D1:BCA7 ED 33 06 -          ADDCYC(6)
 1276 D1:BCAA E1 -  -  -      pop hl
 1277 D1:BCAB C3 38 B3 D1     jp i6502NextLoad
 1278 D1:BCAF -  -  -  -  
 1279 D1:BCAF -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1280 D1:BCAF -  -  -  -  inst6502_dec_absx:
 1281 D1:BCAF CD 80 B5 D1     call subroutine6502_abs_split_start
 1282 D1:BCB3 E5 -  -  -      push hl
 1283 D1:BCB4 50 -  -  -          ld  d,b
 1284 D1:BCB5 79 -  -  -          ld  a,c
 1285 D1:BCB6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1286 D1:BCB8 ED 4C -  -          mlt bc
 1287 D1:BCBA 21 00 40 D0         ld  hl,PAGETABLE
 1288 D1:BCBE 09 -  -  -          add hl,bc
 1289 D1:BCBF ED 27 -  -          ld  hl,(hl)
 1290 D1:BCC1 06 00 -  -          ld  b,0
 1291 D1:BCC3 DD 86 01 -          add a,(ix+REGX)
 1292 D1:BCC6 4F -  -  -          ld  c,a
 1293 D1:BCC7 30 02 -  -          jr  nc,+_
 1294 D1:BCC9 04 -  -  -          inc b
 1295 D1:BCCA 14 -  -  -          inc d
 1296 D1:BCCB 09 -  -  -  _:      add hl,bc   ;full address
 1297 D1:BCCC 7E -  -  -          READ_ACCESS
 1298 D1:BCCD 3D -  -  -          dec a
 1299 D1:BCCE 47 -  -  -          ld  b,a
 1300 D1:BCCF -  -  -  -          ;
 1301 D1:BCCF DD 7E 04 -          ld  a,(ix+REGSR)
 1302 D1:BCD2 CB 8F -  -          res SF_ZERO,a
 1303 D1:BCD4 20 02 -  -          jr  nz,$+4
 1304 D1:BCD6 CB CF -  -          set SF_ZERO,a
 1305 D1:BCD8 CB BF -  -          res SF_NEG,a
 1306 D1:BCDA FA DF BC D1         jp  m,$+5
 1307 D1:BCDE CB FF -  -          set SF_NEG,a
 1308 D1:BCE0 DD 77 04 -          ld  (ix+REGSR),a
 1309 D1:BCE3 -  -  -  -          ;
 1310 D1:BCE3 70 -  -  -          WRITE_ACCESS
 1311 D1:BCE4 ED 33 07 -          ADDCYC(7)
 1312 D1:BCE7 E1 -  -  -      pop hl
 1313 D1:BCE8 C3 38 B3 D1     jp i6502NextLoad
 1314 D1:BCEC -  -  -  -  
 1315 D1:BCEC -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1316 D1:BCEC -  -  -  -  ;Flags altered: NZ
 1317 D1:BCEC -  -  -  -  ;implied	DEX	CA	1	2  
 1318 D1:BCEC -  -  -  -  inst6502_dex:
 1319 D1:BCEC DD 35 01 -      dec (ix+REGX)
 1320 D1:BCEF DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1321 D1:BCF2 CB 8F -  -      res SF_ZERO,a
 1322 D1:BCF4 20 02 -  -      jr  nz,$+4
 1323 D1:BCF6 CB CF -  -      set SF_ZERO,a
 1324 D1:BCF8 CB BF -  -      res SF_NEG,a
 1325 D1:BCFA FA FF BC D1     jp  m,$+5
 1326 D1:BCFE CB FF -  -      set SF_NEG,a
 1327 D1:BD00 DD 77 04 -      ld  (ix+REGSR),a
 1328 D1:BD03 ED 33 02 -      ADDCYC(2)
 1329 D1:BD06 C3 51 B3 D1     jp i6502FinishLoad
 1330 D1:BD0A -  -  -  -  
 1331 D1:BD0A -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1332 D1:BD0A -  -  -  -  ;Flags altered: NZ
 1333 D1:BD0A -  -  -  -  ;implied	DEY	88	1	2  
 1334 D1:BD0A -  -  -  -  inst6502_dey:
 1335 D1:BD0A DD 35 02 -      dec (ix+REGY)
 1336 D1:BD0D 18 E0 -  -      jr  -_
 1337 D1:BD0F -  -  -  -  
 1338 D1:BD0F -  -  -  -  
 1339 D1:BD0F -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1340 D1:BD0F -  -  -  -  ;Flags altered: NZ
 1341 D1:BD0F -  -  -  -  ;implied	INX	E8	1	2  
 1342 D1:BD0F -  -  -  -  inst6502_inx:
 1343 D1:BD0F DD 34 01 -      inc (ix+REGX)
 1344 D1:BD12 18 DB -  -      jr  -_
 1345 D1:BD14 -  -  -  -  
 1346 D1:BD14 -  -  -  -  
 1347 D1:BD14 -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1348 D1:BD14 -  -  -  -  ;Flags altered: NZ
 1349 D1:BD14 -  -  -  -  ;implied	INY	C8	1	2  
 1350 D1:BD14 -  -  -  -  inst6502_iny:
 1351 D1:BD14 DD 34 02 -      inc (ix+REGY)
 1352 D1:BD17 18 D6 -  -      jr  -_
 1353 D1:BD19 -  -  -  -  
 1354 D1:BD19 -  -  -  -  
 1355 D1:BD19 -  -  -  -  ;INC - Increment Memory by One
 1356 D1:BD19 -  -  -  -  ;    M + 1 -> M
 1357 D1:BD19 -  -  -  -  ;    N	Z	C	I	D	V
 1358 D1:BD19 -  -  -  -  ;    +	+	-	-	-	-
 1359 D1:BD19 -  -  -  -  
 1360 D1:BD19 -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1361 D1:BD19 -  -  -  -  inst6502_inc_zp:
 1362 D1:BD19 7E -  -  -      ld  a,(hl)
 1363 D1:BD1A 01 00 38 D0     ld  bc,ZEROPAGE
 1364 D1:BD1E 81 -  -  -      add a,c
 1365 D1:BD1F 4F -  -  -      ld  c,a
 1366 D1:BD20 0A -  -  -      ld  a,(bc)
 1367 D1:BD21 3C -  -  -      inc a
 1368 D1:BD22 02 -  -  -      ld  (bc),a
 1369 D1:BD23 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1370 D1:BD36 ED 33 05 -      ADDCYC(5)
 1371 D1:BD39 C3 38 B3 D1     jp i6502NextLoad
 1372 D1:BD3D -  -  -  -  
 1373 D1:BD3D -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1374 D1:BD3D -  -  -  -  inst6502_inc_zpx:
 1375 D1:BD3D 7E -  -  -      ld  a,(hl)
 1376 D1:BD3E 01 00 38 D0     ld  bc,ZEROPAGE
 1377 D1:BD42 81 -  -  -      add a,c
 1378 D1:BD43 DD 86 01 -      add a,(ix+REGX)
 1379 D1:BD46 4F -  -  -      ld  c,a
 1380 D1:BD47 0A -  -  -      ld  a,(bc)
 1381 D1:BD48 3C -  -  -      inc a
 1382 D1:BD49 02 -  -  -      ld  (bc),a
 1383 D1:BD4A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1384 D1:BD5D ED 33 06 -      ADDCYC(6)
 1385 D1:BD60 C3 38 B3 D1     jp i6502NextLoad
 1386 D1:BD64 -  -  -  -      
 1387 D1:BD64 -  -  -  -  ;absolute	INC oper	EE	3	6
 1388 D1:BD64 -  -  -  -  inst6502_inc_abs:
 1389 D1:BD64 CD 80 B5 D1     call subroutine6502_abs_split_start
 1390 D1:BD68 E5 -  -  -      push hl
 1391 D1:BD69 50 -  -  -          ld  d,b
 1392 D1:BD6A 79 -  -  -          ld  a,c
 1393 D1:BD6B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1394 D1:BD6D ED 4C -  -          mlt bc
 1395 D1:BD6F 21 00 40 D0         ld  hl,PAGETABLE
 1396 D1:BD73 09 -  -  -          add hl,bc
 1397 D1:BD74 ED 27 -  -          ld  hl,(hl)
 1398 D1:BD76 06 00 -  -          ld  b,0
 1399 D1:BD78 4F -  -  -          ld  c,a
 1400 D1:BD79 09 -  -  -          add hl,bc   ;full address
 1401 D1:BD7A 7E -  -  -          READ_ACCESS
 1402 D1:BD7B 3C -  -  -          inc a
 1403 D1:BD7C 47 -  -  -          ld  b,a
 1404 D1:BD7D -  -  -  -          ;
 1405 D1:BD7D DD 7E 04 -          ld  a,(ix+REGSR)
 1406 D1:BD80 CB 8F -  -          res SF_ZERO,a
 1407 D1:BD82 20 02 -  -          jr  nz,$+4
 1408 D1:BD84 CB CF -  -          set SF_ZERO,a
 1409 D1:BD86 CB BF -  -          res SF_NEG,a
 1410 D1:BD88 FA 8D BD D1         jp  m,$+5
 1411 D1:BD8C CB FF -  -          set SF_NEG,a
 1412 D1:BD8E DD 77 04 -          ld  (ix+REGSR),a
 1413 D1:BD91 -  -  -  -          ;
 1414 D1:BD91 70 -  -  -          WRITE_ACCESS
 1415 D1:BD92 ED 33 06 -          ADDCYC(6)
 1416 D1:BD95 E1 -  -  -      pop hl
 1417 D1:BD96 C3 38 B3 D1     jp i6502NextLoad
 1418 D1:BD9A -  -  -  -  
 1419 D1:BD9A -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1420 D1:BD9A -  -  -  -  inst6502_inc_absx:
 1421 D1:BD9A CD 80 B5 D1     call subroutine6502_abs_split_start
 1422 D1:BD9E E5 -  -  -      push hl
 1423 D1:BD9F 50 -  -  -          ld  d,b
 1424 D1:BDA0 79 -  -  -          ld  a,c
 1425 D1:BDA1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1426 D1:BDA3 ED 4C -  -          mlt bc
 1427 D1:BDA5 21 00 40 D0         ld  hl,PAGETABLE
 1428 D1:BDA9 09 -  -  -          add hl,bc
 1429 D1:BDAA ED 27 -  -          ld  hl,(hl)
 1430 D1:BDAC 06 00 -  -          ld  b,0
 1431 D1:BDAE DD 86 01 -          add a,(ix+REGX)
 1432 D1:BDB1 4F -  -  -          ld  c,a
 1433 D1:BDB2 30 02 -  -          jr nc,+_
 1434 D1:BDB4 04 -  -  -          inc b
 1435 D1:BDB5 14 -  -  -          inc d
 1436 D1:BDB6 09 -  -  -  _:      add hl,bc   ;full address
 1437 D1:BDB7 7E -  -  -          READ_ACCESS
 1438 D1:BDB8 3C -  -  -          inc a
 1439 D1:BDB9 47 -  -  -          ld  b,a
 1440 D1:BDBA -  -  -  -          ;
 1441 D1:BDBA DD 7E 04 -          ld  a,(ix+REGSR)
 1442 D1:BDBD CB 8F -  -          res SF_ZERO,a
 1443 D1:BDBF 20 02 -  -          jr  nz,$+4
 1444 D1:BDC1 CB CF -  -          set SF_ZERO,a
 1445 D1:BDC3 CB BF -  -          res SF_NEG,a
 1446 D1:BDC5 FA CA BD D1         jp  m,$+5
 1447 D1:BDC9 CB FF -  -          set SF_NEG,a
 1448 D1:BDCB DD 77 04 -          ld  (ix+REGSR),a
 1449 D1:BDCE -  -  -  -          ;
 1450 D1:BDCE 70 -  -  -          WRITE_ACCESS
 1451 D1:BDCF ED 33 07 -          ADDCYC(7)
 1452 D1:BDD2 E1 -  -  -      pop hl
 1453 D1:BDD3 C3 38 B3 D1     jp i6502NextLoad
 1454 D1:BDD7 -  -  -  -  
 1455 D1:BDD7 -  -  -  -  ;-----------------------------------------------------------------------------
 1456 D1:BDD7 -  -  -  -  ;-----------------------------------------------------------------------------
 1457 D1:BDD7 -  -  -  -  ;-----------------------------------------------------------------------------
 1458 D1:BDD7 -  -  -  -  ;Instructions by type: Arithmetic Operations
 1459 D1:BDD7 -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1460 D1:BDD7 -  -  -  -  ;    N	Z	C	I	D	V
 1461 D1:BDD7 -  -  -  -  ;    +	+	+	-	-	+
 1462 D1:BDD7 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1463 D1:BDD7 -  -  -  -  
 1464 D1:BDD7 -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1465 D1:BDD7 -  -  -  -  inst6502_adc_imm:
 1466 D1:BDD7 ED 33 02 -      ADDCYC(2)
 1467 D1:BDDA 4E -  -  -      ld  c,(hl)
 1468 D1:BDDB C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1469 D1:BDDF -  -  -  -      
 1470 D1:BDDF -  -  -  -  
 1471 D1:BDDF -  -  -  -  ;zeropage	ADC oper	65	2	3
 1472 D1:BDDF -  -  -  -  inst6502_adc_zp:
 1473 D1:BDDF ED 33 03 -      ADDCYC(3)
 1474 D1:BDE2 7E -  -  -      ld  a,(hl)
 1475 D1:BDE3 01 00 38 D0     ld  bc,ZEROPAGE
 1476 D1:BDE7 81 -  -  -      add a,c
 1477 D1:BDE8 4F -  -  -      ld  c,a
 1478 D1:BDE9 0A -  -  -      ld  a,(bc)
 1479 D1:BDEA 4F -  -  -      ld  c,a
 1480 D1:BDEB C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1481 D1:BDEF -  -  -  -  
 1482 D1:BDEF -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1483 D1:BDEF -  -  -  -  inst6502_adc_zpx:
 1484 D1:BDEF ED 33 04 -      ADDCYC(4)
 1485 D1:BDF2 7E -  -  -      ld  a,(hl)
 1486 D1:BDF3 DD 86 01 -      add a,(ix+REGX)
 1487 D1:BDF6 01 00 38 D0     ld  bc,ZEROPAGE
 1488 D1:BDFA 81 -  -  -      add a,c
 1489 D1:BDFB 4F -  -  -      ld  c,a
 1490 D1:BDFC 0A -  -  -      ld  a,(bc)
 1491 D1:BDFD 4F -  -  -      ld  c,a
 1492 D1:BDFE C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1493 D1:BE02 -  -  -  -  
 1494 D1:BE02 -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1495 D1:BE02 -  -  -  -  inst6502_adc_abs:
 1496 D1:BE02 ED 33 04 -      ADDCYC(4)
 1497 D1:BE05 CD 80 B5 D1     call subroutine6502_abs_split_start
 1498 D1:BE09 E5 -  -  -      push hl
 1499 D1:BE0A 50 -  -  -          ld  d,b
 1500 D1:BE0B 79 -  -  -          ld  a,c
 1501 D1:BE0C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1502 D1:BE0E ED 4C -  -          mlt bc
 1503 D1:BE10 21 00 40 D0         ld  hl,PAGETABLE
 1504 D1:BE14 09 -  -  -          add hl,bc
 1505 D1:BE15 ED 27 -  -          ld  hl,(hl)
 1506 D1:BE17 06 00 -  -          ld  b,0
 1507 D1:BE19 4F -  -  -          ld  c,a
 1508 D1:BE1A 09 -  -  -          add hl,bc   ;full address
 1509 D1:BE1B 7E -  -  -          READ_ACCESS
 1510 D1:BE1C E1 -  -  -      pop hl
 1511 D1:BE1D 4F -  -  -      ld  c,a
 1512 D1:BE1E C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1513 D1:BE22 -  -  -  -  
 1514 D1:BE22 -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1515 D1:BE22 -  -  -  -  inst6502_adc_absx:
 1516 D1:BE22 ED 33 04 -      ADDCYC(4)
 1517 D1:BE25 CD 80 B5 D1     call subroutine6502_abs_split_start
 1518 D1:BE29 E5 -  -  -      push hl
 1519 D1:BE2A 50 -  -  -          ld  d,b
 1520 D1:BE2B 79 -  -  -          ld  a,c
 1521 D1:BE2C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1522 D1:BE2E ED 4C -  -          mlt bc
 1523 D1:BE30 21 00 40 D0         ld  hl,PAGETABLE
 1524 D1:BE34 09 -  -  -          add hl,bc
 1525 D1:BE35 ED 27 -  -          ld  hl,(hl)
 1526 D1:BE37 06 00 -  -          ld  b,0
 1527 D1:BE39 DD 86 01 -          add a,(ix+REGX)
 1528 D1:BE3C 4F -  -  -          ld  c,a
 1529 D1:BE3D 30 04 -  -          jr  nc,+_
 1530 D1:BE3F FD 23 -  -          ADDCYC(1)
 1531 D1:BE41 04 -  -  -          inc b
 1532 D1:BE42 14 -  -  -          inc d
 1533 D1:BE43 09 -  -  -  _:      add hl,bc   ;full address
 1534 D1:BE44 7E -  -  -          READ_ACCESS
 1535 D1:BE45 E1 -  -  -      pop hl
 1536 D1:BE46 4F -  -  -      ld  c,a
 1537 D1:BE47 C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1538 D1:BE4B -  -  -  -  
 1539 D1:BE4B -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1540 D1:BE4B -  -  -  -  inst6502_adc_absy:
 1541 D1:BE4B ED 33 04 -      ADDCYC(4)
 1542 D1:BE4E CD 80 B5 D1     call subroutine6502_abs_split_start
 1543 D1:BE52 E5 -  -  -      push hl
 1544 D1:BE53 50 -  -  -          ld  d,b
 1545 D1:BE54 79 -  -  -          ld  a,c
 1546 D1:BE55 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1547 D1:BE57 ED 4C -  -          mlt bc
 1548 D1:BE59 21 00 40 D0         ld  hl,PAGETABLE
 1549 D1:BE5D 09 -  -  -          add hl,bc
 1550 D1:BE5E ED 27 -  -          ld  hl,(hl)
 1551 D1:BE60 06 00 -  -          ld  b,0
 1552 D1:BE62 DD 86 02 -          add a,(ix+REGY)
 1553 D1:BE65 4F -  -  -          ld  c,a
 1554 D1:BE66 30 04 -  -          jr  nc,+_
 1555 D1:BE68 FD 23 -  -          ADDCYC(1)
 1556 D1:BE6A 04 -  -  -          inc b
 1557 D1:BE6B 14 -  -  -          inc d
 1558 D1:BE6C 09 -  -  -  _:      add hl,bc   ;full address
 1559 D1:BE6D 7E -  -  -          READ_ACCESS
 1560 D1:BE6E E1 -  -  -      pop hl
 1561 D1:BE6F 4F -  -  -      ld  c,a
 1562 D1:BE70 C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1563 D1:BE74 -  -  -  -  
 1564 D1:BE74 -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1565 D1:BE74 -  -  -  -  inst6502_adc_indx:
 1566 D1:BE74 ED 33 06 -      ADDCYC(6)
 1567 D1:BE77 E5 -  -  -      push hl
 1568 D1:BE78 7E -  -  -          ld  a,(hl)
 1569 D1:BE79 21 00 38 D0         ld  hl,ZEROPAGE
 1570 D1:BE7D 85 -  -  -          add a,L
 1571 D1:BE7E DD 86 01 -          add a,(ix+REGX)
 1572 D1:BE81 6F -  -  -          ld  L,a
 1573 D1:BE82 7E -  -  -          ld  a,(hl)
 1574 D1:BE83 2C -  -  -          inc L
 1575 D1:BE84 56 -  -  -          ld  d,(hl)
 1576 D1:BE85 42 -  -  -          ld  b,d
 1577 D1:BE86 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1578 D1:BE88 ED 4C -  -          mlt bc
 1579 D1:BE8A 21 00 40 D0         ld  hl,PAGETABLE
 1580 D1:BE8E 09 -  -  -          add hl,bc
 1581 D1:BE8F ED 27 -  -          ld  hl,(hl)
 1582 D1:BE91 06 00 -  -          ld  b,0
 1583 D1:BE93 4F -  -  -          ld  c,a
 1584 D1:BE94 09 -  -  -          add hl,bc
 1585 D1:BE95 7E -  -  -          READ_ACCESS
 1586 D1:BE96 E1 -  -  -      pop hl
 1587 D1:BE97 4F -  -  -      ld  c,a
 1588 D1:BE98 C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1589 D1:BE9C -  -  -  -  
 1590 D1:BE9C -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1591 D1:BE9C -  -  -  -  inst6502_adc_indy:
 1592 D1:BE9C E5 -  -  -      push hl
 1593 D1:BE9D 7E -  -  -          ld  a,(hl)
 1594 D1:BE9E 21 00 38 D0         ld  hl,ZEROPAGE
 1595 D1:BEA2 85 -  -  -          add a,L
 1596 D1:BEA3 6F -  -  -          ld  L,a
 1597 D1:BEA4 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1598 D1:BEA5 2C -  -  -          inc L
 1599 D1:BEA6 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1600 D1:BEA9 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1601 D1:BEAA 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1602 D1:BEAC FD 23 -  -          ADDCYC(1)
 1603 D1:BEAE 24 -  -  -          inc h
 1604 D1:BEAF 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1605 D1:BEB0 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1606 D1:BEB2 ED 6C -  -          mlt hl          ;23.
 1607 D1:BEB4 01 00 40 D0         ld  bc,PAGETABLE
 1608 D1:BEB8 09 -  -  -          add hl,bc
 1609 D1:BEB9 ED 27 -  -          ld  hl,(hl)     ;address get.
 1610 D1:BEBB 01 00 00 00         ld  bc,0
 1611 D1:BEBF 4F -  -  -          ld  c,a
 1612 D1:BEC0 09 -  -  -          add hl,bc       ;Full address get.
 1613 D1:BEC1 7E -  -  -          READ_ACCESS
 1614 D1:BEC2 E1 -  -  -      pop hl
 1615 D1:BEC3 4F -  -  -      ld  c,a
 1616 D1:BEC4 C3 9C B5 D1     jp  subroutine6502_adc_combined_end
 1617 D1:BEC8 -  -  -  -  
 1618 D1:BEC8 -  -  -  -  
 1619 D1:BEC8 -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1620 D1:BEC8 -  -  -  -  ;A - M - C̅ -> A
 1621 D1:BEC8 -  -  -  -  ;N	Z	C	I	D	V
 1622 D1:BEC8 -  -  -  -  ;+	+	+	-	-	+
 1623 D1:BEC8 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1624 D1:BEC8 -  -  -  -  
 1625 D1:BEC8 -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1626 D1:BEC8 -  -  -  -  inst6502_sbc_imm:
 1627 D1:BEC8 ED 33 02 -      ADDCYC(2)
 1628 D1:BECB 4E -  -  -      ld  c,(hl)
 1629 D1:BECC C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1630 D1:BED0 -  -  -  -  
 1631 D1:BED0 -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1632 D1:BED0 -  -  -  -  inst6502_sbc_zp:
 1633 D1:BED0 ED 33 03 -      ADDCYC(3)
 1634 D1:BED3 7E -  -  -      ld  a,(hl)
 1635 D1:BED4 01 00 38 D0     ld  bc,ZEROPAGE
 1636 D1:BED8 81 -  -  -      add a,c
 1637 D1:BED9 4F -  -  -      ld  c,a
 1638 D1:BEDA 0A -  -  -      ld  a,(bc)
 1639 D1:BEDB 4F -  -  -      ld  c,a
 1640 D1:BEDC C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1641 D1:BEE0 -  -  -  -  
 1642 D1:BEE0 -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1643 D1:BEE0 -  -  -  -  inst6502_sbc_zpx:
 1644 D1:BEE0 ED 33 04 -      ADDCYC(4)
 1645 D1:BEE3 7E -  -  -      ld  a,(hl)
 1646 D1:BEE4 DD 86 01 -      add a,(ix+REGX)
 1647 D1:BEE7 01 00 38 D0     ld  bc,ZEROPAGE
 1648 D1:BEEB 81 -  -  -      add a,c
 1649 D1:BEEC 4F -  -  -      ld  c,a
 1650 D1:BEED 0A -  -  -      ld  a,(bc)
 1651 D1:BEEE 4F -  -  -      ld  c,a
 1652 D1:BEEF C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1653 D1:BEF3 -  -  -  -  
 1654 D1:BEF3 -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1655 D1:BEF3 -  -  -  -  inst6502_sbc_abs:
 1656 D1:BEF3 ED 33 04 -      ADDCYC(4)
 1657 D1:BEF6 CD 80 B5 D1     call subroutine6502_abs_split_start
 1658 D1:BEFA E5 -  -  -      push hl
 1659 D1:BEFB 50 -  -  -          ld  d,b
 1660 D1:BEFC 79 -  -  -          ld  a,c
 1661 D1:BEFD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1662 D1:BEFF ED 4C -  -          mlt bc
 1663 D1:BF01 21 00 40 D0         ld  hl,PAGETABLE
 1664 D1:BF05 09 -  -  -          add hl,bc
 1665 D1:BF06 ED 27 -  -          ld  hl,(hl)
 1666 D1:BF08 06 00 -  -          ld  b,0
 1667 D1:BF0A 4F -  -  -          ld  c,a
 1668 D1:BF0B 09 -  -  -          add hl,bc   ;full address
 1669 D1:BF0C 7E -  -  -          READ_ACCESS
 1670 D1:BF0D E1 -  -  -      pop hl
 1671 D1:BF0E 4F -  -  -      ld  c,a
 1672 D1:BF0F C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1673 D1:BF13 -  -  -  -  
 1674 D1:BF13 -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1675 D1:BF13 -  -  -  -  inst6502_sbc_absx:
 1676 D1:BF13 ED 33 04 -      ADDCYC(4)
 1677 D1:BF16 CD 80 B5 D1     call subroutine6502_abs_split_start
 1678 D1:BF1A E5 -  -  -      push hl
 1679 D1:BF1B 50 -  -  -          ld  d,b
 1680 D1:BF1C 79 -  -  -          ld  a,c
 1681 D1:BF1D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1682 D1:BF1F ED 4C -  -          mlt bc
 1683 D1:BF21 21 00 40 D0         ld  hl,PAGETABLE
 1684 D1:BF25 09 -  -  -          add hl,bc
 1685 D1:BF26 ED 27 -  -          ld  hl,(hl)
 1686 D1:BF28 06 00 -  -          ld  b,0
 1687 D1:BF2A DD 86 01 -          add a,(ix+REGX)
 1688 D1:BF2D 4F -  -  -          ld  c,a
 1689 D1:BF2E 30 04 -  -          jr  nc,+_
 1690 D1:BF30 FD 23 -  -          ADDCYC(1)
 1691 D1:BF32 04 -  -  -          inc b
 1692 D1:BF33 14 -  -  -          inc d
 1693 D1:BF34 09 -  -  -  _:      add hl,bc   ;full address
 1694 D1:BF35 7E -  -  -          READ_ACCESS
 1695 D1:BF36 E1 -  -  -      pop hl
 1696 D1:BF37 4F -  -  -      ld  c,a
 1697 D1:BF38 C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1698 D1:BF3C -  -  -  -  
 1699 D1:BF3C -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1700 D1:BF3C -  -  -  -  inst6502_sbc_absy:
 1701 D1:BF3C ED 33 04 -      ADDCYC(4)
 1702 D1:BF3F CD 80 B5 D1     call subroutine6502_abs_split_start
 1703 D1:BF43 E5 -  -  -      push hl
 1704 D1:BF44 50 -  -  -          ld  d,b
 1705 D1:BF45 79 -  -  -          ld  a,c
 1706 D1:BF46 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1707 D1:BF48 ED 4C -  -          mlt bc
 1708 D1:BF4A 21 00 40 D0         ld  hl,PAGETABLE
 1709 D1:BF4E 09 -  -  -          add hl,bc
 1710 D1:BF4F ED 27 -  -          ld  hl,(hl)
 1711 D1:BF51 06 00 -  -          ld  b,0
 1712 D1:BF53 DD 86 02 -          add a,(ix+REGY)
 1713 D1:BF56 4F -  -  -          ld  c,a
 1714 D1:BF57 30 04 -  -          jr  nc,+_
 1715 D1:BF59 FD 23 -  -          ADDCYC(1)
 1716 D1:BF5B 04 -  -  -          inc b
 1717 D1:BF5C 14 -  -  -          inc d
 1718 D1:BF5D 09 -  -  -  _:      add hl,bc   ;full address
 1719 D1:BF5E 7E -  -  -          READ_ACCESS
 1720 D1:BF5F E1 -  -  -      pop hl
 1721 D1:BF60 4F -  -  -      ld  c,a
 1722 D1:BF61 C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1723 D1:BF65 -  -  -  -  
 1724 D1:BF65 -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1725 D1:BF65 -  -  -  -  inst6502_sbc_indx:
 1726 D1:BF65 ED 33 06 -      ADDCYC(6)
 1727 D1:BF68 E5 -  -  -      push hl
 1728 D1:BF69 7E -  -  -          ld  a,(hl)
 1729 D1:BF6A 21 00 38 D0         ld  hl,ZEROPAGE
 1730 D1:BF6E 85 -  -  -          add a,L
 1731 D1:BF6F DD 86 01 -          add a,(ix+REGX)
 1732 D1:BF72 6F -  -  -          ld  L,a
 1733 D1:BF73 7E -  -  -          ld  a,(hl)
 1734 D1:BF74 2C -  -  -          inc L
 1735 D1:BF75 56 -  -  -          ld  d,(hl)
 1736 D1:BF76 42 -  -  -          ld  b,d
 1737 D1:BF77 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1738 D1:BF79 ED 4C -  -          mlt bc
 1739 D1:BF7B 21 00 40 D0         ld  hl,PAGETABLE
 1740 D1:BF7F 09 -  -  -          add hl,bc
 1741 D1:BF80 ED 27 -  -          ld  hl,(hl)
 1742 D1:BF82 06 00 -  -          ld  b,0
 1743 D1:BF84 4F -  -  -          ld  c,a
 1744 D1:BF85 09 -  -  -          add hl,bc
 1745 D1:BF86 7E -  -  -          READ_ACCESS
 1746 D1:BF87 E1 -  -  -      pop hl
 1747 D1:BF88 4F -  -  -      ld  c,a
 1748 D1:BF89 C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1749 D1:BF8D -  -  -  -  
 1750 D1:BF8D -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1751 D1:BF8D -  -  -  -  inst6502_sbc_indy:
 1752 D1:BF8D E5 -  -  -      push hl
 1753 D1:BF8E 7E -  -  -          ld  a,(hl)
 1754 D1:BF8F 21 00 38 D0         ld  hl,ZEROPAGE
 1755 D1:BF93 85 -  -  -          add a,L
 1756 D1:BF94 6F -  -  -          ld  L,a
 1757 D1:BF95 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1758 D1:BF96 2C -  -  -          inc L
 1759 D1:BF97 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1760 D1:BF9A 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1761 D1:BF9B 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1762 D1:BF9D FD 23 -  -          ADDCYC(1)
 1763 D1:BF9F 24 -  -  -          inc h
 1764 D1:BFA0 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1765 D1:BFA1 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1766 D1:BFA3 ED 6C -  -          mlt hl          ;23.
 1767 D1:BFA5 01 00 40 D0         ld  bc,PAGETABLE
 1768 D1:BFA9 09 -  -  -          add hl,bc
 1769 D1:BFAA ED 27 -  -          ld  hl,(hl)     ;address get.
 1770 D1:BFAC 01 00 00 00         ld  bc,0
 1771 D1:BFB0 4F -  -  -          ld  c,a
 1772 D1:BFB1 09 -  -  -          add hl,bc       ;Full address get.
 1773 D1:BFB2 7E -  -  -          READ_ACCESS
 1774 D1:BFB3 E1 -  -  -      pop hl
 1775 D1:BFB4 4F -  -  -      ld  c,a
 1776 D1:BFB5 C3 CC B5 D1     jp  subroutine6502_sbc_combined_end
 1777 D1:BFB9 -  -  -  -  
 1778 D1:BFB9 -  -  -  -  
 1779 D1:BFB9 -  -  -  -  
 1780 D1:BFB9 -  -  -  -  ;-----------------------------------------------------------------------------
 1781 D1:BFB9 -  -  -  -  ;-----------------------------------------------------------------------------
 1782 D1:BFB9 -  -  -  -  ;-----------------------------------------------------------------------------
 1783 D1:BFB9 -  -  -  -  ;Instructions by type: Logical Operations
 1784 D1:BFB9 -  -  -  -  
 1785 D1:BFB9 -  -  -  -  ;AND - AND Memory with Accumulator
 1786 D1:BFB9 -  -  -  -  ;A AND M -> A
 1787 D1:BFB9 -  -  -  -  ;N	Z	C	I	D	V
 1788 D1:BFB9 -  -  -  -  ;+	+	-	-	-	-
 1789 D1:BFB9 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1790 D1:BFB9 -  -  -  -  
 1791 D1:BFB9 -  -  -  -  ;immediate	AND #oper	29	2	2  
 1792 D1:BFB9 -  -  -  -  inst6502_and_imm:
 1793 D1:BFB9 ED 33 02 -      ADDCYC(2)
 1794 D1:BFBC 7E -  -  -      ld  a,(hl)
 1795 D1:BFBD DD A6 00 -      and a,(ix+REGA)
 1796 D1:BFC0 DD 77 00 -      ld  (ix+REGA),A
 1797 D1:BFC3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1798 D1:BFD6 C3 38 B3 D1     jp i6502NextLoad
 1799 D1:BFDA -  -  -  -  
 1800 D1:BFDA -  -  -  -  ;zeropage	AND oper	25	2	3  
 1801 D1:BFDA -  -  -  -  inst6502_and_zp:
 1802 D1:BFDA ED 33 03 -      ADDCYC(3)
 1803 D1:BFDD 7E -  -  -      ld  a,(hl)
 1804 D1:BFDE 01 00 38 D0     ld  bc,ZEROPAGE
 1805 D1:BFE2 81 -  -  -      add a,c
 1806 D1:BFE3 4F -  -  -      ld  c,a
 1807 D1:BFE4 0A -  -  -      ld  a,(bc)
 1808 D1:BFE5 DD A6 00 -      and a,(ix+REGA)
 1809 D1:BFE8 DD 77 00 -      ld  (ix+REGA),A
 1810 D1:BFEB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1811 D1:BFFE C3 38 B3 D1     jp i6502NextLoad
 1812 D1:C002 -  -  -  -  
 1813 D1:C002 -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1814 D1:C002 -  -  -  -  inst6502_and_zpx:
 1815 D1:C002 ED 33 04 -      ADDCYC(4)
 1816 D1:C005 7E -  -  -      ld  a,(hl)
 1817 D1:C006 01 00 38 D0     ld  bc,ZEROPAGE
 1818 D1:C00A 81 -  -  -      add a,c
 1819 D1:C00B DD 86 01 -      add a,(ix+REGX)
 1820 D1:C00E 4F -  -  -      ld  c,a
 1821 D1:C00F 0A -  -  -      ld  a,(bc)
 1822 D1:C010 DD A6 00 -      and a,(ix+REGA)
 1823 D1:C013 DD 77 00 -      ld  (ix+REGA),A
 1824 D1:C016 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1825 D1:C029 C3 38 B3 D1     jp i6502NextLoad
 1826 D1:C02D -  -  -  -  
 1827 D1:C02D -  -  -  -  ;absolute	AND oper	2D	3	4  
 1828 D1:C02D -  -  -  -  inst6502_and_abs:
 1829 D1:C02D ED 33 04 -      ADDCYC(4)
 1830 D1:C030 CD 80 B5 D1     call subroutine6502_abs_split_start
 1831 D1:C034 E5 -  -  -      push hl
 1832 D1:C035 50 -  -  -          ld  d,b
 1833 D1:C036 79 -  -  -          ld  a,c
 1834 D1:C037 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1835 D1:C039 ED 4C -  -          mlt bc
 1836 D1:C03B 21 00 40 D0         ld  hl,PAGETABLE
 1837 D1:C03F 09 -  -  -          add hl,bc
 1838 D1:C040 ED 27 -  -          ld  hl,(hl)
 1839 D1:C042 06 00 -  -          ld  b,0
 1840 D1:C044 4F -  -  -          ld  c,a
 1841 D1:C045 09 -  -  -          add hl,bc   ;full address
 1842 D1:C046 7E -  -  -          READ_ACCESS
 1843 D1:C047 E1 -  -  -      pop hl
 1844 D1:C048 DD A6 00 -      and a,(ix+REGA)
 1845 D1:C04B DD 77 00 -      ld  (ix+REGA),A
 1846 D1:C04E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1847 D1:C061 C3 38 B3 D1     jp i6502NextLoad
 1848 D1:C065 -  -  -  -  
 1849 D1:C065 -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1850 D1:C065 -  -  -  -  inst6502_and_absx:
 1851 D1:C065 ED 33 04 -      ADDCYC(4)
 1852 D1:C068 CD 80 B5 D1     call subroutine6502_abs_split_start
 1853 D1:C06C E5 -  -  -      push hl
 1854 D1:C06D 50 -  -  -          ld  d,b
 1855 D1:C06E 79 -  -  -          ld  a,c
 1856 D1:C06F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1857 D1:C071 ED 4C -  -          mlt bc
 1858 D1:C073 21 00 40 D0         ld  hl,PAGETABLE
 1859 D1:C077 09 -  -  -          add hl,bc
 1860 D1:C078 ED 27 -  -          ld  hl,(hl)
 1861 D1:C07A 06 00 -  -          ld  b,0
 1862 D1:C07C DD 86 01 -          add a,(ix+REGX)
 1863 D1:C07F 4F -  -  -          ld  c,a
 1864 D1:C080 30 04 -  -          jr  nc,+_
 1865 D1:C082 04 -  -  -          inc b
 1866 D1:C083 14 -  -  -          inc d
 1867 D1:C084 FD 23 -  -          ADDCYC(1)
 1868 D1:C086 09 -  -  -  _:      add hl,bc   ;full address
 1869 D1:C087 7E -  -  -          READ_ACCESS
 1870 D1:C088 E1 -  -  -      pop hl
 1871 D1:C089 DD A6 00 -      and a,(ix+REGA)
 1872 D1:C08C DD 77 00 -      ld  (ix+REGA),A
 1873 D1:C08F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1874 D1:C0A2 C3 38 B3 D1     jp i6502NextLoad
 1875 D1:C0A6 -  -  -  -  
 1876 D1:C0A6 -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1877 D1:C0A6 -  -  -  -  inst6502_and_absy:
 1878 D1:C0A6 ED 33 04 -      ADDCYC(4)
 1879 D1:C0A9 CD 80 B5 D1     call subroutine6502_abs_split_start
 1880 D1:C0AD E5 -  -  -      push hl
 1881 D1:C0AE 50 -  -  -          ld  d,b
 1882 D1:C0AF 79 -  -  -          ld  a,c
 1883 D1:C0B0 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1884 D1:C0B2 ED 4C -  -          mlt bc
 1885 D1:C0B4 21 00 40 D0         ld  hl,PAGETABLE
 1886 D1:C0B8 09 -  -  -          add hl,bc
 1887 D1:C0B9 ED 27 -  -          ld  hl,(hl)
 1888 D1:C0BB 06 00 -  -          ld  b,0
 1889 D1:C0BD DD 86 02 -          add a,(ix+REGY)
 1890 D1:C0C0 4F -  -  -          ld  c,a
 1891 D1:C0C1 30 04 -  -          jr  nc,+_
 1892 D1:C0C3 04 -  -  -          inc b
 1893 D1:C0C4 14 -  -  -          inc d
 1894 D1:C0C5 FD 23 -  -          ADDCYC(1)
 1895 D1:C0C7 09 -  -  -  _:      add hl,bc   ;full address
 1896 D1:C0C8 7E -  -  -          READ_ACCESS
 1897 D1:C0C9 E1 -  -  -      pop hl
 1898 D1:C0CA DD A6 00 -      and a,(ix+REGA)
 1899 D1:C0CD DD 77 00 -      ld  (ix+REGA),A
 1900 D1:C0D0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1901 D1:C0E3 C3 38 B3 D1     jp i6502NextLoad
 1902 D1:C0E7 -  -  -  -  
 1903 D1:C0E7 -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1904 D1:C0E7 -  -  -  -  inst6502_and_indx:
 1905 D1:C0E7 ED 33 06 -      ADDCYC(6)
 1906 D1:C0EA E5 -  -  -      push hl
 1907 D1:C0EB 7E -  -  -          ld  a,(hl)
 1908 D1:C0EC 21 00 38 D0         ld  hl,ZEROPAGE
 1909 D1:C0F0 85 -  -  -          add a,L
 1910 D1:C0F1 DD 86 01 -          add a,(ix+REGX)
 1911 D1:C0F4 6F -  -  -          ld  L,a
 1912 D1:C0F5 7E -  -  -          ld  a,(hl)
 1913 D1:C0F6 2C -  -  -          inc L
 1914 D1:C0F7 56 -  -  -          ld  d,(hl)
 1915 D1:C0F8 42 -  -  -          ld  b,d
 1916 D1:C0F9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1917 D1:C0FB ED 4C -  -          mlt bc
 1918 D1:C0FD 21 00 40 D0         ld  hl,PAGETABLE
 1919 D1:C101 09 -  -  -          add hl,bc
 1920 D1:C102 ED 27 -  -          ld  hl,(hl)
 1921 D1:C104 06 00 -  -          ld  b,0
 1922 D1:C106 4F -  -  -          ld  c,a
 1923 D1:C107 09 -  -  -          add hl,bc
 1924 D1:C108 7E -  -  -          READ_ACCESS
 1925 D1:C109 E1 -  -  -      pop hl
 1926 D1:C10A DD A6 00 -      and a,(ix+REGA)
 1927 D1:C10D DD 77 00 -      ld  (ix+REGA),A
 1928 D1:C110 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1929 D1:C123 C3 38 B3 D1     jp i6502NextLoad
 1930 D1:C127 -  -  -  -  
 1931 D1:C127 -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1932 D1:C127 -  -  -  -  inst6502_and_indy:
 1933 D1:C127 ED 33 05 -      ADDCYC(5)
 1934 D1:C12A E5 -  -  -      push hl
 1935 D1:C12B 7E -  -  -          ld  a,(hl)
 1936 D1:C12C 21 00 38 D0         ld  hl,ZEROPAGE
 1937 D1:C130 85 -  -  -          add a,L
 1938 D1:C131 6F -  -  -          ld  L,a
 1939 D1:C132 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1940 D1:C133 2C -  -  -          inc L
 1941 D1:C134 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1942 D1:C137 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1943 D1:C138 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1944 D1:C13A 24 -  -  -          inc h
 1945 D1:C13B FD 23 -  -          ADDCYC(1)
 1946 D1:C13D 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1947 D1:C13E 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1948 D1:C140 ED 6C -  -          mlt hl          ;23.
 1949 D1:C142 01 00 40 D0         ld  bc,PAGETABLE
 1950 D1:C146 09 -  -  -          add hl,bc
 1951 D1:C147 ED 27 -  -          ld  hl,(hl)     ;address get.
 1952 D1:C149 01 00 00 00         ld  bc,0
 1953 D1:C14D 4F -  -  -          ld  c,a
 1954 D1:C14E 09 -  -  -          add hl,bc       ;Full address get.
 1955 D1:C14F 7E -  -  -          READ_ACCESS
 1956 D1:C150 E1 -  -  -      pop hl
 1957 D1:C151 DD A6 00 -      and a,(ix+REGA)
 1958 D1:C154 DD 77 00 -      ld  (ix+REGA),A
 1959 D1:C157 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1960 D1:C16A C3 38 B3 D1     jp i6502NextLoad
 1961 D1:C16E -  -  -  -  
 1962 D1:C16E -  -  -  -  ;-----------------------------------------------------------------------------
 1963 D1:C16E -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1964 D1:C16E -  -  -  -  ;A EOR M -> A
 1965 D1:C16E -  -  -  -  ;N	Z	C	I	D	V
 1966 D1:C16E -  -  -  -  ;+	+	-	-	-	-
 1967 D1:C16E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1968 D1:C16E -  -  -  -  
 1969 D1:C16E -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1970 D1:C16E -  -  -  -  inst6502_eor_imm:
 1971 D1:C16E ED 33 02 -      ADDCYC(2)
 1972 D1:C171 7E -  -  -      ld  a,(hl)
 1973 D1:C172 DD AE 00 -      xor a,(ix+REGA)
 1974 D1:C175 DD 77 00 -      ld  (ix+REGA),A
 1975 D1:C178 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1976 D1:C18B C3 38 B3 D1     jp i6502NextLoad
 1977 D1:C18F -  -  -  -  
 1978 D1:C18F -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1979 D1:C18F -  -  -  -  inst6502_eor_zp:
 1980 D1:C18F ED 33 03 -      ADDCYC(3)
 1981 D1:C192 7E -  -  -      ld  a,(hl)
 1982 D1:C193 01 00 38 D0     ld  bc,ZEROPAGE
 1983 D1:C197 81 -  -  -      add a,c
 1984 D1:C198 4F -  -  -      ld  c,a
 1985 D1:C199 0A -  -  -      ld  a,(bc)
 1986 D1:C19A DD AE 00 -      xor a,(ix+REGA)
 1987 D1:C19D DD 77 00 -      ld  (ix+REGA),A
 1988 D1:C1A0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1989 D1:C1B3 C3 38 B3 D1     jp i6502NextLoad
 1990 D1:C1B7 -  -  -  -  
 1991 D1:C1B7 -  -  -  -  
 1992 D1:C1B7 -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 1993 D1:C1B7 -  -  -  -  inst6502_eor_zpx:
 1994 D1:C1B7 ED 33 04 -      ADDCYC(4)
 1995 D1:C1BA 7E -  -  -      ld  a,(hl)
 1996 D1:C1BB 01 00 38 D0     ld  bc,ZEROPAGE
 1997 D1:C1BF 81 -  -  -      add a,c
 1998 D1:C1C0 DD 86 01 -      add a,(ix+REGX)
 1999 D1:C1C3 4F -  -  -      ld  c,a
 2000 D1:C1C4 0A -  -  -      ld  a,(bc)
 2001 D1:C1C5 DD AE 00 -      xor a,(ix+REGA)
 2002 D1:C1C8 DD 77 00 -      ld  (ix+REGA),A
 2003 D1:C1CB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2004 D1:C1DE C3 38 B3 D1     jp i6502NextLoad
 2005 D1:C1E2 -  -  -  -  
 2006 D1:C1E2 -  -  -  -  ;absolute	EOR oper	4D	3	4  
 2007 D1:C1E2 -  -  -  -  inst6502_eor_abs:
 2008 D1:C1E2 ED 33 04 -      ADDCYC(4)
 2009 D1:C1E5 CD 80 B5 D1     call subroutine6502_abs_split_start
 2010 D1:C1E9 E5 -  -  -      push hl
 2011 D1:C1EA 50 -  -  -          ld  d,b
 2012 D1:C1EB 79 -  -  -          ld  a,c
 2013 D1:C1EC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2014 D1:C1EE ED 4C -  -          mlt bc
 2015 D1:C1F0 21 00 40 D0         ld  hl,PAGETABLE
 2016 D1:C1F4 09 -  -  -          add hl,bc
 2017 D1:C1F5 ED 27 -  -          ld  hl,(hl)
 2018 D1:C1F7 06 00 -  -          ld  b,0
 2019 D1:C1F9 4F -  -  -          ld  c,a
 2020 D1:C1FA 09 -  -  -          add hl,bc   ;full address
 2021 D1:C1FB 7E -  -  -          READ_ACCESS
 2022 D1:C1FC E1 -  -  -      pop hl
 2023 D1:C1FD DD AE 00 -      xor a,(ix+REGA)
 2024 D1:C200 DD 77 00 -      ld  (ix+REGA),A
 2025 D1:C203 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2026 D1:C216 C3 38 B3 D1     jp i6502NextLoad
 2027 D1:C21A -  -  -  -  
 2028 D1:C21A -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 2029 D1:C21A -  -  -  -  inst6502_eor_absx:
 2030 D1:C21A ED 33 04 -      ADDCYC(4)
 2031 D1:C21D CD 80 B5 D1     call subroutine6502_abs_split_start
 2032 D1:C221 E5 -  -  -      push hl
 2033 D1:C222 50 -  -  -          ld  d,b
 2034 D1:C223 79 -  -  -          ld  a,c
 2035 D1:C224 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2036 D1:C226 ED 4C -  -          mlt bc
 2037 D1:C228 21 00 40 D0         ld  hl,PAGETABLE
 2038 D1:C22C 09 -  -  -          add hl,bc
 2039 D1:C22D ED 27 -  -          ld  hl,(hl)
 2040 D1:C22F 06 00 -  -          ld  b,0
 2041 D1:C231 DD 86 01 -          add a,(ix+REGX)
 2042 D1:C234 4F -  -  -          ld  c,a
 2043 D1:C235 30 04 -  -          jr  nc,+_
 2044 D1:C237 04 -  -  -          inc b
 2045 D1:C238 14 -  -  -          inc d
 2046 D1:C239 FD 23 -  -          ADDCYC(1)
 2047 D1:C23B 09 -  -  -  _:      add hl,bc   ;full address
 2048 D1:C23C 7E -  -  -          READ_ACCESS
 2049 D1:C23D E1 -  -  -      pop hl
 2050 D1:C23E DD AE 00 -      xor a,(ix+REGA)
 2051 D1:C241 DD 77 00 -      ld  (ix+REGA),A
 2052 D1:C244 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2053 D1:C257 C3 38 B3 D1     jp i6502NextLoad
 2054 D1:C25B -  -  -  -  
 2055 D1:C25B -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2056 D1:C25B -  -  -  -  inst6502_eor_absy:
 2057 D1:C25B ED 33 04 -      ADDCYC(4)
 2058 D1:C25E CD 80 B5 D1     call subroutine6502_abs_split_start
 2059 D1:C262 E5 -  -  -      push hl
 2060 D1:C263 50 -  -  -          ld  d,b
 2061 D1:C264 79 -  -  -          ld  a,c
 2062 D1:C265 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2063 D1:C267 ED 4C -  -          mlt bc
 2064 D1:C269 21 00 40 D0         ld  hl,PAGETABLE
 2065 D1:C26D 09 -  -  -          add hl,bc
 2066 D1:C26E ED 27 -  -          ld  hl,(hl)
 2067 D1:C270 06 00 -  -          ld  b,0
 2068 D1:C272 DD 86 02 -          add a,(ix+REGY)
 2069 D1:C275 4F -  -  -          ld  c,a
 2070 D1:C276 30 04 -  -          jr  nc,+_
 2071 D1:C278 04 -  -  -          inc b
 2072 D1:C279 14 -  -  -          inc d
 2073 D1:C27A FD 23 -  -          ADDCYC(1)
 2074 D1:C27C 09 -  -  -  _:      add hl,bc   ;full address
 2075 D1:C27D 7E -  -  -          READ_ACCESS
 2076 D1:C27E E1 -  -  -      pop hl
 2077 D1:C27F DD AE 00 -      xor a,(ix+REGA)
 2078 D1:C282 DD 77 00 -      ld  (ix+REGA),A
 2079 D1:C285 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2080 D1:C298 C3 38 B3 D1     jp i6502NextLoad
 2081 D1:C29C -  -  -  -  
 2082 D1:C29C -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2083 D1:C29C -  -  -  -  inst6502_eor_indx:
 2084 D1:C29C ED 33 06 -      ADDCYC(6)
 2085 D1:C29F E5 -  -  -      push hl
 2086 D1:C2A0 7E -  -  -          ld  a,(hl)
 2087 D1:C2A1 21 00 38 D0         ld  hl,ZEROPAGE
 2088 D1:C2A5 85 -  -  -          add a,L
 2089 D1:C2A6 DD 86 01 -          add a,(ix+REGX)
 2090 D1:C2A9 6F -  -  -          ld  L,a
 2091 D1:C2AA 7E -  -  -          ld  a,(hl)
 2092 D1:C2AB 2C -  -  -          inc L
 2093 D1:C2AC 56 -  -  -          ld  d,(hl)
 2094 D1:C2AD 42 -  -  -          ld  b,d
 2095 D1:C2AE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2096 D1:C2B0 ED 4C -  -          mlt bc
 2097 D1:C2B2 21 00 40 D0         ld  hl,PAGETABLE
 2098 D1:C2B6 09 -  -  -          add hl,bc
 2099 D1:C2B7 ED 27 -  -          ld  hl,(hl)
 2100 D1:C2B9 06 00 -  -          ld  b,0
 2101 D1:C2BB 4F -  -  -          ld  c,a
 2102 D1:C2BC 09 -  -  -          add hl,bc
 2103 D1:C2BD 7E -  -  -          READ_ACCESS
 2104 D1:C2BE E1 -  -  -      pop hl
 2105 D1:C2BF DD AE 00 -      xor a,(ix+REGA)
 2106 D1:C2C2 DD 77 00 -      ld  (ix+REGA),A
 2107 D1:C2C5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2108 D1:C2D8 C3 38 B3 D1     jp i6502NextLoad
 2109 D1:C2DC -  -  -  -  
 2110 D1:C2DC -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2111 D1:C2DC -  -  -  -  inst6502_eor_indy:
 2112 D1:C2DC ED 33 05 -      ADDCYC(5)
 2113 D1:C2DF E5 -  -  -      push hl
 2114 D1:C2E0 7E -  -  -          ld  a,(hl)
 2115 D1:C2E1 21 00 38 D0         ld  hl,ZEROPAGE
 2116 D1:C2E5 85 -  -  -          add a,L
 2117 D1:C2E6 6F -  -  -          ld  L,a
 2118 D1:C2E7 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2119 D1:C2E8 2C -  -  -          inc L
 2120 D1:C2E9 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2121 D1:C2EC 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2122 D1:C2ED 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2123 D1:C2EF 24 -  -  -          inc h
 2124 D1:C2F0 FD 23 -  -          ADDCYC(1)
 2125 D1:C2F2 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2126 D1:C2F3 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2127 D1:C2F5 ED 6C -  -          mlt hl          ;23.
 2128 D1:C2F7 01 00 40 D0         ld  bc,PAGETABLE
 2129 D1:C2FB 09 -  -  -          add hl,bc
 2130 D1:C2FC ED 27 -  -          ld  hl,(hl)     ;address get.
 2131 D1:C2FE 01 00 00 00         ld  bc,0
 2132 D1:C302 4F -  -  -          ld  c,a
 2133 D1:C303 09 -  -  -          add hl,bc       ;Full address get.
 2134 D1:C304 7E -  -  -          READ_ACCESS
 2135 D1:C305 E1 -  -  -      pop hl
 2136 D1:C306 DD AE 00 -      xor a,(ix+REGA)
 2137 D1:C309 DD 77 00 -      ld  (ix+REGA),A
 2138 D1:C30C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2139 D1:C31F C3 38 B3 D1     jp i6502NextLoad
 2140 D1:C323 -  -  -  -  
 2141 D1:C323 -  -  -  -  ;-----------------------------------------------------------------------------
 2142 D1:C323 -  -  -  -  ;ORA - OR Memory with Accumulator
 2143 D1:C323 -  -  -  -  ;A OR M -> A
 2144 D1:C323 -  -  -  -  ;N	Z	C	I	D	V
 2145 D1:C323 -  -  -  -  ;+	+	-	-	-	-
 2146 D1:C323 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2147 D1:C323 -  -  -  -  
 2148 D1:C323 -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2149 D1:C323 -  -  -  -  inst6502_ora_imm:
 2150 D1:C323 ED 33 02 -      ADDCYC(2)
 2151 D1:C326 7E -  -  -      ld  a,(hl)
 2152 D1:C327 DD B6 00 -      or  a,(ix+REGA)
 2153 D1:C32A DD 77 00 -      ld  (ix+REGA),A
 2154 D1:C32D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2155 D1:C340 C3 38 B3 D1     jp i6502NextLoad
 2156 D1:C344 -  -  -  -  
 2157 D1:C344 -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2158 D1:C344 -  -  -  -  inst6502_ora_zp:
 2159 D1:C344 ED 33 03 -      ADDCYC(3)
 2160 D1:C347 7E -  -  -      ld  a,(hl)
 2161 D1:C348 01 00 38 D0     ld  bc,ZEROPAGE
 2162 D1:C34C 81 -  -  -      add a,c
 2163 D1:C34D 4F -  -  -      ld  c,a
 2164 D1:C34E 0A -  -  -      ld  a,(bc)
 2165 D1:C34F DD B6 00 -      or  a,(ix+REGA)
 2166 D1:C352 DD 77 00 -      ld  (ix+REGA),A
 2167 D1:C355 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2168 D1:C368 C3 38 B3 D1     jp i6502NextLoad
 2169 D1:C36C -  -  -  -  
 2170 D1:C36C -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2171 D1:C36C -  -  -  -  inst6502_ora_zpx:
 2172 D1:C36C ED 33 04 -      ADDCYC(4)
 2173 D1:C36F 7E -  -  -      ld  a,(hl)
 2174 D1:C370 01 00 38 D0     ld  bc,ZEROPAGE
 2175 D1:C374 81 -  -  -      add a,c
 2176 D1:C375 DD 86 01 -      add a,(ix+REGX)
 2177 D1:C378 4F -  -  -      ld  c,a
 2178 D1:C379 0A -  -  -      ld  a,(bc)
 2179 D1:C37A DD B6 00 -      or  a,(ix+REGA)
 2180 D1:C37D DD 77 00 -      ld  (ix+REGA),A
 2181 D1:C380 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2182 D1:C393 C3 38 B3 D1     jp i6502NextLoad
 2183 D1:C397 -  -  -  -  
 2184 D1:C397 -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2185 D1:C397 -  -  -  -  inst6502_ora_abs:
 2186 D1:C397 ED 33 04 -      ADDCYC(4)
 2187 D1:C39A CD 80 B5 D1     call subroutine6502_abs_split_start
 2188 D1:C39E E5 -  -  -      push hl
 2189 D1:C39F 50 -  -  -          ld  d,b
 2190 D1:C3A0 79 -  -  -          ld  a,c
 2191 D1:C3A1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2192 D1:C3A3 ED 4C -  -          mlt bc
 2193 D1:C3A5 21 00 40 D0         ld  hl,PAGETABLE
 2194 D1:C3A9 09 -  -  -          add hl,bc
 2195 D1:C3AA ED 27 -  -          ld  hl,(hl)
 2196 D1:C3AC 06 00 -  -          ld  b,0
 2197 D1:C3AE 4F -  -  -          ld  c,a
 2198 D1:C3AF 09 -  -  -          add hl,bc   ;full address
 2199 D1:C3B0 7E -  -  -          READ_ACCESS
 2200 D1:C3B1 E1 -  -  -      pop hl
 2201 D1:C3B2 DD B6 00 -      or  a,(ix+REGA)
 2202 D1:C3B5 DD 77 00 -      ld  (ix+REGA),A
 2203 D1:C3B8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2204 D1:C3CB C3 38 B3 D1     jp i6502NextLoad
 2205 D1:C3CF -  -  -  -  
 2206 D1:C3CF -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2207 D1:C3CF -  -  -  -  inst6502_ora_absx:
 2208 D1:C3CF ED 33 04 -      ADDCYC(4)
 2209 D1:C3D2 CD 80 B5 D1     call subroutine6502_abs_split_start
 2210 D1:C3D6 E5 -  -  -      push hl
 2211 D1:C3D7 50 -  -  -          ld  d,b
 2212 D1:C3D8 79 -  -  -          ld  a,c
 2213 D1:C3D9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2214 D1:C3DB ED 4C -  -          mlt bc
 2215 D1:C3DD 21 00 40 D0         ld  hl,PAGETABLE
 2216 D1:C3E1 09 -  -  -          add hl,bc
 2217 D1:C3E2 ED 27 -  -          ld  hl,(hl)
 2218 D1:C3E4 06 00 -  -          ld  b,0
 2219 D1:C3E6 DD 86 01 -          add a,(ix+REGX)
 2220 D1:C3E9 4F -  -  -          ld  c,a
 2221 D1:C3EA 30 04 -  -          jr  nc,+_
 2222 D1:C3EC 04 -  -  -          inc b
 2223 D1:C3ED 14 -  -  -          inc d
 2224 D1:C3EE FD 23 -  -          ADDCYC(1)
 2225 D1:C3F0 09 -  -  -  _:      add hl,bc   ;full address
 2226 D1:C3F1 7E -  -  -          READ_ACCESS
 2227 D1:C3F2 E1 -  -  -      pop hl
 2228 D1:C3F3 DD B6 00 -      or  a,(ix+REGA)
 2229 D1:C3F6 DD 77 00 -      ld  (ix+REGA),A
 2230 D1:C3F9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2231 D1:C40C C3 38 B3 D1     jp i6502NextLoad
 2232 D1:C410 -  -  -  -  
 2233 D1:C410 -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2234 D1:C410 -  -  -  -  inst6502_ora_absy:
 2235 D1:C410 ED 33 04 -      ADDCYC(4)
 2236 D1:C413 CD 80 B5 D1     call subroutine6502_abs_split_start
 2237 D1:C417 E5 -  -  -      push hl
 2238 D1:C418 50 -  -  -          ld  d,b
 2239 D1:C419 79 -  -  -          ld  a,c
 2240 D1:C41A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2241 D1:C41C ED 4C -  -          mlt bc
 2242 D1:C41E 21 00 40 D0         ld  hl,PAGETABLE
 2243 D1:C422 09 -  -  -          add hl,bc
 2244 D1:C423 ED 27 -  -          ld  hl,(hl)
 2245 D1:C425 06 00 -  -          ld  b,0
 2246 D1:C427 DD 86 02 -          add a,(ix+REGY)
 2247 D1:C42A 4F -  -  -          ld  c,a
 2248 D1:C42B 30 04 -  -          jr  nc,+_
 2249 D1:C42D 04 -  -  -          inc b
 2250 D1:C42E 14 -  -  -          inc d
 2251 D1:C42F FD 23 -  -          ADDCYC(1)
 2252 D1:C431 09 -  -  -  _:      add hl,bc   ;full address
 2253 D1:C432 7E -  -  -          READ_ACCESS
 2254 D1:C433 E1 -  -  -      pop hl
 2255 D1:C434 DD B6 00 -      or  a,(ix+REGA)
 2256 D1:C437 DD 77 00 -      ld  (ix+REGA),A
 2257 D1:C43A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2258 D1:C44D C3 38 B3 D1     jp i6502NextLoad
 2259 D1:C451 -  -  -  -  
 2260 D1:C451 -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2261 D1:C451 -  -  -  -  inst6502_ora_indx:
 2262 D1:C451 ED 33 06 -      ADDCYC(6)
 2263 D1:C454 E5 -  -  -      push hl
 2264 D1:C455 7E -  -  -          ld  a,(hl)
 2265 D1:C456 21 00 38 D0         ld  hl,ZEROPAGE
 2266 D1:C45A 85 -  -  -          add a,L
 2267 D1:C45B DD 86 01 -          add a,(ix+REGX)
 2268 D1:C45E 6F -  -  -          ld  L,a
 2269 D1:C45F 7E -  -  -          ld  a,(hl)
 2270 D1:C460 2C -  -  -          inc L
 2271 D1:C461 56 -  -  -          ld  d,(hl)
 2272 D1:C462 42 -  -  -          ld  b,d
 2273 D1:C463 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2274 D1:C465 ED 4C -  -          mlt bc
 2275 D1:C467 21 00 40 D0         ld  hl,PAGETABLE
 2276 D1:C46B 09 -  -  -          add hl,bc
 2277 D1:C46C ED 27 -  -          ld  hl,(hl)
 2278 D1:C46E 06 00 -  -          ld  b,0
 2279 D1:C470 4F -  -  -          ld  c,a
 2280 D1:C471 09 -  -  -          add hl,bc
 2281 D1:C472 7E -  -  -          READ_ACCESS
 2282 D1:C473 E1 -  -  -      pop hl
 2283 D1:C474 DD B6 00 -      or  a,(ix+REGA)
 2284 D1:C477 DD 77 00 -      ld  (ix+REGA),A
 2285 D1:C47A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2286 D1:C48D C3 38 B3 D1     jp i6502NextLoad
 2287 D1:C491 -  -  -  -  
 2288 D1:C491 -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2289 D1:C491 -  -  -  -  inst6502_ora_indy:
 2290 D1:C491 ED 33 05 -      ADDCYC(5)
 2291 D1:C494 E5 -  -  -      push hl
 2292 D1:C495 7E -  -  -          ld  a,(hl)
 2293 D1:C496 21 00 38 D0         ld  hl,ZEROPAGE
 2294 D1:C49A 85 -  -  -          add a,L
 2295 D1:C49B 6F -  -  -          ld  L,a
 2296 D1:C49C 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2297 D1:C49D 2C -  -  -          inc L
 2298 D1:C49E DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2299 D1:C4A1 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2300 D1:C4A2 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2301 D1:C4A4 24 -  -  -          inc h
 2302 D1:C4A5 FD 23 -  -          ADDCYC(1)
 2303 D1:C4A7 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2304 D1:C4A8 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2305 D1:C4AA ED 6C -  -          mlt hl          ;23.
 2306 D1:C4AC 01 00 40 D0         ld  bc,PAGETABLE
 2307 D1:C4B0 09 -  -  -          add hl,bc
 2308 D1:C4B1 ED 27 -  -          ld  hl,(hl)     ;address get.
 2309 D1:C4B3 01 00 00 00         ld  bc,0
 2310 D1:C4B7 4F -  -  -          ld  c,a
 2311 D1:C4B8 09 -  -  -          add hl,bc       ;Full address get.
 2312 D1:C4B9 7E -  -  -          READ_ACCESS
 2313 D1:C4BA E1 -  -  -      pop hl
 2314 D1:C4BB DD B6 00 -      or  a,(ix+REGA)
 2315 D1:C4BE DD 77 00 -      ld  (ix+REGA),A
 2316 D1:C4C1 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2317 D1:C4D4 C3 38 B3 D1     jp i6502NextLoad
 2318 D1:C4D8 -  -  -  -  
 2319 D1:C4D8 -  -  -  -  ;-----------------------------------------------------------------------------
 2320 D1:C4D8 -  -  -  -  ;-----------------------------------------------------------------------------
 2321 D1:C4D8 -  -  -  -  ;-----------------------------------------------------------------------------
 2322 D1:C4D8 -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2323 D1:C4D8 -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2324 D1:C4D8 -  -  -  -  ;C <- [76543210] <- 0
 2325 D1:C4D8 -  -  -  -  ;N	Z	C	I	D	V
 2326 D1:C4D8 -  -  -  -  ;+	+	+	-	-	-
 2327 D1:C4D8 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2328 D1:C4D8 -  -  -  -  
 2329 D1:C4D8 -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2330 D1:C4D8 -  -  -  -  inst6502_asl:
 2331 D1:C4D8 ED 33 02 -      ADDCYC(2)
 2332 D1:C4DB DD CB 00 26     sla (ix+REGA)
 2333 D1:C4DF DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2334 D1:C4F8 C3 51 B3 D1     jp i6502FinishLoad
 2335 D1:C4FC -  -  -  -  
 2336 D1:C4FC -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2337 D1:C4FC -  -  -  -  inst6502_asl_zp:
 2338 D1:C4FC ED 33 05 -      ADDCYC(5)
 2339 D1:C4FF 7E -  -  -      ld  a,(hl)
 2340 D1:C500 01 00 38 D0     ld  bc,ZEROPAGE
 2341 D1:C504 81 -  -  -      add a,c
 2342 D1:C505 4F -  -  -      ld  c,a
 2343 D1:C506 0A -  -  -      ld  a,(bc)
 2344 D1:C507 CB 27 -  -      sla a
 2345 D1:C509 02 -  -  -      ld  (bc),a
 2346 D1:C50A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2347 D1:C523 C3 38 B3 D1     jp i6502NextLoad
 2348 D1:C527 -  -  -  -  
 2349 D1:C527 -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2350 D1:C527 -  -  -  -  inst6502_asl_zpx:
 2351 D1:C527 ED 33 06 -      ADDCYC(6)
 2352 D1:C52A 7E -  -  -      ld  a,(hl)
 2353 D1:C52B 01 00 38 D0     ld  bc,ZEROPAGE
 2354 D1:C52F 81 -  -  -      add a,c
 2355 D1:C530 DD 86 01 -      add a,(ix+REGX)
 2356 D1:C533 4F -  -  -      ld  c,a
 2357 D1:C534 0A -  -  -      ld  a,(bc)
 2358 D1:C535 CB 27 -  -      sla a
 2359 D1:C537 02 -  -  -      ld  (bc),a
 2360 D1:C538 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2361 D1:C551 C3 38 B3 D1     jp i6502NextLoad
 2362 D1:C555 -  -  -  -  
 2363 D1:C555 -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2364 D1:C555 -  -  -  -  inst6502_asl_abs:
 2365 D1:C555 ED 33 06 -      ADDCYC(6)
 2366 D1:C558 CD 80 B5 D1     call subroutine6502_abs_split_start
 2367 D1:C55C E5 -  -  -      push hl
 2368 D1:C55D 50 -  -  -          ld  d,b
 2369 D1:C55E 79 -  -  -          ld  a,c
 2370 D1:C55F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2371 D1:C561 ED 4C -  -          mlt bc
 2372 D1:C563 21 00 40 D0         ld  hl,PAGETABLE
 2373 D1:C567 09 -  -  -          add hl,bc
 2374 D1:C568 ED 27 -  -          ld  hl,(hl)
 2375 D1:C56A 06 00 -  -          ld  b,0
 2376 D1:C56C 4F -  -  -          ld  c,a
 2377 D1:C56D 09 -  -  -          add hl,bc   ;full address
 2378 D1:C56E 7E -  -  -          READ_ACCESS
 2379 D1:C56F E1 -  -  -      pop hl
 2380 D1:C570 7E -  -  -      ld  a,(hl)
 2381 D1:C571 CB 27 -  -      sla a
 2382 D1:C573 47 -  -  -      ld  b,a
 2383 D1:C574 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2384 D1:C58D 70 -  -  -      WRITE_ACCESS
 2385 D1:C58E C3 38 B3 D1     jp i6502NextLoad
 2386 D1:C592 -  -  -  -  
 2387 D1:C592 -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2388 D1:C592 -  -  -  -  inst6502_asl_absx:
 2389 D1:C592 ED 33 07 -      ADDCYC(7)
 2390 D1:C595 CD 80 B5 D1     call subroutine6502_abs_split_start
 2391 D1:C599 E5 -  -  -      push hl
 2392 D1:C59A 50 -  -  -          ld  d,b
 2393 D1:C59B 79 -  -  -          ld  a,c
 2394 D1:C59C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2395 D1:C59E ED 4C -  -          mlt bc
 2396 D1:C5A0 21 00 40 D0         ld  hl,PAGETABLE
 2397 D1:C5A4 09 -  -  -          add hl,bc
 2398 D1:C5A5 ED 27 -  -          ld  hl,(hl)
 2399 D1:C5A7 06 00 -  -          ld  b,0
 2400 D1:C5A9 DD 86 01 -          add a,(ix+REGX)
 2401 D1:C5AC 4F -  -  -          ld  c,a
 2402 D1:C5AD 30 02 -  -          jr  nc,+_
 2403 D1:C5AF 04 -  -  -          inc b
 2404 D1:C5B0 14 -  -  -          inc d
 2405 D1:C5B1 09 -  -  -  _:      add hl,bc   ;full address
 2406 D1:C5B2 7E -  -  -          READ_ACCESS
 2407 D1:C5B3 E1 -  -  -      pop hl
 2408 D1:C5B4 7E -  -  -      ld  a,(hl)
 2409 D1:C5B5 CB 27 -  -      sla a
 2410 D1:C5B7 47 -  -  -      ld  b,a
 2411 D1:C5B8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2412 D1:C5D1 70 -  -  -      WRITE_ACCESS
 2413 D1:C5D2 C3 38 B3 D1     jp i6502NextLoad
 2414 D1:C5D6 -  -  -  -  
 2415 D1:C5D6 -  -  -  -  ;-----------------------------------------------------------------------------
 2416 D1:C5D6 -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2417 D1:C5D6 -  -  -  -  ;0 -> [76543210] -> C
 2418 D1:C5D6 -  -  -  -  ;N	Z	C	I	D	V
 2419 D1:C5D6 -  -  -  -  ;0	+	+	-	-	-
 2420 D1:C5D6 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2421 D1:C5D6 -  -  -  -  
 2422 D1:C5D6 -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2423 D1:C5D6 -  -  -  -  inst6502_lsr:
 2424 D1:C5D6 ED 33 02 -      ADDCYC(2)
 2425 D1:C5D9 DD CB 00 3E     srl (ix+REGA)
 2426 D1:C5DD DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2427 D1:C5F6 C3 51 B3 D1     jp i6502FinishLoad
 2428 D1:C5FA -  -  -  -  
 2429 D1:C5FA -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2430 D1:C5FA -  -  -  -  inst6502_lsr_zp:
 2431 D1:C5FA ED 33 05 -      ADDCYC(5)
 2432 D1:C5FD 7E -  -  -      ld  a,(hl)
 2433 D1:C5FE 01 00 38 D0     ld  bc,ZEROPAGE
 2434 D1:C602 81 -  -  -      add a,c
 2435 D1:C603 4F -  -  -      ld  c,a
 2436 D1:C604 0A -  -  -      ld  a,(bc)
 2437 D1:C605 CB 3F -  -      srl a
 2438 D1:C607 02 -  -  -      ld  (bc),a
 2439 D1:C608 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2440 D1:C621 C3 38 B3 D1     jp i6502NextLoad
 2441 D1:C625 -  -  -  -  
 2442 D1:C625 -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2443 D1:C625 -  -  -  -  inst6502_lsr_zpx:
 2444 D1:C625 ED 33 06 -      ADDCYC(6)
 2445 D1:C628 7E -  -  -      ld  a,(hl)
 2446 D1:C629 01 00 38 D0     ld  bc,ZEROPAGE
 2447 D1:C62D 81 -  -  -      add a,c
 2448 D1:C62E DD 86 01 -      add a,(ix+REGX)
 2449 D1:C631 4F -  -  -      ld  c,a
 2450 D1:C632 0A -  -  -      ld  a,(bc)
 2451 D1:C633 CB 3F -  -      srl a
 2452 D1:C635 02 -  -  -      ld  (bc),a
 2453 D1:C636 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2454 D1:C64F C3 38 B3 D1     jp i6502NextLoad
 2455 D1:C653 -  -  -  -      
 2456 D1:C653 -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2457 D1:C653 -  -  -  -  inst6502_lsr_abs:
 2458 D1:C653 ED 33 06 -      ADDCYC(6)
 2459 D1:C656 CD 80 B5 D1     call subroutine6502_abs_split_start
 2460 D1:C65A E5 -  -  -      push hl
 2461 D1:C65B 50 -  -  -          ld  d,b
 2462 D1:C65C 79 -  -  -          ld  a,c
 2463 D1:C65D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2464 D1:C65F ED 4C -  -          mlt bc
 2465 D1:C661 21 00 40 D0         ld  hl,PAGETABLE
 2466 D1:C665 09 -  -  -          add hl,bc
 2467 D1:C666 ED 27 -  -          ld  hl,(hl)
 2468 D1:C668 06 00 -  -          ld  b,0
 2469 D1:C66A 4F -  -  -          ld  c,a
 2470 D1:C66B 09 -  -  -          add hl,bc   ;full address
 2471 D1:C66C 7E -  -  -          READ_ACCESS
 2472 D1:C66D E1 -  -  -      pop hl
 2473 D1:C66E 7E -  -  -      ld  a,(hl)
 2474 D1:C66F CB 3F -  -      srl a
 2475 D1:C671 47 -  -  -      ld  b,a
 2476 D1:C672 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2477 D1:C68B 70 -  -  -      WRITE_ACCESS
 2478 D1:C68C C3 38 B3 D1     jp i6502NextLoad
 2479 D1:C690 -  -  -  -  
 2480 D1:C690 -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2481 D1:C690 -  -  -  -  inst6502_lsr_absx:
 2482 D1:C690 ED 33 07 -      ADDCYC(7)
 2483 D1:C693 CD 80 B5 D1     call subroutine6502_abs_split_start
 2484 D1:C697 E5 -  -  -      push hl
 2485 D1:C698 50 -  -  -          ld  d,b
 2486 D1:C699 79 -  -  -          ld  a,c
 2487 D1:C69A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2488 D1:C69C ED 4C -  -          mlt bc
 2489 D1:C69E 21 00 40 D0         ld  hl,PAGETABLE
 2490 D1:C6A2 09 -  -  -          add hl,bc
 2491 D1:C6A3 ED 27 -  -          ld  hl,(hl)
 2492 D1:C6A5 06 00 -  -          ld  b,0
 2493 D1:C6A7 DD 86 01 -          add a,(ix+REGX)
 2494 D1:C6AA 4F -  -  -          ld  c,a
 2495 D1:C6AB 30 02 -  -          jr  nc,+_
 2496 D1:C6AD 04 -  -  -          inc b
 2497 D1:C6AE 14 -  -  -          inc d
 2498 D1:C6AF 09 -  -  -  _:      add hl,bc   ;full address
 2499 D1:C6B0 7E -  -  -          READ_ACCESS
 2500 D1:C6B1 E1 -  -  -      pop hl
 2501 D1:C6B2 7E -  -  -      ld  a,(hl)
 2502 D1:C6B3 CB 3F -  -      srl a
 2503 D1:C6B5 47 -  -  -      ld  b,a
 2504 D1:C6B6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2505 D1:C6CF 70 -  -  -      WRITE_ACCESS
 2506 D1:C6D0 C3 38 B3 D1     jp i6502NextLoad
 2507 D1:C6D4 -  -  -  -  
 2508 D1:C6D4 -  -  -  -  ;-----------------------------------------------------------------------------
 2509 D1:C6D4 -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2510 D1:C6D4 -  -  -  -  ;C <- [76543210] <- C
 2511 D1:C6D4 -  -  -  -  ;N	Z	C	I	D	V
 2512 D1:C6D4 -  -  -  -  ;+	+	+	-	-	-
 2513 D1:C6D4 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2514 D1:C6D4 -  -  -  -  
 2515 D1:C6D4 -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2516 D1:C6D4 -  -  -  -  inst6502_rol:
 2517 D1:C6D4 ED 33 02 -      ADDCYC(2)
 2518 D1:C6D7 DD 7E 04 -      ld  a,(ix+REGSR)
 2519 D1:C6DA 1F -  -  -      rra
 2520 D1:C6DB DD CB 00 16     rl (ix+REGA)
 2521 D1:C6DF DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2522 D1:C6F8 C3 51 B3 D1     jp i6502FinishLoad
 2523 D1:C6FC -  -  -  -  
 2524 D1:C6FC -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2525 D1:C6FC -  -  -  -  inst6502_rol_zp:
 2526 D1:C6FC ED 33 05 -      ADDCYC(5)
 2527 D1:C6FF 7E -  -  -      ld  a,(hl)
 2528 D1:C700 01 00 38 D0     ld  bc,ZEROPAGE
 2529 D1:C704 81 -  -  -      add a,c
 2530 D1:C705 4F -  -  -      ld  c,a
 2531 D1:C706 DD 7E 04 -      ld  a,(ix+REGSR)
 2532 D1:C709 1F -  -  -      rra
 2533 D1:C70A 0A -  -  -      ld  a,(bc)
 2534 D1:C70B 17 -  -  -      rla
 2535 D1:C70C 02 -  -  -      ld  (bc),a
 2536 D1:C70D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2537 D1:C726 C3 38 B3 D1     jp i6502NextLoad
 2538 D1:C72A -  -  -  -  
 2539 D1:C72A -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2540 D1:C72A -  -  -  -  inst6502_rol_zpx:
 2541 D1:C72A ED 33 06 -      ADDCYC(6)
 2542 D1:C72D 7E -  -  -      ld  a,(hl)
 2543 D1:C72E 01 00 38 D0     ld  bc,ZEROPAGE
 2544 D1:C732 81 -  -  -      add a,c
 2545 D1:C733 DD 86 01 -      add a,(ix+REGX)
 2546 D1:C736 4F -  -  -      ld  c,a
 2547 D1:C737 DD 7E 04 -      ld  a,(ix+REGSR)
 2548 D1:C73A 1F -  -  -      rra
 2549 D1:C73B 0A -  -  -      ld  a,(bc)
 2550 D1:C73C 17 -  -  -      rla
 2551 D1:C73D 02 -  -  -      ld  (bc),a
 2552 D1:C73E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2553 D1:C757 C3 38 B3 D1     jp i6502NextLoad
 2554 D1:C75B -  -  -  -  
 2555 D1:C75B -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2556 D1:C75B -  -  -  -  inst6502_rol_abs:
 2557 D1:C75B ED 33 06 -      ADDCYC(6)
 2558 D1:C75E CD 80 B5 D1     call subroutine6502_abs_split_start
 2559 D1:C762 E5 -  -  -      push hl
 2560 D1:C763 50 -  -  -          ld  d,b
 2561 D1:C764 79 -  -  -          ld  a,c
 2562 D1:C765 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2563 D1:C767 ED 4C -  -          mlt bc
 2564 D1:C769 21 00 40 D0         ld  hl,PAGETABLE
 2565 D1:C76D 09 -  -  -          add hl,bc
 2566 D1:C76E ED 27 -  -          ld  hl,(hl)
 2567 D1:C770 06 00 -  -          ld  b,0
 2568 D1:C772 4F -  -  -          ld  c,a
 2569 D1:C773 09 -  -  -          add hl,bc   ;full address
 2570 D1:C774 7E -  -  -          READ_ACCESS
 2571 D1:C775 E1 -  -  -      pop hl
 2572 D1:C776 DD 7E 04 -      ld  a,(ix+REGSR)
 2573 D1:C779 1F -  -  -      rra
 2574 D1:C77A 7E -  -  -      ld  a,(hl)
 2575 D1:C77B 17 -  -  -      rla
 2576 D1:C77C 47 -  -  -      ld  b,a
 2577 D1:C77D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2578 D1:C796 70 -  -  -      WRITE_ACCESS
 2579 D1:C797 C3 38 B3 D1     jp i6502NextLoad
 2580 D1:C79B -  -  -  -  
 2581 D1:C79B -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2582 D1:C79B -  -  -  -  inst6502_rol_absx:
 2583 D1:C79B ED 33 07 -      ADDCYC(7)
 2584 D1:C79E CD 80 B5 D1     call subroutine6502_abs_split_start
 2585 D1:C7A2 E5 -  -  -      push hl
 2586 D1:C7A3 50 -  -  -          ld  d,b
 2587 D1:C7A4 79 -  -  -          ld  a,c
 2588 D1:C7A5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2589 D1:C7A7 ED 4C -  -          mlt bc
 2590 D1:C7A9 21 00 40 D0         ld  hl,PAGETABLE
 2591 D1:C7AD 09 -  -  -          add hl,bc
 2592 D1:C7AE ED 27 -  -          ld  hl,(hl)
 2593 D1:C7B0 06 00 -  -          ld  b,0
 2594 D1:C7B2 DD 86 01 -          add a,(ix+REGX)
 2595 D1:C7B5 4F -  -  -          ld  c,a
 2596 D1:C7B6 30 02 -  -          jr  nc,+_
 2597 D1:C7B8 04 -  -  -          inc b
 2598 D1:C7B9 14 -  -  -          inc d
 2599 D1:C7BA 09 -  -  -  _:      add hl,bc   ;full address
 2600 D1:C7BB 7E -  -  -          READ_ACCESS
 2601 D1:C7BC E1 -  -  -      pop hl
 2602 D1:C7BD DD 7E 04 -      ld  a,(ix+REGSR)
 2603 D1:C7C0 1F -  -  -      rra
 2604 D1:C7C1 7E -  -  -      ld  a,(hl)
 2605 D1:C7C2 17 -  -  -      rla
 2606 D1:C7C3 47 -  -  -      ld  b,a
 2607 D1:C7C4 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2608 D1:C7DD 70 -  -  -      WRITE_ACCESS
 2609 D1:C7DE C3 38 B3 D1     jp i6502NextLoad
 2610 D1:C7E2 -  -  -  -  
 2611 D1:C7E2 -  -  -  -  ;-----------------------------------------------------------------------------
 2612 D1:C7E2 -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2613 D1:C7E2 -  -  -  -  ;C -> [76543210] -> C
 2614 D1:C7E2 -  -  -  -  ;N	Z	C	I	D	V
 2615 D1:C7E2 -  -  -  -  ;+	+	+	-	-	-
 2616 D1:C7E2 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2617 D1:C7E2 -  -  -  -  
 2618 D1:C7E2 -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2619 D1:C7E2 -  -  -  -  inst6502_ror:
 2620 D1:C7E2 ED 33 02 -      ADDCYC(2)
 2621 D1:C7E5 DD 7E 04 -      ld  a,(ix+REGSR)
 2622 D1:C7E8 1F -  -  -      rra
 2623 D1:C7E9 DD CB 00 1E     rr  (ix+REGA)
 2624 D1:C7ED DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2625 D1:C806 C3 51 B3 D1     jp i6502FinishLoad
 2626 D1:C80A -  -  -  -  
 2627 D1:C80A -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2628 D1:C80A -  -  -  -  inst6502_ror_zp:
 2629 D1:C80A ED 33 05 -      ADDCYC(5)
 2630 D1:C80D 7E -  -  -      ld  a,(hl)
 2631 D1:C80E 01 00 38 D0     ld  bc,ZEROPAGE
 2632 D1:C812 81 -  -  -      add a,c
 2633 D1:C813 4F -  -  -      ld  c,a
 2634 D1:C814 DD 7E 04 -      ld  a,(ix+REGSR)
 2635 D1:C817 1F -  -  -      rra
 2636 D1:C818 0A -  -  -      ld  a,(bc)
 2637 D1:C819 1F -  -  -      rra
 2638 D1:C81A 02 -  -  -      ld  (bc),a
 2639 D1:C81B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2640 D1:C834 C3 38 B3 D1     jp i6502NextLoad
 2641 D1:C838 -  -  -  -  
 2642 D1:C838 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2643 D1:C838 -  -  -  -  inst6502_ror_zpx:
 2644 D1:C838 ED 33 06 -      ADDCYC(6)
 2645 D1:C83B 7E -  -  -      ld  a,(hl)
 2646 D1:C83C 01 00 38 D0     ld  bc,ZEROPAGE
 2647 D1:C840 81 -  -  -      add a,c
 2648 D1:C841 DD 86 01 -      add a,(ix+REGX)
 2649 D1:C844 4F -  -  -      ld  c,a
 2650 D1:C845 DD 7E 04 -      ld  a,(ix+REGSR)
 2651 D1:C848 1F -  -  -      rra
 2652 D1:C849 0A -  -  -      ld  a,(bc)
 2653 D1:C84A 1F -  -  -      rra
 2654 D1:C84B 02 -  -  -      ld  (bc),a
 2655 D1:C84C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2656 D1:C865 C3 38 B3 D1     jp i6502NextLoad
 2657 D1:C869 -  -  -  -  
 2658 D1:C869 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2659 D1:C869 -  -  -  -  inst6502_ror_abs:
 2660 D1:C869 ED 33 06 -      ADDCYC(6)
 2661 D1:C86C CD 80 B5 D1     call subroutine6502_abs_split_start
 2662 D1:C870 E5 -  -  -      push hl
 2663 D1:C871 50 -  -  -          ld  d,b
 2664 D1:C872 79 -  -  -          ld  a,c
 2665 D1:C873 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2666 D1:C875 ED 4C -  -          mlt bc
 2667 D1:C877 21 00 40 D0         ld  hl,PAGETABLE
 2668 D1:C87B 09 -  -  -          add hl,bc
 2669 D1:C87C ED 27 -  -          ld  hl,(hl)
 2670 D1:C87E 06 00 -  -          ld  b,0
 2671 D1:C880 4F -  -  -          ld  c,a
 2672 D1:C881 09 -  -  -          add hl,bc   ;full address
 2673 D1:C882 7E -  -  -          READ_ACCESS
 2674 D1:C883 E1 -  -  -      pop hl
 2675 D1:C884 DD 7E 04 -      ld  a,(ix+REGSR)
 2676 D1:C887 1F -  -  -      rra
 2677 D1:C888 7E -  -  -      ld  a,(hl)
 2678 D1:C889 1F -  -  -      rra
 2679 D1:C88A 47 -  -  -      ld  b,a
 2680 D1:C88B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2681 D1:C8A4 70 -  -  -      WRITE_ACCESS
 2682 D1:C8A5 C3 38 B3 D1     jp i6502NextLoad
 2683 D1:C8A9 -  -  -  -  
 2684 D1:C8A9 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2685 D1:C8A9 -  -  -  -  inst6502_ror_absx:
 2686 D1:C8A9 ED 33 07 -      ADDCYC(7)
 2687 D1:C8AC CD 80 B5 D1     call subroutine6502_abs_split_start
 2688 D1:C8B0 E5 -  -  -      push hl
 2689 D1:C8B1 50 -  -  -          ld  d,b
 2690 D1:C8B2 79 -  -  -          ld  a,c
 2691 D1:C8B3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2692 D1:C8B5 ED 4C -  -          mlt bc
 2693 D1:C8B7 21 00 40 D0         ld  hl,PAGETABLE
 2694 D1:C8BB 09 -  -  -          add hl,bc
 2695 D1:C8BC ED 27 -  -          ld  hl,(hl)
 2696 D1:C8BE 06 00 -  -          ld  b,0
 2697 D1:C8C0 DD 86 01 -          add a,(ix+REGX)
 2698 D1:C8C3 4F -  -  -          ld  c,a
 2699 D1:C8C4 30 02 -  -          jr  nc,+_
 2700 D1:C8C6 04 -  -  -          inc b
 2701 D1:C8C7 14 -  -  -          inc d
 2702 D1:C8C8 09 -  -  -  _:      add hl,bc   ;full address
 2703 D1:C8C9 7E -  -  -          READ_ACCESS
 2704 D1:C8CA E1 -  -  -      pop hl
 2705 D1:C8CB DD 7E 04 -      ld  a,(ix+REGSR)
 2706 D1:C8CE 1F -  -  -      rra
 2707 D1:C8CF 7E -  -  -      ld  a,(hl)
 2708 D1:C8D0 1F -  -  -      rra
 2709 D1:C8D1 47 -  -  -      ld  b,a
 2710 D1:C8D2 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2711 D1:C8EB 70 -  -  -      WRITE_ACCESS
 2712 D1:C8EC C3 38 B3 D1     jp i6502NextLoad
 2713 D1:C8F0 -  -  -  -  
 2714 D1:C8F0 -  -  -  -  ;-----------------------------------------------------------------------------
 2715 D1:C8F0 -  -  -  -  ;-----------------------------------------------------------------------------
 2716 D1:C8F0 -  -  -  -  ;-----------------------------------------------------------------------------
 2717 D1:C8F0 -  -  -  -  ;Instructions by type: Flag Instructions
 2718 D1:C8F0 -  -  -  -  
 2719 D1:C8F0 -  -  -  -  ;CLC - Clear Carry Flag
 2720 D1:C8F0 -  -  -  -  ;0 -> C
 2721 D1:C8F0 -  -  -  -  ;N	Z	C	I	D	V
 2722 D1:C8F0 -  -  -  -  ;-	-	0	-	-	-
 2723 D1:C8F0 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2724 D1:C8F0 -  -  -  -  ;implied	CLC	18	1	2  
 2725 D1:C8F0 -  -  -  -  inst6502_clc:
 2726 D1:C8F0 DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2727 D1:C8F4 C3 51 B3 D1     jp  i6502FinishLoad
 2728 D1:C8F8 -  -  -  -  
 2729 D1:C8F8 -  -  -  -  ;CLD - Clear Decimal Mode
 2730 D1:C8F8 -  -  -  -  ;0 -> D
 2731 D1:C8F8 -  -  -  -  ;N	Z	C	I	D	V
 2732 D1:C8F8 -  -  -  -  ;-	-	-	-	0	-
 2733 D1:C8F8 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2734 D1:C8F8 -  -  -  -  ;implied	CLD	D8	1	2  
 2735 D1:C8F8 -  -  -  -  inst6502_cld:
 2736 D1:C8F8 DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2737 D1:C8FC C3 51 B3 D1     jp  i6502FinishLoad
 2738 D1:C900 -  -  -  -  
 2739 D1:C900 -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2740 D1:C900 -  -  -  -  ;0 -> I
 2741 D1:C900 -  -  -  -  ;N	Z	C	I	D	V
 2742 D1:C900 -  -  -  -  ;-	-	-	0	-	-
 2743 D1:C900 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2744 D1:C900 -  -  -  -  ;implied	CLI	58	1	2  
 2745 D1:C900 -  -  -  -  inst6502_cli:
 2746 D1:C900 DD CB 04 96     res SF_INT,(ix+REGSR)
 2747 D1:C904 C3 51 B3 D1     jp  i6502FinishLoad
 2748 D1:C908 -  -  -  -  
 2749 D1:C908 -  -  -  -  ;CLV - Clear Overflow Flag
 2750 D1:C908 -  -  -  -  ;0 -> V
 2751 D1:C908 -  -  -  -  ;N	Z	C	I	D	V
 2752 D1:C908 -  -  -  -  ;-	-	-	-	-	0
 2753 D1:C908 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2754 D1:C908 -  -  -  -  ;implied	CLV	B8	1	2  
 2755 D1:C908 -  -  -  -  inst6502_clv:
 2756 D1:C908 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2757 D1:C90C C3 51 B3 D1     jp  i6502FinishLoad
 2758 D1:C910 -  -  -  -  
 2759 D1:C910 -  -  -  -  ;SEC - Set Carry Flag
 2760 D1:C910 -  -  -  -  ;1 -> C
 2761 D1:C910 -  -  -  -  ;N	Z	C	I	D	V
 2762 D1:C910 -  -  -  -  ;-	-	1	-	-	-
 2763 D1:C910 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2764 D1:C910 -  -  -  -  ;implied	SEC	38	1	2  
 2765 D1:C910 -  -  -  -  inst6502_sec:
 2766 D1:C910 DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2767 D1:C914 C3 51 B3 D1     jp  i6502FinishLoad
 2768 D1:C918 -  -  -  -  
 2769 D1:C918 -  -  -  -  ;SED - Set Decimal Flag
 2770 D1:C918 -  -  -  -  ;1 -> D
 2771 D1:C918 -  -  -  -  ;N	Z	C	I	D	V
 2772 D1:C918 -  -  -  -  ;-	-	-	-	1	-
 2773 D1:C918 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2774 D1:C918 -  -  -  -  ;implied	SED	F8	1	2  
 2775 D1:C918 -  -  -  -  inst6502_sed:
 2776 D1:C918 DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2777 D1:C91C C3 51 B3 D1     jp  i6502FinishLoad
 2778 D1:C920 -  -  -  -  
 2779 D1:C920 -  -  -  -  ;SEI - Set Interrupt Disable Status
 2780 D1:C920 -  -  -  -  ;1 -> I
 2781 D1:C920 -  -  -  -  ;N	Z	C	I	D	V
 2782 D1:C920 -  -  -  -  ;-	-	-	1	-	-
 2783 D1:C920 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2784 D1:C920 -  -  -  -  ;implied	SEI	78	1	2  
 2785 D1:C920 -  -  -  -  inst6502_sei:
 2786 D1:C920 DD CB 04 D6     set SF_INT,(ix+REGSR)
 2787 D1:C924 C3 51 B3 D1     jp  i6502FinishLoad
 2788 D1:C928 -  -  -  -  
 2789 D1:C928 -  -  -  -  ;-----------------------------------------------------------------------------
 2790 D1:C928 -  -  -  -  ;-----------------------------------------------------------------------------
 2791 D1:C928 -  -  -  -  ;-----------------------------------------------------------------------------
 2792 D1:C928 -  -  -  -  ;Instructions by type: Comparisons
 2793 D1:C928 -  -  -  -  
 2794 D1:C928 -  -  -  -  ;CMP - Compare Memory with Accumulator
 2795 D1:C928 -  -  -  -  ;A - M
 2796 D1:C928 -  -  -  -  ;N	Z	C	I	D	V
 2797 D1:C928 -  -  -  -  ;+	+	+	-	-	-
 2798 D1:C928 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2799 D1:C928 -  -  -  -  
 2800 D1:C928 -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2801 D1:C928 -  -  -  -  inst6502_cmp_imm:
 2802 D1:C928 ED 33 02 -      ADDCYC(2)
 2803 D1:C92B 46 -  -  -      ld  b,(hl)
 2804 D1:C92C C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2805 D1:C930 -  -  -  -  
 2806 D1:C930 -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2807 D1:C930 -  -  -  -  inst6502_cmp_zp:
 2808 D1:C930 ED 33 03 -      ADDCYC(3)
 2809 D1:C933 7E -  -  -      ld  a,(hl)
 2810 D1:C934 01 00 38 D0     ld  bc,ZEROPAGE
 2811 D1:C938 81 -  -  -      add a,c
 2812 D1:C939 4F -  -  -      ld  c,a
 2813 D1:C93A 0A -  -  -      ld  a,(bc)
 2814 D1:C93B 47 -  -  -      ld  b,a
 2815 D1:C93C C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2816 D1:C940 -  -  -  -  
 2817 D1:C940 -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2818 D1:C940 -  -  -  -  inst6502_cmp_zpx:
 2819 D1:C940 ED 33 04 -      ADDCYC(4)
 2820 D1:C943 7E -  -  -      ld  a,(hl)
 2821 D1:C944 01 00 38 D0     ld  bc,ZEROPAGE
 2822 D1:C948 81 -  -  -      add a,c
 2823 D1:C949 DD 86 01 -      add a,(ix+REGX)
 2824 D1:C94C 4F -  -  -      ld  c,a
 2825 D1:C94D 0A -  -  -      ld  a,(bc)
 2826 D1:C94E 47 -  -  -      ld  b,a
 2827 D1:C94F C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2828 D1:C953 -  -  -  -  
 2829 D1:C953 -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2830 D1:C953 -  -  -  -  inst6502_cmp_abs:
 2831 D1:C953 ED 33 04 -      ADDCYC(4)
 2832 D1:C956 CD 80 B5 D1     call subroutine6502_abs_split_start
 2833 D1:C95A E5 -  -  -      push hl
 2834 D1:C95B 50 -  -  -          ld  d,b
 2835 D1:C95C 79 -  -  -          ld  a,c
 2836 D1:C95D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2837 D1:C95F ED 4C -  -          mlt bc
 2838 D1:C961 21 00 40 D0         ld  hl,PAGETABLE
 2839 D1:C965 09 -  -  -          add hl,bc
 2840 D1:C966 ED 27 -  -          ld  hl,(hl)
 2841 D1:C968 06 00 -  -          ld  b,0
 2842 D1:C96A 4F -  -  -          ld  c,a
 2843 D1:C96B 09 -  -  -          add hl,bc   ;full address
 2844 D1:C96C 7E -  -  -          READ_ACCESS
 2845 D1:C96D E1 -  -  -      pop hl
 2846 D1:C96E 47 -  -  -      ld  b,a
 2847 D1:C96F C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2848 D1:C973 -  -  -  -  
 2849 D1:C973 -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2850 D1:C973 -  -  -  -  inst6502_cmp_absx:
 2851 D1:C973 ED 33 04 -      ADDCYC(4)
 2852 D1:C976 CD 80 B5 D1     call subroutine6502_abs_split_start
 2853 D1:C97A E5 -  -  -      push hl
 2854 D1:C97B 50 -  -  -          ld  d,b
 2855 D1:C97C 79 -  -  -          ld  a,c
 2856 D1:C97D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2857 D1:C97F ED 4C -  -          mlt bc
 2858 D1:C981 21 00 40 D0         ld  hl,PAGETABLE
 2859 D1:C985 09 -  -  -          add hl,bc
 2860 D1:C986 ED 27 -  -          ld  hl,(hl)
 2861 D1:C988 06 00 -  -          ld  b,0
 2862 D1:C98A DD 86 01 -          add a,(ix+REGX)
 2863 D1:C98D 4F -  -  -          ld  c,a
 2864 D1:C98E 30 04 -  -          jr  nc,+_
 2865 D1:C990 04 -  -  -          inc b
 2866 D1:C991 14 -  -  -          inc d
 2867 D1:C992 FD 23 -  -          ADDCYC(1)
 2868 D1:C994 09 -  -  -  _:      add hl,bc   ;full address
 2869 D1:C995 7E -  -  -          READ_ACCESS
 2870 D1:C996 E1 -  -  -      pop hl
 2871 D1:C997 47 -  -  -      ld  b,a
 2872 D1:C998 C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2873 D1:C99C -  -  -  -  
 2874 D1:C99C -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2875 D1:C99C -  -  -  -  inst6502_cmp_absy:
 2876 D1:C99C ED 33 04 -      ADDCYC(4)
 2877 D1:C99F CD 80 B5 D1     call subroutine6502_abs_split_start
 2878 D1:C9A3 E5 -  -  -      push hl
 2879 D1:C9A4 50 -  -  -          ld  d,b
 2880 D1:C9A5 79 -  -  -          ld  a,c
 2881 D1:C9A6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2882 D1:C9A8 ED 4C -  -          mlt bc
 2883 D1:C9AA 21 00 40 D0         ld  hl,PAGETABLE
 2884 D1:C9AE 09 -  -  -          add hl,bc
 2885 D1:C9AF ED 27 -  -          ld  hl,(hl)
 2886 D1:C9B1 06 00 -  -          ld  b,0
 2887 D1:C9B3 DD 86 02 -          add a,(ix+REGY)
 2888 D1:C9B6 4F -  -  -          ld  c,a
 2889 D1:C9B7 30 04 -  -          jr  nc,+_
 2890 D1:C9B9 04 -  -  -          inc b
 2891 D1:C9BA 14 -  -  -          inc d
 2892 D1:C9BB FD 23 -  -          ADDCYC(1)
 2893 D1:C9BD 09 -  -  -  _:      add hl,bc   ;full address
 2894 D1:C9BE 7E -  -  -          READ_ACCESS
 2895 D1:C9BF E1 -  -  -      pop hl
 2896 D1:C9C0 47 -  -  -      ld  b,a
 2897 D1:C9C1 C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2898 D1:C9C5 -  -  -  -  
 2899 D1:C9C5 -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2900 D1:C9C5 -  -  -  -  inst6502_cmp_indx:
 2901 D1:C9C5 ED 33 06 -      ADDCYC(6)
 2902 D1:C9C8 E5 -  -  -      push hl
 2903 D1:C9C9 7E -  -  -          ld  a,(hl)
 2904 D1:C9CA 21 00 38 D0         ld  hl,ZEROPAGE
 2905 D1:C9CE 85 -  -  -          add a,L
 2906 D1:C9CF DD 86 01 -          add a,(ix+REGX)
 2907 D1:C9D2 6F -  -  -          ld  L,a
 2908 D1:C9D3 7E -  -  -          ld  a,(hl)
 2909 D1:C9D4 2C -  -  -          inc L
 2910 D1:C9D5 56 -  -  -          ld  d,(hl)
 2911 D1:C9D6 42 -  -  -          ld  b,d
 2912 D1:C9D7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2913 D1:C9D9 ED 4C -  -          mlt bc
 2914 D1:C9DB 21 00 40 D0         ld  hl,PAGETABLE
 2915 D1:C9DF 09 -  -  -          add hl,bc
 2916 D1:C9E0 ED 27 -  -          ld  hl,(hl)
 2917 D1:C9E2 06 00 -  -          ld  b,0
 2918 D1:C9E4 4F -  -  -          ld  c,a
 2919 D1:C9E5 09 -  -  -          add hl,bc
 2920 D1:C9E6 7E -  -  -          READ_ACCESS
 2921 D1:C9E7 E1 -  -  -      pop hl
 2922 D1:C9E8 47 -  -  -      ld  b,a
 2923 D1:C9E9 C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2924 D1:C9ED -  -  -  -  
 2925 D1:C9ED -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2926 D1:C9ED -  -  -  -  inst6502_cmp_indy:
 2927 D1:C9ED ED 33 05 -      ADDCYC(5)
 2928 D1:C9F0 E5 -  -  -      push hl
 2929 D1:C9F1 7E -  -  -          ld  a,(hl)
 2930 D1:C9F2 21 00 38 D0         ld  hl,ZEROPAGE
 2931 D1:C9F6 85 -  -  -          add a,L
 2932 D1:C9F7 6F -  -  -          ld  L,a
 2933 D1:C9F8 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2934 D1:C9F9 2C -  -  -          inc L
 2935 D1:C9FA DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2936 D1:C9FD 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2937 D1:C9FE 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2938 D1:CA00 24 -  -  -          inc h
 2939 D1:CA01 FD 23 -  -          ADDCYC(1)
 2940 D1:CA03 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2941 D1:CA04 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2942 D1:CA06 ED 6C -  -          mlt hl          ;23.
 2943 D1:CA08 01 00 40 D0         ld  bc,PAGETABLE
 2944 D1:CA0C 09 -  -  -          add hl,bc
 2945 D1:CA0D ED 27 -  -          ld  hl,(hl)     ;address get.
 2946 D1:CA0F 01 00 00 00         ld  bc,0
 2947 D1:CA13 4F -  -  -          ld  c,a
 2948 D1:CA14 09 -  -  -          add hl,bc       ;Full address get.
 2949 D1:CA15 7E -  -  -          READ_ACCESS
 2950 D1:CA16 E1 -  -  -      pop hl
 2951 D1:CA17 47 -  -  -      ld  b,a
 2952 D1:CA18 C3 FE B5 D1     jp  subroutine6502_cmp_combined_end
 2953 D1:CA1C -  -  -  -  
 2954 D1:CA1C -  -  -  -  ;-----------------------------------------------------------------------------
 2955 D1:CA1C -  -  -  -  ;CPX - Compare Memory and Index X
 2956 D1:CA1C -  -  -  -  ;X - M
 2957 D1:CA1C -  -  -  -  ;N	Z	C	I	D	V
 2958 D1:CA1C -  -  -  -  ;+	+	+	-	-	-
 2959 D1:CA1C -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2960 D1:CA1C -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2961 D1:CA1C -  -  -  -  inst6502_cpx_imm:
 2962 D1:CA1C ED 33 02 -      ADDCYC(2)
 2963 D1:CA1F DD 7E 01 -      ld  a,(ix+REGX)
 2964 D1:CA22 BE -  -  -      cp  (hl)
 2965 D1:CA23 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2966 D1:CA3C C3 38 B3 D1     jp  i6502NextLoad
 2967 D1:CA40 -  -  -  -  
 2968 D1:CA40 -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2969 D1:CA40 -  -  -  -  inst6502_cpx_zp:
 2970 D1:CA40 ED 33 03 -      ADDCYC(3)
 2971 D1:CA43 7E -  -  -      ld  a,(hl)
 2972 D1:CA44 01 00 38 D0     ld  bc,ZEROPAGE
 2973 D1:CA48 81 -  -  -      add a,c
 2974 D1:CA49 4F -  -  -      ld  c,a
 2975 D1:CA4A 0A -  -  -      ld  a,(bc)
 2976 D1:CA4B 47 -  -  -      ld  b,a
 2977 D1:CA4C DD 7E 01 -      ld  a,(ix+REGX)
 2978 D1:CA4F B8 -  -  -      cp  b
 2979 D1:CA50 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2980 D1:CA69 C3 38 B3 D1     jp i6502NextLoad
 2981 D1:CA6D -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2982 D1:CA6D -  -  -  -  inst6502_cpx_abs:
 2983 D1:CA6D ED 33 04 -      ADDCYC(4)
 2984 D1:CA70 CD 80 B5 D1     call subroutine6502_abs_split_start
 2985 D1:CA74 E5 -  -  -      push hl
 2986 D1:CA75 50 -  -  -          ld  d,b
 2987 D1:CA76 79 -  -  -          ld  a,c
 2988 D1:CA77 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2989 D1:CA79 ED 4C -  -          mlt bc
 2990 D1:CA7B 21 00 40 D0         ld  hl,PAGETABLE
 2991 D1:CA7F 09 -  -  -          add hl,bc
 2992 D1:CA80 ED 27 -  -          ld  hl,(hl)
 2993 D1:CA82 06 00 -  -          ld  b,0
 2994 D1:CA84 4F -  -  -          ld  c,a
 2995 D1:CA85 09 -  -  -          add hl,bc   ;full address
 2996 D1:CA86 7E -  -  -          READ_ACCESS
 2997 D1:CA87 E1 -  -  -      pop hl
 2998 D1:CA88 47 -  -  -      ld  b,a
 2999 D1:CA89 DD 7E 01 -      ld  a,(ix+REGX)
 3000 D1:CA8C B8 -  -  -      cp  b
 3001 D1:CA8D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3002 D1:CAA6 C3 38 B3 D1     jp i6502NextLoad
 3003 D1:CAAA -  -  -  -  
 3004 D1:CAAA -  -  -  -  ;-----------------------------------------------------------------------------
 3005 D1:CAAA -  -  -  -  ;CPY - Compare Memory and Index Y
 3006 D1:CAAA -  -  -  -  ;Y - M
 3007 D1:CAAA -  -  -  -  ;N	Z	C	I	D	V
 3008 D1:CAAA -  -  -  -  ;+	+	+	-	-	-
 3009 D1:CAAA -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3010 D1:CAAA -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 3011 D1:CAAA -  -  -  -  inst6502_cpy_imm:
 3012 D1:CAAA ED 33 02 -      ADDCYC(2)
 3013 D1:CAAD DD 7E 02 -      ld  a,(ix+REGY)
 3014 D1:CAB0 BE -  -  -      cp  (hl)
 3015 D1:CAB1 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3016 D1:CACA C3 38 B3 D1     jp  i6502NextLoad
 3017 D1:CACE -  -  -  -  
 3018 D1:CACE -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 3019 D1:CACE -  -  -  -  inst6502_cpy_zp:
 3020 D1:CACE ED 33 03 -      ADDCYC(3)
 3021 D1:CAD1 7E -  -  -      ld  a,(hl)
 3022 D1:CAD2 01 00 38 D0     ld  bc,ZEROPAGE
 3023 D1:CAD6 81 -  -  -      add a,c
 3024 D1:CAD7 4F -  -  -      ld  c,a
 3025 D1:CAD8 0A -  -  -      ld  a,(bc)
 3026 D1:CAD9 47 -  -  -      ld  b,a
 3027 D1:CADA DD 7E 02 -      ld  a,(ix+REGY)
 3028 D1:CADD B8 -  -  -      cp  b
 3029 D1:CADE DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3030 D1:CAF7 C3 38 B3 D1     jp i6502NextLoad
 3031 D1:CAFB -  -  -  -  
 3032 D1:CAFB -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3033 D1:CAFB -  -  -  -  inst6502_cpy_abs:
 3034 D1:CAFB ED 33 04 -      ADDCYC(4)
 3035 D1:CAFE CD 80 B5 D1     call subroutine6502_abs_split_start
 3036 D1:CB02 E5 -  -  -      push hl
 3037 D1:CB03 50 -  -  -          ld  d,b
 3038 D1:CB04 79 -  -  -          ld  a,c
 3039 D1:CB05 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3040 D1:CB07 ED 4C -  -          mlt bc
 3041 D1:CB09 21 00 40 D0         ld  hl,PAGETABLE
 3042 D1:CB0D 09 -  -  -          add hl,bc
 3043 D1:CB0E ED 27 -  -          ld  hl,(hl)
 3044 D1:CB10 06 00 -  -          ld  b,0
 3045 D1:CB12 4F -  -  -          ld  c,a
 3046 D1:CB13 09 -  -  -          add hl,bc   ;full address
 3047 D1:CB14 7E -  -  -          READ_ACCESS
 3048 D1:CB15 E1 -  -  -      pop hl
 3049 D1:CB16 47 -  -  -      ld  b,a
 3050 D1:CB17 DD 7E 02 -      ld  a,(ix+REGY)
 3051 D1:CB1A B8 -  -  -      cp  b
 3052 D1:CB1B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3053 D1:CB34 C3 38 B3 D1     jp i6502NextLoad
 3054 D1:CB38 -  -  -  -  
 3055 D1:CB38 -  -  -  -  
 3056 D1:CB38 -  -  -  -  ;-----------------------------------------------------------------------------
 3057 D1:CB38 -  -  -  -  ;-----------------------------------------------------------------------------
 3058 D1:CB38 -  -  -  -  ;-----------------------------------------------------------------------------
 3059 D1:CB38 -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3060 D1:CB38 -  -  -  -  
 3061 D1:CB38 -  -  -  -  ;branch on C=0
 3062 D1:CB38 -  -  -  -  ;relative	BCC oper	90	2	2**
 3063 D1:CB38 -  -  -  -  inst6502_bcc:
 3064 D1:CB38 ED 33 02 -      ADDCYC(2)
 3065 D1:CB3B DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3066 D1:CB3F C2 38 B3 D1     jp  nz,i6502NextLoad
 3067 D1:CB43 C3 1F B6 D1     jp  subroutine6502_take_branch
 3068 D1:CB47 -  -  -  -  
 3069 D1:CB47 -  -  -  -  ;branch on C=1
 3070 D1:CB47 -  -  -  -  ;relative	BCS oper	B0	2	2**
 3071 D1:CB47 -  -  -  -  inst6502_bcs:
 3072 D1:CB47 ED 33 02 -      ADDCYC(2)
 3073 D1:CB4A DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3074 D1:CB4E CA 38 B3 D1     jp  z,i6502NextLoad
 3075 D1:CB52 C3 1F B6 D1     jp  subroutine6502_take_branch
 3076 D1:CB56 -  -  -  -  
 3077 D1:CB56 -  -  -  -  ;branch on Z=1
 3078 D1:CB56 -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3079 D1:CB56 -  -  -  -  inst6502_beq:
 3080 D1:CB56 ED 33 02 -      ADDCYC(2)
 3081 D1:CB59 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3082 D1:CB5D CA 38 B3 D1     jp  z,i6502NextLoad
 3083 D1:CB61 C3 1F B6 D1     jp  subroutine6502_take_branch
 3084 D1:CB65 -  -  -  -  
 3085 D1:CB65 -  -  -  -  ;branch on N=1
 3086 D1:CB65 -  -  -  -  ;relative	BMI oper	30	2	2**
 3087 D1:CB65 -  -  -  -  inst6502_bmi:
 3088 D1:CB65 ED 33 02 -      ADDCYC(2)
 3089 D1:CB68 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3090 D1:CB6C CA 38 B3 D1     jp  z,i6502NextLoad
 3091 D1:CB70 C3 1F B6 D1     jp  subroutine6502_take_branch
 3092 D1:CB74 -  -  -  -  
 3093 D1:CB74 -  -  -  -  
 3094 D1:CB74 -  -  -  -  ;branch on Z=0
 3095 D1:CB74 -  -  -  -  ;relative	BNE oper	D0	2	2**
 3096 D1:CB74 -  -  -  -  inst6502_bne:
 3097 D1:CB74 ED 33 02 -      ADDCYC(2)
 3098 D1:CB77 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3099 D1:CB7B C2 38 B3 D1     jp  nz,i6502NextLoad
 3100 D1:CB7F C3 1F B6 D1     jp  subroutine6502_take_branch
 3101 D1:CB83 -  -  -  -  
 3102 D1:CB83 -  -  -  -  ;branch on N=0
 3103 D1:CB83 -  -  -  -  ;relative	BPL oper	10	2	2**
 3104 D1:CB83 -  -  -  -  inst6502_bpl:
 3105 D1:CB83 ED 33 02 -      ADDCYC(2)
 3106 D1:CB86 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3107 D1:CB8A C2 38 B3 D1     jp  nz,i6502NextLoad
 3108 D1:CB8E C3 1F B6 D1     jp  subroutine6502_take_branch
 3109 D1:CB92 -  -  -  -  
 3110 D1:CB92 -  -  -  -  ;branch on V=0
 3111 D1:CB92 -  -  -  -  ;relative	BVC oper	50	2	2**
 3112 D1:CB92 -  -  -  -  inst6502_bvc:
 3113 D1:CB92 ED 33 02 -      ADDCYC(2)
 3114 D1:CB95 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3115 D1:CB99 C2 38 B3 D1     jp  nz,i6502NextLoad
 3116 D1:CB9D C3 1F B6 D1     jp  subroutine6502_take_branch
 3117 D1:CBA1 -  -  -  -  
 3118 D1:CBA1 -  -  -  -  ;branch on V=1
 3119 D1:CBA1 -  -  -  -  ;relative	BVS oper	70	2	2**
 3120 D1:CBA1 -  -  -  -  inst6502_bvs:
 3121 D1:CBA1 ED 33 02 -      ADDCYC(2)
 3122 D1:CBA4 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3123 D1:CBA8 CA 38 B3 D1     jp  z,i6502NextLoad
 3124 D1:CBAC C3 1F B6 D1     jp  subroutine6502_take_branch
 3125 D1:CBB0 -  -  -  -  
 3126 D1:CBB0 -  -  -  -  ;-----------------------------------------------------------------------------
 3127 D1:CBB0 -  -  -  -  ;-----------------------------------------------------------------------------
 3128 D1:CBB0 -  -  -  -  ;-----------------------------------------------------------------------------
 3129 D1:CBB0 -  -  -  -  ;Instructions by type: Interrupts
 3130 D1:CBB0 -  -  -  -  
 3131 D1:CBB0 -  -  -  -  ;BRK - Force Break
 3132 D1:CBB0 -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3133 D1:CBB0 -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3134 D1:CBB0 -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3135 D1:CBB0 -  -  -  -  ;(identifying a reason for the break.)
 3136 D1:CBB0 -  -  -  -  ;The status register will be pushed to the stack with the break
 3137 D1:CBB0 -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3138 D1:CBB0 -  -  -  -  ;instruction, the break flag will be ignored.
 3139 D1:CBB0 -  -  -  -  ;The interrupt disable flag is not set automatically.
 3140 D1:CBB0 -  -  -  -  ;
 3141 D1:CBB0 -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3142 D1:CBB0 -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3143 D1:CBB0 -  -  -  -  ;implied	BRK	00	1	7  
 3144 D1:CBB0 -  -  -  -  inst6502_brk:
 3145 D1:CBB0 ED 33 07 -      ADDCYC(7)
 3146 D1:CBB3 21 00 39 D0     ld  hl,STACKBASE
 3147 D1:CBB7 DD 6E 03 -      ld  L,(ix+REGSP)
 3148 D1:CBBA 52 DD 17 05     ld.s de,(ix+REGPC)
 3149 D1:CBBE 13 -  -  -      inc de      ;that extra spacer.
 3150 D1:CBBF 72 -  -  -      ld  (hl),d
 3151 D1:CBC0 2D -  -  -      dec L
 3152 D1:CBC1 73 -  -  -      ld  (hl),e
 3153 D1:CBC2 2D -  -  -      dec L
 3154 D1:CBC3 DD 7E 04 -      ld  a,(ix+REGSR)
 3155 D1:CBC6 CB D7 -  -      set SF_INT,a
 3156 D1:CBC8 77 -  -  -      ld  (hl),a
 3157 D1:CBC9 2D -  -  -      dec L
 3158 D1:CBCA DD 75 03 -      ld  (ix+REGSP),L
 3159 D1:CBCD B7 -  -  -      WAS_NMI_TRIGGERED
 3160 D1:CBCE 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3161 D1:CBD2 28 04 -  -      jr  z,+_
 3162 D1:CBD4 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3163 D1:CBD8 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3164 D1:CBDC ED 27 -  -      ld  hl,(hl)
 3165 D1:CBDE 09 -  -  -      add hl,bc
 3166 D1:CBDF ED 17 -  -      ld  de,(hl)
 3167 D1:CBE1 52 DD 1F 05     ld.s (ix+REGPC),de
 3168 D1:CBE5 C3 22 B3 D1     jp  i6502FirstLoad
 3169 D1:CBE9 -  -  -  -  
 3170 D1:CBE9 -  -  -  -  ;RTI - Return from Interrupt
 3171 D1:CBE9 -  -  -  -  ;The status register is pulled with the break flag
 3172 D1:CBE9 -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3173 D1:CBE9 -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3174 D1:CBE9 -  -  -  -  ;                      from stack
 3175 D1:CBE9 -  -  -  -  ;implied	RTI	40	1	6  
 3176 D1:CBE9 -  -  -  -  inst6502_rti:
 3177 D1:CBE9 21 00 39 D0     ld  hl,STACKBASE
 3178 D1:CBED DD 6E 03 -      ld  l,(ix+REGSP)
 3179 D1:CBF0 2C -  -  -      inc l
 3180 D1:CBF1 7E -  -  -      ld  a,(hl)
 3181 D1:CBF2 2C -  -  -      inc l
 3182 D1:CBF3 5E -  -  -      ld  e,(hl)
 3183 D1:CBF4 2C -  -  -      inc l
 3184 D1:CBF5 56 -  -  -      ld  d,(hl)
 3185 D1:CBF6 DD 75 03 -      ld  (ix+REGSP),l
 3186 D1:CBF9 52 DD 1F 05     ld.s (ix+REGPC),de
 3187 D1:CBFD DD 46 04 -      ld  b,(ix+REGSR)
 3188 D1:CC00 A8 -  -  -      xor a,b
 3189 D1:CC01 E6 DF -  -      and a,%11011111
 3190 D1:CC03 A8 -  -  -      xor a,b
 3191 D1:CC04 DD 77 04 -      ld  (ix+REGSR),a
 3192 D1:CC07 ED 33 06 -      ADDCYC(6)
 3193 D1:CC0A C3 22 B3 D1     jp  i6502FirstLoad
 3194 D1:CC0E -  -  -  -  
 3195 D1:CC0E -  -  -  -  
 3196 D1:CC0E -  -  -  -  
 3197 D1:CC0E -  -  -  -  ;-----------------------------------------------------------------------------
 3198 D1:CC0E -  -  -  -  ;-----------------------------------------------------------------------------
 3199 D1:CC0E -  -  -  -  ;-----------------------------------------------------------------------------
 3200 D1:CC0E -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3201 D1:CC0E -  -  -  -  
 3202 D1:CC0E -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3203 D1:CC0E -  -  -  -  inst6052_jmp_abs:
 3204 D1:CC0E 7E -  -  -      ld  a,(hl)
 3205 D1:CC0F 23 -  -  -      inc hl
 3206 D1:CC10 1C -  -  -      inc e
 3207 D1:CC11 20 0F -  -      jr  nz,+_
 3208 D1:CC13 DD 56 06 -      ld  d,(ix+REGPC+1)
 3209 D1:CC16 14 -  -  -      inc d
 3210 D1:CC17 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3211 D1:CC19 ED 5C -  -      mlt de
 3212 D1:CC1B 21 00 40 D0     ld  hl,PAGETABLE
 3213 D1:CC1F 19 -  -  -      add hl,de
 3214 D1:CC20 ED 27 -  -      ld  hl,(hl)
 3215 D1:CC22 DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3216 D1:CC25 7E -  -  -      ld  a,(hl)
 3217 D1:CC26 DD 77 06 -      ld  (ix+REGPC+1),a
 3218 D1:CC29 ED 33 03 -      ADDCYC(3)
 3219 D1:CC2C C3 22 B3 D1     jp i6502FirstLoad
 3220 D1:CC30 -  -  -  -  
 3221 D1:CC30 -  -  -  -  
 3222 D1:CC30 -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3223 D1:CC30 -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3224 D1:CC30 -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3225 D1:CC30 -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3226 D1:CC30 -  -  -  -  inst6502_jmp_indir:
 3227 D1:CC30 ED 33 05 -      ADDCYC(5)
 3228 D1:CC33 5E -  -  -      ld  e,(hl)
 3229 D1:CC34 7B -  -  -      ld  a,e
 3230 D1:CC35 23 -  -  -      inc hl
 3231 D1:CC36 3C -  -  -      inc a
 3232 D1:CC37 20 0F -  -      jr  nz,+_
 3233 D1:CC39 DD 46 06 -      ld  b,(ix+REGPC+1)
 3234 D1:CC3C 04 -  -  -      inc b
 3235 D1:CC3D 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3236 D1:CC3F ED 4C -  -      mlt bc
 3237 D1:CC41 21 00 40 D0     ld  hl,PAGETABLE
 3238 D1:CC45 09 -  -  -      add hl,bc
 3239 D1:CC46 ED 27 -  -      ld  hl,(hl)
 3240 D1:CC48 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3241 D1:CC49 1C -  -  -      inc e
 3242 D1:CC4A 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3243 D1:CC4C 1D -  -  -      dec e
 3244 D1:CC4D 4B -  -  -      ld  c,e
 3245 D1:CC4E 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3246 D1:CC50 ED 5C -  -      mlt de
 3247 D1:CC52 21 00 40 D0     ld  hl,PAGETABLE
 3248 D1:CC56 19 -  -  -      add hl,de
 3249 D1:CC57 ED 27 -  -      ld  hl,(hl)
 3250 D1:CC59 16 00 -  -      ld  d,0
 3251 D1:CC5B 59 -  -  -      ld  e,c
 3252 D1:CC5C 19 -  -  -      add hl,de   ;full real address reconstructed.
 3253 D1:CC5D ED 17 -  -      ld  de,(hl)
 3254 D1:CC5F 52 DD 1F 05     ld.s (ix+REGPC),de
 3255 D1:CC63 C3 22 B3 D1     jp  i6502FirstLoad
 3256 D1:CC67 -  -  -  -  inst6502_jmp_indir_splitread:
 3257 D1:CC67 -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3258 D1:CC67 -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3259 D1:CC67 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3260 D1:CC69 ED 5C -  -      mlt de
 3261 D1:CC6B 21 00 40 D0     ld  hl,PAGETABLE
 3262 D1:CC6F 19 -  -  -      add hl,de
 3263 D1:CC70 ED 27 -  -      ld  hl,(hl)
 3264 D1:CC72 56 -  -  -      ld  d,(hl)
 3265 D1:CC73 01 FF 00 00     ld  bc,255
 3266 D1:CC77 09 -  -  -      add hl,bc
 3267 D1:CC78 5E -  -  -      ld  e,(hl)
 3268 D1:CC79 52 DD 1F 05     ld.s (ix+REGPC),de
 3269 D1:CC7D C3 22 B3 D1     jp  i6502FirstLoad
 3270 D1:CC81 -  -  -  -  
 3271 D1:CC81 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3272 D1:CC81 -  -  -  -  ;    mlt de
 3273 D1:CC81 -  -  -  -  ;    ld  hl,PAGETABLE
 3274 D1:CC81 -  -  -  -  ;    add hl,de
 3275 D1:CC81 -  -  -  -  ;    ld  de,(hl) ;
 3276 D1:CC81 -  -  -  -  ;    ex  de,hl
 3277 D1:CC81 -  -  -  -  ;    ld  bc,255
 3278 D1:CC81 -  -  -  -  ;    add hl,bc
 3279 D1:CC81 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3280 D1:CC81 -  -  -  -  ;    ex  de,hl
 3281 D1:CC81 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3282 D1:CC81 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3283 D1:CC81 -  -  -  -  ;    ld  e,(hl)
 3284 D1:CC81 -  -  -  -  ;    ld  d,a
 3285 D1:CC81 -  -  -  -  ;    ld.s (ix+REGPC),de
 3286 D1:CC81 -  -  -  -  ;    jp  i6502FirstLoad
 3287 D1:CC81 -  -  -  -  
 3288 D1:CC81 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3289 D1:CC81 -  -  -  -  inst6502_jsr:
 3290 D1:CC81 DD 56 06 -      ld  d,(ix+REGPC+1)
 3291 D1:CC84 4E -  -  -      ld  c,(hl)
 3292 D1:CC85 23 -  -  -      inc hl
 3293 D1:CC86 1C -  -  -      inc e
 3294 D1:CC87 20 0E -  -      jr  nz,+_
 3295 D1:CC89 14 -  -  -      inc d
 3296 D1:CC8A 7A -  -  -      ld  a,d
 3297 D1:CC8B 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3298 D1:CC8D ED 5C -  -      mlt de
 3299 D1:CC8F 21 00 40 D0     ld  hl,PAGETABLE
 3300 D1:CC93 19 -  -  -      add hl,de
 3301 D1:CC94 ED 27 -  -      ld  hl,(hl)
 3302 D1:CC96 57 -  -  -      ld  d,a
 3303 D1:CC97 46 -  -  -  _:  ld  b,(hl)
 3304 D1:CC98 -  -  -  -      ;push de to 6502stack
 3305 D1:CC98 21 00 39 D0     ld  hl,STACKBASE
 3306 D1:CC9C DD 6E 03 -      ld  l,(ix+REGSP)
 3307 D1:CC9F 72 -  -  -      ld  (hl),d
 3308 D1:CCA0 2D -  -  -      dec l
 3309 D1:CCA1 73 -  -  -      ld  (hl),e
 3310 D1:CCA2 2D -  -  -      dec l
 3311 D1:CCA3 DD 75 03 -      ld  (ix+REGSP),l
 3312 D1:CCA6 52 DD 0F 05     ld.s (ix+REGPC),bc
 3313 D1:CCAA ED 33 06 -      ADDCYC(6)
 3314 D1:CCAD C3 22 B3 D1     jp  i6502FirstLoad
 3315 D1:CCB1 -  -  -  -  
 3316 D1:CCB1 -  -  -  -  ;implied	RTS	60	1	6
 3317 D1:CCB1 -  -  -  -  inst6502_rts:
 3318 D1:CCB1 21 00 39 D0     ld  hl,STACKBASE
 3319 D1:CCB5 DD 6E 03 -      ld  l,(ix+REGSP)
 3320 D1:CCB8 2C -  -  -      inc l
 3321 D1:CCB9 5E -  -  -      ld  e,(hl)
 3322 D1:CCBA 2C -  -  -      inc l
 3323 D1:CCBB 56 -  -  -      ld  d,(hl)
 3324 D1:CCBC DD 75 03 -      ld  (ix+REGSP),l
 3325 D1:CCBF 52 DD 1F 05     ld.s (ix+REGPC),de
 3326 D1:CCC3 ED 33 06 -      ADDCYC(6)
 3327 D1:CCC6 C3 22 B3 D1     jp  i6502FirstLoad
 3328 D1:CCCA -  -  -  -  
 3329 D1:CCCA -  -  -  -  
 3330 D1:CCCA -  -  -  -  ;-----------------------------------------------------------------------------
 3331 D1:CCCA -  -  -  -  ;-----------------------------------------------------------------------------
 3332 D1:CCCA -  -  -  -  ;-----------------------------------------------------------------------------
 3333 D1:CCCA -  -  -  -  ;Instructions by type: Miscellaneous
 3334 D1:CCCA -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3335 D1:CCCA -  -  -  -  ;
 3336 D1:CCCA -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3337 D1:CCCA -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3338 D1:CCCA -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3339 D1:CCCA -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3340 D1:CCCA -  -  -  -  ;any of the registers, other than the status register (SR).
 3341 D1:CCCA -  -  -  -  
 3342 D1:CCCA -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3343 D1:CCCA -  -  -  -  ;                                           M7	+	-	-	-	M6
 3344 D1:CCCA -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3345 D1:CCCA -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3346 D1:CCCA -  -  -  -  inst6502_bit_zp:
 3347 D1:CCCA ED 33 03 -      ADDCYC(3)
 3348 D1:CCCD 7E -  -  -      ld  a,(hl)
 3349 D1:CCCE 01 00 38 D0     ld  bc,ZEROPAGE
 3350 D1:CCD2 81 -  -  -      add a,c
 3351 D1:CCD3 4F -  -  -      ld  c,a
 3352 D1:CCD4 0A -  -  -      ld  a,(bc)
 3353 D1:CCD5 DD A6 00 -  _:  and a,(ix+REGA)
 3354 D1:CCD8 CB 8F -  -      res SF_ZERO,a
 3355 D1:CCDA 20 02 -  -      jr  nz,$+4
 3356 D1:CCDC CB CF -  -      set SF_ZERO,a
 3357 D1:CCDE DD 46 04 -      ld  b,(ix+REGSR)
 3358 D1:CCE1 A8 -  -  -      xor a,b
 3359 D1:CCE2 E6 C2 -  -      and a,%11000010
 3360 D1:CCE4 A8 -  -  -      xor a,b
 3361 D1:CCE5 DD 77 04 -      ld  (ix+REGSR),a
 3362 D1:CCE8 C3 38 B3 D1     jp  i6502NextLoad
 3363 D1:CCEC -  -  -  -  
 3364 D1:CCEC -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3365 D1:CCEC -  -  -  -  inst6502_bit_abs:
 3366 D1:CCEC ED 33 04 -      ADDCYC(4)
 3367 D1:CCEF CD 80 B5 D1     call subroutine6502_abs_split_start
 3368 D1:CCF3 E5 -  -  -      push hl
 3369 D1:CCF4 50 -  -  -          ld  d,b
 3370 D1:CCF5 79 -  -  -          ld  a,c
 3371 D1:CCF6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3372 D1:CCF8 ED 4C -  -          mlt bc
 3373 D1:CCFA 21 00 40 D0         ld  hl,PAGETABLE
 3374 D1:CCFE 09 -  -  -          add hl,bc
 3375 D1:CCFF ED 27 -  -          ld  hl,(hl)
 3376 D1:CD01 06 00 -  -          ld  b,0
 3377 D1:CD03 4F -  -  -          ld  c,a
 3378 D1:CD04 09 -  -  -          add hl,bc   ;full address
 3379 D1:CD05 7E -  -  -          READ_ACCESS
 3380 D1:CD06 E1 -  -  -      pop hl
 3381 D1:CD07 18 CC -  -      jr  -_    
 3382 D1:CD09 -  -  -  -  
 3383 D1:CD09 -  -  -  -  ;NOP - No Operation
 3384 D1:CD09 -  -  -  -  ;implied	NOP	EA	1	2  
 3385 D1:CD09 -  -  -  -  inst6502_nop:
 3386 D1:CD09 ED 33 02 -      ADDCYC(2)
 3387 D1:CD0C C3 51 B3 D1     jp  i6502FinishLoad
 3388 D1:CD10 -  -  -  -  
 3389 D1:CD10 -  -  -  -  ;-----------------------------------------------------------------------------
 3390 D1:CD10 -  -  -  -  ;-----------------------------------------------------------------------------
 3391 D1:CD10 -  -  -  -  ;-----------------------------------------------------------------------------
 3392 D1:CD10 -  -  -  -  ;Instruction not mapped: Terminate emulation
 3393 D1:CD10 -  -  -  -  inst6502_:
 3394 D1:CD10 C9 -  -  -      ret
 3395 D1:CD11 -  -  -  -  
 3396 D1:CD11 -  -  -  -  inst6502_halt:
 3397 D1:CD11 18 FE -  -      jr $
 3398 D1:CD13 C3 51 B3 D1     jp i6502FinishLoad
 3399 D1:CD17 -  -  -  -  
 3400 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3401 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3402 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3403 D1:CD17 -  -  -  -  ;Instructions by type: Illegal Instructions
 3404 D1:CD17 -  -  -  -  
 3405 D1:CD17 -  -  -  -  
 3406 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3407 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3408 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3412 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3413 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3414 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3415 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3416 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3417 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3418 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3419 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3423 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3424 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3425 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3426 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3427 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3428 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3429 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3430 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3431 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3432 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3433 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3434 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3435 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3436 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3437 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3438 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3439 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3440 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3441 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3442 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3443 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3444 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3445 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3446 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3447 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3448 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3449 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3450 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3451 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3452 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3453 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3454 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3455 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3456 D1:CD17 -  -  -  -  ;-----------------------------------------------------------------------------
 3457 D1:CD17 -  -  -  -  
 3458 D1:CD17 -  -  -  -  inst6502_instruction_set:
 3459 D1:CD17 B0 CB D1 -  .dl	inst6502_brk					;00
 3460 D1:CD1A 51 C4 D1 -  .dl	inst6502_ora_indx				;01
 3461 D1:CD1D 10 CD D1 -  .dl	inst6502_				;02
 3462 D1:CD20 10 CD D1 -  .dl	inst6502_				;03
 3463 D1:CD23 10 CD D1 -  .dl	inst6502_				;04
 3464 D1:CD26 44 C3 D1 -  .dl	inst6502_ora_zp					;05
 3465 D1:CD29 FC C4 D1 -  .dl	inst6502_asl_zp					;06
 3466 D1:CD2C 10 CD D1 -  .dl	inst6502_				;07
 3467 D1:CD2F D9 BB D1 -  .dl	inst6502_php					;08
 3468 D1:CD32 23 C3 D1 -  .dl	inst6502_ora_imm				;09
 3469 D1:CD35 D8 C4 D1 -  .dl	inst6502_asl					;0A
 3470 D1:CD38 10 CD D1 -  .dl	inst6502_				;0B
 3471 D1:CD3B 10 CD D1 -  .dl	inst6502_				;0C
 3472 D1:CD3E 97 C3 D1 -  .dl	inst6502_ora_abs				;0D
 3473 D1:CD41 55 C5 D1 -  .dl	inst6502_asl_abs				;0E
 3474 D1:CD44 10 CD D1 -  .dl	inst6502_				;0F
 3475 D1:CD47 83 CB D1 -  .dl	inst6502_bpl					;10
 3476 D1:CD4A 91 C4 D1 -  .dl	inst6502_ora_indy				;11
 3477 D1:CD4D 11 CD D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3478 D1:CD50 10 CD D1 -  .dl	inst6502_				;13
 3479 D1:CD53 10 CD D1 -  .dl	inst6502_				;14
 3480 D1:CD56 6C C3 D1 -  .dl	inst6502_ora_zpx				;15
 3481 D1:CD59 27 C5 D1 -  .dl	inst6502_asl_zpx				;16
 3482 D1:CD5C 10 CD D1 -  .dl	inst6502_				;17
 3483 D1:CD5F F0 C8 D1 -  .dl	inst6502_clc					;18
 3484 D1:CD62 10 C4 D1 -  .dl	inst6502_ora_absy				;19
 3485 D1:CD65 10 CD D1 -  .dl	inst6502_				;1A
 3486 D1:CD68 10 CD D1 -  .dl	inst6502_				;1B
 3487 D1:CD6B 10 CD D1 -  .dl	inst6502_				;1C
 3488 D1:CD6E CF C3 D1 -  .dl	inst6502_ora_absx				;1D
 3489 D1:CD71 92 C5 D1 -  .dl	inst6502_asl_absx				;1E
 3490 D1:CD74 10 CD D1 -  .dl	inst6502_				;1F
 3491 D1:CD77 81 CC D1 -  .dl	inst6502_jsr					;20
 3492 D1:CD7A E7 C0 D1 -  .dl	inst6502_and_indx				;21
 3493 D1:CD7D 10 CD D1 -  .dl	inst6502_				;22
 3494 D1:CD80 10 CD D1 -  .dl	inst6502_				;23
 3495 D1:CD83 CA CC D1 -  .dl	inst6502_bit_zp					;24
 3496 D1:CD86 DA BF D1 -  .dl	inst6502_and_zp					;25
 3497 D1:CD89 FC C6 D1 -  .dl	inst6502_rol_zp					;26
 3498 D1:CD8C 10 CD D1 -  .dl	inst6502_				;27
 3499 D1:CD8F 14 BC D1 -  .dl	inst6502_plp					;28
 3500 D1:CD92 B9 BF D1 -  .dl	inst6502_and_imm				;29
 3501 D1:CD95 D4 C6 D1 -  .dl	inst6502_rol					;2A
 3502 D1:CD98 10 CD D1 -  .dl	inst6502_				;2B
 3503 D1:CD9B EC CC D1 -  .dl	inst6502_bit_abs				;2C
 3504 D1:CD9E 2D C0 D1 -  .dl	inst6502_and_abs				;2D
 3505 D1:CDA1 5B C7 D1 -  .dl	inst6502_rol_abs				;2E
 3506 D1:CDA4 10 CD D1 -  .dl	inst6502_				;2F
 3507 D1:CDA7 65 CB D1 -  .dl	inst6502_bmi					;30
 3508 D1:CDAA 27 C1 D1 -  .dl	inst6502_and_indy				;31
 3509 D1:CDAD 10 CD D1 -  .dl	inst6502_				;32
 3510 D1:CDB0 10 CD D1 -  .dl	inst6502_				;33
 3511 D1:CDB3 10 CD D1 -  .dl	inst6502_				;34
 3512 D1:CDB6 02 C0 D1 -  .dl	inst6502_and_zpx				;35
 3513 D1:CDB9 2A C7 D1 -  .dl	inst6502_rol_zpx				;36
 3514 D1:CDBC 10 CD D1 -  .dl	inst6502_						;37
 3515 D1:CDBF 10 C9 D1 -  .dl	inst6502_sec					;38
 3516 D1:CDC2 A6 C0 D1 -  .dl	inst6502_and_absy				;39
 3517 D1:CDC5 10 CD D1 -  .dl	inst6502_			;3A
 3518 D1:CDC8 10 CD D1 -  .dl	inst6502_			;3B
 3519 D1:CDCB 10 CD D1 -  .dl	inst6502_			;3C
 3520 D1:CDCE 65 C0 D1 -  .dl	inst6502_and_absx				;3D
 3521 D1:CDD1 9B C7 D1 -  .dl	inst6502_rol_absx				;3E
 3522 D1:CDD4 10 CD D1 -  .dl	inst6502_			;3F
 3523 D1:CDD7 B1 CC D1 -  .dl	inst6502_rts					;40
 3524 D1:CDDA 9C C2 D1 -  .dl	inst6502_eor_indx				;41
 3525 D1:CDDD 10 CD D1 -  .dl	inst6502_			;42
 3526 D1:CDE0 10 CD D1 -  .dl	inst6502_			;43
 3527 D1:CDE3 10 CD D1 -  .dl	inst6502_			;44
 3528 D1:CDE6 8F C1 D1 -  .dl	inst6502_eor_zp					;45
 3529 D1:CDE9 FA C5 D1 -  .dl	inst6502_lsr_zp					;46
 3530 D1:CDEC 10 CD D1 -  .dl	inst6502_			;47
 3531 D1:CDEF C6 BB D1 -  .dl	inst6502_pha					;48
 3532 D1:CDF2 6E C1 D1 -  .dl	inst6502_eor_imm				;49
 3533 D1:CDF5 D6 C5 D1 -  .dl	inst6502_lsr					;4A
 3534 D1:CDF8 10 CD D1 -  .dl	inst6502_			;4B
 3535 D1:CDFB 0E CC D1 -  .dl	inst6052_jmp_abs				;4C
 3536 D1:CDFE E2 C1 D1 -  .dl	inst6502_eor_abs				;4D
 3537 D1:CE01 53 C6 D1 -  .dl	inst6502_lsr_abs				;4E
 3538 D1:CE04 10 CD D1 -  .dl	inst6502_			;4F
 3539 D1:CE07 92 CB D1 -  .dl	inst6502_bvc					;50
 3540 D1:CE0A DC C2 D1 -  .dl	inst6502_eor_indy				;51
 3541 D1:CE0D 10 CD D1 -  .dl	inst6502_			;52
 3542 D1:CE10 10 CD D1 -  .dl	inst6502_			;53
 3543 D1:CE13 10 CD D1 -  .dl	inst6502_			;54
 3544 D1:CE16 B7 C1 D1 -  .dl	inst6502_eor_zpx				;55
 3545 D1:CE19 25 C6 D1 -  .dl	inst6502_lsr_zpx				;56
 3546 D1:CE1C 10 CD D1 -  .dl	inst6502_			;57
 3547 D1:CE1F 00 C9 D1 -  .dl	inst6502_cli					;58
 3548 D1:CE22 5B C2 D1 -  .dl	inst6502_eor_absy				;59
 3549 D1:CE25 10 CD D1 -  .dl	inst6502_			;5A
 3550 D1:CE28 10 CD D1 -  .dl	inst6502_			;5B
 3551 D1:CE2B 10 CD D1 -  .dl	inst6502_			;5C
 3552 D1:CE2E 1A C2 D1 -  .dl	inst6502_eor_absx				;5D
 3553 D1:CE31 90 C6 D1 -  .dl	inst6502_lsr_absx				;5E
 3554 D1:CE34 10 CD D1 -  .dl	inst6502_			;5F
 3555 D1:CE37 B1 CC D1 -  .dl	inst6502_rts					;60
 3556 D1:CE3A 74 BE D1 -  .dl	inst6502_adc_indx				;61
 3557 D1:CE3D 10 CD D1 -  .dl	inst6502_			;62
 3558 D1:CE40 10 CD D1 -  .dl	inst6502_			;63
 3559 D1:CE43 10 CD D1 -  .dl	inst6502_			;64
 3560 D1:CE46 DF BD D1 -  .dl	inst6502_adc_zp					;65
 3561 D1:CE49 0A C8 D1 -  .dl	inst6502_ror_zp					;66
 3562 D1:CE4C 10 CD D1 -  .dl	inst6502_			;67
 3563 D1:CE4F EE BB D1 -  .dl	inst6502_pla					;68
 3564 D1:CE52 D7 BD D1 -  .dl	inst6502_adc_imm				;69
 3565 D1:CE55 E2 C7 D1 -  .dl	inst6502_ror					;6A
 3566 D1:CE58 10 CD D1 -  .dl	inst6502_			;6B
 3567 D1:CE5B 30 CC D1 -  .dl	inst6502_jmp_indir				;6C
 3568 D1:CE5E 02 BE D1 -  .dl	inst6502_adc_abs				;6D
 3569 D1:CE61 69 C8 D1 -  .dl	inst6502_ror_abs				;6E
 3570 D1:CE64 10 CD D1 -  .dl	inst6502_			;6F
 3571 D1:CE67 A1 CB D1 -  .dl	inst6502_bvs					;70
 3572 D1:CE6A 9C BE D1 -  .dl	inst6502_adc_indy				;71
 3573 D1:CE6D 10 CD D1 -  .dl	inst6502_			;72
 3574 D1:CE70 10 CD D1 -  .dl	inst6502_			;73
 3575 D1:CE73 10 CD D1 -  .dl	inst6502_			;74
 3576 D1:CE76 EF BD D1 -  .dl	inst6502_adc_zpx				;75
 3577 D1:CE79 38 C8 D1 -  .dl	inst6502_ror_zpx				;76
 3578 D1:CE7C 10 CD D1 -  .dl	inst6502_			;77
 3579 D1:CE7F 20 C9 D1 -  .dl	inst6502_sei					;78
 3580 D1:CE82 4B BE D1 -  .dl	inst6502_adc_absy				;79
 3581 D1:CE85 10 CD D1 -  .dl	inst6502_			;7A
 3582 D1:CE88 10 CD D1 -  .dl	inst6502_			;7B
 3583 D1:CE8B 10 CD D1 -  .dl	inst6502_			;7C
 3584 D1:CE8E 22 BE D1 -  .dl	inst6502_adc_absx				;7D
 3585 D1:CE91 A9 C8 D1 -  .dl	inst6502_ror_absx				;7E
 3586 D1:CE94 10 CD D1 -  .dl	inst6502_			;7F
 3587 D1:CE97 10 CD D1 -  .dl	inst6502_			;80
 3588 D1:CE9A 2E BA D1 -  .dl	inst6502_sta_indx				;81
 3589 D1:CE9D 10 CD D1 -  .dl	inst6502_			;82
 3590 D1:CEA0 10 CD D1 -  .dl	inst6502_			;83
 3591 D1:CEA3 D0 BA D1 -  .dl	inst6502_sty_zp					;84
 3592 D1:CEA6 93 B9 D1 -  .dl	inst6502_sta_zp					;85
 3593 D1:CEA9 87 BA D1 -  .dl	inst6502_stx_zp					;86
 3594 D1:CEAC 10 CD D1 -  .dl	inst6502_			;87
 3595 D1:CEAF 0A BD D1 -  .dl	inst6502_dey					;88
 3596 D1:CEB2 10 CD D1 -  .dl	inst6502_			;89
 3597 D1:CEB5 79 BB D1 -  .dl	inst6502_txa					;8A
 3598 D1:CEB8 10 CD D1 -  .dl	inst6502_			;8B
 3599 D1:CEBB F7 BA D1 -  .dl	inst6502_sty_abs				;8C
 3600 D1:CEBE BA B9 D1 -  .dl	inst6502_sta_abs				;8D
 3601 D1:CEC1 AE BA D1 -  .dl	inst6502_stx_abs				;8E
 3602 D1:CEC4 10 CD D1 -  .dl	inst6502_			;8F
 3603 D1:CEC7 38 CB D1 -  .dl	inst6502_bcc					;90
 3604 D1:CECA 58 BA D1 -  .dl	inst6502_sta_indy				;91
 3605 D1:CECD 10 CD D1 -  .dl	inst6502_			;92
 3606 D1:CED0 10 CD D1 -  .dl	inst6502_			;93
 3607 D1:CED3 E2 BA D1 -  .dl	inst6502_sty_zpx				;94
 3608 D1:CED6 A5 B9 D1 -  .dl	inst6502_sta_zpx				;95
 3609 D1:CED9 99 BA D1 -  .dl	inst6502_stx_zpy				;96
 3610 D1:CEDC 10 CD D1 -  .dl	inst6502_			;97
 3611 D1:CEDF A6 BB D1 -  .dl	inst6502_tya					;98
 3612 D1:CEE2 05 BA D1 -  .dl	inst6502_sta_absy				;99
 3613 D1:CEE5 99 BB D1 -  .dl	inst6502_txs					;9A
 3614 D1:CEE8 10 CD D1 -  .dl	inst6502_			;9B
 3615 D1:CEEB 10 CD D1 -  .dl	inst6502_			;9C
 3616 D1:CEEE DC B9 D1 -  .dl	inst6502_sta_absx				;9D
 3617 D1:CEF1 10 CD D1 -  .dl	inst6502_			;9E
 3618 D1:CEF4 10 CD D1 -  .dl	inst6502_			;9F
 3619 D1:CEF7 B5 B8 D1 -  .dl	inst6502_ldy_imm				;A0
 3620 D1:CEFA 56 B7 D1 -  .dl	inst6502_lda_indx				;A1
 3621 D1:CEFD D7 B7 D1 -  .dl	inst6502_ldx_imm				;A2
 3622 D1:CF00 10 CD D1 -  .dl	inst6502_			;A3
 3623 D1:CF03 D3 B8 D1 -  .dl	inst6502_ldy_zp					;A4
 3624 D1:CF06 58 B6 D1 -  .dl	inst6502_lda_zp					;A5
 3625 D1:CF09 F5 B7 D1 -  .dl	inst6502_ldx_zp					;A6
 3626 D1:CF0C 10 CD D1 -  .dl	inst6502_			;A7
 3627 D1:CF0F 39 BB D1 -  .dl	inst6502_tay					;A8
 3628 D1:CF12 3A B6 D1 -  .dl	inst6502_lda_imm				;A9
 3629 D1:CF15 19 BB D1 -  .dl	inst6502_tax					;AA
 3630 D1:CF18 10 CD D1 -  .dl	inst6502_			;AB
 3631 D1:CF1B 20 B9 D1 -  .dl	inst6502_ldy_abs				;AC
 3632 D1:CF1E A5 B6 D1 -  .dl	inst6502_lda_abs				;AD
 3633 D1:CF21 42 B8 D1 -  .dl	inst6502_ldx_abs				;AE
 3634 D1:CF24 10 CD D1 -  .dl	inst6502_			;AF
 3635 D1:CF27 47 CB D1 -  .dl	inst6502_bcs					;B0
 3636 D1:CF2A 93 B7 D1 -  .dl	inst6502_lda_indy				;B1
 3637 D1:CF2D 10 CD D1 -  .dl	inst6502_			;B2
 3638 D1:CF30 10 CD D1 -  .dl	inst6502_			;B3
 3639 D1:CF33 F8 B8 D1 -  .dl	inst6502_ldy_zpx				;B4
 3640 D1:CF36 7D B6 D1 -  .dl	inst6502_lda_zpx				;B5
 3641 D1:CF39 1A B8 D1 -  .dl	inst6502_ldx_zpy				;B6
 3642 D1:CF3C 10 CD D1 -  .dl	inst6502_			;B7
 3643 D1:CF3F 08 C9 D1 -  .dl	inst6502_clv					;B8
 3644 D1:CF42 18 B7 D1 -  .dl	inst6502_lda_absy				;B9
 3645 D1:CF45 59 BB D1 -  .dl	inst6502_tsx					;BA
 3646 D1:CF48 10 CD D1 -  .dl	inst6502_			;BB
 3647 D1:CF4B 55 B9 D1 -  .dl	inst6502_ldy_absx				;BC
 3648 D1:CF4E DA B6 D1 -  .dl	inst6502_lda_absx				;BD
 3649 D1:CF51 77 B8 D1 -  .dl	inst6502_ldx_absy				;BE
 3650 D1:CF54 10 CD D1 -  .dl	inst6502_			;BF
 3651 D1:CF57 AA CA D1 -  .dl	inst6502_cpy_imm				;C0
 3652 D1:CF5A C5 C9 D1 -  .dl	inst6502_cmp_indx				;C1
 3653 D1:CF5D 10 CD D1 -  .dl	inst6502_			;C2
 3654 D1:CF60 10 CD D1 -  .dl	inst6502_			;C3
 3655 D1:CF63 CE CA D1 -  .dl	inst6502_cpy_zp					;C4
 3656 D1:CF66 30 C9 D1 -  .dl	inst6502_cmp_zp					;C5
 3657 D1:CF69 2E BC D1 -  .dl	inst6502_dec_zp					;C6
 3658 D1:CF6C 10 CD D1 -  .dl	inst6502_			;C7
 3659 D1:CF6F 14 BD D1 -  .dl	inst6502_iny					;C8
 3660 D1:CF72 28 C9 D1 -  .dl	inst6502_cmp_imm				;C9
 3661 D1:CF75 EC BC D1 -  .dl	inst6502_dex					;CA
 3662 D1:CF78 10 CD D1 -  .dl	inst6502_			;CB
 3663 D1:CF7B FB CA D1 -  .dl	inst6502_cpy_abs				;CC
 3664 D1:CF7E 53 C9 D1 -  .dl	inst6502_cmp_abs				;CD
 3665 D1:CF81 79 BC D1 -  .dl	inst6502_dec_abs				;CE
 3666 D1:CF84 10 CD D1 -  .dl	inst6502_			;CF
 3667 D1:CF87 74 CB D1 -  .dl	inst6502_bne					;D0
 3668 D1:CF8A ED C9 D1 -  .dl	inst6502_cmp_indy				;D1
 3669 D1:CF8D 10 CD D1 -  .dl	inst6502_			;D2
 3670 D1:CF90 10 CD D1 -  .dl	inst6502_			;D3
 3671 D1:CF93 10 CD D1 -  .dl	inst6502_			;D4
 3672 D1:CF96 40 C9 D1 -  .dl	inst6502_cmp_zpx				;D5
 3673 D1:CF99 52 BC D1 -  .dl	inst6502_dec_zpx				;D6
 3674 D1:CF9C 10 CD D1 -  .dl	inst6502_			;D7
 3675 D1:CF9F F8 C8 D1 -  .dl	inst6502_cld					;D8
 3676 D1:CFA2 9C C9 D1 -  .dl	inst6502_cmp_absy				;D9
 3677 D1:CFA5 10 CD D1 -  .dl	inst6502_			;DA
 3678 D1:CFA8 10 CD D1 -  .dl	inst6502_			;DB
 3679 D1:CFAB 10 CD D1 -  .dl	inst6502_			;DC
 3680 D1:CFAE 73 C9 D1 -  .dl	inst6502_cmp_absx				;DD
 3681 D1:CFB1 AF BC D1 -  .dl	inst6502_dec_absx				;DE
 3682 D1:CFB4 10 CD D1 -  .dl	inst6502_			;DF
 3683 D1:CFB7 1C CA D1 -  .dl	inst6502_cpx_imm				;E0
 3684 D1:CFBA 65 BF D1 -  .dl	inst6502_sbc_indx				;E1
 3685 D1:CFBD 10 CD D1 -  .dl	inst6502_			;E2
 3686 D1:CFC0 10 CD D1 -  .dl	inst6502_			;E3
 3687 D1:CFC3 40 CA D1 -  .dl	inst6502_cpx_zp					;E4
 3688 D1:CFC6 D0 BE D1 -  .dl	inst6502_sbc_zp					;E5
 3689 D1:CFC9 19 BD D1 -  .dl	inst6502_inc_zp					;E6
 3690 D1:CFCC 10 CD D1 -  .dl	inst6502_			;E7
 3691 D1:CFCF 0F BD D1 -  .dl	inst6502_inx					;E8
 3692 D1:CFD2 C8 BE D1 -  .dl	inst6502_sbc_imm				;E9
 3693 D1:CFD5 09 CD D1 -  .dl	inst6502_nop					;EA
 3694 D1:CFD8 10 CD D1 -  .dl	inst6502_			;EB
 3695 D1:CFDB 6D CA D1 -  .dl	inst6502_cpx_abs				;EC
 3696 D1:CFDE F3 BE D1 -  .dl	inst6502_sbc_abs				;ED
 3697 D1:CFE1 64 BD D1 -  .dl	inst6502_inc_abs				;EE
 3698 D1:CFE4 10 CD D1 -  .dl	inst6502_			;EF
 3699 D1:CFE7 56 CB D1 -  .dl	inst6502_beq					;F0
 3700 D1:CFEA 8D BF D1 -  .dl	inst6502_sbc_indy				;F1
 3701 D1:CFED 10 CD D1 -  .dl	inst6502_			;F2
 3702 D1:CFF0 10 CD D1 -  .dl	inst6502_			;F3
 3703 D1:CFF3 10 CD D1 -  .dl	inst6502_			;F4
 3704 D1:CFF6 E0 BE D1 -  .dl	inst6502_sbc_zpx				;F5
 3705 D1:CFF9 3D BD D1 -  .dl	inst6502_inc_zpx				;F6
 3706 D1:CFFC 10 CD D1 -  .dl	inst6502_			;F7
 3707 D1:CFFF 18 C9 D1 -  .dl	inst6502_sed					;F8
 3708 D1:D002 3C BF D1 -  .dl	inst6502_sbc_absy				;F9
 3709 D1:D005 10 CD D1 -  .dl	inst6502_			;FA
 3710 D1:D008 10 CD D1 -  .dl	inst6502_			;FB
 3711 D1:D00B 10 CD D1 -  .dl	inst6502_			;FC
 3712 D1:D00E 13 BF D1 -  .dl	inst6502_sbc_absx				;FD
 3713 D1:D011 9A BD D1 -  .dl	inst6502_inc_absx				;FE
 3714 D1:D014 10 CD D1 -  .dl	inst6502_			;FF
 3715 D1:D017 -  -  -  -  
 3716 D1:D017 -  -  -  -  
 3717 D1:D017 -  -  -  -  
 3718 D1:D017 -  -  -  -  
 3719 D1:D017 -  -  -  -  
 3720 D1:D017 -  -  -  -  
 3721 D1:D017 -  -  -  -  
 3722 D1:D017 -  -  -  -  
 3723 D1:D017 -  -  -  -  
 3724 D1:D017 -  -  -  -  
 3725 D1:D017 -  -  -  -  
 3726 D1:D017 -  -  -  -  
 3727 D1:D017 -  -  -  -  
Listing for file "main.z80"
  631 D1:D017 -  -  -  -  #include "debug.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug.z80"
    1 D1:D017 -  -  -  -  ;This has all the tables needed to drive the debugger.
    2 D1:D017 -  -  -  -  #include "debug_itab.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug_itab.z80"
    1 D1:D017 -  -  -  -  inst6502_opcode_width_table:
    2 D1:D017 01 -  -  -  .db 1    ;0: 
    3 D1:D018 02 -  -  -  .db 2    ;1: zpg,X
    4 D1:D019 03 -  -  -  .db 3    ;2: ind
    5 D1:D01A 03 -  -  -  .db 3    ;3: abs
    6 D1:D01B 03 -  -  -  .db 3    ;4: abs,X
    7 D1:D01C 02 -  -  -  .db 2    ;5: X,ind
    8 D1:D01D 01 -  -  -  .db 1    ;6: A
    9 D1:D01E 02 -  -  -  .db 2    ;7: zpg
   10 D1:D01F 02 -  -  -  .db 2    ;8: rel
   11 D1:D020 02 -  -  -  .db 2    ;9: #
   12 D1:D021 01 -  -  -  .db 1    ;10: impl
   13 D1:D022 02 -  -  -  .db 2    ;11: ind,Y
   14 D1:D023 03 -  -  -  .db 3    ;12: abs,Y
   15 D1:D024 02 -  -  -  .db 2    ;13: zpg,Y
   16 D1:D025 -  -  -  -  
   17 D1:D025 -  -  -  -  
   18 D1:D025 -  -  -  -  ;Note: 1=1byteOper, 2=2byteOper, -=1byteRelOper. Other chrs are literal
   19 D1:D025 -  -  -  -  
   20 D1:D025 -  -  -  -  inst6502_disassembler:
   21 D1:D025 01 -  -  -  .db 1,""  ;
   22 D1:D026 04 31 2C 58 .db 4,"1,X"  ;
   23 D1:D02A 04 28 32 29 .db 4,"(2)"  ;
   24 D1:D02E 02 32 -  -  .db 2,"2"  ;
   25 D1:D030 04 32 2C 58 .db 4,"2,X"  ;
   26 D1:D034 06 28 31 2C 
              58 29 -  -  .db 6,"(1,X)"  ;
   27 D1:D03A 02 41 -  -  .db 2,"A"  ;
   28 D1:D03C 02 31 -  -  .db 2,"1"  ;
   29 D1:D03E 02 2D -  -  .db 2,"-"  ;
   30 D1:D040 03 23 31 -  .db 3,"#1"  ;
   31 D1:D043 01 -  -  -  .db 1,""  ;
   32 D1:D044 06 28 31 29 
              2C 59 -  -  .db 6,"(1),Y"  ;
   33 D1:D04A 04 32 2C 59 .db 4,"2,Y"  ;
   34 D1:D04E 04 31 2C 59 .db 4,"1,Y"  ;
   35 D1:D052 -  -  -  -  
   36 D1:D052 -  -  -  -  inst6502_disassembly_table:
   37 D1:D052 42 52 4B 0A .db "BRK", 10     ;0x00
   38 D1:D056 4F 52 41 05 .db "ORA", 5     ;0x01
   39 D1:D05A 4A 41 4D 00 .db "JAM", 0     ;0x02
   40 D1:D05E 53 4C 4F 05 .db "SLO", 5     ;0x03
   41 D1:D062 4E 4F 50 07 .db "NOP", 7     ;0x04
   42 D1:D066 4F 52 41 07 .db "ORA", 7     ;0x05
   43 D1:D06A 41 53 4C 07 .db "ASL", 7     ;0x06
   44 D1:D06E 53 4C 4F 07 .db "SLO", 7     ;0x07
   45 D1:D072 50 48 50 0A .db "PHP", 10     ;0x08
   46 D1:D076 4F 52 41 09 .db "ORA", 9     ;0x09
   47 D1:D07A 41 53 4C 06 .db "ASL", 6     ;0x0A
   48 D1:D07E 41 4E 43 09 .db "ANC", 9     ;0x0B
   49 D1:D082 4E 4F 50 03 .db "NOP", 3     ;0x0C
   50 D1:D086 4F 52 41 03 .db "ORA", 3     ;0x0D
   51 D1:D08A 41 53 4C 03 .db "ASL", 3     ;0x0E
   52 D1:D08E 53 4C 4F 03 .db "SLO", 3     ;0x0F
   53 D1:D092 42 50 4C 08 .db "BPL", 8     ;0x10
   54 D1:D096 4F 52 41 0B .db "ORA", 11     ;0x11
   55 D1:D09A 4A 41 4D 00 .db "JAM", 0     ;0x12
   56 D1:D09E 53 4C 4F 0B .db "SLO", 11     ;0x13
   57 D1:D0A2 4E 4F 50 01 .db "NOP", 1     ;0x14
   58 D1:D0A6 4F 52 41 01 .db "ORA", 1     ;0x15
   59 D1:D0AA 41 53 4C 01 .db "ASL", 1     ;0x16
   60 D1:D0AE 53 4C 4F 01 .db "SLO", 1     ;0x17
   61 D1:D0B2 43 4C 43 0A .db "CLC", 10     ;0x18
   62 D1:D0B6 4F 52 41 0C .db "ORA", 12     ;0x19
   63 D1:D0BA 4E 4F 50 0A .db "NOP", 10     ;0x1A
   64 D1:D0BE 53 4C 4F 0C .db "SLO", 12     ;0x1B
   65 D1:D0C2 4E 4F 50 04 .db "NOP", 4     ;0x1C
   66 D1:D0C6 4F 52 41 04 .db "ORA", 4     ;0x1D
   67 D1:D0CA 41 53 4C 04 .db "ASL", 4     ;0x1E
   68 D1:D0CE 53 4C 4F 04 .db "SLO", 4     ;0x1F
   69 D1:D0D2 4A 53 52 03 .db "JSR", 3     ;0x20
   70 D1:D0D6 41 4E 44 05 .db "AND", 5     ;0x21
   71 D1:D0DA 4A 41 4D 00 .db "JAM", 0     ;0x22
   72 D1:D0DE 52 4C 41 05 .db "RLA", 5     ;0x23
   73 D1:D0E2 42 49 54 07 .db "BIT", 7     ;0x24
   74 D1:D0E6 41 4E 44 07 .db "AND", 7     ;0x25
   75 D1:D0EA 52 4F 4C 07 .db "ROL", 7     ;0x26
   76 D1:D0EE 52 4C 41 07 .db "RLA", 7     ;0x27
   77 D1:D0F2 50 4C 50 0A .db "PLP", 10     ;0x28
   78 D1:D0F6 41 4E 44 09 .db "AND", 9     ;0x29
   79 D1:D0FA 52 4F 4C 06 .db "ROL", 6     ;0x2A
   80 D1:D0FE 41 4E 43 09 .db "ANC", 9     ;0x2B
   81 D1:D102 42 49 54 03 .db "BIT", 3     ;0x2C
   82 D1:D106 41 4E 44 03 .db "AND", 3     ;0x2D
   83 D1:D10A 52 4F 4C 03 .db "ROL", 3     ;0x2E
   84 D1:D10E 52 4C 41 03 .db "RLA", 3     ;0x2F
   85 D1:D112 42 4D 49 08 .db "BMI", 8     ;0x30
   86 D1:D116 41 4E 44 0B .db "AND", 11     ;0x31
   87 D1:D11A 4A 41 4D 00 .db "JAM", 0     ;0x32
   88 D1:D11E 52 4C 41 0B .db "RLA", 11     ;0x33
   89 D1:D122 4E 4F 50 01 .db "NOP", 1     ;0x34
   90 D1:D126 41 4E 44 01 .db "AND", 1     ;0x35
   91 D1:D12A 52 4F 4C 01 .db "ROL", 1     ;0x36
   92 D1:D12E 52 4C 41 01 .db "RLA", 1     ;0x37
   93 D1:D132 53 45 43 0A .db "SEC", 10     ;0x38
   94 D1:D136 41 4E 44 0C .db "AND", 12     ;0x39
   95 D1:D13A 4E 4F 50 0A .db "NOP", 10     ;0x3A
   96 D1:D13E 52 4C 41 0C .db "RLA", 12     ;0x3B
   97 D1:D142 4E 4F 50 04 .db "NOP", 4     ;0x3C
   98 D1:D146 41 4E 44 04 .db "AND", 4     ;0x3D
   99 D1:D14A 52 4F 4C 04 .db "ROL", 4     ;0x3E
  100 D1:D14E 52 4C 41 04 .db "RLA", 4     ;0x3F
  101 D1:D152 52 54 49 0A .db "RTI", 10     ;0x40
  102 D1:D156 45 4F 52 05 .db "EOR", 5     ;0x41
  103 D1:D15A 4A 41 4D 00 .db "JAM", 0     ;0x42
  104 D1:D15E 53 52 45 05 .db "SRE", 5     ;0x43
  105 D1:D162 4E 4F 50 07 .db "NOP", 7     ;0x44
  106 D1:D166 45 4F 52 07 .db "EOR", 7     ;0x45
  107 D1:D16A 4C 53 52 07 .db "LSR", 7     ;0x46
  108 D1:D16E 53 52 45 07 .db "SRE", 7     ;0x47
  109 D1:D172 50 48 41 0A .db "PHA", 10     ;0x48
  110 D1:D176 45 4F 52 09 .db "EOR", 9     ;0x49
  111 D1:D17A 4C 53 52 06 .db "LSR", 6     ;0x4A
  112 D1:D17E 41 4C 52 09 .db "ALR", 9     ;0x4B
  113 D1:D182 4A 4D 50 03 .db "JMP", 3     ;0x4C
  114 D1:D186 45 4F 52 03 .db "EOR", 3     ;0x4D
  115 D1:D18A 4C 53 52 03 .db "LSR", 3     ;0x4E
  116 D1:D18E 53 52 45 03 .db "SRE", 3     ;0x4F
  117 D1:D192 42 56 43 08 .db "BVC", 8     ;0x50
  118 D1:D196 45 4F 52 0B .db "EOR", 11     ;0x51
  119 D1:D19A 4A 41 4D 00 .db "JAM", 0     ;0x52
  120 D1:D19E 53 52 45 0B .db "SRE", 11     ;0x53
  121 D1:D1A2 4E 4F 50 01 .db "NOP", 1     ;0x54
  122 D1:D1A6 45 4F 52 01 .db "EOR", 1     ;0x55
  123 D1:D1AA 4C 53 52 01 .db "LSR", 1     ;0x56
  124 D1:D1AE 53 52 45 01 .db "SRE", 1     ;0x57
  125 D1:D1B2 43 4C 49 0A .db "CLI", 10     ;0x58
  126 D1:D1B6 45 4F 52 0C .db "EOR", 12     ;0x59
  127 D1:D1BA 4E 4F 50 0A .db "NOP", 10     ;0x5A
  128 D1:D1BE 53 52 45 0C .db "SRE", 12     ;0x5B
  129 D1:D1C2 4E 4F 50 04 .db "NOP", 4     ;0x5C
  130 D1:D1C6 45 4F 52 04 .db "EOR", 4     ;0x5D
  131 D1:D1CA 4C 53 52 04 .db "LSR", 4     ;0x5E
  132 D1:D1CE 53 52 45 04 .db "SRE", 4     ;0x5F
  133 D1:D1D2 52 54 53 0A .db "RTS", 10     ;0x60
  134 D1:D1D6 41 44 43 05 .db "ADC", 5     ;0x61
  135 D1:D1DA 4A 41 4D 00 .db "JAM", 0     ;0x62
  136 D1:D1DE 52 52 41 05 .db "RRA", 5     ;0x63
  137 D1:D1E2 4E 4F 50 07 .db "NOP", 7     ;0x64
  138 D1:D1E6 41 44 43 07 .db "ADC", 7     ;0x65
  139 D1:D1EA 52 4F 52 07 .db "ROR", 7     ;0x66
  140 D1:D1EE 52 52 41 07 .db "RRA", 7     ;0x67
  141 D1:D1F2 50 4C 41 0A .db "PLA", 10     ;0x68
  142 D1:D1F6 41 44 43 09 .db "ADC", 9     ;0x69
  143 D1:D1FA 52 4F 52 06 .db "ROR", 6     ;0x6A
  144 D1:D1FE 41 52 52 09 .db "ARR", 9     ;0x6B
  145 D1:D202 4A 4D 50 02 .db "JMP", 2     ;0x6C
  146 D1:D206 41 44 43 03 .db "ADC", 3     ;0x6D
  147 D1:D20A 52 4F 52 03 .db "ROR", 3     ;0x6E
  148 D1:D20E 52 52 41 03 .db "RRA", 3     ;0x6F
  149 D1:D212 42 56 53 08 .db "BVS", 8     ;0x70
  150 D1:D216 41 44 43 0B .db "ADC", 11     ;0x71
  151 D1:D21A 4A 41 4D 00 .db "JAM", 0     ;0x72
  152 D1:D21E 52 52 41 0B .db "RRA", 11     ;0x73
  153 D1:D222 4E 4F 50 01 .db "NOP", 1     ;0x74
  154 D1:D226 41 44 43 01 .db "ADC", 1     ;0x75
  155 D1:D22A 52 4F 52 01 .db "ROR", 1     ;0x76
  156 D1:D22E 52 52 41 01 .db "RRA", 1     ;0x77
  157 D1:D232 53 45 49 0A .db "SEI", 10     ;0x78
  158 D1:D236 41 44 43 0C .db "ADC", 12     ;0x79
  159 D1:D23A 4E 4F 50 0A .db "NOP", 10     ;0x7A
  160 D1:D23E 52 52 41 0C .db "RRA", 12     ;0x7B
  161 D1:D242 4E 4F 50 04 .db "NOP", 4     ;0x7C
  162 D1:D246 41 44 43 04 .db "ADC", 4     ;0x7D
  163 D1:D24A 52 4F 52 04 .db "ROR", 4     ;0x7E
  164 D1:D24E 52 52 41 04 .db "RRA", 4     ;0x7F
  165 D1:D252 4E 4F 50 09 .db "NOP", 9     ;0x80
  166 D1:D256 53 54 41 05 .db "STA", 5     ;0x81
  167 D1:D25A 4E 4F 50 09 .db "NOP", 9     ;0x82
  168 D1:D25E 53 41 58 05 .db "SAX", 5     ;0x83
  169 D1:D262 53 54 59 07 .db "STY", 7     ;0x84
  170 D1:D266 53 54 41 07 .db "STA", 7     ;0x85
  171 D1:D26A 53 54 58 07 .db "STX", 7     ;0x86
  172 D1:D26E 53 41 58 07 .db "SAX", 7     ;0x87
  173 D1:D272 44 45 59 0A .db "DEY", 10     ;0x88
  174 D1:D276 4E 4F 50 09 .db "NOP", 9     ;0x89
  175 D1:D27A 54 58 41 0A .db "TXA", 10     ;0x8A
  176 D1:D27E 41 4E 45 09 .db "ANE", 9     ;0x8B
  177 D1:D282 53 54 59 03 .db "STY", 3     ;0x8C
  178 D1:D286 53 54 41 03 .db "STA", 3     ;0x8D
  179 D1:D28A 53 54 58 03 .db "STX", 3     ;0x8E
  180 D1:D28E 53 41 58 03 .db "SAX", 3     ;0x8F
  181 D1:D292 42 43 43 08 .db "BCC", 8     ;0x90
  182 D1:D296 53 54 41 0B .db "STA", 11     ;0x91
  183 D1:D29A 4A 41 4D 00 .db "JAM", 0     ;0x92
  184 D1:D29E 53 48 41 0B .db "SHA", 11     ;0x93
  185 D1:D2A2 53 54 59 01 .db "STY", 1     ;0x94
  186 D1:D2A6 53 54 41 01 .db "STA", 1     ;0x95
  187 D1:D2AA 53 54 58 0D .db "STX", 13     ;0x96
  188 D1:D2AE 53 41 58 0D .db "SAX", 13     ;0x97
  189 D1:D2B2 54 59 41 0A .db "TYA", 10     ;0x98
  190 D1:D2B6 53 54 41 0C .db "STA", 12     ;0x99
  191 D1:D2BA 54 58 53 0A .db "TXS", 10     ;0x9A
  192 D1:D2BE 54 41 53 0C .db "TAS", 12     ;0x9B
  193 D1:D2C2 53 48 59 04 .db "SHY", 4     ;0x9C
  194 D1:D2C6 53 54 41 04 .db "STA", 4     ;0x9D
  195 D1:D2CA 53 48 58 0C .db "SHX", 12     ;0x9E
  196 D1:D2CE 53 48 41 0C .db "SHA", 12     ;0x9F
  197 D1:D2D2 4C 44 59 09 .db "LDY", 9     ;0xA0
  198 D1:D2D6 4C 44 41 05 .db "LDA", 5     ;0xA1
  199 D1:D2DA 4C 44 58 09 .db "LDX", 9     ;0xA2
  200 D1:D2DE 4C 41 58 05 .db "LAX", 5     ;0xA3
  201 D1:D2E2 4C 44 59 07 .db "LDY", 7     ;0xA4
  202 D1:D2E6 4C 44 41 07 .db "LDA", 7     ;0xA5
  203 D1:D2EA 4C 44 58 07 .db "LDX", 7     ;0xA6
  204 D1:D2EE 4C 41 58 07 .db "LAX", 7     ;0xA7
  205 D1:D2F2 54 41 59 0A .db "TAY", 10     ;0xA8
  206 D1:D2F6 4C 44 41 09 .db "LDA", 9     ;0xA9
  207 D1:D2FA 54 41 58 0A .db "TAX", 10     ;0xAA
  208 D1:D2FE 4C 58 41 09 .db "LXA", 9     ;0xAB
  209 D1:D302 4C 44 59 03 .db "LDY", 3     ;0xAC
  210 D1:D306 4C 44 41 03 .db "LDA", 3     ;0xAD
  211 D1:D30A 4C 44 58 03 .db "LDX", 3     ;0xAE
  212 D1:D30E 4C 41 58 03 .db "LAX", 3     ;0xAF
  213 D1:D312 42 43 53 08 .db "BCS", 8     ;0xB0
  214 D1:D316 4C 44 41 0B .db "LDA", 11     ;0xB1
  215 D1:D31A 4A 41 4D 00 .db "JAM", 0     ;0xB2
  216 D1:D31E 4C 41 58 0B .db "LAX", 11     ;0xB3
  217 D1:D322 4C 44 59 01 .db "LDY", 1     ;0xB4
  218 D1:D326 4C 44 41 01 .db "LDA", 1     ;0xB5
  219 D1:D32A 4C 44 58 0D .db "LDX", 13     ;0xB6
  220 D1:D32E 4C 41 58 0D .db "LAX", 13     ;0xB7
  221 D1:D332 43 4C 56 0A .db "CLV", 10     ;0xB8
  222 D1:D336 4C 44 41 0C .db "LDA", 12     ;0xB9
  223 D1:D33A 54 53 58 0A .db "TSX", 10     ;0xBA
  224 D1:D33E 4C 41 53 0C .db "LAS", 12     ;0xBB
  225 D1:D342 4C 44 59 04 .db "LDY", 4     ;0xBC
  226 D1:D346 4C 44 41 04 .db "LDA", 4     ;0xBD
  227 D1:D34A 4C 44 58 0C .db "LDX", 12     ;0xBE
  228 D1:D34E 4C 41 58 0C .db "LAX", 12     ;0xBF
  229 D1:D352 43 50 59 09 .db "CPY", 9     ;0xC0
  230 D1:D356 43 4D 50 05 .db "CMP", 5     ;0xC1
  231 D1:D35A 4E 4F 50 09 .db "NOP", 9     ;0xC2
  232 D1:D35E 44 43 50 05 .db "DCP", 5     ;0xC3
  233 D1:D362 43 50 59 07 .db "CPY", 7     ;0xC4
  234 D1:D366 43 4D 50 07 .db "CMP", 7     ;0xC5
  235 D1:D36A 44 45 43 07 .db "DEC", 7     ;0xC6
  236 D1:D36E 44 43 50 07 .db "DCP", 7     ;0xC7
  237 D1:D372 49 4E 59 0A .db "INY", 10     ;0xC8
  238 D1:D376 43 4D 50 09 .db "CMP", 9     ;0xC9
  239 D1:D37A 44 45 58 0A .db "DEX", 10     ;0xCA
  240 D1:D37E 53 42 58 09 .db "SBX", 9     ;0xCB
  241 D1:D382 43 50 59 03 .db "CPY", 3     ;0xCC
  242 D1:D386 43 4D 50 03 .db "CMP", 3     ;0xCD
  243 D1:D38A 44 45 43 03 .db "DEC", 3     ;0xCE
  244 D1:D38E 44 43 50 03 .db "DCP", 3     ;0xCF
  245 D1:D392 42 4E 45 08 .db "BNE", 8     ;0xD0
  246 D1:D396 43 4D 50 0B .db "CMP", 11     ;0xD1
  247 D1:D39A 4A 41 4D 00 .db "JAM", 0     ;0xD2
  248 D1:D39E 44 43 50 0B .db "DCP", 11     ;0xD3
  249 D1:D3A2 4E 4F 50 01 .db "NOP", 1     ;0xD4
  250 D1:D3A6 43 4D 50 01 .db "CMP", 1     ;0xD5
  251 D1:D3AA 44 45 43 01 .db "DEC", 1     ;0xD6
  252 D1:D3AE 44 43 50 01 .db "DCP", 1     ;0xD7
  253 D1:D3B2 43 4C 44 0A .db "CLD", 10     ;0xD8
  254 D1:D3B6 43 4D 50 0C .db "CMP", 12     ;0xD9
  255 D1:D3BA 4E 4F 50 0A .db "NOP", 10     ;0xDA
  256 D1:D3BE 44 43 50 0C .db "DCP", 12     ;0xDB
  257 D1:D3C2 4E 4F 50 04 .db "NOP", 4     ;0xDC
  258 D1:D3C6 43 4D 50 04 .db "CMP", 4     ;0xDD
  259 D1:D3CA 44 45 43 04 .db "DEC", 4     ;0xDE
  260 D1:D3CE 44 43 50 04 .db "DCP", 4     ;0xDF
  261 D1:D3D2 43 50 58 09 .db "CPX", 9     ;0xE0
  262 D1:D3D6 53 42 43 05 .db "SBC", 5     ;0xE1
  263 D1:D3DA 4E 4F 50 09 .db "NOP", 9     ;0xE2
  264 D1:D3DE 49 53 43 05 .db "ISC", 5     ;0xE3
  265 D1:D3E2 43 50 58 07 .db "CPX", 7     ;0xE4
  266 D1:D3E6 53 42 43 07 .db "SBC", 7     ;0xE5
  267 D1:D3EA 49 4E 43 07 .db "INC", 7     ;0xE6
  268 D1:D3EE 49 53 43 07 .db "ISC", 7     ;0xE7
  269 D1:D3F2 49 4E 58 0A .db "INX", 10     ;0xE8
  270 D1:D3F6 53 42 43 09 .db "SBC", 9     ;0xE9
  271 D1:D3FA 4E 4F 50 0A .db "NOP", 10     ;0xEA
  272 D1:D3FE 55 53 42 09 .db "USB", 9     ;0xEB
  273 D1:D402 43 50 58 03 .db "CPX", 3     ;0xEC
  274 D1:D406 53 42 43 03 .db "SBC", 3     ;0xED
  275 D1:D40A 49 4E 43 03 .db "INC", 3     ;0xEE
  276 D1:D40E 49 53 43 03 .db "ISC", 3     ;0xEF
  277 D1:D412 42 45 51 08 .db "BEQ", 8     ;0xF0
  278 D1:D416 53 42 43 0B .db "SBC", 11     ;0xF1
  279 D1:D41A 4A 41 4D 00 .db "JAM", 0     ;0xF2
  280 D1:D41E 49 53 43 0B .db "ISC", 11     ;0xF3
  281 D1:D422 4E 4F 50 01 .db "NOP", 1     ;0xF4
  282 D1:D426 53 42 43 01 .db "SBC", 1     ;0xF5
  283 D1:D42A 49 4E 43 01 .db "INC", 1     ;0xF6
  284 D1:D42E 49 53 43 01 .db "ISC", 1     ;0xF7
  285 D1:D432 53 45 44 0A .db "SED", 10     ;0xF8
  286 D1:D436 53 42 43 0C .db "SBC", 12     ;0xF9
  287 D1:D43A 4E 4F 50 0A .db "NOP", 10     ;0xFA
  288 D1:D43E 49 53 43 0C .db "ISC", 12     ;0xFB
  289 D1:D442 4E 4F 50 04 .db "NOP", 4     ;0xFC
  290 D1:D446 53 42 43 04 .db "SBC", 4     ;0xFD
  291 D1:D44A 49 4E 43 04 .db "INC", 4     ;0xFE
  292 D1:D44E 49 53 43 04 .db "ISC", 4     ;0xFF
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\debug.z80"
    3 D1:D452 -  -  -  -  
    4 D1:D452 -  -  -  -  
    5 D1:D452 -  -  -  -  ;You must assign a print character routine.
    6 D1:D452 -  -  -  -  ;You must also write all opcode bytes to operbuf or map operbuf to where written
    7 D1:D452 -  -  -  -  dbg_printChr    = PrintBigFont
    8 D1:D452 -  -  -  -  operbuf         = debugram
    9 D1:D452 -  -  -  -  
   10 D1:D452 -  -  -  -  
   11 D1:D452 -  -  -  -  dbg_resetScreen:
   12 D1:D452 21 00 00 D4     ld  hl,screenBuf1
   13 D1:D456 11 01 00 D4     ld  de,screenBuf1+1
   14 D1:D45A 01 FF 57 02     ld  bc,(2*240*320)-1
   15 D1:D45E 36 00 -  -      ld  (hl),$00
   16 D1:D460 ED B0 -  -      ldir
   17 D1:D462 AF -  -  -      xor a,a
   18 D1:D463 CD B8 AE D1     call setLineStart
   19 D1:D467 CD C1 AE D1     call setCurLine
   20 D1:D46B C9 -  -  -      ret
   21 D1:D46C -  -  -  -  
   22 D1:D46C -  -  -  -  ;Input: ix = core_memory_ix 
   23 D1:D46C -  -  -  -  ;Output: Text onscreen
   24 D1:D46C -  -  -  -  dbg_printLine:
   25 D1:D46C E5 C5 D5 DD 
              E5 FD E5 F5     push hl \ push bc \ push de \ push ix \ push iy \ push af
   26 D1:D474 DD 27 0E -      ld  hl,(ix+CURRENT_OPCODES)
   27 D1:D477 22 F9 31 D0     ld  (operbuf),hl
   28 D1:D47B AF -  -  -      xor a,a
   29 D1:D47C 32 F6 31 D0     ld  (xPos),a
   30 D1:D480 CD 8E AF D1     call calculateScreenPtr
   31 D1:D484 EB -  -  -      ex  de,hl
   32 D1:D485 21 FF 2B D5     ld  hl,screenBuf2-1
   33 D1:D489 B7 -  -  -      or  a,a
   34 D1:D48A ED 52 -  -      sbc hl,de
   35 D1:D48C -  -  -  -  ;If C: DE in sb2. subtract to set in sb1.
   36 D1:D48C -  -  -  -  ;If NC: DE in sb1. add to set in sb2.
   37 D1:D48C 21 00 2C 01     ld  hl,320*240
   38 D1:D490 30 04 -  -      jr  nc,+_
   39 D1:D492 21 00 D4 FE     ld  hl,-(320*240)+0
   40 D1:D496 19 -  -  -  _:  add hl,de   ;HL set to other buffer. DE points to current buffer.
   41 D1:D497 01 00 0A 00     ld  bc,320*8    ;copy one line from other buffer to current buffer.
   42 D1:D49B ED B0 -  -      ldir
   43 D1:D49D 3A F7 31 D0     ld  a,(yPos)
   44 D1:D4A1 FE 1D -  -      cp  a,29
   45 D1:D4A3 20 06 -  -      jr  nz,+_
   46 D1:D4A5 21 00 D4 FE     ld  hl,-(320*240)
   47 D1:D4A9 19 -  -  -      add hl,de
   48 D1:D4AA EB -  -  -      ex de,hl        ;if bottom of screen, then reset DE to top of screen.
   49 D1:D4AB D5 -  -  -  _:  push de
   50 D1:D4AC E1 -  -  -      pop hl
   51 D1:D4AD 13 -  -  -      inc de
   52 D1:D4AE 71 -  -  -      ld  (hl),c
   53 D1:D4AF 01 BF 08 00     ld  bc,(320*7)-1    ;erase whole line below it to prepare for writing.
   54 D1:D4B3 ED B0 -  -      ldir
   55 D1:D4B5 CD CC AE D1     call newLine
   56 D1:D4B9 DD 7E 06 -      ld  a,(ix+REGPC+1)
   57 D1:D4BC CD 29 AF D1     call printSmallNumPair
   58 D1:D4C0 DD 7E 05 -      ld  a,(ix+REGPC+0)
   59 D1:D4C3 CD 29 AF D1     call printSmallNumPair
   60 D1:D4C7 21 4D D5 D1     ld  hl,dbg_printLine_str001
   61 D1:D4CB CD E3 AE D1     call printString
   62 D1:D4CF 06 05 -  -      ld  b,5
   63 D1:D4D1 ED 22 00 -      lea hl,ix+0
   64 D1:D4D4 7E -  -  -  _:  ld  a,(hl)
   65 D1:D4D5 23 -  -  -      inc hl
   66 D1:D4D6 C5 -  -  -      push bc
   67 D1:D4D7 E5 -  -  -          push hl
   68 D1:D4D8 CD 29 AF D1             call printSmallNumPair
   69 D1:D4DC 3E 20 -  -              ld  a,' '
   70 D1:D4DE CD F9 AE D1             call printBigFont
   71 D1:D4E2 E1 -  -  -          pop hl
   72 D1:D4E3 C1 -  -  -      pop bc
   73 D1:D4E4 10 EE -  -      djnz -_
   74 D1:D4E6 ED 23 00 -      lea hl,iy+0
   75 D1:D4E9 DD 2F 0B -      ld  (ix+CYCLES_CURRENT),hl
   76 D1:D4EC DD 7E 0D -      ld  a,(ix+CYCLES_CURRENT+2)
   77 D1:D4EF CD 29 AF D1     call printSmallNumPair
   78 D1:D4F3 DD 7E 0C -      ld  a,(ix+CYCLES_CURRENT+1)
   79 D1:D4F6 CD 29 AF D1     call printSmallNumPair
   80 D1:D4FA DD 7E 0B -      ld  a,(ix+CYCLES_CURRENT+0)
   81 D1:D4FD CD 29 AF D1     call printSmallNumPair
   82 D1:D501 3E 20 -  -      ld  a,' '
   83 D1:D503 CD F9 AE D1     call printBigFont
   84 D1:D507 2A F9 31 D0     ld  hl,(operbuf)
   85 D1:D50B DD 2F 0E -      ld  (ix+CURRENT_OPCODES),hl
   86 D1:D50E 7D -  -  -      ld  a,L
   87 D1:D50F CD 55 D5 D1     call dbg_getInstSize
   88 D1:D513 06 03 -  -      ld  b,3
   89 D1:D515 4F -  -  -      ld  c,a
   90 D1:D516 0C -  -  -      inc c
   91 D1:D517 ED 22 0E -      lea hl,ix+CURRENT_OPCODES
   92 D1:D51A 7E -  -  -  _:  ld  a,(hl)
   93 D1:D51B 23 -  -  -      inc hl
   94 D1:D51C E5 -  -  -      push hl
   95 D1:D51D 0D -  -  -          dec c
   96 D1:D51E F2 23 D5 D1         jp p,+_
   97 D1:D522 0C -  -  -          inc c   ;never let c go below zero.
   98 D1:D523 C5 -  -  -  _:      push bc
   99 D1:D524 28 06 -  -              jr  z,+_
  100 D1:D526 CD 29 AF D1             call printSmallNumPair
  101 D1:D52A 18 06 -  -              jr ++_
  102 D1:D52C 3E 20 -  -  _:          ld  a,' '
  103 D1:D52E CD F9 AE D1             call printBigFont
  104 D1:D532 C1 -  -  -  _:      pop bc
  105 D1:D533 E1 -  -  -      pop hl
  106 D1:D534 10 E4 -  -      djnz ----_
  107 D1:D536 3E 20 -  -      ld  a,' '
  108 D1:D538 CD F9 AE D1     call printBigFont
  109 D1:D53C CD 6D D5 D1     call dbg_printDisassembly
  110 D1:D540 CD EF AD D1     call fastCopy
  111 D1:D544 F1 FD E1 DD 
              E1 D1 C1 E1     pop af \ pop iy \ pop ix \ pop de \ pop bc \ pop hl
  112 D1:D54C -  -  -  -      ;push hl \ push bc \ push de \ push ix \ push iy \ push af
  113 D1:D54C C9 -  -  -      ret
  114 D1:D54D -  -  -  -  
  115 D1:D54D -  -  -  -  dbg_printLine_str001:
  116 D1:D54D 20 41 58 59 
              53 50 20 00 .db " AXYSP ",0
  117 D1:D555 -  -  -  -  
  118 D1:D555 -  -  -  -  
  119 D1:D555 -  -  -  -  
  120 D1:D555 -  -  -  -  
  121 D1:D555 -  -  -  -  
  122 D1:D555 -  -  -  -  
  123 D1:D555 -  -  -  -  ;A=instruction. Returns: A=size
  124 D1:D555 -  -  -  -  dbg_getInstSize:
  125 D1:D555 E5 D5 -  -      push hl \ push de
  126 D1:D557 57 -  -  -          ld  d,a
  127 D1:D558 1E 04 -  -          ld  e,4
  128 D1:D55A ED 5C -  -          mlt de
  129 D1:D55C 21 55 D0 D1         ld  hl,inst6502_disassembly_table+3
  130 D1:D560 19 -  -  -          add hl,de
  131 D1:D561 16 00 -  -          ld  d,0
  132 D1:D563 5E -  -  -          ld  e,(hl)
  133 D1:D564 21 17 D0 D1         ld  hl,inst6502_opcode_width_table
  134 D1:D568 19 -  -  -          add hl,de
  135 D1:D569 7E -  -  -          ld  a,(hl)
  136 D1:D56A D1 E1 -  -      pop de \ pop hl
  137 D1:D56C C9 -  -  -      ret
  138 D1:D56D -  -  -  -  
  139 D1:D56D -  -  -  -  dbg_printDisassembly:
  140 D1:D56D F5 C5 D5 E5 
              DD E5 -  -      push af \ push bc \ push de \ push hl \ push ix
  141 D1:D573 -  -  -  -      ;find entry in disassembly table
  142 D1:D573 2A F9 31 D0     ld  hl,(operbuf)
  143 D1:D577 26 04 -  -      ld  H,4
  144 D1:D579 ED 6C -  -      mlt hl
  145 D1:D57B 11 52 D0 D1     ld  de,inst6502_disassembly_table
  146 D1:D57F 19 -  -  -      add hl,de
  147 D1:D580 06 03 -  -      ld  b,3
  148 D1:D582 7E -  -  -  _:  ld  a,(hl)
  149 D1:D583 23 -  -  -      inc hl
  150 D1:D584 CD 0A D6 D1     call dbg_printC
  151 D1:D588 10 F8 -  -      djnz -_
  152 D1:D58A 3E 20 -  -      ld  a,' '
  153 D1:D58C CD 0A D6 D1     call dbg_printC
  154 D1:D590 46 -  -  -      ld  b,(hl)
  155 D1:D591 04 -  -  -      inc b
  156 D1:D592 -  -  -  -      ;Instruction addressing mode in B. Now find text for that address mode.
  157 D1:D592 21 25 D0 D1     ld  hl,inst6502_disassembler
  158 D1:D596 11 00 00 00     ld  de,0
  159 D1:D59A 5E -  -  -  _:  ld  e,(hl)
  160 D1:D59B 19 -  -  -      add hl,de
  161 D1:D59C 10 FC -  -      djnz -_
  162 D1:D59E 1D -  -  -      dec e
  163 D1:D59F 28 29 -  -      jr  z,dbg_printDisassembly_end  ;stop if text is zero-sized
  164 D1:D5A1 ED 52 -  -      sbc hl,de   ;rewind to start of text part of instruction. E is text length.
  165 D1:D5A3 43 -  -  -      ld  b,e
  166 D1:D5A4 -  -  -  -  dbg_printDisassembly_printOperandLoop:
  167 D1:D5A4 7E -  -  -      ld  a,(hl)
  168 D1:D5A5 23 -  -  -      inc hl
  169 D1:D5A6 FE 31 -  -      cp  a,'1'
  170 D1:D5A8 20 06 -  -      jr  nz,+_
  171 D1:D5AA CD EE D5 D1     call dbg_printOperand1
  172 D1:D5AE 18 18 -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  173 D1:D5B0 FE 32 -  -  _:  cp  a,'2'
  174 D1:D5B2 20 06 -  -      jr  nz,+_
  175 D1:D5B4 CD E6 D5 D1     call dbg_printOperand2
  176 D1:D5B8 18 0E -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  177 D1:D5BA FE 2D -  -  _:  cp  a,'-'
  178 D1:D5BC 20 06 -  -      jr  nz,+_
  179 D1:D5BE CD D1 D5 D1     call dbg_printRel1
  180 D1:D5C2 18 04 -  -      jr  dbg_PrintDisassembly_printOperandFallthrough
  181 D1:D5C4 CD 0A D6 D1 _:  call dbg_printC
  182 D1:D5C8 -  -  -  -  dbg_PrintDisassembly_printOperandFallthrough:
  183 D1:D5C8 10 DA -  -      djnz dbg_printDisassembly_printOperandLoop
  184 D1:D5CA -  -  -  -  dbg_printDisassembly_end:
  185 D1:D5CA DD E1 E1 D1 
              C1 F1 -  -      pop ix \ pop hl \ pop de \ pop bc \ pop af
  186 D1:D5D0 C9 -  -  -      ret
  187 D1:D5D1 -  -  -  -  
  188 D1:D5D1 -  -  -  -  dbg_printRel1:
  189 D1:D5D1 3A FA 31 D0     ld  a,(operbuf+1)
  190 D1:D5D5 B7 -  -  -      or  a,a
  191 D1:D5D6 F2 E4 D5 D1     jp  p,dbg_printRel1_skipNeg
  192 D1:D5DA F5 -  -  -      push af
  193 D1:D5DB 3E 2D -  -          ld   a,'-'
  194 D1:D5DD CD 0A D6 D1         call dbg_printC
  195 D1:D5E1 F1 -  -  -      pop af
  196 D1:D5E2 ED 44 -  -      neg
  197 D1:D5E4 -  -  -  -  dbg_printRel1_skipNeg:
  198 D1:D5E4 18 0C -  -      jr dbg_printHex
  199 D1:D5E6 -  -  -  -  
  200 D1:D5E6 -  -  -  -  dbg_printOperand2:
  201 D1:D5E6 3A FB 31 D0     ld  a,(operbuf+2)
  202 D1:D5EA CD F2 D5 D1     call dbg_printHex
  203 D1:D5EE -  -  -  -  dbg_printOperand1:
  204 D1:D5EE 3A FA 31 D0     ld  a,(operbuf+1)
  205 D1:D5F2 -  -  -  -  dbg_printHex:
  206 D1:D5F2 CD F7 D5 D1     call dispAHex
  207 D1:D5F6 C9 -  -  -      ret
  208 D1:D5F7 -  -  -  -  
  209 D1:D5F7 -  -  -  -  dispAHex:
  210 D1:D5F7 F5 -  -  -      push af
  211 D1:D5F8 CD FF D5 D1         call +_
  212 D1:D5FC F1 -  -  -      pop af
  213 D1:D5FD 18 04 -  -      jr  ++_
  214 D1:D5FF 1F -  -  -  _:  rra
  215 D1:D600 1F -  -  -      rra
  216 D1:D601 1F -  -  -      rra
  217 D1:D602 1F -  -  -      rra
  218 D1:D603 F6 F0 -  -  _:  or  a,$F0
  219 D1:D605 27 -  -  -      daa
  220 D1:D606 C6 A0 -  -      add a,$A0
  221 D1:D608 CE 40 -  -      adc a,$40
  222 D1:D60A -  -  -  -  dbg_printC:
  223 D1:D60A E5 -  -  -      push hl
  224 D1:D60B C5 -  -  -          push bc
  225 D1:D60C CD F9 AE D1             call dbg_printChr
  226 D1:D610 C1 -  -  -          pop bc
  227 D1:D611 E1 -  -  -      pop hl
  228 D1:D612 C9 -  -  -      ret
Listing for file "main.z80"
  632 D1:D613 -  -  -  -  .echo "Main program size: ",$-programStart
