    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD B3 A9 D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 -  -  -  -      ;load reset vectors
   44 D1:A895 21 21 A8 D1     ld  hl,testVectors
   45 D1:A899 01 01 01 00     ld  bc,$000101
   46 D1:A89D 1E FF -  -      ld  e,$FF
   47 D1:A89F CD A4 B0 D1     call i6502_map_pages
   48 D1:A8A3 -  -  -  -      ;load program ROM to lowmem
   49 D1:A8A3 21 21 A9 D1     ld  hl,testCode
   50 D1:A8A7 01 08 20 00     ld  bc,$002008
   51 D1:A8AB 1E 80 -  -      ld  e,$80
   52 D1:A8AD CD A4 B0 D1     call i6502_map_pages
   53 D1:A8B1 -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   54 D1:A8B1 -  -  -  -      ;memory to screen.
   55 D1:A8B1 21 00 50 D0     ld  hl,NAMETABLE1
   56 D1:A8B5 01 04 20 00     ld  bc,$002004
   57 D1:A8B9 1E 40 -  -      ld  e,$40
   58 D1:A8BB CD A4 B0 D1     call i6502_map_pages
   59 D1:A8BF -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   60 D1:A8BF -  -  -  -      ;start the emulation.
   61 D1:A8BF -  -  -  -      ;jr $
   62 D1:A8BF CD 06 AA D1     call clearTextBuf
   63 D1:A8C3 CD 4E AE D1     call i6502Init
   64 D1:A8C7 -  -  -  -  
   65 D1:A8C7 -  -  -  -  ;    call clearTextBuf
   66 D1:A8C7 -  -  -  -  ;    ld  hl,helloWorld
   67 D1:A8C7 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
   68 D1:A8C7 -  -  -  -  ;    ld  bc,13
   69 D1:A8C7 -  -  -  -  ;    ldir
   70 D1:A8C7 CD 17 AA D1     call printTextBuf
   71 D1:A8CB CD 8A A9 D1     call fastCopy
   72 D1:A8CF 18 FE -  -      jr   $
   73 D1:A8D1 -  -  -  -  
   74 D1:A8D1 -  -  -  -  
   75 D1:A8D1 00 -  -  -      nop
   76 D1:A8D2 -  -  -  -      ;
   77 D1:A8D2 -  -  -  -      ;
   78 D1:A8D2 -  -  -  -      ;
   79 D1:A8D2 -  -  -  -  programExit:
   80 D1:A8D2 CD A5 A9 D1     call stopGfx
   81 D1:A8D6 ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
   82 D1:A8DB 3A FF 31 D0     ld  a,(save_mbase)
   83 D1:A8DF ED 6D -  -      ld  MB,a
   84 D1:A8E1 FD 21 80 00 
              D0 -  -  -      ld  iy,flags
   85 D1:A8E6 C9 -  -  -      ret
   86 D1:A8E7 -  -  -  -  
   87 D1:A8E7 -  -  -  -  loadROM:
   88 D1:A8E7 CD 10 1A 02     call _ClrLCDAll
   89 D1:A8EB 21 12 A9 D1 _:  ld  hl,testFilename
   90 D1:A8EF CD 20 03 02     call _Mov9ToOP1
   91 D1:A8F3 CD 0C 05 02     call _ChkFindSym
   92 D1:A8F7 D8 -  -  -      ret c
   93 D1:A8F8 CD 98 1F 02     call _ChkInRam
   94 D1:A8FC 20 06 -  -      jr  nz,+_
   95 D1:A8FE CD 48 14 02     call _Arc_Unarc
   96 D1:A902 18 E7 -  -      jr  -_
   97 D1:A904 00 -  -  -  _:  nop
   98 D1:A905 11 09 00 00     ld  de,9
   99 D1:A909 19 -  -  -      add hl,de
  100 D1:A90A 5E -  -  -      ld  e,(hl)
  101 D1:A90B 19 -  -  -      add hl,de
  102 D1:A90C 23 -  -  -      inc hl
  103 D1:A90D CD 9C 1D 02     call _LoadDEInd_s   ;ld de,(hl) but DE is 16 bit. Then HL+=2.
  104 D1:A911 -  -  -  -      ;HL=start of program data. DE is size of data.
  105 D1:A911 -  -  -  -      ;
  106 D1:A911 -  -  -  -      ;
  107 D1:A911 -  -  -  -      ; TODO: Finish writing this section.
  108 D1:A911 -  -  -  -      ;
  109 D1:A911 -  -  -  -      ;
  110 D1:A911 C9 -  -  -      ret
  111 D1:A912 -  -  -  -  
  112 D1:A912 -  -  -  -  testFilename:
  113 D1:A912 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  114 D1:A91B -  -  -  -  
  115 D1:A91B -  -  -  -  
  116 D1:A91B -  -  -  -  ;NMI, RES, and IRQ. In that order.
  117 D1:A91B -  -  -  -  testVectors .equ $-(256-6)
  118 D1:A91B 00 80 -  -  .dw $8000
  119 D1:A91D 00 80 -  -  .dw $8000
  120 D1:A91F 00 80 -  -  .dw $8000
  121 D1:A921 -  -  -  -  testCode:
  122 D1:A921 A9 00 AA A8 .db $A9,$00,$AA,$A8
  123 D1:A925 BD 14 80 -  .db $BD,$14,$80
  124 D1:A928 C9 00 -  -  .db $C9,$00
  125 D1:A92A F0 08 -  -  .db $F0,$08
  126 D1:A92C 99 21 40 -  .db $99,$21,$40
  127 D1:A92F E8 C8 -  -  .db $E8,$C8
  128 D1:A931 -  -  -  -  ;.db $12
  129 D1:A931 4C 04 80 02 .db $4C,$04,$80,$02
  130 D1:A935 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  131 D1:A93E 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  132 D1:A943 -  -  -  -  
  133 D1:A943 -  -  -  -  
  134 D1:A943 A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  135 D1:A952 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  136 D1:A962 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  137 D1:A963 -  -  -  -  
  138 D1:A963 -  -  -  -  helloWorld:
  139 D1:A963 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  140 D1:A971 -  -  -  -  
  141 D1:A971 -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  142 D1:A971 -  -  -  -  ;find yet another hardware reference for something I already did.
  143 D1:A971 -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  144 D1:A971 -  -  -  -  ;what we're looking for. Here, we output the same sort of
  145 D1:A971 -  -  -  -  ;game keys that I've used basically all my programming life.
  146 D1:A971 -  -  -  -  ;Anyhoo. We'll be using the following:
  147 D1:A971 -  -  -  -  ;kbitDown	equ 00h
  148 D1:A971 -  -  -  -  ;kbitLeft	equ 01h
  149 D1:A971 -  -  -  -  ;kbitRight	equ 02h
  150 D1:A971 -  -  -  -  ;kbitUp		equ 03h
  151 D1:A971 -  -  -  -  ;kbitYequ equ 04h
  152 D1:A971 -  -  -  -  ;kbit2nd		equ 05h
  153 D1:A971 -  -  -  -  ;kbitMode	equ 06h
  154 D1:A971 -  -  -  -  ;kbitDel		equ 07h
  155 D1:A971 -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  156 D1:A971 -  -  -  -  
  157 D1:A971 -  -  -  -  getkbd_adl:
  158 D1:A971 DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  159 D1:A976 ED 22 00 -  	lea hl,ix+0
  160 D1:A979 36 02 -  -  	ld  (hl),keyModeScanOnce
  161 D1:A97B AF -  -  -  	xor a
  162 D1:A97C BE -  -  -  _:  cp  (hl)
  163 D1:A97D 20 FD -  -  	jr  nz,-_
  164 D1:A97F DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  165 D1:A982 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  166 D1:A985 AD -  -  -  	xor L
  167 D1:A986 E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  168 D1:A988 AD -  -  -  	xor L
  169 D1:A989 C9 -  -  -  	ret
  170 D1:A98A -  -  -  -  
  171 D1:A98A -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:A98A -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:A98A -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:A98A -  -  -  -  
    3 D1:A98A -  -  -  -  ;Various Parts Contributed by
    4 D1:A98A -  -  -  -  ;- BrandonW
    5 D1:A98A -  -  -  -  ;- calc84
    6 D1:A98A -  -  -  -  ;- MateoConLechuga
    7 D1:A98A -  -  -  -  ;- Runer112
    8 D1:A98A -  -  -  -  ;- tr1p1ea
    9 D1:A98A -  -  -  -  ;- Kerm Martian
   10 D1:A98A -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:A98A -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:A98A -  -  -  -  ;
    6 D1:A98A -  -  -  -  ;
    7 D1:A98A -  -  -  -  ;
    8 D1:A98A -  -  -  -  
    9 D1:A98A -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:A98A -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:A98A -  -  -  -  
   12 D1:A98A -  -  -  -  screenBuf1      .equ vRam
   13 D1:A98A -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:A98A -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:A98A -  -  -  -  xPos                .equ $D031F6
   16 D1:A98A -  -  -  -  yPos                .equ $D031F7
   17 D1:A98A -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:A98A -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:A98A -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:A98A -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:A98A -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:A98A -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:A98A -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:A98A -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:A98A -  -  -  -  
   26 D1:A98A -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:A98A -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:A98A -  -  -  -  
   29 D1:A98A -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:A98A -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:A98A -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:A98A -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:A98A -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:A98A -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:A98A -  -  -  -  
   36 D1:A98A -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:A98A -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:A98A -  -  -  -  
   39 D1:A98A -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:A98A -  -  -  -  ;
   41 D1:A98A -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:A98A -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:A98A -  -  -  -  ;
   44 D1:A98A -  -  -  -  ;
   45 D1:A98A -  -  -  -  
   46 D1:A98A -  -  -  -  
   47 D1:A98A -  -  -  -  
   48 D1:A98A -  -  -  -  
   49 D1:A98A -  -  -  -  
   50 D1:A98A -  -  -  -  #define REGA 0
   51 D1:A98A -  -  -  -  #define REGX 1
   52 D1:A98A -  -  -  -  #define REGY 2
   53 D1:A98A -  -  -  -  #define REGSP 3
   54 D1:A98A -  -  -  -  #define REGSR 4
   55 D1:A98A -  -  -  -  #define REGPC 5
   56 D1:A98A -  -  -  -  #define CYCLES_REMAIN ix+8
   57 D1:A98A -  -  -  -  #define SF_NEG 7
   58 D1:A98A -  -  -  -  #define SF_OVER 6 
   59 D1:A98A -  -  -  -  #define SF_RESERVED 5 
   60 D1:A98A -  -  -  -  #define SF_BRK 4
   61 D1:A98A -  -  -  -  #define SF_DEC 3
   62 D1:A98A -  -  -  -  #define SF_INT 2
   63 D1:A98A -  -  -  -  #define SF_ZERO 1
   64 D1:A98A -  -  -  -  #define SF_CARRY 0
   65 D1:A98A -  -  -  -  
   66 D1:A98A -  -  -  -  #macro ADDCYC(X)
   67 D1:A98A                 #if (x < 1)
   68 D1:A98A                     nop
   69 D1:A98A                 #elif (X = 1)
   70 D1:A98A                     inc iy
   71 D1:A98A                 #else
   72 D1:A98A                     lea iy,iy+X
   73 D1:A98A                 #endif
   74 D1:A98A             #endmacro
   75 D1:A98A -  -  -  -  
   76 D1:A98A -  -  -  -  ;
   77 D1:A98A -  -  -  -  ;
   78 D1:A98A -  -  -  -  ;
   79 D1:A98A -  -  -  -  #endif
   80 D1:A98A -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:A98A -  -  -  -  
    4 D1:A98A -  -  -  -  ;Function list:
    5 D1:A98A -  -  -  -  ; fastCopy
    6 D1:A98A -  -  -  -  ; stopGfx
    7 D1:A98A -  -  -  -  ; startGfx
    8 D1:A98A -  -  -  -  ; configureScreen
    9 D1:A98A -  -  -  -  ; setDefaultPalette
   10 D1:A98A -  -  -  -  ; printString
   11 D1:A98A -  -  -  -  ; printBigFont
   12 D1:A98A -  -  -  -  ; printSmallNumPair 
   13 D1:A98A -  -  -  -  ; calculateScreenPtr
   14 D1:A98A -  -  -  -  ;
   15 D1:A98A -  -  -  -  ;
   16 D1:A98A -  -  -  -  ;
   17 D1:A98A -  -  -  -  ;
   18 D1:A98A -  -  -  -  ;
   19 D1:A98A -  -  -  -  ;
   20 D1:A98A -  -  -  -  ;
   21 D1:A98A -  -  -  -  
   22 D1:A98A -  -  -  -  
   23 D1:A98A -  -  -  -  
   24 D1:A98A -  -  -  -  
   25 D1:A98A -  -  -  -  ;-----------------------------------------------------------------------------
   26 D1:A98A -  -  -  -  ;Screen hardware interface stuff
   27 D1:A98A -  -  -  -  
   28 D1:A98A -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   29 D1:A98A -  -  -  -  fastCopy:
   30 D1:A98A 11 00 00 D4     ld  de,screenBuf1
   31 D1:A98E 2A 10 00 E3     ld  hl,(mpLcdBase)
   32 D1:A992 22 00 34 D0     ld  (curScreenBuf),hl
   33 D1:A996 B7 -  -  -      or  a,a
   34 D1:A997 ED 52 -  -      sbc hl,de
   35 D1:A999 EB -  -  -      ex  de,hl
   36 D1:A99A 20 04 -  -      jr  nz,+_
   37 D1:A99C 21 00 2C D5     ld  hl,screenBuf2
   38 D1:A9A0 22 10 00 E3 _:  ld  (mpLcdBase),hl
   39 D1:A9A4 C9 -  -  -      ret
   40 D1:A9A5 -  -  -  -  
   41 D1:A9A5 -  -  -  -  stopGfx:
   42 D1:A9A5 CD 74 03 00     call _boot_ClearVRAM
   43 D1:A9A9 11 2D 09 00     ld  de,lcdNormalMode
   44 D1:A9AD 01 00 00 D4     ld  bc,screenBuf1
   45 D1:A9B1 18 0C -  -      jr  configureScreen
   46 D1:A9B3 -  -  -  -  
   47 D1:A9B3 -  -  -  -  startGfx:
   48 D1:A9B3 CD 74 03 00     call _boot_ClearVRAM
   49 D1:A9B7 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   50 D1:A9BB 01 00 00 D4     ld  bc,screenBuf1
   51 D1:A9BF -  -  -  -  configureScreen:
   52 D1:A9BF 21 10 00 E3     ld  hl,mpLcdBase
   53 D1:A9C3 ED 0F -  -      ld  (hl),bc
   54 D1:A9C5 2E 18 -  -      ld  L,lcdCtrl
   55 D1:A9C7 ED 1F -  -      ld  (hl),de
   56 D1:A9C9 2E 01 -  -      ld  L,lcdTiming0 + 1
   57 D1:A9CB 01 08 00 00     ld  bc,8
   58 D1:A9CF 11 FE A9 D1     ld  de,screenSettings
   59 D1:A9D3 1A -  -  -  _:  ld  a,(de)
   60 D1:A9D4 ED A0 -  -      ldi
   61 D1:A9D6 2B -  -  -      dec hl
   62 D1:A9D7 77 -  -  -      ld  (hl),a
   63 D1:A9D8 23 -  -  -      inc hl
   64 D1:A9D9 EA D3 A9 D1     jp  pe,-_
   65 D1:A9DD 21 00 2C D5     ld  hl,screenBuf2
   66 D1:A9E1 22 00 34 D0     ld  (curScreenBuf),hl
   67 D1:A9E5 -  -  -  -  ;Also copied from graphx
   68 D1:A9E5 -  -  -  -  setDefaultPalette:
   69 D1:A9E5 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   70 D1:A9E9 43 -  -  -  	ld	b,e			        ; b = 0
   71 D1:A9EA 78 -  -  -  _:	ld	a,b
   72 D1:A9EB 0F -  -  -  	rrca
   73 D1:A9EC A8 -  -  -  	xor	a,b
   74 D1:A9ED E6 E0 -  -  	and	a,224
   75 D1:A9EF A8 -  -  -  	xor	a,b
   76 D1:A9F0 12 -  -  -  	ld	(de),a
   77 D1:A9F1 13 -  -  -  	inc	de
   78 D1:A9F2 78 -  -  -  	ld	a,b
   79 D1:A9F3 17 -  -  -  	rla
   80 D1:A9F4 17 -  -  -  	rla
   81 D1:A9F5 17 -  -  -  	rla
   82 D1:A9F6 78 -  -  -  	ld	a,b
   83 D1:A9F7 1F -  -  -  	rra
   84 D1:A9F8 12 -  -  -  	ld	(de),a
   85 D1:A9F9 13 -  -  -  	inc	de
   86 D1:A9FA 04 -  -  -  	inc	b
   87 D1:A9FB 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   88 D1:A9FD C9 -  -  -  	ret
   89 D1:A9FE -  -  -  -  
   90 D1:A9FE -  -  -  -  screenSettings:
   91 D1:A9FE -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   92 D1:A9FE -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
   93 D1:A9FE 07 -  -  -  	.db	7					; HSW
   94 D1:A9FF 57 -  -  -  	.db	87					; HFP
   95 D1:AA00 3F -  -  -  	.db	63					; HBP
   96 D1:AA01 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
   97 D1:AA03 B3 -  -  -  	.db	179					; VFP
   98 D1:AA04 00 -  -  -  	.db	0					; VBP
   99 D1:AA05 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  100 D1:AA06 -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  101 D1:AA06 -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  102 D1:AA06 -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  103 D1:AA06 -  -  -  -  ; Hz = 48000000/CC = 60
  104 D1:AA06 -  -  -  -  
  105 D1:AA06 -  -  -  -  
  106 D1:AA06 -  -  -  -  ;-----------------------------------------------------------------------------
  107 D1:AA06 -  -  -  -  ; Text Rendering
  108 D1:AA06 -  -  -  -  
  109 D1:AA06 -  -  -  -  clearTextBuf:
  110 D1:AA06 21 00 50 D0     ld  hl,NAMETABLE1
  111 D1:AA0A 11 01 50 D0     ld  de,NAMETABLE1+1
  112 D1:AA0E 01 FF 03 00     ld  bc,1023
  113 D1:AA12 36 20 -  -      ld  (hl),' '
  114 D1:AA14 ED B0 -  -      ldir
  115 D1:AA16 C9 -  -  -      ret
  116 D1:AA17 -  -  -  -  
  117 D1:AA17 -  -  -  -  printTextBuf:
  118 D1:AA17 21 00 50 D0     ld  hl,NAMETABLE1
  119 D1:AA1B AF -  -  -      xor a,a
  120 D1:AA1C 32 F7 31 D0     ld  (yPos),a
  121 D1:AA20 0E 1E -  -      ld  c,30
  122 D1:AA22 3E 08 -  -  _:  ld  a,8
  123 D1:AA24 32 F6 31 D0     ld  (xPos),a
  124 D1:AA28 06 20 -  -      ld  b,$20
  125 D1:AA2A 7E -  -  -  _:  ld  a,(hl)
  126 D1:AA2B 23 -  -  -      inc hl
  127 D1:AA2C C5 -  -  -      push bc
  128 D1:AA2D E5 -  -  -          push hl
  129 D1:AA2E CD 6F AA D1             call printBigFont
  130 D1:AA32 E1 -  -  -          pop hl
  131 D1:AA33 C1 -  -  -      pop bc
  132 D1:AA34 10 F4 -  -      djnz -_
  133 D1:AA36 3A F7 31 D0     ld  a,(yPos)
  134 D1:AA3A 3C -  -  -      inc a
  135 D1:AA3B 32 F7 31 D0     ld  (yPos),a
  136 D1:AA3F 0D -  -  -      dec  c
  137 D1:AA40 20 E0 -  -      jr  nz,--_
  138 D1:AA42 C9 -  -  -      ret
  139 D1:AA43 -  -  -  -  
  140 D1:AA43 -  -  -  -  ;A=column to start on
  141 D1:AA43 -  -  -  -  setLineStart:
  142 D1:AA43 32 F6 31 D0     ld  (xPos),a
  143 D1:AA47 32 03 34 D0     ld  (linestart),a
  144 D1:AA4B C9 -  -  -      ret
  145 D1:AA4C -  -  -  -  
  146 D1:AA4C -  -  -  -  ;A=row to start on
  147 D1:AA4C -  -  -  -  setCurLine:
  148 D1:AA4C 32 F7 31 D0     ld  (yPos),a
  149 D1:AA50 C9 -  -  -      ret
  150 D1:AA51 -  -  -  -  
  151 D1:AA51 -  -  -  -  newLine:
  152 D1:AA51 3A 03 34 D0     ld  a,(linestart)
  153 D1:AA55 32 F6 31 D0     ld  (xPos),a
  154 D1:AA59 3A F7 31 D0     ld  a,(yPos)
  155 D1:AA5D 3C -  -  -      inc a
  156 D1:AA5E 32 F7 31 D0     ld  (yPos),a
  157 D1:AA62 C9 -  -  -      ret
  158 D1:AA63 -  -  -  -      
  159 D1:AA63 -  -  -  -  
  160 D1:AA63 -  -  -  -  ;HL=address to string
  161 D1:AA63 -  -  -  -  printString:
  162 D1:AA63 7E -  -  -      ld  a,(hl)
  163 D1:AA64 23 -  -  -      inc hl
  164 D1:AA65 B7 -  -  -      or  a,a
  165 D1:AA66 C8 -  -  -      ret z
  166 D1:AA67 E5 -  -  -      push hl
  167 D1:AA68 CD 6F AA D1         call printBigFont
  168 D1:AA6C E1 -  -  -      pop hl
  169 D1:AA6D 18 F4 -  -      jr printString
  170 D1:AA6F -  -  -  -  
  171 D1:AA6F -  -  -  -  
  172 D1:AA6F -  -  -  -  ;in: A=chrToPrint
  173 D1:AA6F -  -  -  -  printBigFont:
  174 D1:AA6F CD 04 AB D1     call calculateScreenPtr
  175 D1:AA73 EB -  -  -      ex  de,hl
  176 D1:AA74 6F -  -  -      ld  L,a
  177 D1:AA75 26 08 -  -      ld  H,8
  178 D1:AA77 ED 6C -  -      mlt hl
  179 D1:AA79 01 1E AA D1     ld  bc,graphx_textdata
  180 D1:AA7D 09 -  -  -      add hl,bc
  181 D1:AA7E EB -  -  -      ex  de,hl
  182 D1:AA7F 0E 08 -  -      ld  c,8
  183 D1:AA81 06 08 -  -  _:  ld  b,8
  184 D1:AA83 1A -  -  -      ld  a,(de)
  185 D1:AA84 87 -  -  -  _:  add a,a
  186 D1:AA85 36 00 -  -      ld  (hl),FONTBGCOLOR
  187 D1:AA87 30 02 -  -      jr  nc,$+4
  188 D1:AA89 36 FF -  -      ld  (hl),FONTFGCOLOR
  189 D1:AA8B 23 -  -  -      inc hl
  190 D1:AA8C 10 F6 -  -      djnz -_
  191 D1:AA8E 79 -  -  -      ld  a,c
  192 D1:AA8F 01 38 01 00     ld  bc,320-8
  193 D1:AA93 09 -  -  -      add hl,bc
  194 D1:AA94 4F -  -  -      ld  c,a
  195 D1:AA95 13 -  -  -      inc de
  196 D1:AA96 0D -  -  -      dec c
  197 D1:AA97 20 E8 -  -      jr  nz,--_
  198 D1:AA99 21 F6 31 D0     ld  hl,xPos
  199 D1:AA9D 34 -  -  -      inc (hl)
  200 D1:AA9E C9 -  -  -      ret
  201 D1:AA9F -  -  -  -  
  202 D1:AA9F -  -  -  -  ;A= 0-255 numeric value to display as hex
  203 D1:AA9F -  -  -  -  printSmallNumPair:
  204 D1:AA9F CD 04 AB D1     call calculateScreenPtr
  205 D1:AAA3 F5 -  -  -      push af
  206 D1:AAA4 1F -  -  -          rra
  207 D1:AAA5 1F -  -  -          rra
  208 D1:AAA6 1F -  -  -          rra
  209 D1:AAA7 1F -  -  -          rra
  210 D1:AAA8 CD B7 AA D1         call +_
  211 D1:AAAC F1 -  -  -      pop af
  212 D1:AAAD CD B7 AA D1     call +_
  213 D1:AAB1 21 F6 31 D0     ld  hl,xPos
  214 D1:AAB5 34 -  -  -      inc (hl)
  215 D1:AAB6 C9 -  -  -      ret
  216 D1:AAB7 E6 0F -  -  _:  and a,$0F
  217 D1:AAB9 01 40 01 00     ld  bc,320
  218 D1:AABD 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  219 D1:AABE EB -  -  -      ex  de,hl
  220 D1:AABF 6F -  -  -      ld  L,a
  221 D1:AAC0 26 03 -  -      ld  H,3
  222 D1:AAC2 ED 6C -  -      mlt hl
  223 D1:AAC4 01 1E AE D1     ld  bc,SmallHexFont
  224 D1:AAC8 09 -  -  -      add hl,bc
  225 D1:AAC9 EB -  -  -      ex  de,hl
  226 D1:AACA 0E 03 -  -      ld  c,3
  227 D1:AACC 18 14 -  -      jr  printSmallNumPair_2ndHalf
  228 D1:AACE -  -  -  -  printSmallNumPair_1stHalf:
  229 D1:AACE 1A -  -  -      ld  a,(de)
  230 D1:AACF 06 04 -  -      ld  b,4
  231 D1:AAD1 87 -  -  -  _:  add a,a
  232 D1:AAD2 36 00 -  -      ld  (hl),FONTBGCOLOR
  233 D1:AAD4 30 02 -  -      jr  nc,$+4
  234 D1:AAD6 36 FF -  -      ld  (hl),FONTFGCOLOR
  235 D1:AAD8 23 -  -  -      inc hl
  236 D1:AAD9 10 F6 -  -      djnz -_
  237 D1:AADB 79 -  -  -      ld  a,c
  238 D1:AADC 01 3C 01 00     ld  bc,320-4
  239 D1:AAE0 09 -  -  -      add hl,bc
  240 D1:AAE1 4F -  -  -      ld  c,a
  241 D1:AAE2 -  -  -  -  printSmallNumPair_2ndHalf:
  242 D1:AAE2 1A -  -  -      ld  a,(de)
  243 D1:AAE3 07 -  -  -      rlca
  244 D1:AAE4 07 -  -  -      rlca
  245 D1:AAE5 07 -  -  -      rlca
  246 D1:AAE6 07 -  -  -      rlca
  247 D1:AAE7 06 04 -  -      ld  b,4
  248 D1:AAE9 87 -  -  -  _:  add a,a
  249 D1:AAEA 36 00 -  -      ld  (hl),FONTBGCOLOR
  250 D1:AAEC 30 02 -  -      jr  nc,$+4
  251 D1:AAEE 36 FF -  -      ld  (hl),FONTFGCOLOR
  252 D1:AAF0 23 -  -  -      inc hl
  253 D1:AAF1 10 F6 -  -      djnz -_
  254 D1:AAF3 13 -  -  -      inc de
  255 D1:AAF4 79 -  -  -      ld  a,c
  256 D1:AAF5 01 3C 01 00     ld  bc,320-4
  257 D1:AAF9 09 -  -  -      add hl,bc
  258 D1:AAFA 4F -  -  -      ld  c,a
  259 D1:AAFB 0D -  -  -      dec c
  260 D1:AAFC 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  261 D1:AAFE 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  262 D1:AB02 09 -  -  -      add hl,bc
  263 D1:AB03 C9 -  -  -      ret
  264 D1:AB04 -  -  -  -  
  265 D1:AB04 -  -  -  -  calculateScreenPtr:
  266 D1:AB04 -  -  -  -      ;xcoord: x * 8 
  267 D1:AB04 -  -  -  -      ;ycoord: 320 * 8 * y
  268 D1:AB04 -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  269 D1:AB04 ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  270 D1:AB09 6A -  -  -      ld  L,d     ;yPos
  271 D1:AB0A 26 A0 -  -      ld  h,160
  272 D1:AB0C ED 6C -  -      mlt hl
  273 D1:AB0E 29 -  -  -      add hl,hl
  274 D1:AB0F 16 01 -  -      ld  d,1
  275 D1:AB11 ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  276 D1:AB13 19 -  -  -      add hl,de
  277 D1:AB14 29 -  -  -      add hl,hl
  278 D1:AB15 29 -  -  -      add hl,hl
  279 D1:AB16 29 -  -  -      add hl,hl
  280 D1:AB17 ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  281 D1:AB1C 19 -  -  -      add hl,de
  282 D1:AB1D C9 -  -  -      ret
  283 D1:AB1E -  -  -  -  
  284 D1:AB1E -  -  -  -  
  285 D1:AB1E -  -  -  -  
  286 D1:AB1E -  -  -  -  
  287 D1:AB1E -  -  -  -  
  288 D1:AB1E -  -  -  -  
  289 D1:AB1E -  -  -  -  
  290 D1:AB1E -  -  -  -  
  291 D1:AB1E -  -  -  -  
  292 D1:AB1E -  -  -  -  ;-----------------------------------------------------------------------------
  293 D1:AB1E -  -  -  -  ; Data Section
  294 D1:AB1E -  -  -  -  
  295 D1:AB1E -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  296 D1:AB1E 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  297 D1:AB26 C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  298 D1:AB2E D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  299 D1:AB36 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  300 D1:AB3E 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  301 D1:AB46 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  302 D1:AB4E 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  303 D1:AB56 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  304 D1:AB5E 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  305 D1:AB66 C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  306 D1:AB6E 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  307 D1:AB76 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  308 D1:AB7E 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  309 D1:AB86 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  310 D1:AB8E 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  311 D1:AB96 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  312 D1:AB9E 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  313 D1:ABA6 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  314 D1:ABAE 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  315 D1:ABB6 FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  316 D1:ABBE 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  317 D1:ABC6 FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  318 D1:ABCE 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  319 D1:ABD6 FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  320 D1:ABDE 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  321 D1:ABE6 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  322 D1:ABEE 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  323 D1:ABF6 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  324 D1:ABFE 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  325 D1:AC06 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  326 D1:AC0E C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  327 D1:AC16 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  328 D1:AC1E 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  329 D1:AC26 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  330 D1:AC2E FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  331 D1:AC36 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  332 D1:AC3E F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  333 D1:AC46 FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  334 D1:AC4E FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  335 D1:AC56 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  336 D1:AC5E C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  337 D1:AC66 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  338 D1:AC6E 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  339 D1:AC76 C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  340 D1:AC7E C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  341 D1:AC86 C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  342 D1:AC8E C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  343 D1:AC96 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  344 D1:AC9E FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  345 D1:ACA6 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  346 D1:ACAE FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  347 D1:ACB6 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  348 D1:ACBE FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  349 D1:ACC6 C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  350 D1:ACCE C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  351 D1:ACD6 C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  352 D1:ACDE C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  353 D1:ACE6 C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  354 D1:ACEE FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  355 D1:ACF6 F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  356 D1:ACFE C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  357 D1:AD06 F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  358 D1:AD0E 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  359 D1:AD16 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  360 D1:AD1E C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  361 D1:AD26 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  362 D1:AD2E C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  363 D1:AD36 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  364 D1:AD3E 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  365 D1:AD46 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  366 D1:AD4E 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  367 D1:AD56 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  368 D1:AD5E C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  369 D1:AD66 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  370 D1:AD6E 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  371 D1:AD76 C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  372 D1:AD7E 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  373 D1:AD86 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  374 D1:AD8E 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  375 D1:AD96 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  376 D1:AD9E 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  377 D1:ADA6 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  378 D1:ADAE 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  379 D1:ADB6 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  380 D1:ADBE 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  381 D1:ADC6 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  382 D1:ADCE 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  383 D1:ADD6 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  384 D1:ADDE 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  385 D1:ADE6 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  386 D1:ADEE 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  387 D1:ADF6 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  388 D1:ADFE C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  389 D1:AE06 E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  390 D1:AE0E 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  391 D1:AE16 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  392 D1:AE1E -  -  -  -  
  393 D1:AE1E -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  394 D1:AE1E -  -  -  -  ;whose format was copied from a (then-)authorized source
  395 D1:AE1E -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  396 D1:AE1E -  -  -  -  SmallHexFont:
  397 D1:AE1E 4E AA AE -  .db $4E,$AA,$AE				;zero
  398 D1:AE21 44 C4 4E -  .db $44,$C4,$4E				;one
  399 D1:AE24 4C 24 8E -  .db $4C,$24,$8E				;two
  400 D1:AE27 4C 24 2C -  .db $4C,$24,$2C				;three
  401 D1:AE2A 48 AE 22 -  .db $48,$AE,$22				;four
  402 D1:AE2D 4E 8C 2C -  .db $4E,$8C,$2C				;five
  403 D1:AE30 45 8E AE -  .db $45,$8E,$AE				;six
  404 D1:AE33 4E 24 88 -  .db $4E,$24,$88				;seven
  405 D1:AE36 4E AE AE -  .db $4E,$AE,$AE				;eight
  406 D1:AE39 4E AE 2C -  .db $4E,$AE,$2C				;nine
  407 D1:AE3C 44 AE AA -  .db $44,$AE,$AA				;A
  408 D1:AE3F 4C AC AC -  .db $4C,$AC,$AC				;B
  409 D1:AE42 46 88 86 -  .db $46,$88,$86				;C
  410 D1:AE45 4C AA AC -  .db $4C,$AA,$AC				;D
  411 D1:AE48 4E 8C 8E -  .db $4E,$8C,$8E				;E
  412 D1:AE4B 4E 8C 88 -  .db $4E,$8C,$88				;F
  413 D1:AE4E -  -  -  -  
  414 D1:AE4E -  -  -  -  
  415 D1:AE4E -  -  -  -  
Listing for file "main.z80"
  172 D1:AE4E -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:AE4E -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:AE4E -  -  -  -  
    3 D1:AE4E -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:AE4E -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:AE4E -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:AE4E -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:AE4E -  -  -  -  ;
    8 D1:AE4E -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:AE4E -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:AE4E -  -  -  -  ;
   11 D1:AE4E -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:AE4E -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:AE4E -  -  -  -  ;
   14 D1:AE4E -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:AE4E -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:AE4E -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:AE4E -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:AE4E -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:AE4E -  -  -  -  
   20 D1:AE4E -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:AE4E -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+5 \ set SF_OVER,b
   22 D1:AE4E -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:AE4E -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:AE4E -  -  -  -  
   25 D1:AE4E -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ add a,a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:AE4E -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:AE4E -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:AE4E -  -  -  -  
   29 D1:AE4E -  -  -  -  
   30 D1:AE4E -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:AE4E -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:AE4E -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:AE4E -  -  -  -  
   34 D1:AE4E -  -  -  -  
   35 D1:AE4E -  -  -  -  
   36 D1:AE4E -  -  -  -  
   37 D1:AE4E -  -  -  -  ;=============================================================================
   38 D1:AE4E -  -  -  -  ;=============================================================================
   39 D1:AE4E -  -  -  -  ;=============================================================================
   40 D1:AE4E -  -  -  -  ;=============================================================================
   41 D1:AE4E -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:AE4E -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:AE4E -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:AE4E -  -  -  -  i6502Init:
   45 D1:AE4E -  -  -  -      ;
   46 D1:AE4E -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:AE4E -  -  -  -      ;
   48 D1:AE4E 21 00 38 D0     ld  hl,main_ram
   49 D1:AE52 01 08 20 00     ld  bc,$002008
   50 D1:AE56 1E 00 -  -      ld  e,$00
   51 D1:AE58 CD A4 B0 D1     call i6502_map_pages
   52 D1:AE5C 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:AE60 01 01 20 00     ld  bc,$002001
   54 D1:AE64 1E 20 -  -      ld  e,$20
   55 D1:AE66 CD A4 B0 D1     call i6502_map_pages
   56 D1:AE6A FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:AE6F DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:AE74 ED 22 80 -      lea hl,ix-128
   59 D1:AE77 ED 12 81 -      lea de,ix-127
   60 D1:AE7A 01 FF 00 00     ld  bc,255
   61 D1:AE7E 36 00 -  -      ld  (hl),$00
   62 D1:AE80 ED B0 -  -      ldir
   63 D1:AE82 CD 8B B0 D1     call i6502_load_instruction_set
   64 D1:AE86 -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:AE86 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:AE8A ED 27 -  -      ld  hl,(hl)
   67 D1:AE8C 11 FC 00 00     ld  de,$0000FC
   68 D1:AE90 19 -  -  -      add hl,de
   69 D1:AE91 C3 C9 C7 D1     jp inst6502_jsr
   70 D1:AE95 -  -  -  -  
   71 D1:AE95 -  -  -  -  i6502FirstLoad:
   72 D1:AE95 52 DD 17 05     ld.s de,(ix+REGPC)
   73 D1:AE99 7B -  -  -      ld  a,e
   74 D1:AE9A 1E 08 -  -      ld  e,BASETABLE_STRIDE
   75 D1:AE9C ED 5C -  -      mlt de
   76 D1:AE9E 21 00 40 D0     ld  hl,PAGETABLE
   77 D1:AEA2 19 -  -  -      add hl,de
   78 D1:AEA3 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   79 D1:AEA5 16 00 -  -      ld  d,0
   80 D1:AEA7 5F -  -  -      ld  e,a
   81 D1:AEA8 19 -  -  -      add hl,de       ;resolve final address
   82 D1:AEA9 18 19 -  -      jr  i6502FinishLoad
   83 D1:AEAB -  -  -  -  i6502NextLoad:
   84 D1:AEAB 23 -  -  -      inc hl
   85 D1:AEAC 1C -  -  -      inc e
   86 D1:AEAD 20 15 -  -      jr  nz,i6502FinishLoad
   87 D1:AEAF DD 56 06 -      ld  d,(ix+REGPC+1)
   88 D1:AEB2 14 -  -  -      inc d
   89 D1:AEB3 52 DD 1F 05     ld.s (ix+REGPC),de
   90 D1:AEB7 1E 08 -  -      ld  e,BASETABLE_STRIDE
   91 D1:AEB9 ED 5C -  -      mlt de
   92 D1:AEBB 21 00 40 D0     ld  hl,PAGETABLE
   93 D1:AEBF 19 -  -  -      add hl,de
   94 D1:AEC0 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   95 D1:AEC2 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
   96 D1:AEC4 -  -  -  -  i6502FinishLoad:
   97 D1:AEC4 7E -  -  -      ld  a,(hl)
   98 D1:AEC5 23 -  -  -      inc hl
   99 D1:AEC6 1C -  -  -      inc e
  100 D1:AEC7 20 15 -  -      jr  nz,i6502PrepNextPage
  101 D1:AEC9 DD 56 06 -      ld  d,(ix+REGPC+1)
  102 D1:AECC 14 -  -  -      inc d
  103 D1:AECD 52 DD 1F 05     ld.s (ix+REGPC),de
  104 D1:AED1 1E 08 -  -      ld  e,BASETABLE_STRIDE
  105 D1:AED3 ED 5C -  -      mlt de
  106 D1:AED5 21 00 40 D0     ld  hl,PAGETABLE
  107 D1:AED9 19 -  -  -      add hl,de
  108 D1:AEDA ED 27 -  -      ld  hl,(hl)
  109 D1:AEDC 1E 00 -  -      ld  e,0
  110 D1:AEDE -  -  -  -  i6502PrepNextPage:
  111 D1:AEDE E5 -  -  -      push hl
  112 D1:AEDF 67 -  -  -          ld  h,a
  113 D1:AEE0 2E 08 -  -          ld  l,BASETABLE_STRIDE
  114 D1:AEE2 ED 6C -  -          mlt hl
  115 D1:AEE4 01 04 40 D0         ld  bc,JUMPTABLE
  116 D1:AEE8 09 -  -  -          add hl,bc
  117 D1:AEE9 ED 27 -  -          ld  hl,(hl)     ;jumptable
  118 D1:AEEB E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  119 D1:AEEC C9 -  -  -      ret
  120 D1:AEED -  -  -  -  
  121 D1:AEED -  -  -  -  
  122 D1:AEED -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  123 D1:AEED -  -  -  -  ;   JP i6502FinishLoad
  124 D1:AEED -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  125 D1:AEED -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  126 D1:AEED -  -  -  -  ;   JP i6502NextLoad
  127 D1:AEED -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  128 D1:AEED -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  129 D1:AEED -  -  -  -  ;   JP i6502FinishLoad
  130 D1:AEED -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  131 D1:AEED -  -  -  -  
  132 D1:AEED -  -  -  -  
  133 D1:AEED -  -  -  -  ;-----------------------------------------------------------------------------    
  134 D1:AEED -  -  -  -  ;-----------------------------------------------------------------------------    
  135 D1:AEED -  -  -  -  
  136 D1:AEED -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  137 D1:AEED -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  138 D1:AEED -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  139 D1:AEED -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  140 D1:AEED -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  141 D1:AEED -  -  -  -  
  142 D1:AEED -  -  -  -  ;-----------------------------------------------------------------------------    
  143 D1:AEED -  -  -  -  ;-----------------------------------------------------------------------------    
  144 D1:AEED -  -  -  -  outline6502_imm:
  145 D1:AEED 7E -  -  -      ld  a,(hl)  ;oper uses A
  146 D1:AEEE -  -  -  -      ;oper
  147 D1:AEEE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  148 D1:AF01 ED 33 02 -      ADDCYC(2)
  149 D1:AF04 C3 AB AE D1     jp i6502NextLoad
  150 D1:AF08 -  -  -  -  
  151 D1:AF08 -  -  -  -  outline6502_abs:
  152 D1:AF08 4E -  -  -      ld  c,(hl)
  153 D1:AF09 23 -  -  -      inc hl
  154 D1:AF0A 1C -  -  -      inc e
  155 D1:AF0B 20 15 -  -      jr nz,+_
  156 D1:AF0D DD 56 06 -      ld  d,(ix+REGPC+1)
  157 D1:AF10 14 -  -  -      inc d
  158 D1:AF11 52 DD 1F 05     ld.s (ix+REGPC),de
  159 D1:AF15 1E 08 -  -      ld  e,BASETABLE_STRIDE
  160 D1:AF17 ED 5C -  -      mlt de
  161 D1:AF19 21 00 40 D0     ld  hl,PAGETABLE
  162 D1:AF1D 19 -  -  -      add hl,de
  163 D1:AF1E ED 27 -  -      ld  hl,(hl) ;
  164 D1:AF20 1E 00 -  -      ld  e,0
  165 D1:AF22 46 -  -  -  _:  ld  b,(hl)
  166 D1:AF23 E5 -  -  -      push hl
  167 D1:AF24 50 -  -  -          ld  d,b
  168 D1:AF25 79 -  -  -          ld  a,c
  169 D1:AF26 0E 08 -  -          ld  c,BASETABLE_STRIDE
  170 D1:AF28 ED 4C -  -          mlt bc
  171 D1:AF2A 21 00 40 D0         ld  hl,PAGETABLE
  172 D1:AF2E 09 -  -  -          add hl,bc
  173 D1:AF2F ED 27 -  -          ld  hl,(hl)
  174 D1:AF31 06 00 -  -          ld  b,0
  175 D1:AF33 4F -  -  -          ld  c,a
  176 D1:AF34 09 -  -  -          add hl,bc   ;full address
  177 D1:AF35 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  178 D1:AF35 7E -  -  -          ld  a,(hl)  ;oper uses A
  179 D1:AF36 -  -  -  -          ;oper
  180 D1:AF36 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  181 D1:AF49 ED 33 03 -      ADDCYC(3)
  182 D1:AF4C E1 -  -  -      pop hl
  183 D1:AF4D C3 AB AE D1     jp i6502NextLoad
  184 D1:AF51 -  -  -  -  
  185 D1:AF51 -  -  -  -  outline6502_zeropage:
  186 D1:AF51 7E -  -  -      ld  a,(hl)
  187 D1:AF52 01 00 38 D0     ld  bc,ZEROPAGE
  188 D1:AF56 81 -  -  -      add a,c
  189 D1:AF57 4F -  -  -      ld  c,a
  190 D1:AF58 0A -  -  -      ld  a,(bc)      ;oper uses A
  191 D1:AF59 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  192 D1:AF59 -  -  -  -      ;oper
  193 D1:AF59 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  194 D1:AF6C ED 33 03 -      ADDCYC(3)
  195 D1:AF6F C3 AB AE D1     jp i6502NextLoad
  196 D1:AF73 -  -  -  -  
  197 D1:AF73 -  -  -  -  
  198 D1:AF73 -  -  -  -  ;Note: has same split start as abs
  199 D1:AF73 -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  200 D1:AF73 4E -  -  -      ld  c,(hl)
  201 D1:AF74 23 -  -  -      inc hl
  202 D1:AF75 1C -  -  -      inc e
  203 D1:AF76 20 15 -  -      jr nz,+_
  204 D1:AF78 DD 56 06 -      ld  d,(ix+REGPC+1)
  205 D1:AF7B 14 -  -  -      inc d
  206 D1:AF7C 52 DD 1F 05     ld.s (ix+REGPC),de
  207 D1:AF80 1E 08 -  -      ld  e,BASETABLE_STRIDE
  208 D1:AF82 ED 5C -  -      mlt de
  209 D1:AF84 21 00 40 D0     ld  hl,PAGETABLE
  210 D1:AF88 19 -  -  -      add hl,de
  211 D1:AF89 ED 27 -  -      ld  hl,(hl) ;
  212 D1:AF8B 1E 00 -  -      ld  e,0
  213 D1:AF8D 46 -  -  -  _:  ld  b,(hl)
  214 D1:AF8E E5 -  -  -      push hl
  215 D1:AF8F 50 -  -  -          ld  d,b
  216 D1:AF90 79 -  -  -          ld  a,c
  217 D1:AF91 0E 08 -  -          ld  c,BASETABLE_STRIDE
  218 D1:AF93 ED 4C -  -          mlt bc
  219 D1:AF95 21 00 40 D0         ld  hl,PAGETABLE
  220 D1:AF99 09 -  -  -          add hl,bc
  221 D1:AF9A ED 27 -  -          ld  hl,(hl)
  222 D1:AF9C 06 00 -  -          ld  b,0
  223 D1:AF9E 4F -  -  -          ld  c,a
  224 D1:AF9F DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  225 D1:AFA2 81 -  -  -          add a,c
  226 D1:AFA3 30 04 -  -          jr  nc,+_
  227 D1:AFA5 04 -  -  -          inc b
  228 D1:AFA6 14 -  -  -          inc d
  229 D1:AFA7 FD 23 -  -          ADDCYC(1)
  230 D1:AFA9 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  231 D1:AFA9 09 -  -  -          add hl,bc   ;full address
  232 D1:AFAA 7E -  -  -          ld  a,(hl)  ;oper uses A
  233 D1:AFAB -  -  -  -          ;oper
  234 D1:AFAB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  235 D1:AFBE ED 33 04 -      ADDCYC(4)
  236 D1:AFC1 E1 -  -  -      pop hl
  237 D1:AFC2 C3 AB AE D1     jp i6502NextLoad
  238 D1:AFC6 -  -  -  -  
  239 D1:AFC6 -  -  -  -  
  240 D1:AFC6 -  -  -  -  outline6502_zpx:
  241 D1:AFC6 7E -  -  -      ld  a,(hl)
  242 D1:AFC7 01 00 38 D0     ld  bc,ZEROPAGE
  243 D1:AFCB 81 -  -  -      add a,c
  244 D1:AFCC DD 86 01 -      add a,(ix+REGX)
  245 D1:AFCF 4F -  -  -      ld  c,a
  246 D1:AFD0 0A -  -  -      ld  a,(bc)      ;oper uses A
  247 D1:AFD1 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  248 D1:AFD1 -  -  -  -      ;oper
  249 D1:AFD1 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  250 D1:AFE4 ED 33 04 -      ADDCYC(4)
  251 D1:AFE7 C3 AB AE D1     jp i6502NextLoad
  252 D1:AFEB -  -  -  -      
  253 D1:AFEB -  -  -  -  outline6502_zpy:
  254 D1:AFEB 7E -  -  -      ld  a,(hl)
  255 D1:AFEC 01 00 38 D0     ld  bc,ZEROPAGE
  256 D1:AFF0 81 -  -  -      add a,c
  257 D1:AFF1 DD 86 02 -      add a,(ix+REGY)
  258 D1:AFF4 4F -  -  -      ld  c,a
  259 D1:AFF5 0A -  -  -      ld  a,(bc)      ;oper uses A
  260 D1:AFF6 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  261 D1:AFF6 -  -  -  -      ;oper
  262 D1:AFF6 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  263 D1:B009 ED 33 04 -      ADDCYC(4)
  264 D1:B00C C3 AB AE D1     jp i6502NextLoad
  265 D1:B010 -  -  -  -  
  266 D1:B010 -  -  -  -  outline6502_preidx_indir:
  267 D1:B010 E5 -  -  -      push hl
  268 D1:B011 7E -  -  -          ld  a,(hl)
  269 D1:B012 21 00 38 D0         ld  hl,ZEROPAGE
  270 D1:B016 85 -  -  -          add a,L
  271 D1:B017 DD 86 01 -          add a,(ix+REGX)
  272 D1:B01A 6F -  -  -          ld  L,a
  273 D1:B01B 7E -  -  -          ld  a,(hl)
  274 D1:B01C 2C -  -  -          inc L
  275 D1:B01D 56 -  -  -          ld  d,(hl)
  276 D1:B01E 42 -  -  -          ld  b,d
  277 D1:B01F 0E 08 -  -          ld  c,BASETABLE_STRIDE
  278 D1:B021 ED 4C -  -          mlt bc
  279 D1:B023 21 00 40 D0         ld  hl,PAGETABLE
  280 D1:B027 09 -  -  -          add hl,bc
  281 D1:B028 ED 27 -  -          ld  hl,(hl)
  282 D1:B02A 06 00 -  -          ld  b,0
  283 D1:B02C 4F -  -  -          ld  c,a
  284 D1:B02D 09 -  -  -          add hl,bc
  285 D1:B02E -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  286 D1:B02E 7E -  -  -          ld  a,(hl)  ;oper uses A.
  287 D1:B02F -  -  -  -          ;oper
  288 D1:B02F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  289 D1:B042 ED 33 06 -          ADDCYC(6)
  290 D1:B045 E1 -  -  -      pop hl
  291 D1:B046 C3 AB AE D1     jp i6502NextLoad
  292 D1:B04A -  -  -  -  
  293 D1:B04A -  -  -  -  outline6502_postidx_indir:
  294 D1:B04A E5 -  -  -      push hl
  295 D1:B04B 7E -  -  -          ld  a,(hl)
  296 D1:B04C 21 00 38 D0         ld  hl,ZEROPAGE
  297 D1:B050 85 -  -  -          add a,L
  298 D1:B051 6F -  -  -          ld  L,a
  299 D1:B052 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  300 D1:B053 2C -  -  -          inc L
  301 D1:B054 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  302 D1:B057 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  303 D1:B058 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  304 D1:B05A FD 23 -  -          ADDCYC(1)
  305 D1:B05C 24 -  -  -          inc h
  306 D1:B05D 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  307 D1:B05E 2E 08 -  -          ld  L,BASETABLE_STRIDE
  308 D1:B060 ED 6C -  -          mlt hl          ;23.
  309 D1:B062 01 00 40 D0         ld  bc,PAGETABLE
  310 D1:B066 09 -  -  -          add hl,bc
  311 D1:B067 ED 27 -  -          ld  hl,(hl)     ;address get.
  312 D1:B069 01 00 00 00         ld  bc,0
  313 D1:B06D 4F -  -  -          ld  c,a
  314 D1:B06E 09 -  -  -          add hl,bc       ;Full address get.
  315 D1:B06F 7E -  -  -          ld  a,(hl)
  316 D1:B070 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  317 D1:B070 -  -  -  -          ;oper
  318 D1:B070 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  319 D1:B083 ED 33 05 -          ADDCYC(5)
  320 D1:B086 E1 -  -  -      pop hl
  321 D1:B087 C3 AB AE D1     jp i6502NextLoad
  322 D1:B08B -  -  -  -  
  323 D1:B08B -  -  -  -  ;-----------------------------------------------------------------------------
  324 D1:B08B -  -  -  -  ;-----------------------------------------------------------------------------
  325 D1:B08B -  -  -  -  ;-----------------------------------------------------------------------------
  326 D1:B08B -  -  -  -  
  327 D1:B08B -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  328 D1:B08B -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  329 D1:B08B -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  330 D1:B08B -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  331 D1:B08B -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  332 D1:B08B -  -  -  -  
  333 D1:B08B -  -  -  -  ;-----------------------------------------------------------------------------
  334 D1:B08B -  -  -  -  
  335 D1:B08B -  -  -  -  i6502_load_instruction_set:
  336 D1:B08B DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  337 D1:B090 21 5F C8 D1     ld  hl,inst6502_instruction_set
  338 D1:B094 06 00 -  -      ld  b,0
  339 D1:B096 ED 17 -  -  _:  ld  de,(hl)
  340 D1:B098 DD 1F 00 -      ld  (ix+0),de
  341 D1:B09B 23 -  -  -      inc hl
  342 D1:B09C 23 -  -  -      inc hl
  343 D1:B09D 23 -  -  -      inc hl
  344 D1:B09E ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  345 D1:B0A1 10 F3 -  -      djnz -_
  346 D1:B0A3 C9 -  -  -      ret
  347 D1:B0A4 -  -  -  -  
  348 D1:B0A4 -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  349 D1:B0A4 -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  350 D1:B0A4 -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  351 D1:B0A4 -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  352 D1:B0A4 -  -  -  -  i6502_map_pages:
  353 D1:B0A4 16 08 -  -      ld  d,BASETABLE_STRIDE
  354 D1:B0A6 ED 5C -  -      mlt de
  355 D1:B0A8 DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  356 D1:B0AD DD 19 -  -      add ix,de
  357 D1:B0AF 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  358 D1:B0B0 11 00 01 00     ld  de,256
  359 D1:B0B4 E5 -  -  -      push hl
  360 D1:B0B5 FD E1 -  -      pop iy
  361 D1:B0B7 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  362 D1:B0B8 DD 2F 00 -  _:  ld  (ix+0),hl
  363 D1:B0BB 19 -  -  -      add hl,de                   ;next page z80
  364 D1:B0BC ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  365 D1:B0BF 3D -  -  -      dec a
  366 D1:B0C0 C8 -  -  -      ret z
  367 D1:B0C1 10 F5 -  -      djnz -_
  368 D1:B0C3 ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  369 D1:B0C6 18 EF -  -      jr --_
  370 D1:B0C8 -  -  -  -  
  371 D1:B0C8 -  -  -  -  
  372 D1:B0C8 -  -  -  -  subroutine6502_abs_split_start:
  373 D1:B0C8 4E -  -  -      ld  c,(hl)
  374 D1:B0C9 23 -  -  -      inc hl
  375 D1:B0CA 1C -  -  -      inc e
  376 D1:B0CB 20 15 -  -      jr nz,+_
  377 D1:B0CD DD 56 06 -      ld  d,(ix+REGPC+1)
  378 D1:B0D0 14 -  -  -      inc d
  379 D1:B0D1 52 DD 1F 05     ld.s (ix+REGPC),de
  380 D1:B0D5 1E 08 -  -      ld  e,BASETABLE_STRIDE
  381 D1:B0D7 ED 5C -  -      mlt de
  382 D1:B0D9 21 00 40 D0     ld  hl,PAGETABLE
  383 D1:B0DD 19 -  -  -      add hl,de
  384 D1:B0DE ED 27 -  -      ld  hl,(hl) ;
  385 D1:B0E0 1E 00 -  -      ld  e,0
  386 D1:B0E2 46 -  -  -  _:  ld  b,(hl)
  387 D1:B0E3 C9 -  -  -      ret
  388 D1:B0E4 -  -  -  -  
  389 D1:B0E4 -  -  -  -  subroutine6502_adc_combined_end:
  390 D1:B0E4 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  391 D1:B0E7 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  392 D1:B0E8 DD 7E 00 -      ld  a,(ix+REGA)
  393 D1:B0EB 89 -  -  -      adc a,c
  394 D1:B0EC DD 77 00 -      ld  (ix+REGA),a
  395 D1:B0EF DD 46 04 CB 
              B0 E2 F9 B0 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  396 D1:B110 C3 AB AE D1     jp i6502NextLoad
  397 D1:B114 -  -  -  -  
  398 D1:B114 -  -  -  -  subroutine6502_sbc_combined_end:
  399 D1:B114 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  400 D1:B117 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  401 D1:B118 DD 7E 00 -      ld  a,(ix+REGA)
  402 D1:B11B 3F -  -  -      ccf
  403 D1:B11C 99 -  -  -      sbc a,c
  404 D1:B11D 3F -  -  -      ccf
  405 D1:B11E DD 77 00 -      ld  (ix+REGA),a
  406 D1:B121 DD 46 04 CB 
              B0 E2 2B B1 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  407 D1:B142 C3 AB AE D1     jp i6502NextLoad
  408 D1:B146 -  -  -  -  
  409 D1:B146 -  -  -  -  subroutine6502_cmp_combined_end:
  410 D1:B146 DD 7E 00 -      ld  a,(ix+REGA)
  411 D1:B149 B8 -  -  -      cp  b
  412 D1:B14A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  413 D1:B163 C3 AB AE D1     jp i6502NextLoad
  414 D1:B167 -  -  -  -  
  415 D1:B167 -  -  -  -  subroutine6502_take_branch:
  416 D1:B167 FD 23 -  -      ADDCYC(1)
  417 D1:B169 7E -  -  -      ld  a,(hl)  ;offset byte
  418 D1:B16A 6F -  -  -      ld  L,a
  419 D1:B16B 87 -  -  -      add a,a
  420 D1:B16C 9F -  -  -      sbc a,a
  421 D1:B16D 67 -  -  -      ld  H,a     ;sign-extending offset byte
  422 D1:B16E DD 56 06 -      ld  d,(ix+REGPC+1)
  423 D1:B171 13 -  -  -      inc de
  424 D1:B172 52 19 -  -      add.s hl,de
  425 D1:B174 7C -  -  -      ld  a,h
  426 D1:B175 BA -  -  -      cp  d       ;is high byte the same?
  427 D1:B176 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  428 D1:B178 FD 23 -  -      ADDCYC(1)
  429 D1:B17A 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  430 D1:B17E C3 95 AE D1     jp  i6502FirstLoad
  431 D1:B182 -  -  -  -  
  432 D1:B182 -  -  -  -  
  433 D1:B182 -  -  -  -  ;-----------------------------------------------------------------------------
  434 D1:B182 -  -  -  -  
  435 D1:B182 -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  436 D1:B182 -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  437 D1:B182 -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  438 D1:B182 -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  439 D1:B182 -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  440 D1:B182 -  -  -  -  
  441 D1:B182 -  -  -  -  ;-----------------------------------------------------------------------------
  442 D1:B182 -  -  -  -  
  443 D1:B182 -  -  -  -  ;-----------------------------------------------------------------------------
  444 D1:B182 -  -  -  -  ;-----------------------------------------------------------------------------
  445 D1:B182 -  -  -  -  ;-----------------------------------------------------------------------------
  446 D1:B182 -  -  -  -  ;Instructions by type: Transfer Instructions
  447 D1:B182 -  -  -  -  ;LDA - Load Accumulator with Memory
  448 D1:B182 -  -  -  -  ;    M -> A
  449 D1:B182 -  -  -  -  ;    N	Z	C	I	D	V
  450 D1:B182 -  -  -  -  ;    +	+	-	-	-	-
  451 D1:B182 -  -  -  -  
  452 D1:B182 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  453 D1:B182 -  -  -  -  ;immediate	LDA #oper	A9	2	2
  454 D1:B182 -  -  -  -  inst6502_lda_imm:
  455 D1:B182 7E -  -  -      ld  a,(hl)
  456 D1:B183 DD 77 00 -      ld  (ix+REGA),a
  457 D1:B186 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  458 D1:B199 ED 33 02 -      ADDCYC(2)
  459 D1:B19C C3 AB AE D1     jp i6502NextLoad
  460 D1:B1A0 -  -  -  -  
  461 D1:B1A0 -  -  -  -  ;zeropage	LDA oper	A5	2	3
  462 D1:B1A0 -  -  -  -  inst6502_lda_zp:
  463 D1:B1A0 7E -  -  -      ld  a,(hl)
  464 D1:B1A1 01 00 38 D0     ld  bc,ZEROPAGE
  465 D1:B1A5 81 -  -  -      add a,c
  466 D1:B1A6 4F -  -  -      ld  c,a
  467 D1:B1A7 0A -  -  -      ld  a,(bc)
  468 D1:B1A8 DD 77 00 -      ld  (ix+REGA),a
  469 D1:B1AB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  470 D1:B1BE ED 33 03 -      ADDCYC(3)
  471 D1:B1C1 C3 AB AE D1     jp i6502NextLoad
  472 D1:B1C5 -  -  -  -  
  473 D1:B1C5 -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  474 D1:B1C5 -  -  -  -  inst6502_lda_zpx:
  475 D1:B1C5 7E -  -  -      ld  a,(hl)
  476 D1:B1C6 01 00 38 D0     ld  bc,ZEROPAGE
  477 D1:B1CA 81 -  -  -      add a,c
  478 D1:B1CB DD 86 01 -      add a,(ix+REGX)
  479 D1:B1CE 4F -  -  -      ld  c,a
  480 D1:B1CF 0A -  -  -      ld  a,(bc)
  481 D1:B1D0 DD 77 00 -      ld  (ix+REGA),a
  482 D1:B1D3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  483 D1:B1E6 ED 33 04 -      ADDCYC(4)
  484 D1:B1E9 C3 AB AE D1     jp i6502NextLoad
  485 D1:B1ED -  -  -  -  
  486 D1:B1ED -  -  -  -  ;absolute	LDA oper	AD	3	4
  487 D1:B1ED -  -  -  -  inst6502_lda_abs:
  488 D1:B1ED CD C8 B0 D1     call subroutine6502_abs_split_start
  489 D1:B1F1 E5 -  -  -      push hl
  490 D1:B1F2 50 -  -  -          ld  d,b
  491 D1:B1F3 79 -  -  -          ld  a,c
  492 D1:B1F4 0E 08 -  -          ld  c,BASETABLE_STRIDE
  493 D1:B1F6 ED 4C -  -          mlt bc
  494 D1:B1F8 21 00 40 D0         ld  hl,PAGETABLE
  495 D1:B1FC 09 -  -  -          add hl,bc
  496 D1:B1FD ED 27 -  -          ld  hl,(hl)
  497 D1:B1FF 06 00 -  -          ld  b,0
  498 D1:B201 4F -  -  -          ld  c,a
  499 D1:B202 09 -  -  -          add hl,bc   ;full address
  500 D1:B203 7E -  -  -          READ_ACCESS
  501 D1:B204 DD 77 00 -          ld (ix+REGA),a
  502 D1:B207 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  503 D1:B21A ED 33 04 -          ADDCYC(4)
  504 D1:B21D E1 -  -  -      pop hl
  505 D1:B21E C3 AB AE D1     jp i6502NextLoad
  506 D1:B222 -  -  -  -  
  507 D1:B222 -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  508 D1:B222 -  -  -  -  inst6502_lda_absx:
  509 D1:B222 CD C8 B0 D1     call subroutine6502_abs_split_start
  510 D1:B226 E5 -  -  -      push hl
  511 D1:B227 50 -  -  -          ld  d,b
  512 D1:B228 79 -  -  -          ld  a,c
  513 D1:B229 0E 08 -  -          ld  c,BASETABLE_STRIDE
  514 D1:B22B ED 4C -  -          mlt bc
  515 D1:B22D 21 00 40 D0         ld  hl,PAGETABLE
  516 D1:B231 09 -  -  -          add hl,bc
  517 D1:B232 ED 27 -  -          ld  hl,(hl)
  518 D1:B234 06 00 -  -          ld  b,0
  519 D1:B236 DD 86 01 -          add a,(ix+REGX)
  520 D1:B239 4F -  -  -          ld  c,a
  521 D1:B23A 30 04 -  -          jr  nc,+_
  522 D1:B23C FD 23 -  -          ADDCYC(1)
  523 D1:B23E 04 -  -  -          inc b
  524 D1:B23F 14 -  -  -          inc d
  525 D1:B240 09 -  -  -  _:      add hl,bc   ;full address
  526 D1:B241 7E -  -  -          READ_ACCESS
  527 D1:B242 DD 77 00 -          ld (ix+REGA),a
  528 D1:B245 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  529 D1:B258 ED 33 04 -          ADDCYC(4)
  530 D1:B25B E1 -  -  -      pop hl
  531 D1:B25C C3 AB AE D1     jp i6502NextLoad
  532 D1:B260 -  -  -  -  
  533 D1:B260 -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  534 D1:B260 -  -  -  -  inst6502_lda_absy:
  535 D1:B260 CD C8 B0 D1     call subroutine6502_abs_split_start
  536 D1:B264 E5 -  -  -      push hl
  537 D1:B265 50 -  -  -          ld  d,b
  538 D1:B266 79 -  -  -          ld  a,c
  539 D1:B267 0E 08 -  -          ld  c,BASETABLE_STRIDE
  540 D1:B269 ED 4C -  -          mlt bc
  541 D1:B26B 21 00 40 D0         ld  hl,PAGETABLE
  542 D1:B26F 09 -  -  -          add hl,bc
  543 D1:B270 ED 27 -  -          ld  hl,(hl)
  544 D1:B272 06 00 -  -          ld  b,0
  545 D1:B274 DD 86 02 -          add a,(ix+REGY)
  546 D1:B277 4F -  -  -          ld  c,a
  547 D1:B278 30 04 -  -          jr  nc,+_
  548 D1:B27A FD 23 -  -          ADDCYC(1)
  549 D1:B27C 04 -  -  -          inc b
  550 D1:B27D 14 -  -  -          inc d
  551 D1:B27E 09 -  -  -  _:      add hl,bc   ;full address
  552 D1:B27F 7E -  -  -          READ_ACCESS
  553 D1:B280 DD 77 00 -          ld (ix+REGA),a
  554 D1:B283 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  555 D1:B296 ED 33 04 -          ADDCYC(4)
  556 D1:B299 E1 -  -  -      pop hl
  557 D1:B29A C3 AB AE D1     jp i6502NextLoad
  558 D1:B29E -  -  -  -  
  559 D1:B29E -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  560 D1:B29E -  -  -  -  inst6502_lda_indx:
  561 D1:B29E E5 -  -  -      push hl
  562 D1:B29F 7E -  -  -          ld  a,(hl)
  563 D1:B2A0 21 00 38 D0         ld  hl,ZEROPAGE
  564 D1:B2A4 85 -  -  -          add a,L
  565 D1:B2A5 DD 86 01 -          add a,(ix+REGX)
  566 D1:B2A8 6F -  -  -          ld  L,a
  567 D1:B2A9 7E -  -  -          ld  a,(hl)
  568 D1:B2AA 2C -  -  -          inc L
  569 D1:B2AB 56 -  -  -          ld  d,(hl)
  570 D1:B2AC 42 -  -  -          ld  b,d
  571 D1:B2AD 0E 08 -  -          ld  c,BASETABLE_STRIDE
  572 D1:B2AF ED 4C -  -          mlt bc
  573 D1:B2B1 21 00 40 D0         ld  hl,PAGETABLE
  574 D1:B2B5 09 -  -  -          add hl,bc
  575 D1:B2B6 ED 27 -  -          ld  hl,(hl)
  576 D1:B2B8 06 00 -  -          ld  b,0
  577 D1:B2BA 4F -  -  -          ld  c,a
  578 D1:B2BB 09 -  -  -          add hl,bc
  579 D1:B2BC 7E -  -  -          READ_ACCESS
  580 D1:B2BD DD 77 00 -          ld (ix+REGA),a
  581 D1:B2C0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  582 D1:B2D3 ED 33 06 -          ADDCYC(6)
  583 D1:B2D6 E1 -  -  -      pop hl
  584 D1:B2D7 C3 AB AE D1     jp i6502NextLoad
  585 D1:B2DB -  -  -  -  
  586 D1:B2DB -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  587 D1:B2DB -  -  -  -  inst6502_lda_indy:
  588 D1:B2DB E5 -  -  -      push hl
  589 D1:B2DC 7E -  -  -          ld  a,(hl)
  590 D1:B2DD 21 00 38 D0         ld  hl,ZEROPAGE
  591 D1:B2E1 85 -  -  -          add a,L
  592 D1:B2E2 6F -  -  -          ld  L,a
  593 D1:B2E3 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  594 D1:B2E4 2C -  -  -          inc L
  595 D1:B2E5 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  596 D1:B2E8 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  597 D1:B2E9 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  598 D1:B2EB FD 23 -  -          ADDCYC(1)
  599 D1:B2ED 24 -  -  -          inc h
  600 D1:B2EE 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  601 D1:B2EF 2E 08 -  -          ld  L,BASETABLE_STRIDE
  602 D1:B2F1 ED 6C -  -          mlt hl          ;23.
  603 D1:B2F3 01 00 40 D0         ld  bc,PAGETABLE
  604 D1:B2F7 09 -  -  -          add hl,bc
  605 D1:B2F8 ED 27 -  -          ld  hl,(hl)     ;address get.
  606 D1:B2FA 01 00 00 00         ld  bc,0
  607 D1:B2FE 4F -  -  -          ld  c,a
  608 D1:B2FF 09 -  -  -          add hl,bc       ;Full address get.
  609 D1:B300 7E -  -  -          READ_ACCESS
  610 D1:B301 DD 77 00 -          ld  (ix+REGA),a
  611 D1:B304 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  612 D1:B317 ED 33 05 -          ADDCYC(5)
  613 D1:B31A E1 -  -  -      pop hl
  614 D1:B31B C3 AB AE D1     jp i6502NextLoad
  615 D1:B31F -  -  -  -  
  616 D1:B31F -  -  -  -  ;-----------------------------------------------------------------------------
  617 D1:B31F -  -  -  -  ;LDX - Load Index X with Memory
  618 D1:B31F -  -  -  -  ;    M -> X
  619 D1:B31F -  -  -  -  ;    N	Z	C	I	D	V
  620 D1:B31F -  -  -  -  ;    +	+	-	-	-	-
  621 D1:B31F -  -  -  -  
  622 D1:B31F -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  623 D1:B31F -  -  -  -  inst6502_ldx_imm:
  624 D1:B31F 7E -  -  -      ld  a,(hl)
  625 D1:B320 DD 77 01 -      ld  (ix+REGX),a
  626 D1:B323 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  627 D1:B336 ED 33 02 -      ADDCYC(2)
  628 D1:B339 C3 AB AE D1     jp i6502NextLoad
  629 D1:B33D -  -  -  -  
  630 D1:B33D -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  631 D1:B33D -  -  -  -  inst6502_ldx_zp:
  632 D1:B33D 7E -  -  -      ld  a,(hl)
  633 D1:B33E 01 00 38 D0     ld  bc,ZEROPAGE
  634 D1:B342 81 -  -  -      add a,c
  635 D1:B343 4F -  -  -      ld  c,a
  636 D1:B344 0A -  -  -      ld  a,(bc)
  637 D1:B345 DD 77 01 -      ld  (ix+REGX),a
  638 D1:B348 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  639 D1:B35B ED 33 03 -      ADDCYC(3)
  640 D1:B35E C3 AB AE D1     jp i6502NextLoad
  641 D1:B362 -  -  -  -  
  642 D1:B362 -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  643 D1:B362 -  -  -  -  inst6502_ldx_zpy:
  644 D1:B362 7E -  -  -      ld  a,(hl)
  645 D1:B363 01 00 38 D0     ld  bc,ZEROPAGE
  646 D1:B367 81 -  -  -      add a,c
  647 D1:B368 DD 86 02 -      add a,(ix+REGY)
  648 D1:B36B 4F -  -  -      ld  c,a
  649 D1:B36C 0A -  -  -      ld  a,(bc)
  650 D1:B36D DD 77 01 -      ld  (ix+REGX),a
  651 D1:B370 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  652 D1:B383 ED 33 04 -      ADDCYC(4)
  653 D1:B386 C3 AB AE D1     jp i6502NextLoad
  654 D1:B38A -  -  -  -  
  655 D1:B38A -  -  -  -  ;absolute	LDX oper	AE	3	4  
  656 D1:B38A -  -  -  -  inst6502_ldx_abs:
  657 D1:B38A CD C8 B0 D1     call subroutine6502_abs_split_start
  658 D1:B38E E5 -  -  -      push hl
  659 D1:B38F 50 -  -  -          ld  d,b
  660 D1:B390 79 -  -  -          ld  a,c
  661 D1:B391 0E 08 -  -          ld  c,BASETABLE_STRIDE
  662 D1:B393 ED 4C -  -          mlt bc
  663 D1:B395 21 00 40 D0         ld  hl,PAGETABLE
  664 D1:B399 09 -  -  -          add hl,bc
  665 D1:B39A ED 27 -  -          ld  hl,(hl)
  666 D1:B39C 06 00 -  -          ld  b,0
  667 D1:B39E 4F -  -  -          ld  c,a
  668 D1:B39F 09 -  -  -          add hl,bc   ;full address
  669 D1:B3A0 7E -  -  -          READ_ACCESS
  670 D1:B3A1 DD 77 01 -          ld (ix+REGX),a
  671 D1:B3A4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  672 D1:B3B7 ED 33 04 -          ADDCYC(4)
  673 D1:B3BA E1 -  -  -      pop hl
  674 D1:B3BB C3 AB AE D1     jp i6502NextLoad
  675 D1:B3BF -  -  -  -  
  676 D1:B3BF -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  677 D1:B3BF -  -  -  -  inst6502_ldx_absy:
  678 D1:B3BF CD C8 B0 D1     call subroutine6502_abs_split_start
  679 D1:B3C3 E5 -  -  -      push hl
  680 D1:B3C4 50 -  -  -          ld  d,b
  681 D1:B3C5 79 -  -  -          ld  a,c
  682 D1:B3C6 0E 08 -  -          ld  c,BASETABLE_STRIDE
  683 D1:B3C8 ED 4C -  -          mlt bc
  684 D1:B3CA 21 00 40 D0         ld  hl,PAGETABLE
  685 D1:B3CE 09 -  -  -          add hl,bc
  686 D1:B3CF ED 27 -  -          ld  hl,(hl)
  687 D1:B3D1 06 00 -  -          ld  b,0
  688 D1:B3D3 DD 86 02 -          add a,(ix+REGY)
  689 D1:B3D6 4F -  -  -          ld  c,a
  690 D1:B3D7 30 04 -  -          jr  nc,+_
  691 D1:B3D9 FD 23 -  -          ADDCYC(1)
  692 D1:B3DB 04 -  -  -          inc b
  693 D1:B3DC 14 -  -  -          inc d
  694 D1:B3DD 09 -  -  -  _:      add hl,bc   ;full address
  695 D1:B3DE 7E -  -  -          READ_ACCESS
  696 D1:B3DF DD 77 01 -          ld (ix+REGX),a
  697 D1:B3E2 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  698 D1:B3F5 ED 33 04 -          ADDCYC(4)
  699 D1:B3F8 E1 -  -  -      pop hl
  700 D1:B3F9 C3 AB AE D1     jp i6502NextLoad
  701 D1:B3FD -  -  -  -  
  702 D1:B3FD -  -  -  -  ;-----------------------------------------------------------------------------
  703 D1:B3FD -  -  -  -  ;LDY -  Load Index Y with Memory
  704 D1:B3FD -  -  -  -  ;    M -> Y
  705 D1:B3FD -  -  -  -  ;    N	Z	C	I	D	V
  706 D1:B3FD -  -  -  -  ;    +	+	-	-	-	-
  707 D1:B3FD -  -  -  -  
  708 D1:B3FD -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  709 D1:B3FD -  -  -  -  inst6502_ldy_imm:
  710 D1:B3FD 7E -  -  -      ld  a,(hl)
  711 D1:B3FE DD 77 02 -      ld  (ix+REGY),a
  712 D1:B401 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  713 D1:B414 ED 33 02 -      ADDCYC(2)
  714 D1:B417 C3 AB AE D1     jp i6502NextLoad
  715 D1:B41B -  -  -  -  
  716 D1:B41B -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  717 D1:B41B -  -  -  -  inst6502_ldy_zp:
  718 D1:B41B 7E -  -  -      ld  a,(hl)
  719 D1:B41C 01 00 38 D0     ld  bc,ZEROPAGE
  720 D1:B420 81 -  -  -      add a,c
  721 D1:B421 4F -  -  -      ld  c,a
  722 D1:B422 0A -  -  -      ld  a,(bc)
  723 D1:B423 DD 77 02 -      ld  (ix+REGY),a
  724 D1:B426 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  725 D1:B439 ED 33 03 -      ADDCYC(3)
  726 D1:B43C C3 AB AE D1     jp i6502NextLoad
  727 D1:B440 -  -  -  -  
  728 D1:B440 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  729 D1:B440 -  -  -  -  inst6502_ldy_zpx:
  730 D1:B440 7E -  -  -      ld  a,(hl)
  731 D1:B441 01 00 38 D0     ld  bc,ZEROPAGE
  732 D1:B445 81 -  -  -      add a,c
  733 D1:B446 DD 86 01 -      add a,(ix+REGX)
  734 D1:B449 4F -  -  -      ld  c,a
  735 D1:B44A 0A -  -  -      ld  a,(bc)
  736 D1:B44B DD 77 02 -      ld  (ix+REGY),a
  737 D1:B44E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  738 D1:B461 ED 33 04 -      ADDCYC(4)
  739 D1:B464 C3 AB AE D1     jp i6502NextLoad
  740 D1:B468 -  -  -  -  
  741 D1:B468 -  -  -  -  ;absolute	LDY oper	AC	3	4  
  742 D1:B468 -  -  -  -  inst6502_ldy_abs:
  743 D1:B468 CD C8 B0 D1     call subroutine6502_abs_split_start
  744 D1:B46C E5 -  -  -      push hl
  745 D1:B46D 50 -  -  -          ld  d,b
  746 D1:B46E 79 -  -  -          ld  a,c
  747 D1:B46F 0E 08 -  -          ld  c,BASETABLE_STRIDE
  748 D1:B471 ED 4C -  -          mlt bc
  749 D1:B473 21 00 40 D0         ld  hl,PAGETABLE
  750 D1:B477 09 -  -  -          add hl,bc
  751 D1:B478 ED 27 -  -          ld  hl,(hl)
  752 D1:B47A 06 00 -  -          ld  b,0
  753 D1:B47C 4F -  -  -          ld  c,a
  754 D1:B47D 09 -  -  -          add hl,bc   ;full address
  755 D1:B47E 7E -  -  -          READ_ACCESS
  756 D1:B47F DD 77 02 -          ld (ix+REGY),a
  757 D1:B482 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  758 D1:B495 ED 33 04 -          ADDCYC(4)
  759 D1:B498 E1 -  -  -      pop hl
  760 D1:B499 C3 AB AE D1     jp i6502NextLoad
  761 D1:B49D -  -  -  -  
  762 D1:B49D -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  763 D1:B49D -  -  -  -  inst6502_ldy_absx:
  764 D1:B49D CD C8 B0 D1     call subroutine6502_abs_split_start
  765 D1:B4A1 E5 -  -  -      push hl
  766 D1:B4A2 50 -  -  -          ld  d,b
  767 D1:B4A3 79 -  -  -          ld  a,c
  768 D1:B4A4 0E 08 -  -          ld  c,BASETABLE_STRIDE
  769 D1:B4A6 ED 4C -  -          mlt bc
  770 D1:B4A8 21 00 40 D0         ld  hl,PAGETABLE
  771 D1:B4AC 09 -  -  -          add hl,bc
  772 D1:B4AD ED 27 -  -          ld  hl,(hl)
  773 D1:B4AF 06 00 -  -          ld  b,0
  774 D1:B4B1 DD 86 01 -          add a,(ix+REGX)
  775 D1:B4B4 4F -  -  -          ld  c,a
  776 D1:B4B5 30 04 -  -          jr  nc,+_
  777 D1:B4B7 FD 23 -  -          ADDCYC(1)
  778 D1:B4B9 04 -  -  -          inc b
  779 D1:B4BA 14 -  -  -          inc d
  780 D1:B4BB 09 -  -  -  _:      add hl,bc   ;full address
  781 D1:B4BC 7E -  -  -          READ_ACCESS
  782 D1:B4BD DD 77 02 -          ld (ix+REGY),a
  783 D1:B4C0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  784 D1:B4D3 ED 33 04 -          ADDCYC(4)
  785 D1:B4D6 E1 -  -  -      pop hl
  786 D1:B4D7 C3 AB AE D1     jp i6502NextLoad
  787 D1:B4DB -  -  -  -  
  788 D1:B4DB -  -  -  -  ;-----------------------------------------------------------------------------
  789 D1:B4DB -  -  -  -  ;STA - Store Accumulator in Memory
  790 D1:B4DB -  -  -  -  ;    A -> M
  791 D1:B4DB -  -  -  -  ;    N	Z	C	I	D	V
  792 D1:B4DB -  -  -  -  ;    -	-	-	-	-	-
  793 D1:B4DB -  -  -  -  
  794 D1:B4DB -  -  -  -  ;zeropage	STA oper	85	2	3  
  795 D1:B4DB -  -  -  -  inst6502_sta_zp:
  796 D1:B4DB 7E -  -  -      ld  a,(hl)
  797 D1:B4DC 01 00 38 D0     ld  bc,ZEROPAGE
  798 D1:B4E0 81 -  -  -      add a,c
  799 D1:B4E1 4F -  -  -      ld  c,a
  800 D1:B4E2 DD 7E 00 -      ld  a,(ix+REGA)
  801 D1:B4E5 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  802 D1:B4E6 ED 33 03 -      ADDCYC(3)
  803 D1:B4E9 C3 AB AE D1     jp i6502NextLoad
  804 D1:B4ED -  -  -  -  
  805 D1:B4ED -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  806 D1:B4ED -  -  -  -  inst6502_sta_zpx:
  807 D1:B4ED 7E -  -  -      ld  a,(hl)
  808 D1:B4EE 01 00 38 D0     ld  bc,ZEROPAGE
  809 D1:B4F2 81 -  -  -      add a,c
  810 D1:B4F3 DD 86 01 -      add a,(ix+REGX)
  811 D1:B4F6 4F -  -  -      ld  c,a
  812 D1:B4F7 DD 7E 00 -      ld  a,(ix+REGA)
  813 D1:B4FA 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  814 D1:B4FB ED 33 04 -      ADDCYC(4)
  815 D1:B4FE C3 AB AE D1     jp i6502NextLoad
  816 D1:B502 -  -  -  -  
  817 D1:B502 -  -  -  -  ;absolute	STA oper	8D	3	4
  818 D1:B502 -  -  -  -  inst6502_sta_abs:
  819 D1:B502 CD C8 B0 D1     call subroutine6502_abs_split_start
  820 D1:B506 E5 -  -  -      push hl
  821 D1:B507 50 -  -  -          ld  d,b
  822 D1:B508 79 -  -  -          ld  a,c
  823 D1:B509 0E 08 -  -          ld  c,BASETABLE_STRIDE
  824 D1:B50B ED 4C -  -          mlt bc
  825 D1:B50D 21 00 40 D0         ld  hl,PAGETABLE
  826 D1:B511 09 -  -  -          add hl,bc
  827 D1:B512 ED 27 -  -          ld  hl,(hl)
  828 D1:B514 06 00 -  -          ld  b,0
  829 D1:B516 4F -  -  -          ld  c,a
  830 D1:B517 09 -  -  -          add hl,bc   ;full address
  831 D1:B518 DD 46 00 -          ld  b,(ix+REGA)
  832 D1:B51B 70 -  -  -          WRITE_ACCESS
  833 D1:B51C ED 33 04 -          ADDCYC(4)
  834 D1:B51F E1 -  -  -      pop hl
  835 D1:B520 C3 AB AE D1     jp i6502NextLoad
  836 D1:B524 -  -  -  -  
  837 D1:B524 -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  838 D1:B524 -  -  -  -  inst6502_sta_absx:
  839 D1:B524 CD C8 B0 D1     call subroutine6502_abs_split_start
  840 D1:B528 E5 -  -  -      push hl
  841 D1:B529 50 -  -  -          ld  d,b
  842 D1:B52A 79 -  -  -          ld  a,c
  843 D1:B52B 0E 08 -  -          ld  c,BASETABLE_STRIDE
  844 D1:B52D ED 4C -  -          mlt bc
  845 D1:B52F 21 00 40 D0         ld  hl,PAGETABLE
  846 D1:B533 09 -  -  -          add hl,bc
  847 D1:B534 ED 27 -  -          ld  hl,(hl)
  848 D1:B536 06 00 -  -          ld  b,0
  849 D1:B538 DD 86 01 -          add a,(ix+REGX)
  850 D1:B53B 4F -  -  -          ld  c,a
  851 D1:B53C 30 02 -  -          jr  nc,+_
  852 D1:B53E 04 -  -  -          inc b
  853 D1:B53F 14 -  -  -          inc d
  854 D1:B540 09 -  -  -  _:      add hl,bc   ;full address
  855 D1:B541 DD 46 00 -          ld  b,(ix+REGA)
  856 D1:B544 70 -  -  -          WRITE_ACCESS
  857 D1:B545 ED 33 05 -          ADDCYC(5)
  858 D1:B548 E1 -  -  -      pop hl
  859 D1:B549 C3 AB AE D1     jp i6502NextLoad
  860 D1:B54D -  -  -  -  
  861 D1:B54D -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  862 D1:B54D -  -  -  -  inst6502_sta_absy:
  863 D1:B54D CD C8 B0 D1     call subroutine6502_abs_split_start
  864 D1:B551 E5 -  -  -      push hl
  865 D1:B552 50 -  -  -          ld  d,b
  866 D1:B553 79 -  -  -          ld  a,c
  867 D1:B554 0E 08 -  -          ld  c,BASETABLE_STRIDE
  868 D1:B556 ED 4C -  -          mlt bc
  869 D1:B558 21 00 40 D0         ld  hl,PAGETABLE
  870 D1:B55C 09 -  -  -          add hl,bc
  871 D1:B55D ED 27 -  -          ld  hl,(hl)
  872 D1:B55F 06 00 -  -          ld  b,0
  873 D1:B561 DD 86 02 -          add a,(ix+REGY)
  874 D1:B564 4F -  -  -          ld  c,a
  875 D1:B565 30 02 -  -          jr  nc,+_
  876 D1:B567 04 -  -  -          inc b
  877 D1:B568 14 -  -  -          inc d
  878 D1:B569 09 -  -  -  _:      add hl,bc   ;full address
  879 D1:B56A DD 46 00 -          ld  b,(ix+REGA)
  880 D1:B56D 70 -  -  -          WRITE_ACCESS
  881 D1:B56E ED 33 05 -          ADDCYC(5)
  882 D1:B571 E1 -  -  -      pop hl
  883 D1:B572 C3 AB AE D1     jp i6502NextLoad
  884 D1:B576 -  -  -  -  
  885 D1:B576 -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  886 D1:B576 -  -  -  -  inst6502_sta_indx:
  887 D1:B576 E5 -  -  -      push hl
  888 D1:B577 7E -  -  -          ld  a,(hl)
  889 D1:B578 21 00 38 D0         ld  hl,ZEROPAGE
  890 D1:B57C 85 -  -  -          add a,L
  891 D1:B57D DD 86 01 -          add a,(ix+REGX)
  892 D1:B580 6F -  -  -          ld  L,a
  893 D1:B581 7E -  -  -          ld  a,(hl)
  894 D1:B582 2C -  -  -          inc L
  895 D1:B583 56 -  -  -          ld  d,(hl)
  896 D1:B584 42 -  -  -          ld  b,d
  897 D1:B585 0E 08 -  -          ld  c,BASETABLE_STRIDE
  898 D1:B587 ED 4C -  -          mlt bc
  899 D1:B589 21 00 40 D0         ld  hl,PAGETABLE
  900 D1:B58D 09 -  -  -          add hl,bc
  901 D1:B58E ED 27 -  -          ld  hl,(hl)
  902 D1:B590 06 00 -  -          ld  b,0
  903 D1:B592 4F -  -  -          ld  c,a
  904 D1:B593 09 -  -  -          add hl,bc
  905 D1:B594 DD 46 00 -          ld  b,(ix+REGA)
  906 D1:B597 70 -  -  -          WRITE_ACCESS
  907 D1:B598 ED 33 06 -          ADDCYC(6)
  908 D1:B59B E1 -  -  -      pop hl
  909 D1:B59C C3 AB AE D1     jp i6502NextLoad
  910 D1:B5A0 -  -  -  -  
  911 D1:B5A0 -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  912 D1:B5A0 -  -  -  -  inst6502_sta_indy:
  913 D1:B5A0 E5 -  -  -      push hl
  914 D1:B5A1 7E -  -  -          ld  a,(hl)
  915 D1:B5A2 21 00 38 D0         ld  hl,ZEROPAGE
  916 D1:B5A6 85 -  -  -          add a,L
  917 D1:B5A7 6F -  -  -          ld  L,a
  918 D1:B5A8 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  919 D1:B5A9 2C -  -  -          inc L
  920 D1:B5AA DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  921 D1:B5AD 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  922 D1:B5AE 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  923 D1:B5B0 24 -  -  -          inc h
  924 D1:B5B1 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  925 D1:B5B2 2E 08 -  -          ld  L,BASETABLE_STRIDE
  926 D1:B5B4 ED 6C -  -          mlt hl          ;23.
  927 D1:B5B6 01 00 40 D0         ld  bc,PAGETABLE
  928 D1:B5BA 09 -  -  -          add hl,bc
  929 D1:B5BB ED 27 -  -          ld  hl,(hl)     ;address get.
  930 D1:B5BD 01 00 00 00         ld  bc,0
  931 D1:B5C1 4F -  -  -          ld  c,a
  932 D1:B5C2 09 -  -  -          add hl,bc       ;Full address get.
  933 D1:B5C3 DD 46 00 -          ld  b,(ix+REGA)
  934 D1:B5C6 70 -  -  -          WRITE_ACCESS
  935 D1:B5C7 ED 33 06 -          ADDCYC(6)
  936 D1:B5CA E1 -  -  -      pop hl
  937 D1:B5CB C3 AB AE D1     jp i6502NextLoad
  938 D1:B5CF -  -  -  -  
  939 D1:B5CF -  -  -  -  ;-----------------------------------------------------------------------------
  940 D1:B5CF -  -  -  -  ;STX - Store Index X in Memory
  941 D1:B5CF -  -  -  -  ;    X -> M
  942 D1:B5CF -  -  -  -  ;    N	Z	C	I	D	V
  943 D1:B5CF -  -  -  -  ;    -	-	-	-	-	-
  944 D1:B5CF -  -  -  -  
  945 D1:B5CF -  -  -  -  ;zeropage	STX oper	86	2	3  
  946 D1:B5CF -  -  -  -  inst6502_stx_zp:
  947 D1:B5CF 7E -  -  -      ld  a,(hl)
  948 D1:B5D0 01 00 38 D0     ld  bc,ZEROPAGE
  949 D1:B5D4 81 -  -  -      add a,c
  950 D1:B5D5 4F -  -  -      ld  c,a
  951 D1:B5D6 DD 7E 01 -      ld  a,(ix+REGX)
  952 D1:B5D9 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  953 D1:B5DA ED 33 03 -      ADDCYC(3)
  954 D1:B5DD C3 AB AE D1     jp i6502NextLoad
  955 D1:B5E1 -  -  -  -  
  956 D1:B5E1 -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
  957 D1:B5E1 -  -  -  -  inst6502_stx_zpy:
  958 D1:B5E1 7E -  -  -      ld  a,(hl)
  959 D1:B5E2 01 00 38 D0     ld  bc,ZEROPAGE
  960 D1:B5E6 81 -  -  -      add a,c
  961 D1:B5E7 DD 86 02 -      add a,(ix+REGY)
  962 D1:B5EA 4F -  -  -      ld  c,a
  963 D1:B5EB DD 7E 01 -      ld  a,(ix+REGX)
  964 D1:B5EE 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  965 D1:B5EF ED 33 04 -      ADDCYC(4)
  966 D1:B5F2 C3 AB AE D1     jp i6502NextLoad
  967 D1:B5F6 -  -  -  -  
  968 D1:B5F6 -  -  -  -  ;absolute	STX oper	8E	3	4  
  969 D1:B5F6 -  -  -  -  inst6502_stx_abs:
  970 D1:B5F6 CD C8 B0 D1     call subroutine6502_abs_split_start
  971 D1:B5FA E5 -  -  -      push hl
  972 D1:B5FB 50 -  -  -          ld  d,b
  973 D1:B5FC 79 -  -  -          ld  a,c
  974 D1:B5FD 0E 08 -  -          ld  c,BASETABLE_STRIDE
  975 D1:B5FF ED 4C -  -          mlt bc
  976 D1:B601 21 00 40 D0         ld  hl,PAGETABLE
  977 D1:B605 09 -  -  -          add hl,bc
  978 D1:B606 ED 27 -  -          ld  hl,(hl)
  979 D1:B608 06 00 -  -          ld  b,0
  980 D1:B60A 4F -  -  -          ld  c,a
  981 D1:B60B 09 -  -  -          add hl,bc   ;full address
  982 D1:B60C DD 46 01 -          ld  b,(ix+REGX)
  983 D1:B60F 70 -  -  -          WRITE_ACCESS
  984 D1:B610 ED 33 04 -          ADDCYC(4)
  985 D1:B613 E1 -  -  -      pop hl
  986 D1:B614 C3 AB AE D1     jp i6502NextLoad
  987 D1:B618 -  -  -  -  
  988 D1:B618 -  -  -  -  ;-----------------------------------------------------------------------------
  989 D1:B618 -  -  -  -  ;STY - Store Index Y in Memory
  990 D1:B618 -  -  -  -  ;    Y -> M
  991 D1:B618 -  -  -  -  ;    N	Z	C	I	D	V
  992 D1:B618 -  -  -  -  ;    -	-	-	-	-	-
  993 D1:B618 -  -  -  -  
  994 D1:B618 -  -  -  -  ;zeropage	STY oper	84	2	3  
  995 D1:B618 -  -  -  -  inst6502_sty_zp:
  996 D1:B618 7E -  -  -      ld  a,(hl)
  997 D1:B619 01 00 38 D0     ld  bc,ZEROPAGE
  998 D1:B61D 81 -  -  -      add a,c
  999 D1:B61E 4F -  -  -      ld  c,a
 1000 D1:B61F DD 7E 02 -      ld  a,(ix+REGY)
 1001 D1:B622 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1002 D1:B623 ED 33 03 -      ADDCYC(3)
 1003 D1:B626 C3 AB AE D1     jp i6502NextLoad
 1004 D1:B62A -  -  -  -  
 1005 D1:B62A -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1006 D1:B62A -  -  -  -  inst6502_sty_zpx:
 1007 D1:B62A 7E -  -  -      ld  a,(hl)
 1008 D1:B62B 01 00 38 D0     ld  bc,ZEROPAGE
 1009 D1:B62F 81 -  -  -      add a,c
 1010 D1:B630 DD 86 01 -      add a,(ix+REGX)
 1011 D1:B633 4F -  -  -      ld  c,a
 1012 D1:B634 DD 7E 02 -      ld  a,(ix+REGY)
 1013 D1:B637 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1014 D1:B638 ED 33 04 -      ADDCYC(4)
 1015 D1:B63B C3 AB AE D1     jp i6502NextLoad
 1016 D1:B63F -  -  -  -  
 1017 D1:B63F -  -  -  -  ;absolute	STY oper	8C	3	4  
 1018 D1:B63F -  -  -  -  inst6502_sty_abs:
 1019 D1:B63F CD C8 B0 D1     call subroutine6502_abs_split_start
 1020 D1:B643 E5 -  -  -      push hl
 1021 D1:B644 50 -  -  -          ld  d,b
 1022 D1:B645 79 -  -  -          ld  a,c
 1023 D1:B646 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1024 D1:B648 ED 4C -  -          mlt bc
 1025 D1:B64A 21 00 40 D0         ld  hl,PAGETABLE
 1026 D1:B64E 09 -  -  -          add hl,bc
 1027 D1:B64F ED 27 -  -          ld  hl,(hl)
 1028 D1:B651 06 00 -  -          ld  b,0
 1029 D1:B653 4F -  -  -          ld  c,a
 1030 D1:B654 09 -  -  -          add hl,bc   ;full address
 1031 D1:B655 DD 46 02 -          ld  b,(ix+REGY)
 1032 D1:B658 70 -  -  -          WRITE_ACCESS
 1033 D1:B659 ED 33 04 -          ADDCYC(4)
 1034 D1:B65C E1 -  -  -      pop hl
 1035 D1:B65D C3 AB AE D1     jp i6502NextLoad
 1036 D1:B661 -  -  -  -  
 1037 D1:B661 -  -  -  -  ;-----------------------------------------------------------------------------
 1038 D1:B661 -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1039 D1:B661 -  -  -  -  ;N	Z	C	I	D	V
 1040 D1:B661 -  -  -  -  ;+	+	-	-	-	-
 1041 D1:B661 -  -  -  -  ;implied	TAX	AA	1	2
 1042 D1:B661 -  -  -  -  inst6502_tax:
 1043 D1:B661 DD 7E 00 -      ld  a,(ix+REGA)
 1044 D1:B664 DD 77 01 -      ld  (ix+REGX),a
 1045 D1:B667 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1046 D1:B67A ED 33 02 -      ADDCYC(2)
 1047 D1:B67D C3 C4 AE D1     jp i6502FinishLoad
 1048 D1:B681 -  -  -  -  
 1049 D1:B681 -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1050 D1:B681 -  -  -  -  ;N	Z	C	I	D	V
 1051 D1:B681 -  -  -  -  ;+	+	-	-	-	-
 1052 D1:B681 -  -  -  -  ;implied	TAY	A8	1	2
 1053 D1:B681 -  -  -  -  inst6502_tay:
 1054 D1:B681 DD 7E 00 -      ld  a,(ix+REGA)
 1055 D1:B684 DD 77 02 -      ld  (ix+REGY),a
 1056 D1:B687 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1057 D1:B69A ED 33 02 -      ADDCYC(2)
 1058 D1:B69D C3 C4 AE D1     jp i6502FinishLoad
 1059 D1:B6A1 -  -  -  -  
 1060 D1:B6A1 -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1061 D1:B6A1 -  -  -  -  ;N	Z	C	I	D	V
 1062 D1:B6A1 -  -  -  -  ;+	+	-	-	-	-
 1063 D1:B6A1 -  -  -  -  ;implied	TSX	BA	1	2
 1064 D1:B6A1 -  -  -  -  inst6502_tsx:
 1065 D1:B6A1 DD 7E 03 -      ld  a,(ix+REGSP)
 1066 D1:B6A4 DD 77 01 -      ld  (ix+REGX),a
 1067 D1:B6A7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1068 D1:B6BA ED 33 02 -      ADDCYC(2)
 1069 D1:B6BD C3 C4 AE D1     jp i6502FinishLoad
 1070 D1:B6C1 -  -  -  -  
 1071 D1:B6C1 -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1072 D1:B6C1 -  -  -  -  ;N	Z	C	I	D	V
 1073 D1:B6C1 -  -  -  -  ;+	+	-	-	-	-
 1074 D1:B6C1 -  -  -  -  ;implied	TXA	8A	1	2
 1075 D1:B6C1 -  -  -  -  inst6502_txa:
 1076 D1:B6C1 DD 7E 01 -      ld  a,(ix+REGX)
 1077 D1:B6C4 DD 77 00 -      ld  (ix+REGA),a
 1078 D1:B6C7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1079 D1:B6DA ED 33 02 -      ADDCYC(2)
 1080 D1:B6DD C3 C4 AE D1     jp i6502FinishLoad
 1081 D1:B6E1 -  -  -  -  
 1082 D1:B6E1 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1083 D1:B6E1 -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:B6E1 -  -  -  -  ;-	-	-	-	-	-
 1085 D1:B6E1 -  -  -  -  ;implied	TXS	9A	1	2
 1086 D1:B6E1 -  -  -  -  inst6502_txs:
 1087 D1:B6E1 DD 7E 01 -      ld  a,(ix+REGX)
 1088 D1:B6E4 DD 77 03 -      ld  (ix+REGSP),a
 1089 D1:B6E7 ED 33 02 -      ADDCYC(2)
 1090 D1:B6EA C3 C4 AE D1     jp i6502FinishLoad
 1091 D1:B6EE -  -  -  -  
 1092 D1:B6EE -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1093 D1:B6EE -  -  -  -  ;N	Z	C	I	D	V
 1094 D1:B6EE -  -  -  -  ;+	+	-	-	-	-
 1095 D1:B6EE -  -  -  -  ;implied	TYA	98	1	2
 1096 D1:B6EE -  -  -  -  inst6502_tya:
 1097 D1:B6EE DD 7E 02 -      ld  a,(ix+REGY)
 1098 D1:B6F1 DD 77 00 -      ld  (ix+REGA),a
 1099 D1:B6F4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1100 D1:B707 ED 33 02 -      ADDCYC(2)
 1101 D1:B70A C3 C4 AE D1     jp i6502FinishLoad
 1102 D1:B70E -  -  -  -  
 1103 D1:B70E -  -  -  -  ;-----------------------------------------------------------------------------
 1104 D1:B70E -  -  -  -  ;-----------------------------------------------------------------------------
 1105 D1:B70E -  -  -  -  ;-----------------------------------------------------------------------------
 1106 D1:B70E -  -  -  -  ;Instructions by type: Stack Instructions
 1107 D1:B70E -  -  -  -  ;PHA - Push Accumulator on Stack
 1108 D1:B70E -  -  -  -  ;    push A
 1109 D1:B70E -  -  -  -  ;    N	Z	C	I	D	V
 1110 D1:B70E -  -  -  -  ;    -	-	-	-	-	-
 1111 D1:B70E -  -  -  -  ;implied	PHA	48	1	3 
 1112 D1:B70E -  -  -  -  inst6502_pha:
 1113 D1:B70E DD 7E 00 -      ld  a,(ix+REGA)
 1114 D1:B711 01 00 39 D0     ld  bc,STACKBASE
 1115 D1:B715 DD 4E 03 -      ld  c,(ix+REGSP)
 1116 D1:B718 02 -  -  -      ld  (bc),a
 1117 D1:B719 0D -  -  -      dec c
 1118 D1:B71A DD 71 03 -      ld  (ix+REGSP),c
 1119 D1:B71D C3 C4 AE D1     jp i6502FinishLoad
 1120 D1:B721 -  -  -  -  
 1121 D1:B721 -  -  -  -  ;PHP - Push Processor Status on Stack
 1122 D1:B721 -  -  -  -  ;    The status register will be pushed with the break
 1123 D1:B721 -  -  -  -  ;    flag and bit 5 set to 1.
 1124 D1:B721 -  -  -  -  ;    push SR
 1125 D1:B721 -  -  -  -  ;    N	Z	C	I	D	V
 1126 D1:B721 -  -  -  -  ;    -	-	-	-	-	-
 1127 D1:B721 -  -  -  -  ;implied	PHP	08	1	3  
 1128 D1:B721 -  -  -  -  inst6502_php:
 1129 D1:B721 DD 7E 04 -      ld  a,(ix+REGSR)
 1130 D1:B724 F6 30 -  -      or  a,%00110000
 1131 D1:B726 01 00 39 D0     ld  bc,STACKBASE
 1132 D1:B72A DD 4E 03 -      ld  c,(ix+REGSP)
 1133 D1:B72D 02 -  -  -      ld  (bc),a
 1134 D1:B72E 0D -  -  -      dec c
 1135 D1:B72F DD 71 03 -      ld  (ix+REGSP),c
 1136 D1:B732 C3 C4 AE D1     jp i6502FinishLoad
 1137 D1:B736 -  -  -  -  
 1138 D1:B736 -  -  -  -  
 1139 D1:B736 -  -  -  -  
 1140 D1:B736 -  -  -  -  ;PLA - Pull Accumulator from Stack
 1141 D1:B736 -  -  -  -  ;    pull A
 1142 D1:B736 -  -  -  -  ;    N	Z	C	I	D	V
 1143 D1:B736 -  -  -  -  ;    +	+	-	-	-	-
 1144 D1:B736 -  -  -  -  ;implied	PLA	68	1	4  
 1145 D1:B736 -  -  -  -  inst6502_pla:
 1146 D1:B736 01 00 39 D0     ld  bc,STACKBASE
 1147 D1:B73A DD 4E 03 -      ld  c,(ix+REGSP)
 1148 D1:B73D 0C -  -  -      inc c
 1149 D1:B73E 0A -  -  -      ld  a,(bc)
 1150 D1:B73F DD 71 03 -      ld  (ix+REGSP),c
 1151 D1:B742 DD 77 00 -      ld  (ix+REGA),a
 1152 D1:B745 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1153 D1:B758 C3 C4 AE D1     jp i6502FinishLoad
 1154 D1:B75C -  -  -  -  
 1155 D1:B75C -  -  -  -  ;PLP - Pull Processor Status from Stack
 1156 D1:B75C -  -  -  -  ;    The status register will be pulled with the break
 1157 D1:B75C -  -  -  -  ;    flag and bit 5 ignored.
 1158 D1:B75C -  -  -  -  ;    pull SR
 1159 D1:B75C -  -  -  -  ;    N	Z	C	I	D	V
 1160 D1:B75C -  -  -  -  ;    from stack
 1161 D1:B75C -  -  -  -  ;implied	PLP	28	1	4  
 1162 D1:B75C -  -  -  -  inst6502_plp:
 1163 D1:B75C 01 00 39 D0     ld  bc,STACKBASE
 1164 D1:B760 DD 4E 03 -      ld  c,(ix+REGSP)
 1165 D1:B763 0C -  -  -      inc c
 1166 D1:B764 0A -  -  -      ld  a,(bc)
 1167 D1:B765 DD 71 03 -      ld  (ix+REGSP),c
 1168 D1:B768 DD 46 04 -      ld  b,(ix+REGSR)
 1169 D1:B76B A8 -  -  -      xor a,b
 1170 D1:B76C E6 CF -  -      and a,%11001111
 1171 D1:B76E A8 -  -  -      xor a,b
 1172 D1:B76F DD 77 04 -      ld  (ix+REGSR),a
 1173 D1:B772 C3 C4 AE D1     jp i6502FinishLoad
 1174 D1:B776 -  -  -  -  
 1175 D1:B776 -  -  -  -  
 1176 D1:B776 -  -  -  -  ;-----------------------------------------------------------------------------
 1177 D1:B776 -  -  -  -  ;-----------------------------------------------------------------------------
 1178 D1:B776 -  -  -  -  ;-----------------------------------------------------------------------------
 1179 D1:B776 -  -  -  -  ;Instructions by type: Decrements and Increments
 1180 D1:B776 -  -  -  -  
 1181 D1:B776 -  -  -  -  ;DEC -  Decrement Memory by One
 1182 D1:B776 -  -  -  -  ;    M - 1 -> M
 1183 D1:B776 -  -  -  -  ;    N	Z	C	I	D	V
 1184 D1:B776 -  -  -  -  ;    +	+	-	-	-	-
 1185 D1:B776 -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1186 D1:B776 -  -  -  -  
 1187 D1:B776 -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1188 D1:B776 -  -  -  -  inst6502_dec_zp:
 1189 D1:B776 7E -  -  -      ld  a,(hl)
 1190 D1:B777 01 00 38 D0     ld  bc,ZEROPAGE
 1191 D1:B77B 81 -  -  -      add a,c
 1192 D1:B77C 4F -  -  -      ld  c,a
 1193 D1:B77D 0A -  -  -      ld  a,(bc)
 1194 D1:B77E 3D -  -  -      dec a
 1195 D1:B77F 02 -  -  -      ld  (bc),a
 1196 D1:B780 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1197 D1:B793 ED 33 05 -      ADDCYC(5)
 1198 D1:B796 C3 AB AE D1     jp i6502NextLoad
 1199 D1:B79A -  -  -  -  
 1200 D1:B79A -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1201 D1:B79A -  -  -  -  inst6502_dec_zpx:
 1202 D1:B79A 7E -  -  -      ld  a,(hl)
 1203 D1:B79B 01 00 38 D0     ld  bc,ZEROPAGE
 1204 D1:B79F 81 -  -  -      add a,c
 1205 D1:B7A0 DD 86 01 -      add a,(ix+REGX)
 1206 D1:B7A3 4F -  -  -      ld  c,a
 1207 D1:B7A4 0A -  -  -      ld  a,(bc)
 1208 D1:B7A5 3D -  -  -      dec a
 1209 D1:B7A6 02 -  -  -      ld  (bc),a
 1210 D1:B7A7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1211 D1:B7BA ED 33 06 -      ADDCYC(6)
 1212 D1:B7BD C3 AB AE D1     jp i6502NextLoad
 1213 D1:B7C1 -  -  -  -  
 1214 D1:B7C1 -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1215 D1:B7C1 -  -  -  -  inst6502_dec_abs:
 1216 D1:B7C1 CD C8 B0 D1     call subroutine6502_abs_split_start
 1217 D1:B7C5 E5 -  -  -      push hl
 1218 D1:B7C6 50 -  -  -          ld  d,b
 1219 D1:B7C7 79 -  -  -          ld  a,c
 1220 D1:B7C8 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1221 D1:B7CA ED 4C -  -          mlt bc
 1222 D1:B7CC 21 00 40 D0         ld  hl,PAGETABLE
 1223 D1:B7D0 09 -  -  -          add hl,bc
 1224 D1:B7D1 ED 27 -  -          ld  hl,(hl)
 1225 D1:B7D3 06 00 -  -          ld  b,0
 1226 D1:B7D5 4F -  -  -          ld  c,a
 1227 D1:B7D6 09 -  -  -          add hl,bc   ;full address
 1228 D1:B7D7 7E -  -  -          READ_ACCESS
 1229 D1:B7D8 3D -  -  -          dec a
 1230 D1:B7D9 47 -  -  -          ld  b,a
 1231 D1:B7DA -  -  -  -          ;
 1232 D1:B7DA DD 7E 04 -          ld  a,(ix+REGSR)
 1233 D1:B7DD CB 8F -  -          res SF_ZERO,a
 1234 D1:B7DF 20 02 -  -          jr  nz,$+4
 1235 D1:B7E1 CB CF -  -          set SF_ZERO,a
 1236 D1:B7E3 CB BF -  -          res SF_NEG,a
 1237 D1:B7E5 FA EA B7 D1         jp  m,$+5
 1238 D1:B7E9 CB FF -  -          set SF_NEG,a
 1239 D1:B7EB DD 77 04 -          ld  (ix+REGSR),a
 1240 D1:B7EE -  -  -  -          ;
 1241 D1:B7EE 70 -  -  -          WRITE_ACCESS
 1242 D1:B7EF ED 33 06 -          ADDCYC(6)
 1243 D1:B7F2 E1 -  -  -      pop hl
 1244 D1:B7F3 C3 AB AE D1     jp i6502NextLoad
 1245 D1:B7F7 -  -  -  -  
 1246 D1:B7F7 -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1247 D1:B7F7 -  -  -  -  inst6502_dec_absx:
 1248 D1:B7F7 CD C8 B0 D1     call subroutine6502_abs_split_start
 1249 D1:B7FB E5 -  -  -      push hl
 1250 D1:B7FC 50 -  -  -          ld  d,b
 1251 D1:B7FD 79 -  -  -          ld  a,c
 1252 D1:B7FE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1253 D1:B800 ED 4C -  -          mlt bc
 1254 D1:B802 21 00 40 D0         ld  hl,PAGETABLE
 1255 D1:B806 09 -  -  -          add hl,bc
 1256 D1:B807 ED 27 -  -          ld  hl,(hl)
 1257 D1:B809 06 00 -  -          ld  b,0
 1258 D1:B80B DD 86 01 -          add a,(ix+REGX)
 1259 D1:B80E 4F -  -  -          ld  c,a
 1260 D1:B80F 30 02 -  -          jr  nc,+_
 1261 D1:B811 04 -  -  -          inc b
 1262 D1:B812 14 -  -  -          inc d
 1263 D1:B813 09 -  -  -  _:      add hl,bc   ;full address
 1264 D1:B814 7E -  -  -          READ_ACCESS
 1265 D1:B815 3D -  -  -          dec a
 1266 D1:B816 47 -  -  -          ld  b,a
 1267 D1:B817 -  -  -  -          ;
 1268 D1:B817 DD 7E 04 -          ld  a,(ix+REGSR)
 1269 D1:B81A CB 8F -  -          res SF_ZERO,a
 1270 D1:B81C 20 02 -  -          jr  nz,$+4
 1271 D1:B81E CB CF -  -          set SF_ZERO,a
 1272 D1:B820 CB BF -  -          res SF_NEG,a
 1273 D1:B822 FA 27 B8 D1         jp  m,$+5
 1274 D1:B826 CB FF -  -          set SF_NEG,a
 1275 D1:B828 DD 77 04 -          ld  (ix+REGSR),a
 1276 D1:B82B -  -  -  -          ;
 1277 D1:B82B 70 -  -  -          WRITE_ACCESS
 1278 D1:B82C ED 33 07 -          ADDCYC(7)
 1279 D1:B82F E1 -  -  -      pop hl
 1280 D1:B830 C3 AB AE D1     jp i6502NextLoad
 1281 D1:B834 -  -  -  -  
 1282 D1:B834 -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1283 D1:B834 -  -  -  -  ;Flags altered: NZ
 1284 D1:B834 -  -  -  -  ;implied	DEX	CA	1	2  
 1285 D1:B834 -  -  -  -  inst6502_dex:
 1286 D1:B834 DD 35 01 -      dec (ix+REGX)
 1287 D1:B837 DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1288 D1:B83A CB 8F -  -      res SF_ZERO,a
 1289 D1:B83C 20 02 -  -      jr  nz,$+4
 1290 D1:B83E CB CF -  -      set SF_ZERO,a
 1291 D1:B840 CB BF -  -      res SF_NEG,a
 1292 D1:B842 FA 47 B8 D1     jp  m,$+5
 1293 D1:B846 CB FF -  -      set SF_NEG,a
 1294 D1:B848 DD 77 04 -      ld  (ix+REGSR),a
 1295 D1:B84B ED 33 02 -      ADDCYC(2)
 1296 D1:B84E C3 C4 AE D1     jp i6502FinishLoad
 1297 D1:B852 -  -  -  -  
 1298 D1:B852 -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1299 D1:B852 -  -  -  -  ;Flags altered: NZ
 1300 D1:B852 -  -  -  -  ;implied	DEY	88	1	2  
 1301 D1:B852 -  -  -  -  inst6502_dey:
 1302 D1:B852 DD 35 02 -      dec (ix+REGY)
 1303 D1:B855 18 E0 -  -      jr  -_
 1304 D1:B857 -  -  -  -  
 1305 D1:B857 -  -  -  -  
 1306 D1:B857 -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1307 D1:B857 -  -  -  -  ;Flags altered: NZ
 1308 D1:B857 -  -  -  -  ;implied	INX	E8	1	2  
 1309 D1:B857 -  -  -  -  inst6502_inx:
 1310 D1:B857 DD 34 01 -      inc (ix+REGX)
 1311 D1:B85A 18 DB -  -      jr  -_
 1312 D1:B85C -  -  -  -  
 1313 D1:B85C -  -  -  -  
 1314 D1:B85C -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1315 D1:B85C -  -  -  -  ;Flags altered: NZ
 1316 D1:B85C -  -  -  -  ;implied	INY	C8	1	2  
 1317 D1:B85C -  -  -  -  inst6502_iny:
 1318 D1:B85C DD 34 02 -      inc (ix+REGY)
 1319 D1:B85F 18 D6 -  -      jr  -_
 1320 D1:B861 -  -  -  -  
 1321 D1:B861 -  -  -  -  
 1322 D1:B861 -  -  -  -  ;INC - Increment Memory by One
 1323 D1:B861 -  -  -  -  ;    M + 1 -> M
 1324 D1:B861 -  -  -  -  ;    N	Z	C	I	D	V
 1325 D1:B861 -  -  -  -  ;    +	+	-	-	-	-
 1326 D1:B861 -  -  -  -  
 1327 D1:B861 -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1328 D1:B861 -  -  -  -  inst6502_inc_zp:
 1329 D1:B861 7E -  -  -      ld  a,(hl)
 1330 D1:B862 01 00 38 D0     ld  bc,ZEROPAGE
 1331 D1:B866 81 -  -  -      add a,c
 1332 D1:B867 4F -  -  -      ld  c,a
 1333 D1:B868 0A -  -  -      ld  a,(bc)
 1334 D1:B869 3C -  -  -      inc a
 1335 D1:B86A 02 -  -  -      ld  (bc),a
 1336 D1:B86B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1337 D1:B87E ED 33 05 -      ADDCYC(5)
 1338 D1:B881 C3 AB AE D1     jp i6502NextLoad
 1339 D1:B885 -  -  -  -  
 1340 D1:B885 -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1341 D1:B885 -  -  -  -  inst6502_inc_zpx:
 1342 D1:B885 7E -  -  -      ld  a,(hl)
 1343 D1:B886 01 00 38 D0     ld  bc,ZEROPAGE
 1344 D1:B88A 81 -  -  -      add a,c
 1345 D1:B88B DD 86 01 -      add a,(ix+REGX)
 1346 D1:B88E 4F -  -  -      ld  c,a
 1347 D1:B88F 0A -  -  -      ld  a,(bc)
 1348 D1:B890 3C -  -  -      inc a
 1349 D1:B891 02 -  -  -      ld  (bc),a
 1350 D1:B892 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1351 D1:B8A5 ED 33 06 -      ADDCYC(6)
 1352 D1:B8A8 C3 AB AE D1     jp i6502NextLoad
 1353 D1:B8AC -  -  -  -      
 1354 D1:B8AC -  -  -  -  ;absolute	INC oper	EE	3	6
 1355 D1:B8AC -  -  -  -  inst6502_inc_abs:
 1356 D1:B8AC CD C8 B0 D1     call subroutine6502_abs_split_start
 1357 D1:B8B0 E5 -  -  -      push hl
 1358 D1:B8B1 50 -  -  -          ld  d,b
 1359 D1:B8B2 79 -  -  -          ld  a,c
 1360 D1:B8B3 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1361 D1:B8B5 ED 4C -  -          mlt bc
 1362 D1:B8B7 21 00 40 D0         ld  hl,PAGETABLE
 1363 D1:B8BB 09 -  -  -          add hl,bc
 1364 D1:B8BC ED 27 -  -          ld  hl,(hl)
 1365 D1:B8BE 06 00 -  -          ld  b,0
 1366 D1:B8C0 4F -  -  -          ld  c,a
 1367 D1:B8C1 09 -  -  -          add hl,bc   ;full address
 1368 D1:B8C2 7E -  -  -          READ_ACCESS
 1369 D1:B8C3 3C -  -  -          inc a
 1370 D1:B8C4 47 -  -  -          ld  b,a
 1371 D1:B8C5 -  -  -  -          ;
 1372 D1:B8C5 DD 7E 04 -          ld  a,(ix+REGSR)
 1373 D1:B8C8 CB 8F -  -          res SF_ZERO,a
 1374 D1:B8CA 20 02 -  -          jr  nz,$+4
 1375 D1:B8CC CB CF -  -          set SF_ZERO,a
 1376 D1:B8CE CB BF -  -          res SF_NEG,a
 1377 D1:B8D0 FA D5 B8 D1         jp  m,$+5
 1378 D1:B8D4 CB FF -  -          set SF_NEG,a
 1379 D1:B8D6 DD 77 04 -          ld  (ix+REGSR),a
 1380 D1:B8D9 -  -  -  -          ;
 1381 D1:B8D9 70 -  -  -          WRITE_ACCESS
 1382 D1:B8DA ED 33 06 -          ADDCYC(6)
 1383 D1:B8DD E1 -  -  -      pop hl
 1384 D1:B8DE C3 AB AE D1     jp i6502NextLoad
 1385 D1:B8E2 -  -  -  -  
 1386 D1:B8E2 -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1387 D1:B8E2 -  -  -  -  inst6502_inc_absx:
 1388 D1:B8E2 CD C8 B0 D1     call subroutine6502_abs_split_start
 1389 D1:B8E6 E5 -  -  -      push hl
 1390 D1:B8E7 50 -  -  -          ld  d,b
 1391 D1:B8E8 79 -  -  -          ld  a,c
 1392 D1:B8E9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1393 D1:B8EB ED 4C -  -          mlt bc
 1394 D1:B8ED 21 00 40 D0         ld  hl,PAGETABLE
 1395 D1:B8F1 09 -  -  -          add hl,bc
 1396 D1:B8F2 ED 27 -  -          ld  hl,(hl)
 1397 D1:B8F4 06 00 -  -          ld  b,0
 1398 D1:B8F6 DD 86 01 -          add a,(ix+REGX)
 1399 D1:B8F9 4F -  -  -          ld  c,a
 1400 D1:B8FA 30 02 -  -          jr nc,+_
 1401 D1:B8FC 04 -  -  -          inc b
 1402 D1:B8FD 14 -  -  -          inc d
 1403 D1:B8FE 09 -  -  -  _:      add hl,bc   ;full address
 1404 D1:B8FF 7E -  -  -          READ_ACCESS
 1405 D1:B900 3C -  -  -          inc a
 1406 D1:B901 47 -  -  -          ld  b,a
 1407 D1:B902 -  -  -  -          ;
 1408 D1:B902 DD 7E 04 -          ld  a,(ix+REGSR)
 1409 D1:B905 CB 8F -  -          res SF_ZERO,a
 1410 D1:B907 20 02 -  -          jr  nz,$+4
 1411 D1:B909 CB CF -  -          set SF_ZERO,a
 1412 D1:B90B CB BF -  -          res SF_NEG,a
 1413 D1:B90D FA 12 B9 D1         jp  m,$+5
 1414 D1:B911 CB FF -  -          set SF_NEG,a
 1415 D1:B913 DD 77 04 -          ld  (ix+REGSR),a
 1416 D1:B916 -  -  -  -          ;
 1417 D1:B916 70 -  -  -          WRITE_ACCESS
 1418 D1:B917 ED 33 07 -          ADDCYC(7)
 1419 D1:B91A E1 -  -  -      pop hl
 1420 D1:B91B C3 AB AE D1     jp i6502NextLoad
 1421 D1:B91F -  -  -  -  
 1422 D1:B91F -  -  -  -  ;-----------------------------------------------------------------------------
 1423 D1:B91F -  -  -  -  ;-----------------------------------------------------------------------------
 1424 D1:B91F -  -  -  -  ;-----------------------------------------------------------------------------
 1425 D1:B91F -  -  -  -  ;Instructions by type: Arithmetic Operations
 1426 D1:B91F -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1427 D1:B91F -  -  -  -  ;    N	Z	C	I	D	V
 1428 D1:B91F -  -  -  -  ;    +	+	+	-	-	+
 1429 D1:B91F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1430 D1:B91F -  -  -  -  
 1431 D1:B91F -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1432 D1:B91F -  -  -  -  inst6502_adc_imm:
 1433 D1:B91F ED 33 02 -      ADDCYC(2)
 1434 D1:B922 4E -  -  -      ld  c,(hl)
 1435 D1:B923 C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1436 D1:B927 -  -  -  -      
 1437 D1:B927 -  -  -  -  
 1438 D1:B927 -  -  -  -  ;zeropage	ADC oper	65	2	3
 1439 D1:B927 -  -  -  -  inst6502_adc_zp:
 1440 D1:B927 ED 33 03 -      ADDCYC(3)
 1441 D1:B92A 7E -  -  -      ld  a,(hl)
 1442 D1:B92B 01 00 38 D0     ld  bc,ZEROPAGE
 1443 D1:B92F 81 -  -  -      add a,c
 1444 D1:B930 4F -  -  -      ld  c,a
 1445 D1:B931 0A -  -  -      ld  a,(bc)
 1446 D1:B932 4F -  -  -      ld  c,a
 1447 D1:B933 C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1448 D1:B937 -  -  -  -  
 1449 D1:B937 -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1450 D1:B937 -  -  -  -  inst6502_adc_zpx:
 1451 D1:B937 ED 33 04 -      ADDCYC(4)
 1452 D1:B93A 7E -  -  -      ld  a,(hl)
 1453 D1:B93B DD 86 01 -      add a,(ix+REGX)
 1454 D1:B93E 01 00 38 D0     ld  bc,ZEROPAGE
 1455 D1:B942 81 -  -  -      add a,c
 1456 D1:B943 4F -  -  -      ld  c,a
 1457 D1:B944 0A -  -  -      ld  a,(bc)
 1458 D1:B945 4F -  -  -      ld  c,a
 1459 D1:B946 C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1460 D1:B94A -  -  -  -  
 1461 D1:B94A -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1462 D1:B94A -  -  -  -  inst6502_adc_abs:
 1463 D1:B94A ED 33 04 -      ADDCYC(4)
 1464 D1:B94D CD C8 B0 D1     call subroutine6502_abs_split_start
 1465 D1:B951 E5 -  -  -      push hl
 1466 D1:B952 50 -  -  -          ld  d,b
 1467 D1:B953 79 -  -  -          ld  a,c
 1468 D1:B954 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1469 D1:B956 ED 4C -  -          mlt bc
 1470 D1:B958 21 00 40 D0         ld  hl,PAGETABLE
 1471 D1:B95C 09 -  -  -          add hl,bc
 1472 D1:B95D ED 27 -  -          ld  hl,(hl)
 1473 D1:B95F 06 00 -  -          ld  b,0
 1474 D1:B961 4F -  -  -          ld  c,a
 1475 D1:B962 09 -  -  -          add hl,bc   ;full address
 1476 D1:B963 7E -  -  -          READ_ACCESS
 1477 D1:B964 E1 -  -  -      pop hl
 1478 D1:B965 4F -  -  -      ld  c,a
 1479 D1:B966 C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1480 D1:B96A -  -  -  -  
 1481 D1:B96A -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1482 D1:B96A -  -  -  -  inst6502_adc_absx:
 1483 D1:B96A ED 33 04 -      ADDCYC(4)
 1484 D1:B96D CD C8 B0 D1     call subroutine6502_abs_split_start
 1485 D1:B971 E5 -  -  -      push hl
 1486 D1:B972 50 -  -  -          ld  d,b
 1487 D1:B973 79 -  -  -          ld  a,c
 1488 D1:B974 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1489 D1:B976 ED 4C -  -          mlt bc
 1490 D1:B978 21 00 40 D0         ld  hl,PAGETABLE
 1491 D1:B97C 09 -  -  -          add hl,bc
 1492 D1:B97D ED 27 -  -          ld  hl,(hl)
 1493 D1:B97F 06 00 -  -          ld  b,0
 1494 D1:B981 DD 86 01 -          add a,(ix+REGX)
 1495 D1:B984 4F -  -  -          ld  c,a
 1496 D1:B985 30 04 -  -          jr  nc,+_
 1497 D1:B987 FD 23 -  -          ADDCYC(1)
 1498 D1:B989 04 -  -  -          inc b
 1499 D1:B98A 14 -  -  -          inc d
 1500 D1:B98B 09 -  -  -  _:      add hl,bc   ;full address
 1501 D1:B98C 7E -  -  -          READ_ACCESS
 1502 D1:B98D E1 -  -  -      pop hl
 1503 D1:B98E 4F -  -  -      ld  c,a
 1504 D1:B98F C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1505 D1:B993 -  -  -  -  
 1506 D1:B993 -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1507 D1:B993 -  -  -  -  inst6502_adc_absy:
 1508 D1:B993 ED 33 04 -      ADDCYC(4)
 1509 D1:B996 CD C8 B0 D1     call subroutine6502_abs_split_start
 1510 D1:B99A E5 -  -  -      push hl
 1511 D1:B99B 50 -  -  -          ld  d,b
 1512 D1:B99C 79 -  -  -          ld  a,c
 1513 D1:B99D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1514 D1:B99F ED 4C -  -          mlt bc
 1515 D1:B9A1 21 00 40 D0         ld  hl,PAGETABLE
 1516 D1:B9A5 09 -  -  -          add hl,bc
 1517 D1:B9A6 ED 27 -  -          ld  hl,(hl)
 1518 D1:B9A8 06 00 -  -          ld  b,0
 1519 D1:B9AA DD 86 02 -          add a,(ix+REGY)
 1520 D1:B9AD 4F -  -  -          ld  c,a
 1521 D1:B9AE 30 04 -  -          jr  nc,+_
 1522 D1:B9B0 FD 23 -  -          ADDCYC(1)
 1523 D1:B9B2 04 -  -  -          inc b
 1524 D1:B9B3 14 -  -  -          inc d
 1525 D1:B9B4 09 -  -  -  _:      add hl,bc   ;full address
 1526 D1:B9B5 7E -  -  -          READ_ACCESS
 1527 D1:B9B6 E1 -  -  -      pop hl
 1528 D1:B9B7 4F -  -  -      ld  c,a
 1529 D1:B9B8 C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1530 D1:B9BC -  -  -  -  
 1531 D1:B9BC -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1532 D1:B9BC -  -  -  -  inst6502_adc_indx:
 1533 D1:B9BC ED 33 06 -      ADDCYC(6)
 1534 D1:B9BF E5 -  -  -      push hl
 1535 D1:B9C0 7E -  -  -          ld  a,(hl)
 1536 D1:B9C1 21 00 38 D0         ld  hl,ZEROPAGE
 1537 D1:B9C5 85 -  -  -          add a,L
 1538 D1:B9C6 DD 86 01 -          add a,(ix+REGX)
 1539 D1:B9C9 6F -  -  -          ld  L,a
 1540 D1:B9CA 7E -  -  -          ld  a,(hl)
 1541 D1:B9CB 2C -  -  -          inc L
 1542 D1:B9CC 56 -  -  -          ld  d,(hl)
 1543 D1:B9CD 42 -  -  -          ld  b,d
 1544 D1:B9CE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1545 D1:B9D0 ED 4C -  -          mlt bc
 1546 D1:B9D2 21 00 40 D0         ld  hl,PAGETABLE
 1547 D1:B9D6 09 -  -  -          add hl,bc
 1548 D1:B9D7 ED 27 -  -          ld  hl,(hl)
 1549 D1:B9D9 06 00 -  -          ld  b,0
 1550 D1:B9DB 4F -  -  -          ld  c,a
 1551 D1:B9DC 09 -  -  -          add hl,bc
 1552 D1:B9DD 7E -  -  -          READ_ACCESS
 1553 D1:B9DE E1 -  -  -      pop hl
 1554 D1:B9DF 4F -  -  -      ld  c,a
 1555 D1:B9E0 C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1556 D1:B9E4 -  -  -  -  
 1557 D1:B9E4 -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1558 D1:B9E4 -  -  -  -  inst6502_adc_indy:
 1559 D1:B9E4 E5 -  -  -      push hl
 1560 D1:B9E5 7E -  -  -          ld  a,(hl)
 1561 D1:B9E6 21 00 38 D0         ld  hl,ZEROPAGE
 1562 D1:B9EA 85 -  -  -          add a,L
 1563 D1:B9EB 6F -  -  -          ld  L,a
 1564 D1:B9EC 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1565 D1:B9ED 2C -  -  -          inc L
 1566 D1:B9EE DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1567 D1:B9F1 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1568 D1:B9F2 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1569 D1:B9F4 FD 23 -  -          ADDCYC(1)
 1570 D1:B9F6 24 -  -  -          inc h
 1571 D1:B9F7 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1572 D1:B9F8 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1573 D1:B9FA ED 6C -  -          mlt hl          ;23.
 1574 D1:B9FC 01 00 40 D0         ld  bc,PAGETABLE
 1575 D1:BA00 09 -  -  -          add hl,bc
 1576 D1:BA01 ED 27 -  -          ld  hl,(hl)     ;address get.
 1577 D1:BA03 01 00 00 00         ld  bc,0
 1578 D1:BA07 4F -  -  -          ld  c,a
 1579 D1:BA08 09 -  -  -          add hl,bc       ;Full address get.
 1580 D1:BA09 7E -  -  -          READ_ACCESS
 1581 D1:BA0A E1 -  -  -      pop hl
 1582 D1:BA0B 4F -  -  -      ld  c,a
 1583 D1:BA0C C3 E4 B0 D1     jp  subroutine6502_adc_combined_end
 1584 D1:BA10 -  -  -  -  
 1585 D1:BA10 -  -  -  -  
 1586 D1:BA10 -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1587 D1:BA10 -  -  -  -  ;A - M - C̅ -> A
 1588 D1:BA10 -  -  -  -  ;N	Z	C	I	D	V
 1589 D1:BA10 -  -  -  -  ;+	+	+	-	-	+
 1590 D1:BA10 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1591 D1:BA10 -  -  -  -  
 1592 D1:BA10 -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1593 D1:BA10 -  -  -  -  inst6502_sbc_imm:
 1594 D1:BA10 ED 33 02 -      ADDCYC(2)
 1595 D1:BA13 4E -  -  -      ld  c,(hl)
 1596 D1:BA14 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1597 D1:BA18 -  -  -  -  
 1598 D1:BA18 -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1599 D1:BA18 -  -  -  -  inst6502_sbc_zp:
 1600 D1:BA18 ED 33 03 -      ADDCYC(3)
 1601 D1:BA1B 7E -  -  -      ld  a,(hl)
 1602 D1:BA1C 01 00 38 D0     ld  bc,ZEROPAGE
 1603 D1:BA20 81 -  -  -      add a,c
 1604 D1:BA21 4F -  -  -      ld  c,a
 1605 D1:BA22 0A -  -  -      ld  a,(bc)
 1606 D1:BA23 4F -  -  -      ld  c,a
 1607 D1:BA24 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1608 D1:BA28 -  -  -  -  
 1609 D1:BA28 -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1610 D1:BA28 -  -  -  -  inst6502_sbc_zpx:
 1611 D1:BA28 ED 33 04 -      ADDCYC(4)
 1612 D1:BA2B 7E -  -  -      ld  a,(hl)
 1613 D1:BA2C DD 86 01 -      add a,(ix+REGX)
 1614 D1:BA2F 01 00 38 D0     ld  bc,ZEROPAGE
 1615 D1:BA33 81 -  -  -      add a,c
 1616 D1:BA34 4F -  -  -      ld  c,a
 1617 D1:BA35 0A -  -  -      ld  a,(bc)
 1618 D1:BA36 4F -  -  -      ld  c,a
 1619 D1:BA37 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1620 D1:BA3B -  -  -  -  
 1621 D1:BA3B -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1622 D1:BA3B -  -  -  -  inst6502_sbc_abs:
 1623 D1:BA3B ED 33 04 -      ADDCYC(4)
 1624 D1:BA3E CD C8 B0 D1     call subroutine6502_abs_split_start
 1625 D1:BA42 E5 -  -  -      push hl
 1626 D1:BA43 50 -  -  -          ld  d,b
 1627 D1:BA44 79 -  -  -          ld  a,c
 1628 D1:BA45 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1629 D1:BA47 ED 4C -  -          mlt bc
 1630 D1:BA49 21 00 40 D0         ld  hl,PAGETABLE
 1631 D1:BA4D 09 -  -  -          add hl,bc
 1632 D1:BA4E ED 27 -  -          ld  hl,(hl)
 1633 D1:BA50 06 00 -  -          ld  b,0
 1634 D1:BA52 4F -  -  -          ld  c,a
 1635 D1:BA53 09 -  -  -          add hl,bc   ;full address
 1636 D1:BA54 7E -  -  -          READ_ACCESS
 1637 D1:BA55 E1 -  -  -      pop hl
 1638 D1:BA56 4F -  -  -      ld  c,a
 1639 D1:BA57 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1640 D1:BA5B -  -  -  -  
 1641 D1:BA5B -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1642 D1:BA5B -  -  -  -  inst6502_sbc_absx:
 1643 D1:BA5B ED 33 04 -      ADDCYC(4)
 1644 D1:BA5E CD C8 B0 D1     call subroutine6502_abs_split_start
 1645 D1:BA62 E5 -  -  -      push hl
 1646 D1:BA63 50 -  -  -          ld  d,b
 1647 D1:BA64 79 -  -  -          ld  a,c
 1648 D1:BA65 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1649 D1:BA67 ED 4C -  -          mlt bc
 1650 D1:BA69 21 00 40 D0         ld  hl,PAGETABLE
 1651 D1:BA6D 09 -  -  -          add hl,bc
 1652 D1:BA6E ED 27 -  -          ld  hl,(hl)
 1653 D1:BA70 06 00 -  -          ld  b,0
 1654 D1:BA72 DD 86 01 -          add a,(ix+REGX)
 1655 D1:BA75 4F -  -  -          ld  c,a
 1656 D1:BA76 30 04 -  -          jr  nc,+_
 1657 D1:BA78 FD 23 -  -          ADDCYC(1)
 1658 D1:BA7A 04 -  -  -          inc b
 1659 D1:BA7B 14 -  -  -          inc d
 1660 D1:BA7C 09 -  -  -  _:      add hl,bc   ;full address
 1661 D1:BA7D 7E -  -  -          READ_ACCESS
 1662 D1:BA7E E1 -  -  -      pop hl
 1663 D1:BA7F 4F -  -  -      ld  c,a
 1664 D1:BA80 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1665 D1:BA84 -  -  -  -  
 1666 D1:BA84 -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1667 D1:BA84 -  -  -  -  inst6502_sbc_absy:
 1668 D1:BA84 ED 33 04 -      ADDCYC(4)
 1669 D1:BA87 CD C8 B0 D1     call subroutine6502_abs_split_start
 1670 D1:BA8B E5 -  -  -      push hl
 1671 D1:BA8C 50 -  -  -          ld  d,b
 1672 D1:BA8D 79 -  -  -          ld  a,c
 1673 D1:BA8E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1674 D1:BA90 ED 4C -  -          mlt bc
 1675 D1:BA92 21 00 40 D0         ld  hl,PAGETABLE
 1676 D1:BA96 09 -  -  -          add hl,bc
 1677 D1:BA97 ED 27 -  -          ld  hl,(hl)
 1678 D1:BA99 06 00 -  -          ld  b,0
 1679 D1:BA9B DD 86 02 -          add a,(ix+REGY)
 1680 D1:BA9E 4F -  -  -          ld  c,a
 1681 D1:BA9F 30 04 -  -          jr  nc,+_
 1682 D1:BAA1 FD 23 -  -          ADDCYC(1)
 1683 D1:BAA3 04 -  -  -          inc b
 1684 D1:BAA4 14 -  -  -          inc d
 1685 D1:BAA5 09 -  -  -  _:      add hl,bc   ;full address
 1686 D1:BAA6 7E -  -  -          READ_ACCESS
 1687 D1:BAA7 E1 -  -  -      pop hl
 1688 D1:BAA8 4F -  -  -      ld  c,a
 1689 D1:BAA9 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1690 D1:BAAD -  -  -  -  
 1691 D1:BAAD -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1692 D1:BAAD -  -  -  -  inst6502_sbc_indx:
 1693 D1:BAAD ED 33 06 -      ADDCYC(6)
 1694 D1:BAB0 E5 -  -  -      push hl
 1695 D1:BAB1 7E -  -  -          ld  a,(hl)
 1696 D1:BAB2 21 00 38 D0         ld  hl,ZEROPAGE
 1697 D1:BAB6 85 -  -  -          add a,L
 1698 D1:BAB7 DD 86 01 -          add a,(ix+REGX)
 1699 D1:BABA 6F -  -  -          ld  L,a
 1700 D1:BABB 7E -  -  -          ld  a,(hl)
 1701 D1:BABC 2C -  -  -          inc L
 1702 D1:BABD 56 -  -  -          ld  d,(hl)
 1703 D1:BABE 42 -  -  -          ld  b,d
 1704 D1:BABF 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1705 D1:BAC1 ED 4C -  -          mlt bc
 1706 D1:BAC3 21 00 40 D0         ld  hl,PAGETABLE
 1707 D1:BAC7 09 -  -  -          add hl,bc
 1708 D1:BAC8 ED 27 -  -          ld  hl,(hl)
 1709 D1:BACA 06 00 -  -          ld  b,0
 1710 D1:BACC 4F -  -  -          ld  c,a
 1711 D1:BACD 09 -  -  -          add hl,bc
 1712 D1:BACE 7E -  -  -          READ_ACCESS
 1713 D1:BACF E1 -  -  -      pop hl
 1714 D1:BAD0 4F -  -  -      ld  c,a
 1715 D1:BAD1 C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1716 D1:BAD5 -  -  -  -  
 1717 D1:BAD5 -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1718 D1:BAD5 -  -  -  -  inst6502_sbc_indy:
 1719 D1:BAD5 E5 -  -  -      push hl
 1720 D1:BAD6 7E -  -  -          ld  a,(hl)
 1721 D1:BAD7 21 00 38 D0         ld  hl,ZEROPAGE
 1722 D1:BADB 85 -  -  -          add a,L
 1723 D1:BADC 6F -  -  -          ld  L,a
 1724 D1:BADD 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1725 D1:BADE 2C -  -  -          inc L
 1726 D1:BADF DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1727 D1:BAE2 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1728 D1:BAE3 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1729 D1:BAE5 FD 23 -  -          ADDCYC(1)
 1730 D1:BAE7 24 -  -  -          inc h
 1731 D1:BAE8 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1732 D1:BAE9 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1733 D1:BAEB ED 6C -  -          mlt hl          ;23.
 1734 D1:BAED 01 00 40 D0         ld  bc,PAGETABLE
 1735 D1:BAF1 09 -  -  -          add hl,bc
 1736 D1:BAF2 ED 27 -  -          ld  hl,(hl)     ;address get.
 1737 D1:BAF4 01 00 00 00         ld  bc,0
 1738 D1:BAF8 4F -  -  -          ld  c,a
 1739 D1:BAF9 09 -  -  -          add hl,bc       ;Full address get.
 1740 D1:BAFA 7E -  -  -          READ_ACCESS
 1741 D1:BAFB E1 -  -  -      pop hl
 1742 D1:BAFC 4F -  -  -      ld  c,a
 1743 D1:BAFD C3 14 B1 D1     jp  subroutine6502_sbc_combined_end
 1744 D1:BB01 -  -  -  -  
 1745 D1:BB01 -  -  -  -  
 1746 D1:BB01 -  -  -  -  
 1747 D1:BB01 -  -  -  -  ;-----------------------------------------------------------------------------
 1748 D1:BB01 -  -  -  -  ;-----------------------------------------------------------------------------
 1749 D1:BB01 -  -  -  -  ;-----------------------------------------------------------------------------
 1750 D1:BB01 -  -  -  -  ;Instructions by type: Logical Operations
 1751 D1:BB01 -  -  -  -  
 1752 D1:BB01 -  -  -  -  ;AND - AND Memory with Accumulator
 1753 D1:BB01 -  -  -  -  ;A AND M -> A
 1754 D1:BB01 -  -  -  -  ;N	Z	C	I	D	V
 1755 D1:BB01 -  -  -  -  ;+	+	-	-	-	-
 1756 D1:BB01 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1757 D1:BB01 -  -  -  -  
 1758 D1:BB01 -  -  -  -  ;immediate	AND #oper	29	2	2  
 1759 D1:BB01 -  -  -  -  inst6502_and_imm:
 1760 D1:BB01 ED 33 02 -      ADDCYC(2)
 1761 D1:BB04 7E -  -  -      ld  a,(hl)
 1762 D1:BB05 DD A6 00 -      and a,(ix+REGA)
 1763 D1:BB08 DD 77 00 -      ld  (ix+REGA),A
 1764 D1:BB0B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1765 D1:BB1E C3 AB AE D1     jp i6502NextLoad
 1766 D1:BB22 -  -  -  -  
 1767 D1:BB22 -  -  -  -  ;zeropage	AND oper	25	2	3  
 1768 D1:BB22 -  -  -  -  inst6502_and_zp:
 1769 D1:BB22 ED 33 03 -      ADDCYC(3)
 1770 D1:BB25 7E -  -  -      ld  a,(hl)
 1771 D1:BB26 01 00 38 D0     ld  bc,ZEROPAGE
 1772 D1:BB2A 81 -  -  -      add a,c
 1773 D1:BB2B 4F -  -  -      ld  c,a
 1774 D1:BB2C 0A -  -  -      ld  a,(bc)
 1775 D1:BB2D DD A6 00 -      and a,(ix+REGA)
 1776 D1:BB30 DD 77 00 -      ld  (ix+REGA),A
 1777 D1:BB33 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1778 D1:BB46 C3 AB AE D1     jp i6502NextLoad
 1779 D1:BB4A -  -  -  -  
 1780 D1:BB4A -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1781 D1:BB4A -  -  -  -  inst6502_and_zpx:
 1782 D1:BB4A ED 33 04 -      ADDCYC(4)
 1783 D1:BB4D 7E -  -  -      ld  a,(hl)
 1784 D1:BB4E 01 00 38 D0     ld  bc,ZEROPAGE
 1785 D1:BB52 81 -  -  -      add a,c
 1786 D1:BB53 DD 86 01 -      add a,(ix+REGX)
 1787 D1:BB56 4F -  -  -      ld  c,a
 1788 D1:BB57 0A -  -  -      ld  a,(bc)
 1789 D1:BB58 DD A6 00 -      and a,(ix+REGA)
 1790 D1:BB5B DD 77 00 -      ld  (ix+REGA),A
 1791 D1:BB5E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1792 D1:BB71 C3 AB AE D1     jp i6502NextLoad
 1793 D1:BB75 -  -  -  -  
 1794 D1:BB75 -  -  -  -  ;absolute	AND oper	2D	3	4  
 1795 D1:BB75 -  -  -  -  inst6502_and_abs:
 1796 D1:BB75 ED 33 04 -      ADDCYC(4)
 1797 D1:BB78 CD C8 B0 D1     call subroutine6502_abs_split_start
 1798 D1:BB7C E5 -  -  -      push hl
 1799 D1:BB7D 50 -  -  -          ld  d,b
 1800 D1:BB7E 79 -  -  -          ld  a,c
 1801 D1:BB7F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1802 D1:BB81 ED 4C -  -          mlt bc
 1803 D1:BB83 21 00 40 D0         ld  hl,PAGETABLE
 1804 D1:BB87 09 -  -  -          add hl,bc
 1805 D1:BB88 ED 27 -  -          ld  hl,(hl)
 1806 D1:BB8A 06 00 -  -          ld  b,0
 1807 D1:BB8C 4F -  -  -          ld  c,a
 1808 D1:BB8D 09 -  -  -          add hl,bc   ;full address
 1809 D1:BB8E 7E -  -  -          READ_ACCESS
 1810 D1:BB8F E1 -  -  -      pop hl
 1811 D1:BB90 DD A6 00 -      and a,(ix+REGA)
 1812 D1:BB93 DD 77 00 -      ld  (ix+REGA),A
 1813 D1:BB96 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1814 D1:BBA9 C3 AB AE D1     jp i6502NextLoad
 1815 D1:BBAD -  -  -  -  
 1816 D1:BBAD -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1817 D1:BBAD -  -  -  -  inst6502_and_absx:
 1818 D1:BBAD ED 33 04 -      ADDCYC(4)
 1819 D1:BBB0 CD C8 B0 D1     call subroutine6502_abs_split_start
 1820 D1:BBB4 E5 -  -  -      push hl
 1821 D1:BBB5 50 -  -  -          ld  d,b
 1822 D1:BBB6 79 -  -  -          ld  a,c
 1823 D1:BBB7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1824 D1:BBB9 ED 4C -  -          mlt bc
 1825 D1:BBBB 21 00 40 D0         ld  hl,PAGETABLE
 1826 D1:BBBF 09 -  -  -          add hl,bc
 1827 D1:BBC0 ED 27 -  -          ld  hl,(hl)
 1828 D1:BBC2 06 00 -  -          ld  b,0
 1829 D1:BBC4 DD 86 01 -          add a,(ix+REGX)
 1830 D1:BBC7 4F -  -  -          ld  c,a
 1831 D1:BBC8 30 04 -  -          jr  nc,+_
 1832 D1:BBCA 04 -  -  -          inc b
 1833 D1:BBCB 14 -  -  -          inc d
 1834 D1:BBCC FD 23 -  -          ADDCYC(1)
 1835 D1:BBCE 09 -  -  -  _:      add hl,bc   ;full address
 1836 D1:BBCF 7E -  -  -          READ_ACCESS
 1837 D1:BBD0 E1 -  -  -      pop hl
 1838 D1:BBD1 DD A6 00 -      and a,(ix+REGA)
 1839 D1:BBD4 DD 77 00 -      ld  (ix+REGA),A
 1840 D1:BBD7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1841 D1:BBEA C3 AB AE D1     jp i6502NextLoad
 1842 D1:BBEE -  -  -  -  
 1843 D1:BBEE -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1844 D1:BBEE -  -  -  -  inst6502_and_absy:
 1845 D1:BBEE ED 33 04 -      ADDCYC(4)
 1846 D1:BBF1 CD C8 B0 D1     call subroutine6502_abs_split_start
 1847 D1:BBF5 E5 -  -  -      push hl
 1848 D1:BBF6 50 -  -  -          ld  d,b
 1849 D1:BBF7 79 -  -  -          ld  a,c
 1850 D1:BBF8 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1851 D1:BBFA ED 4C -  -          mlt bc
 1852 D1:BBFC 21 00 40 D0         ld  hl,PAGETABLE
 1853 D1:BC00 09 -  -  -          add hl,bc
 1854 D1:BC01 ED 27 -  -          ld  hl,(hl)
 1855 D1:BC03 06 00 -  -          ld  b,0
 1856 D1:BC05 DD 86 02 -          add a,(ix+REGY)
 1857 D1:BC08 4F -  -  -          ld  c,a
 1858 D1:BC09 30 04 -  -          jr  nc,+_
 1859 D1:BC0B 04 -  -  -          inc b
 1860 D1:BC0C 14 -  -  -          inc d
 1861 D1:BC0D FD 23 -  -          ADDCYC(1)
 1862 D1:BC0F 09 -  -  -  _:      add hl,bc   ;full address
 1863 D1:BC10 7E -  -  -          READ_ACCESS
 1864 D1:BC11 E1 -  -  -      pop hl
 1865 D1:BC12 DD A6 00 -      and a,(ix+REGA)
 1866 D1:BC15 DD 77 00 -      ld  (ix+REGA),A
 1867 D1:BC18 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1868 D1:BC2B C3 AB AE D1     jp i6502NextLoad
 1869 D1:BC2F -  -  -  -  
 1870 D1:BC2F -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1871 D1:BC2F -  -  -  -  inst6502_and_indx:
 1872 D1:BC2F ED 33 06 -      ADDCYC(6)
 1873 D1:BC32 E5 -  -  -      push hl
 1874 D1:BC33 7E -  -  -          ld  a,(hl)
 1875 D1:BC34 21 00 38 D0         ld  hl,ZEROPAGE
 1876 D1:BC38 85 -  -  -          add a,L
 1877 D1:BC39 DD 86 01 -          add a,(ix+REGX)
 1878 D1:BC3C 6F -  -  -          ld  L,a
 1879 D1:BC3D 7E -  -  -          ld  a,(hl)
 1880 D1:BC3E 2C -  -  -          inc L
 1881 D1:BC3F 56 -  -  -          ld  d,(hl)
 1882 D1:BC40 42 -  -  -          ld  b,d
 1883 D1:BC41 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1884 D1:BC43 ED 4C -  -          mlt bc
 1885 D1:BC45 21 00 40 D0         ld  hl,PAGETABLE
 1886 D1:BC49 09 -  -  -          add hl,bc
 1887 D1:BC4A ED 27 -  -          ld  hl,(hl)
 1888 D1:BC4C 06 00 -  -          ld  b,0
 1889 D1:BC4E 4F -  -  -          ld  c,a
 1890 D1:BC4F 09 -  -  -          add hl,bc
 1891 D1:BC50 7E -  -  -          READ_ACCESS
 1892 D1:BC51 E1 -  -  -      pop hl
 1893 D1:BC52 DD A6 00 -      and a,(ix+REGA)
 1894 D1:BC55 DD 77 00 -      ld  (ix+REGA),A
 1895 D1:BC58 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1896 D1:BC6B C3 AB AE D1     jp i6502NextLoad
 1897 D1:BC6F -  -  -  -  
 1898 D1:BC6F -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1899 D1:BC6F -  -  -  -  inst6502_and_indy:
 1900 D1:BC6F ED 33 05 -      ADDCYC(5)
 1901 D1:BC72 E5 -  -  -      push hl
 1902 D1:BC73 7E -  -  -          ld  a,(hl)
 1903 D1:BC74 21 00 38 D0         ld  hl,ZEROPAGE
 1904 D1:BC78 85 -  -  -          add a,L
 1905 D1:BC79 6F -  -  -          ld  L,a
 1906 D1:BC7A 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1907 D1:BC7B 2C -  -  -          inc L
 1908 D1:BC7C DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1909 D1:BC7F 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1910 D1:BC80 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1911 D1:BC82 24 -  -  -          inc h
 1912 D1:BC83 FD 23 -  -          ADDCYC(1)
 1913 D1:BC85 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1914 D1:BC86 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1915 D1:BC88 ED 6C -  -          mlt hl          ;23.
 1916 D1:BC8A 01 00 40 D0         ld  bc,PAGETABLE
 1917 D1:BC8E 09 -  -  -          add hl,bc
 1918 D1:BC8F ED 27 -  -          ld  hl,(hl)     ;address get.
 1919 D1:BC91 01 00 00 00         ld  bc,0
 1920 D1:BC95 4F -  -  -          ld  c,a
 1921 D1:BC96 09 -  -  -          add hl,bc       ;Full address get.
 1922 D1:BC97 7E -  -  -          READ_ACCESS
 1923 D1:BC98 E1 -  -  -      pop hl
 1924 D1:BC99 DD A6 00 -      and a,(ix+REGA)
 1925 D1:BC9C DD 77 00 -      ld  (ix+REGA),A
 1926 D1:BC9F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1927 D1:BCB2 C3 AB AE D1     jp i6502NextLoad
 1928 D1:BCB6 -  -  -  -  
 1929 D1:BCB6 -  -  -  -  ;-----------------------------------------------------------------------------
 1930 D1:BCB6 -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1931 D1:BCB6 -  -  -  -  ;A EOR M -> A
 1932 D1:BCB6 -  -  -  -  ;N	Z	C	I	D	V
 1933 D1:BCB6 -  -  -  -  ;+	+	-	-	-	-
 1934 D1:BCB6 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1935 D1:BCB6 -  -  -  -  
 1936 D1:BCB6 -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1937 D1:BCB6 -  -  -  -  inst6502_eor_imm:
 1938 D1:BCB6 ED 33 02 -      ADDCYC(2)
 1939 D1:BCB9 7E -  -  -      ld  a,(hl)
 1940 D1:BCBA DD AE 00 -      xor a,(ix+REGA)
 1941 D1:BCBD DD 77 00 -      ld  (ix+REGA),A
 1942 D1:BCC0 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1943 D1:BCD3 C3 AB AE D1     jp i6502NextLoad
 1944 D1:BCD7 -  -  -  -  
 1945 D1:BCD7 -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1946 D1:BCD7 -  -  -  -  inst6502_eor_zp:
 1947 D1:BCD7 ED 33 03 -      ADDCYC(3)
 1948 D1:BCDA 7E -  -  -      ld  a,(hl)
 1949 D1:BCDB 01 00 38 D0     ld  bc,ZEROPAGE
 1950 D1:BCDF 81 -  -  -      add a,c
 1951 D1:BCE0 4F -  -  -      ld  c,a
 1952 D1:BCE1 0A -  -  -      ld  a,(bc)
 1953 D1:BCE2 DD AE 00 -      xor a,(ix+REGA)
 1954 D1:BCE5 DD 77 00 -      ld  (ix+REGA),A
 1955 D1:BCE8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1956 D1:BCFB C3 AB AE D1     jp i6502NextLoad
 1957 D1:BCFF -  -  -  -  
 1958 D1:BCFF -  -  -  -  
 1959 D1:BCFF -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 1960 D1:BCFF -  -  -  -  inst6502_eor_zpx:
 1961 D1:BCFF ED 33 04 -      ADDCYC(4)
 1962 D1:BD02 7E -  -  -      ld  a,(hl)
 1963 D1:BD03 01 00 38 D0     ld  bc,ZEROPAGE
 1964 D1:BD07 81 -  -  -      add a,c
 1965 D1:BD08 DD 86 01 -      add a,(ix+REGX)
 1966 D1:BD0B 4F -  -  -      ld  c,a
 1967 D1:BD0C 0A -  -  -      ld  a,(bc)
 1968 D1:BD0D DD AE 00 -      xor a,(ix+REGA)
 1969 D1:BD10 DD 77 00 -      ld  (ix+REGA),A
 1970 D1:BD13 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1971 D1:BD26 C3 AB AE D1     jp i6502NextLoad
 1972 D1:BD2A -  -  -  -  
 1973 D1:BD2A -  -  -  -  ;absolute	EOR oper	4D	3	4  
 1974 D1:BD2A -  -  -  -  inst6502_eor_abs:
 1975 D1:BD2A ED 33 04 -      ADDCYC(4)
 1976 D1:BD2D CD C8 B0 D1     call subroutine6502_abs_split_start
 1977 D1:BD31 E5 -  -  -      push hl
 1978 D1:BD32 50 -  -  -          ld  d,b
 1979 D1:BD33 79 -  -  -          ld  a,c
 1980 D1:BD34 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1981 D1:BD36 ED 4C -  -          mlt bc
 1982 D1:BD38 21 00 40 D0         ld  hl,PAGETABLE
 1983 D1:BD3C 09 -  -  -          add hl,bc
 1984 D1:BD3D ED 27 -  -          ld  hl,(hl)
 1985 D1:BD3F 06 00 -  -          ld  b,0
 1986 D1:BD41 4F -  -  -          ld  c,a
 1987 D1:BD42 09 -  -  -          add hl,bc   ;full address
 1988 D1:BD43 7E -  -  -          READ_ACCESS
 1989 D1:BD44 E1 -  -  -      pop hl
 1990 D1:BD45 DD AE 00 -      xor a,(ix+REGA)
 1991 D1:BD48 DD 77 00 -      ld  (ix+REGA),A
 1992 D1:BD4B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1993 D1:BD5E C3 AB AE D1     jp i6502NextLoad
 1994 D1:BD62 -  -  -  -  
 1995 D1:BD62 -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 1996 D1:BD62 -  -  -  -  inst6502_eor_absx:
 1997 D1:BD62 ED 33 04 -      ADDCYC(4)
 1998 D1:BD65 CD C8 B0 D1     call subroutine6502_abs_split_start
 1999 D1:BD69 E5 -  -  -      push hl
 2000 D1:BD6A 50 -  -  -          ld  d,b
 2001 D1:BD6B 79 -  -  -          ld  a,c
 2002 D1:BD6C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2003 D1:BD6E ED 4C -  -          mlt bc
 2004 D1:BD70 21 00 40 D0         ld  hl,PAGETABLE
 2005 D1:BD74 09 -  -  -          add hl,bc
 2006 D1:BD75 ED 27 -  -          ld  hl,(hl)
 2007 D1:BD77 06 00 -  -          ld  b,0
 2008 D1:BD79 DD 86 01 -          add a,(ix+REGX)
 2009 D1:BD7C 4F -  -  -          ld  c,a
 2010 D1:BD7D 30 04 -  -          jr  nc,+_
 2011 D1:BD7F 04 -  -  -          inc b
 2012 D1:BD80 14 -  -  -          inc d
 2013 D1:BD81 FD 23 -  -          ADDCYC(1)
 2014 D1:BD83 09 -  -  -  _:      add hl,bc   ;full address
 2015 D1:BD84 7E -  -  -          READ_ACCESS
 2016 D1:BD85 E1 -  -  -      pop hl
 2017 D1:BD86 DD AE 00 -      xor a,(ix+REGA)
 2018 D1:BD89 DD 77 00 -      ld  (ix+REGA),A
 2019 D1:BD8C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2020 D1:BD9F C3 AB AE D1     jp i6502NextLoad
 2021 D1:BDA3 -  -  -  -  
 2022 D1:BDA3 -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2023 D1:BDA3 -  -  -  -  inst6502_eor_absy:
 2024 D1:BDA3 ED 33 04 -      ADDCYC(4)
 2025 D1:BDA6 CD C8 B0 D1     call subroutine6502_abs_split_start
 2026 D1:BDAA E5 -  -  -      push hl
 2027 D1:BDAB 50 -  -  -          ld  d,b
 2028 D1:BDAC 79 -  -  -          ld  a,c
 2029 D1:BDAD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2030 D1:BDAF ED 4C -  -          mlt bc
 2031 D1:BDB1 21 00 40 D0         ld  hl,PAGETABLE
 2032 D1:BDB5 09 -  -  -          add hl,bc
 2033 D1:BDB6 ED 27 -  -          ld  hl,(hl)
 2034 D1:BDB8 06 00 -  -          ld  b,0
 2035 D1:BDBA DD 86 02 -          add a,(ix+REGY)
 2036 D1:BDBD 4F -  -  -          ld  c,a
 2037 D1:BDBE 30 04 -  -          jr  nc,+_
 2038 D1:BDC0 04 -  -  -          inc b
 2039 D1:BDC1 14 -  -  -          inc d
 2040 D1:BDC2 FD 23 -  -          ADDCYC(1)
 2041 D1:BDC4 09 -  -  -  _:      add hl,bc   ;full address
 2042 D1:BDC5 7E -  -  -          READ_ACCESS
 2043 D1:BDC6 E1 -  -  -      pop hl
 2044 D1:BDC7 DD AE 00 -      xor a,(ix+REGA)
 2045 D1:BDCA DD 77 00 -      ld  (ix+REGA),A
 2046 D1:BDCD DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2047 D1:BDE0 C3 AB AE D1     jp i6502NextLoad
 2048 D1:BDE4 -  -  -  -  
 2049 D1:BDE4 -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2050 D1:BDE4 -  -  -  -  inst6502_eor_indx:
 2051 D1:BDE4 ED 33 06 -      ADDCYC(6)
 2052 D1:BDE7 E5 -  -  -      push hl
 2053 D1:BDE8 7E -  -  -          ld  a,(hl)
 2054 D1:BDE9 21 00 38 D0         ld  hl,ZEROPAGE
 2055 D1:BDED 85 -  -  -          add a,L
 2056 D1:BDEE DD 86 01 -          add a,(ix+REGX)
 2057 D1:BDF1 6F -  -  -          ld  L,a
 2058 D1:BDF2 7E -  -  -          ld  a,(hl)
 2059 D1:BDF3 2C -  -  -          inc L
 2060 D1:BDF4 56 -  -  -          ld  d,(hl)
 2061 D1:BDF5 42 -  -  -          ld  b,d
 2062 D1:BDF6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2063 D1:BDF8 ED 4C -  -          mlt bc
 2064 D1:BDFA 21 00 40 D0         ld  hl,PAGETABLE
 2065 D1:BDFE 09 -  -  -          add hl,bc
 2066 D1:BDFF ED 27 -  -          ld  hl,(hl)
 2067 D1:BE01 06 00 -  -          ld  b,0
 2068 D1:BE03 4F -  -  -          ld  c,a
 2069 D1:BE04 09 -  -  -          add hl,bc
 2070 D1:BE05 7E -  -  -          READ_ACCESS
 2071 D1:BE06 E1 -  -  -      pop hl
 2072 D1:BE07 DD AE 00 -      xor a,(ix+REGA)
 2073 D1:BE0A DD 77 00 -      ld  (ix+REGA),A
 2074 D1:BE0D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2075 D1:BE20 C3 AB AE D1     jp i6502NextLoad
 2076 D1:BE24 -  -  -  -  
 2077 D1:BE24 -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2078 D1:BE24 -  -  -  -  inst6502_eor_indy:
 2079 D1:BE24 ED 33 05 -      ADDCYC(5)
 2080 D1:BE27 E5 -  -  -      push hl
 2081 D1:BE28 7E -  -  -          ld  a,(hl)
 2082 D1:BE29 21 00 38 D0         ld  hl,ZEROPAGE
 2083 D1:BE2D 85 -  -  -          add a,L
 2084 D1:BE2E 6F -  -  -          ld  L,a
 2085 D1:BE2F 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2086 D1:BE30 2C -  -  -          inc L
 2087 D1:BE31 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2088 D1:BE34 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2089 D1:BE35 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2090 D1:BE37 24 -  -  -          inc h
 2091 D1:BE38 FD 23 -  -          ADDCYC(1)
 2092 D1:BE3A 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2093 D1:BE3B 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2094 D1:BE3D ED 6C -  -          mlt hl          ;23.
 2095 D1:BE3F 01 00 40 D0         ld  bc,PAGETABLE
 2096 D1:BE43 09 -  -  -          add hl,bc
 2097 D1:BE44 ED 27 -  -          ld  hl,(hl)     ;address get.
 2098 D1:BE46 01 00 00 00         ld  bc,0
 2099 D1:BE4A 4F -  -  -          ld  c,a
 2100 D1:BE4B 09 -  -  -          add hl,bc       ;Full address get.
 2101 D1:BE4C 7E -  -  -          READ_ACCESS
 2102 D1:BE4D E1 -  -  -      pop hl
 2103 D1:BE4E DD AE 00 -      xor a,(ix+REGA)
 2104 D1:BE51 DD 77 00 -      ld  (ix+REGA),A
 2105 D1:BE54 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2106 D1:BE67 C3 AB AE D1     jp i6502NextLoad
 2107 D1:BE6B -  -  -  -  
 2108 D1:BE6B -  -  -  -  ;-----------------------------------------------------------------------------
 2109 D1:BE6B -  -  -  -  ;ORA - OR Memory with Accumulator
 2110 D1:BE6B -  -  -  -  ;A OR M -> A
 2111 D1:BE6B -  -  -  -  ;N	Z	C	I	D	V
 2112 D1:BE6B -  -  -  -  ;+	+	-	-	-	-
 2113 D1:BE6B -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2114 D1:BE6B -  -  -  -  
 2115 D1:BE6B -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2116 D1:BE6B -  -  -  -  inst6502_ora_imm:
 2117 D1:BE6B ED 33 02 -      ADDCYC(2)
 2118 D1:BE6E 7E -  -  -      ld  a,(hl)
 2119 D1:BE6F DD B6 00 -      or  a,(ix+REGA)
 2120 D1:BE72 DD 77 00 -      ld  (ix+REGA),A
 2121 D1:BE75 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2122 D1:BE88 C3 AB AE D1     jp i6502NextLoad
 2123 D1:BE8C -  -  -  -  
 2124 D1:BE8C -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2125 D1:BE8C -  -  -  -  inst6502_ora_zp:
 2126 D1:BE8C ED 33 03 -      ADDCYC(3)
 2127 D1:BE8F 7E -  -  -      ld  a,(hl)
 2128 D1:BE90 01 00 38 D0     ld  bc,ZEROPAGE
 2129 D1:BE94 81 -  -  -      add a,c
 2130 D1:BE95 4F -  -  -      ld  c,a
 2131 D1:BE96 0A -  -  -      ld  a,(bc)
 2132 D1:BE97 DD B6 00 -      or  a,(ix+REGA)
 2133 D1:BE9A DD 77 00 -      ld  (ix+REGA),A
 2134 D1:BE9D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2135 D1:BEB0 C3 AB AE D1     jp i6502NextLoad
 2136 D1:BEB4 -  -  -  -  
 2137 D1:BEB4 -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2138 D1:BEB4 -  -  -  -  inst6502_ora_zpx:
 2139 D1:BEB4 ED 33 04 -      ADDCYC(4)
 2140 D1:BEB7 7E -  -  -      ld  a,(hl)
 2141 D1:BEB8 01 00 38 D0     ld  bc,ZEROPAGE
 2142 D1:BEBC 81 -  -  -      add a,c
 2143 D1:BEBD DD 86 01 -      add a,(ix+REGX)
 2144 D1:BEC0 4F -  -  -      ld  c,a
 2145 D1:BEC1 0A -  -  -      ld  a,(bc)
 2146 D1:BEC2 DD B6 00 -      or  a,(ix+REGA)
 2147 D1:BEC5 DD 77 00 -      ld  (ix+REGA),A
 2148 D1:BEC8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2149 D1:BEDB C3 AB AE D1     jp i6502NextLoad
 2150 D1:BEDF -  -  -  -  
 2151 D1:BEDF -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2152 D1:BEDF -  -  -  -  inst6502_ora_abs:
 2153 D1:BEDF ED 33 04 -      ADDCYC(4)
 2154 D1:BEE2 CD C8 B0 D1     call subroutine6502_abs_split_start
 2155 D1:BEE6 E5 -  -  -      push hl
 2156 D1:BEE7 50 -  -  -          ld  d,b
 2157 D1:BEE8 79 -  -  -          ld  a,c
 2158 D1:BEE9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2159 D1:BEEB ED 4C -  -          mlt bc
 2160 D1:BEED 21 00 40 D0         ld  hl,PAGETABLE
 2161 D1:BEF1 09 -  -  -          add hl,bc
 2162 D1:BEF2 ED 27 -  -          ld  hl,(hl)
 2163 D1:BEF4 06 00 -  -          ld  b,0
 2164 D1:BEF6 4F -  -  -          ld  c,a
 2165 D1:BEF7 09 -  -  -          add hl,bc   ;full address
 2166 D1:BEF8 7E -  -  -          READ_ACCESS
 2167 D1:BEF9 E1 -  -  -      pop hl
 2168 D1:BEFA DD B6 00 -      or  a,(ix+REGA)
 2169 D1:BEFD DD 77 00 -      ld  (ix+REGA),A
 2170 D1:BF00 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2171 D1:BF13 C3 AB AE D1     jp i6502NextLoad
 2172 D1:BF17 -  -  -  -  
 2173 D1:BF17 -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2174 D1:BF17 -  -  -  -  inst6502_ora_absx:
 2175 D1:BF17 ED 33 04 -      ADDCYC(4)
 2176 D1:BF1A CD C8 B0 D1     call subroutine6502_abs_split_start
 2177 D1:BF1E E5 -  -  -      push hl
 2178 D1:BF1F 50 -  -  -          ld  d,b
 2179 D1:BF20 79 -  -  -          ld  a,c
 2180 D1:BF21 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2181 D1:BF23 ED 4C -  -          mlt bc
 2182 D1:BF25 21 00 40 D0         ld  hl,PAGETABLE
 2183 D1:BF29 09 -  -  -          add hl,bc
 2184 D1:BF2A ED 27 -  -          ld  hl,(hl)
 2185 D1:BF2C 06 00 -  -          ld  b,0
 2186 D1:BF2E DD 86 01 -          add a,(ix+REGX)
 2187 D1:BF31 4F -  -  -          ld  c,a
 2188 D1:BF32 30 04 -  -          jr  nc,+_
 2189 D1:BF34 04 -  -  -          inc b
 2190 D1:BF35 14 -  -  -          inc d
 2191 D1:BF36 FD 23 -  -          ADDCYC(1)
 2192 D1:BF38 09 -  -  -  _:      add hl,bc   ;full address
 2193 D1:BF39 7E -  -  -          READ_ACCESS
 2194 D1:BF3A E1 -  -  -      pop hl
 2195 D1:BF3B DD B6 00 -      or  a,(ix+REGA)
 2196 D1:BF3E DD 77 00 -      ld  (ix+REGA),A
 2197 D1:BF41 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2198 D1:BF54 C3 AB AE D1     jp i6502NextLoad
 2199 D1:BF58 -  -  -  -  
 2200 D1:BF58 -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2201 D1:BF58 -  -  -  -  inst6502_ora_absy:
 2202 D1:BF58 ED 33 04 -      ADDCYC(4)
 2203 D1:BF5B CD C8 B0 D1     call subroutine6502_abs_split_start
 2204 D1:BF5F E5 -  -  -      push hl
 2205 D1:BF60 50 -  -  -          ld  d,b
 2206 D1:BF61 79 -  -  -          ld  a,c
 2207 D1:BF62 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2208 D1:BF64 ED 4C -  -          mlt bc
 2209 D1:BF66 21 00 40 D0         ld  hl,PAGETABLE
 2210 D1:BF6A 09 -  -  -          add hl,bc
 2211 D1:BF6B ED 27 -  -          ld  hl,(hl)
 2212 D1:BF6D 06 00 -  -          ld  b,0
 2213 D1:BF6F DD 86 02 -          add a,(ix+REGY)
 2214 D1:BF72 4F -  -  -          ld  c,a
 2215 D1:BF73 30 04 -  -          jr  nc,+_
 2216 D1:BF75 04 -  -  -          inc b
 2217 D1:BF76 14 -  -  -          inc d
 2218 D1:BF77 FD 23 -  -          ADDCYC(1)
 2219 D1:BF79 09 -  -  -  _:      add hl,bc   ;full address
 2220 D1:BF7A 7E -  -  -          READ_ACCESS
 2221 D1:BF7B E1 -  -  -      pop hl
 2222 D1:BF7C DD B6 00 -      or  a,(ix+REGA)
 2223 D1:BF7F DD 77 00 -      ld  (ix+REGA),A
 2224 D1:BF82 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2225 D1:BF95 C3 AB AE D1     jp i6502NextLoad
 2226 D1:BF99 -  -  -  -  
 2227 D1:BF99 -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2228 D1:BF99 -  -  -  -  inst6502_ora_indx:
 2229 D1:BF99 ED 33 06 -      ADDCYC(6)
 2230 D1:BF9C E5 -  -  -      push hl
 2231 D1:BF9D 7E -  -  -          ld  a,(hl)
 2232 D1:BF9E 21 00 38 D0         ld  hl,ZEROPAGE
 2233 D1:BFA2 85 -  -  -          add a,L
 2234 D1:BFA3 DD 86 01 -          add a,(ix+REGX)
 2235 D1:BFA6 6F -  -  -          ld  L,a
 2236 D1:BFA7 7E -  -  -          ld  a,(hl)
 2237 D1:BFA8 2C -  -  -          inc L
 2238 D1:BFA9 56 -  -  -          ld  d,(hl)
 2239 D1:BFAA 42 -  -  -          ld  b,d
 2240 D1:BFAB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2241 D1:BFAD ED 4C -  -          mlt bc
 2242 D1:BFAF 21 00 40 D0         ld  hl,PAGETABLE
 2243 D1:BFB3 09 -  -  -          add hl,bc
 2244 D1:BFB4 ED 27 -  -          ld  hl,(hl)
 2245 D1:BFB6 06 00 -  -          ld  b,0
 2246 D1:BFB8 4F -  -  -          ld  c,a
 2247 D1:BFB9 09 -  -  -          add hl,bc
 2248 D1:BFBA 7E -  -  -          READ_ACCESS
 2249 D1:BFBB E1 -  -  -      pop hl
 2250 D1:BFBC DD B6 00 -      or  a,(ix+REGA)
 2251 D1:BFBF DD 77 00 -      ld  (ix+REGA),A
 2252 D1:BFC2 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2253 D1:BFD5 C3 AB AE D1     jp i6502NextLoad
 2254 D1:BFD9 -  -  -  -  
 2255 D1:BFD9 -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2256 D1:BFD9 -  -  -  -  inst6502_ora_indy:
 2257 D1:BFD9 ED 33 05 -      ADDCYC(5)
 2258 D1:BFDC E5 -  -  -      push hl
 2259 D1:BFDD 7E -  -  -          ld  a,(hl)
 2260 D1:BFDE 21 00 38 D0         ld  hl,ZEROPAGE
 2261 D1:BFE2 85 -  -  -          add a,L
 2262 D1:BFE3 6F -  -  -          ld  L,a
 2263 D1:BFE4 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2264 D1:BFE5 2C -  -  -          inc L
 2265 D1:BFE6 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2266 D1:BFE9 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2267 D1:BFEA 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2268 D1:BFEC 24 -  -  -          inc h
 2269 D1:BFED FD 23 -  -          ADDCYC(1)
 2270 D1:BFEF 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2271 D1:BFF0 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2272 D1:BFF2 ED 6C -  -          mlt hl          ;23.
 2273 D1:BFF4 01 00 40 D0         ld  bc,PAGETABLE
 2274 D1:BFF8 09 -  -  -          add hl,bc
 2275 D1:BFF9 ED 27 -  -          ld  hl,(hl)     ;address get.
 2276 D1:BFFB 01 00 00 00         ld  bc,0
 2277 D1:BFFF 4F -  -  -          ld  c,a
 2278 D1:C000 09 -  -  -          add hl,bc       ;Full address get.
 2279 D1:C001 7E -  -  -          READ_ACCESS
 2280 D1:C002 E1 -  -  -      pop hl
 2281 D1:C003 DD B6 00 -      or  a,(ix+REGA)
 2282 D1:C006 DD 77 00 -      ld  (ix+REGA),A
 2283 D1:C009 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2284 D1:C01C C3 AB AE D1     jp i6502NextLoad
 2285 D1:C020 -  -  -  -  
 2286 D1:C020 -  -  -  -  ;-----------------------------------------------------------------------------
 2287 D1:C020 -  -  -  -  ;-----------------------------------------------------------------------------
 2288 D1:C020 -  -  -  -  ;-----------------------------------------------------------------------------
 2289 D1:C020 -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2290 D1:C020 -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2291 D1:C020 -  -  -  -  ;C <- [76543210] <- 0
 2292 D1:C020 -  -  -  -  ;N	Z	C	I	D	V
 2293 D1:C020 -  -  -  -  ;+	+	+	-	-	-
 2294 D1:C020 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2295 D1:C020 -  -  -  -  
 2296 D1:C020 -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2297 D1:C020 -  -  -  -  inst6502_asl:
 2298 D1:C020 ED 33 02 -      ADDCYC(2)
 2299 D1:C023 DD CB 00 26     sla (ix+REGA)
 2300 D1:C027 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2301 D1:C040 C3 C4 AE D1     jp i6502FinishLoad
 2302 D1:C044 -  -  -  -  
 2303 D1:C044 -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2304 D1:C044 -  -  -  -  inst6502_asl_zp:
 2305 D1:C044 ED 33 05 -      ADDCYC(5)
 2306 D1:C047 7E -  -  -      ld  a,(hl)
 2307 D1:C048 01 00 38 D0     ld  bc,ZEROPAGE
 2308 D1:C04C 81 -  -  -      add a,c
 2309 D1:C04D 4F -  -  -      ld  c,a
 2310 D1:C04E 0A -  -  -      ld  a,(bc)
 2311 D1:C04F CB 27 -  -      sla a
 2312 D1:C051 02 -  -  -      ld  (bc),a
 2313 D1:C052 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2314 D1:C06B C3 AB AE D1     jp i6502NextLoad
 2315 D1:C06F -  -  -  -  
 2316 D1:C06F -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2317 D1:C06F -  -  -  -  inst6502_asl_zpx:
 2318 D1:C06F ED 33 06 -      ADDCYC(6)
 2319 D1:C072 7E -  -  -      ld  a,(hl)
 2320 D1:C073 01 00 38 D0     ld  bc,ZEROPAGE
 2321 D1:C077 81 -  -  -      add a,c
 2322 D1:C078 DD 86 01 -      add a,(ix+REGX)
 2323 D1:C07B 4F -  -  -      ld  c,a
 2324 D1:C07C 0A -  -  -      ld  a,(bc)
 2325 D1:C07D CB 27 -  -      sla a
 2326 D1:C07F 02 -  -  -      ld  (bc),a
 2327 D1:C080 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2328 D1:C099 C3 AB AE D1     jp i6502NextLoad
 2329 D1:C09D -  -  -  -  
 2330 D1:C09D -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2331 D1:C09D -  -  -  -  inst6502_asl_abs:
 2332 D1:C09D ED 33 06 -      ADDCYC(6)
 2333 D1:C0A0 CD C8 B0 D1     call subroutine6502_abs_split_start
 2334 D1:C0A4 E5 -  -  -      push hl
 2335 D1:C0A5 50 -  -  -          ld  d,b
 2336 D1:C0A6 79 -  -  -          ld  a,c
 2337 D1:C0A7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2338 D1:C0A9 ED 4C -  -          mlt bc
 2339 D1:C0AB 21 00 40 D0         ld  hl,PAGETABLE
 2340 D1:C0AF 09 -  -  -          add hl,bc
 2341 D1:C0B0 ED 27 -  -          ld  hl,(hl)
 2342 D1:C0B2 06 00 -  -          ld  b,0
 2343 D1:C0B4 4F -  -  -          ld  c,a
 2344 D1:C0B5 09 -  -  -          add hl,bc   ;full address
 2345 D1:C0B6 7E -  -  -          READ_ACCESS
 2346 D1:C0B7 E1 -  -  -      pop hl
 2347 D1:C0B8 7E -  -  -      ld  a,(hl)
 2348 D1:C0B9 CB 27 -  -      sla a
 2349 D1:C0BB 47 -  -  -      ld  b,a
 2350 D1:C0BC DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2351 D1:C0D5 70 -  -  -      WRITE_ACCESS
 2352 D1:C0D6 C3 AB AE D1     jp i6502NextLoad
 2353 D1:C0DA -  -  -  -  
 2354 D1:C0DA -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2355 D1:C0DA -  -  -  -  inst6502_asl_absx:
 2356 D1:C0DA ED 33 07 -      ADDCYC(7)
 2357 D1:C0DD CD C8 B0 D1     call subroutine6502_abs_split_start
 2358 D1:C0E1 E5 -  -  -      push hl
 2359 D1:C0E2 50 -  -  -          ld  d,b
 2360 D1:C0E3 79 -  -  -          ld  a,c
 2361 D1:C0E4 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2362 D1:C0E6 ED 4C -  -          mlt bc
 2363 D1:C0E8 21 00 40 D0         ld  hl,PAGETABLE
 2364 D1:C0EC 09 -  -  -          add hl,bc
 2365 D1:C0ED ED 27 -  -          ld  hl,(hl)
 2366 D1:C0EF 06 00 -  -          ld  b,0
 2367 D1:C0F1 DD 86 01 -          add a,(ix+REGX)
 2368 D1:C0F4 4F -  -  -          ld  c,a
 2369 D1:C0F5 30 02 -  -          jr  nc,+_
 2370 D1:C0F7 04 -  -  -          inc b
 2371 D1:C0F8 14 -  -  -          inc d
 2372 D1:C0F9 09 -  -  -  _:      add hl,bc   ;full address
 2373 D1:C0FA 7E -  -  -          READ_ACCESS
 2374 D1:C0FB E1 -  -  -      pop hl
 2375 D1:C0FC 7E -  -  -      ld  a,(hl)
 2376 D1:C0FD CB 27 -  -      sla a
 2377 D1:C0FF 47 -  -  -      ld  b,a
 2378 D1:C100 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2379 D1:C119 70 -  -  -      WRITE_ACCESS
 2380 D1:C11A C3 AB AE D1     jp i6502NextLoad
 2381 D1:C11E -  -  -  -  
 2382 D1:C11E -  -  -  -  ;-----------------------------------------------------------------------------
 2383 D1:C11E -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2384 D1:C11E -  -  -  -  ;0 -> [76543210] -> C
 2385 D1:C11E -  -  -  -  ;N	Z	C	I	D	V
 2386 D1:C11E -  -  -  -  ;0	+	+	-	-	-
 2387 D1:C11E -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2388 D1:C11E -  -  -  -  
 2389 D1:C11E -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2390 D1:C11E -  -  -  -  inst6502_lsr:
 2391 D1:C11E ED 33 02 -      ADDCYC(2)
 2392 D1:C121 DD CB 00 3E     srl (ix+REGA)
 2393 D1:C125 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2394 D1:C13E C3 C4 AE D1     jp i6502FinishLoad
 2395 D1:C142 -  -  -  -  
 2396 D1:C142 -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2397 D1:C142 -  -  -  -  inst6502_lsr_zp:
 2398 D1:C142 ED 33 05 -      ADDCYC(5)
 2399 D1:C145 7E -  -  -      ld  a,(hl)
 2400 D1:C146 01 00 38 D0     ld  bc,ZEROPAGE
 2401 D1:C14A 81 -  -  -      add a,c
 2402 D1:C14B 4F -  -  -      ld  c,a
 2403 D1:C14C 0A -  -  -      ld  a,(bc)
 2404 D1:C14D CB 3F -  -      srl a
 2405 D1:C14F 02 -  -  -      ld  (bc),a
 2406 D1:C150 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2407 D1:C169 C3 AB AE D1     jp i6502NextLoad
 2408 D1:C16D -  -  -  -  
 2409 D1:C16D -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2410 D1:C16D -  -  -  -  inst6502_lsr_zpx:
 2411 D1:C16D ED 33 06 -      ADDCYC(6)
 2412 D1:C170 7E -  -  -      ld  a,(hl)
 2413 D1:C171 01 00 38 D0     ld  bc,ZEROPAGE
 2414 D1:C175 81 -  -  -      add a,c
 2415 D1:C176 DD 86 01 -      add a,(ix+REGX)
 2416 D1:C179 4F -  -  -      ld  c,a
 2417 D1:C17A 0A -  -  -      ld  a,(bc)
 2418 D1:C17B CB 3F -  -      srl a
 2419 D1:C17D 02 -  -  -      ld  (bc),a
 2420 D1:C17E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2421 D1:C197 C3 AB AE D1     jp i6502NextLoad
 2422 D1:C19B -  -  -  -      
 2423 D1:C19B -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2424 D1:C19B -  -  -  -  inst6502_lsr_abs:
 2425 D1:C19B ED 33 06 -      ADDCYC(6)
 2426 D1:C19E CD C8 B0 D1     call subroutine6502_abs_split_start
 2427 D1:C1A2 E5 -  -  -      push hl
 2428 D1:C1A3 50 -  -  -          ld  d,b
 2429 D1:C1A4 79 -  -  -          ld  a,c
 2430 D1:C1A5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2431 D1:C1A7 ED 4C -  -          mlt bc
 2432 D1:C1A9 21 00 40 D0         ld  hl,PAGETABLE
 2433 D1:C1AD 09 -  -  -          add hl,bc
 2434 D1:C1AE ED 27 -  -          ld  hl,(hl)
 2435 D1:C1B0 06 00 -  -          ld  b,0
 2436 D1:C1B2 4F -  -  -          ld  c,a
 2437 D1:C1B3 09 -  -  -          add hl,bc   ;full address
 2438 D1:C1B4 7E -  -  -          READ_ACCESS
 2439 D1:C1B5 E1 -  -  -      pop hl
 2440 D1:C1B6 7E -  -  -      ld  a,(hl)
 2441 D1:C1B7 CB 3F -  -      srl a
 2442 D1:C1B9 47 -  -  -      ld  b,a
 2443 D1:C1BA DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2444 D1:C1D3 70 -  -  -      WRITE_ACCESS
 2445 D1:C1D4 C3 AB AE D1     jp i6502NextLoad
 2446 D1:C1D8 -  -  -  -  
 2447 D1:C1D8 -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2448 D1:C1D8 -  -  -  -  inst6502_lsr_absx:
 2449 D1:C1D8 ED 33 07 -      ADDCYC(7)
 2450 D1:C1DB CD C8 B0 D1     call subroutine6502_abs_split_start
 2451 D1:C1DF E5 -  -  -      push hl
 2452 D1:C1E0 50 -  -  -          ld  d,b
 2453 D1:C1E1 79 -  -  -          ld  a,c
 2454 D1:C1E2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2455 D1:C1E4 ED 4C -  -          mlt bc
 2456 D1:C1E6 21 00 40 D0         ld  hl,PAGETABLE
 2457 D1:C1EA 09 -  -  -          add hl,bc
 2458 D1:C1EB ED 27 -  -          ld  hl,(hl)
 2459 D1:C1ED 06 00 -  -          ld  b,0
 2460 D1:C1EF DD 86 01 -          add a,(ix+REGX)
 2461 D1:C1F2 4F -  -  -          ld  c,a
 2462 D1:C1F3 30 02 -  -          jr  nc,+_
 2463 D1:C1F5 04 -  -  -          inc b
 2464 D1:C1F6 14 -  -  -          inc d
 2465 D1:C1F7 09 -  -  -  _:      add hl,bc   ;full address
 2466 D1:C1F8 7E -  -  -          READ_ACCESS
 2467 D1:C1F9 E1 -  -  -      pop hl
 2468 D1:C1FA 7E -  -  -      ld  a,(hl)
 2469 D1:C1FB CB 3F -  -      srl a
 2470 D1:C1FD 47 -  -  -      ld  b,a
 2471 D1:C1FE DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2472 D1:C217 70 -  -  -      WRITE_ACCESS
 2473 D1:C218 C3 AB AE D1     jp i6502NextLoad
 2474 D1:C21C -  -  -  -  
 2475 D1:C21C -  -  -  -  ;-----------------------------------------------------------------------------
 2476 D1:C21C -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2477 D1:C21C -  -  -  -  ;C <- [76543210] <- C
 2478 D1:C21C -  -  -  -  ;N	Z	C	I	D	V
 2479 D1:C21C -  -  -  -  ;+	+	+	-	-	-
 2480 D1:C21C -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2481 D1:C21C -  -  -  -  
 2482 D1:C21C -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2483 D1:C21C -  -  -  -  inst6502_rol:
 2484 D1:C21C ED 33 02 -      ADDCYC(2)
 2485 D1:C21F DD 7E 04 -      ld  a,(ix+REGSR)
 2486 D1:C222 1F -  -  -      rra
 2487 D1:C223 DD CB 00 16     rl (ix+REGA)
 2488 D1:C227 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2489 D1:C240 C3 C4 AE D1     jp i6502FinishLoad
 2490 D1:C244 -  -  -  -  
 2491 D1:C244 -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2492 D1:C244 -  -  -  -  inst6502_rol_zp:
 2493 D1:C244 ED 33 05 -      ADDCYC(5)
 2494 D1:C247 7E -  -  -      ld  a,(hl)
 2495 D1:C248 01 00 38 D0     ld  bc,ZEROPAGE
 2496 D1:C24C 81 -  -  -      add a,c
 2497 D1:C24D 4F -  -  -      ld  c,a
 2498 D1:C24E DD 7E 04 -      ld  a,(ix+REGSR)
 2499 D1:C251 1F -  -  -      rra
 2500 D1:C252 0A -  -  -      ld  a,(bc)
 2501 D1:C253 17 -  -  -      rla
 2502 D1:C254 02 -  -  -      ld  (bc),a
 2503 D1:C255 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2504 D1:C26E C3 AB AE D1     jp i6502NextLoad
 2505 D1:C272 -  -  -  -  
 2506 D1:C272 -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2507 D1:C272 -  -  -  -  inst6502_rol_zpx:
 2508 D1:C272 ED 33 06 -      ADDCYC(6)
 2509 D1:C275 7E -  -  -      ld  a,(hl)
 2510 D1:C276 01 00 38 D0     ld  bc,ZEROPAGE
 2511 D1:C27A 81 -  -  -      add a,c
 2512 D1:C27B DD 86 01 -      add a,(ix+REGX)
 2513 D1:C27E 4F -  -  -      ld  c,a
 2514 D1:C27F DD 7E 04 -      ld  a,(ix+REGSR)
 2515 D1:C282 1F -  -  -      rra
 2516 D1:C283 0A -  -  -      ld  a,(bc)
 2517 D1:C284 17 -  -  -      rla
 2518 D1:C285 02 -  -  -      ld  (bc),a
 2519 D1:C286 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2520 D1:C29F C3 AB AE D1     jp i6502NextLoad
 2521 D1:C2A3 -  -  -  -  
 2522 D1:C2A3 -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2523 D1:C2A3 -  -  -  -  inst6502_rol_abs:
 2524 D1:C2A3 ED 33 06 -      ADDCYC(6)
 2525 D1:C2A6 CD C8 B0 D1     call subroutine6502_abs_split_start
 2526 D1:C2AA E5 -  -  -      push hl
 2527 D1:C2AB 50 -  -  -          ld  d,b
 2528 D1:C2AC 79 -  -  -          ld  a,c
 2529 D1:C2AD 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2530 D1:C2AF ED 4C -  -          mlt bc
 2531 D1:C2B1 21 00 40 D0         ld  hl,PAGETABLE
 2532 D1:C2B5 09 -  -  -          add hl,bc
 2533 D1:C2B6 ED 27 -  -          ld  hl,(hl)
 2534 D1:C2B8 06 00 -  -          ld  b,0
 2535 D1:C2BA 4F -  -  -          ld  c,a
 2536 D1:C2BB 09 -  -  -          add hl,bc   ;full address
 2537 D1:C2BC 7E -  -  -          READ_ACCESS
 2538 D1:C2BD E1 -  -  -      pop hl
 2539 D1:C2BE DD 7E 04 -      ld  a,(ix+REGSR)
 2540 D1:C2C1 1F -  -  -      rra
 2541 D1:C2C2 7E -  -  -      ld  a,(hl)
 2542 D1:C2C3 17 -  -  -      rla
 2543 D1:C2C4 47 -  -  -      ld  b,a
 2544 D1:C2C5 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2545 D1:C2DE 70 -  -  -      WRITE_ACCESS
 2546 D1:C2DF C3 AB AE D1     jp i6502NextLoad
 2547 D1:C2E3 -  -  -  -  
 2548 D1:C2E3 -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2549 D1:C2E3 -  -  -  -  inst6502_rol_absx:
 2550 D1:C2E3 ED 33 07 -      ADDCYC(7)
 2551 D1:C2E6 CD C8 B0 D1     call subroutine6502_abs_split_start
 2552 D1:C2EA E5 -  -  -      push hl
 2553 D1:C2EB 50 -  -  -          ld  d,b
 2554 D1:C2EC 79 -  -  -          ld  a,c
 2555 D1:C2ED 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2556 D1:C2EF ED 4C -  -          mlt bc
 2557 D1:C2F1 21 00 40 D0         ld  hl,PAGETABLE
 2558 D1:C2F5 09 -  -  -          add hl,bc
 2559 D1:C2F6 ED 27 -  -          ld  hl,(hl)
 2560 D1:C2F8 06 00 -  -          ld  b,0
 2561 D1:C2FA DD 86 01 -          add a,(ix+REGX)
 2562 D1:C2FD 4F -  -  -          ld  c,a
 2563 D1:C2FE 30 02 -  -          jr  nc,+_
 2564 D1:C300 04 -  -  -          inc b
 2565 D1:C301 14 -  -  -          inc d
 2566 D1:C302 09 -  -  -  _:      add hl,bc   ;full address
 2567 D1:C303 7E -  -  -          READ_ACCESS
 2568 D1:C304 E1 -  -  -      pop hl
 2569 D1:C305 DD 7E 04 -      ld  a,(ix+REGSR)
 2570 D1:C308 1F -  -  -      rra
 2571 D1:C309 7E -  -  -      ld  a,(hl)
 2572 D1:C30A 17 -  -  -      rla
 2573 D1:C30B 47 -  -  -      ld  b,a
 2574 D1:C30C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2575 D1:C325 70 -  -  -      WRITE_ACCESS
 2576 D1:C326 C3 AB AE D1     jp i6502NextLoad
 2577 D1:C32A -  -  -  -  
 2578 D1:C32A -  -  -  -  ;-----------------------------------------------------------------------------
 2579 D1:C32A -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2580 D1:C32A -  -  -  -  ;C -> [76543210] -> C
 2581 D1:C32A -  -  -  -  ;N	Z	C	I	D	V
 2582 D1:C32A -  -  -  -  ;+	+	+	-	-	-
 2583 D1:C32A -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2584 D1:C32A -  -  -  -  
 2585 D1:C32A -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2586 D1:C32A -  -  -  -  inst6502_ror:
 2587 D1:C32A ED 33 02 -      ADDCYC(2)
 2588 D1:C32D DD 7E 04 -      ld  a,(ix+REGSR)
 2589 D1:C330 1F -  -  -      rra
 2590 D1:C331 DD CB 00 1E     rr  (ix+REGA)
 2591 D1:C335 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2592 D1:C34E C3 C4 AE D1     jp i6502FinishLoad
 2593 D1:C352 -  -  -  -  
 2594 D1:C352 -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2595 D1:C352 -  -  -  -  inst6502_ror_zp:
 2596 D1:C352 ED 33 05 -      ADDCYC(5)
 2597 D1:C355 7E -  -  -      ld  a,(hl)
 2598 D1:C356 01 00 38 D0     ld  bc,ZEROPAGE
 2599 D1:C35A 81 -  -  -      add a,c
 2600 D1:C35B 4F -  -  -      ld  c,a
 2601 D1:C35C DD 7E 04 -      ld  a,(ix+REGSR)
 2602 D1:C35F 1F -  -  -      rra
 2603 D1:C360 0A -  -  -      ld  a,(bc)
 2604 D1:C361 1F -  -  -      rra
 2605 D1:C362 02 -  -  -      ld  (bc),a
 2606 D1:C363 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2607 D1:C37C C3 AB AE D1     jp i6502NextLoad
 2608 D1:C380 -  -  -  -  
 2609 D1:C380 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2610 D1:C380 -  -  -  -  inst6502_ror_zpx:
 2611 D1:C380 ED 33 06 -      ADDCYC(6)
 2612 D1:C383 7E -  -  -      ld  a,(hl)
 2613 D1:C384 01 00 38 D0     ld  bc,ZEROPAGE
 2614 D1:C388 81 -  -  -      add a,c
 2615 D1:C389 DD 86 01 -      add a,(ix+REGX)
 2616 D1:C38C 4F -  -  -      ld  c,a
 2617 D1:C38D DD 7E 04 -      ld  a,(ix+REGSR)
 2618 D1:C390 1F -  -  -      rra
 2619 D1:C391 0A -  -  -      ld  a,(bc)
 2620 D1:C392 1F -  -  -      rra
 2621 D1:C393 02 -  -  -      ld  (bc),a
 2622 D1:C394 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2623 D1:C3AD C3 AB AE D1     jp i6502NextLoad
 2624 D1:C3B1 -  -  -  -  
 2625 D1:C3B1 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2626 D1:C3B1 -  -  -  -  inst6502_ror_abs:
 2627 D1:C3B1 ED 33 06 -      ADDCYC(6)
 2628 D1:C3B4 CD C8 B0 D1     call subroutine6502_abs_split_start
 2629 D1:C3B8 E5 -  -  -      push hl
 2630 D1:C3B9 50 -  -  -          ld  d,b
 2631 D1:C3BA 79 -  -  -          ld  a,c
 2632 D1:C3BB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2633 D1:C3BD ED 4C -  -          mlt bc
 2634 D1:C3BF 21 00 40 D0         ld  hl,PAGETABLE
 2635 D1:C3C3 09 -  -  -          add hl,bc
 2636 D1:C3C4 ED 27 -  -          ld  hl,(hl)
 2637 D1:C3C6 06 00 -  -          ld  b,0
 2638 D1:C3C8 4F -  -  -          ld  c,a
 2639 D1:C3C9 09 -  -  -          add hl,bc   ;full address
 2640 D1:C3CA 7E -  -  -          READ_ACCESS
 2641 D1:C3CB E1 -  -  -      pop hl
 2642 D1:C3CC DD 7E 04 -      ld  a,(ix+REGSR)
 2643 D1:C3CF 1F -  -  -      rra
 2644 D1:C3D0 7E -  -  -      ld  a,(hl)
 2645 D1:C3D1 1F -  -  -      rra
 2646 D1:C3D2 47 -  -  -      ld  b,a
 2647 D1:C3D3 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2648 D1:C3EC 70 -  -  -      WRITE_ACCESS
 2649 D1:C3ED C3 AB AE D1     jp i6502NextLoad
 2650 D1:C3F1 -  -  -  -  
 2651 D1:C3F1 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2652 D1:C3F1 -  -  -  -  inst6502_ror_absx:
 2653 D1:C3F1 ED 33 07 -      ADDCYC(7)
 2654 D1:C3F4 CD C8 B0 D1     call subroutine6502_abs_split_start
 2655 D1:C3F8 E5 -  -  -      push hl
 2656 D1:C3F9 50 -  -  -          ld  d,b
 2657 D1:C3FA 79 -  -  -          ld  a,c
 2658 D1:C3FB 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2659 D1:C3FD ED 4C -  -          mlt bc
 2660 D1:C3FF 21 00 40 D0         ld  hl,PAGETABLE
 2661 D1:C403 09 -  -  -          add hl,bc
 2662 D1:C404 ED 27 -  -          ld  hl,(hl)
 2663 D1:C406 06 00 -  -          ld  b,0
 2664 D1:C408 DD 86 01 -          add a,(ix+REGX)
 2665 D1:C40B 4F -  -  -          ld  c,a
 2666 D1:C40C 30 02 -  -          jr  nc,+_
 2667 D1:C40E 04 -  -  -          inc b
 2668 D1:C40F 14 -  -  -          inc d
 2669 D1:C410 09 -  -  -  _:      add hl,bc   ;full address
 2670 D1:C411 7E -  -  -          READ_ACCESS
 2671 D1:C412 E1 -  -  -      pop hl
 2672 D1:C413 DD 7E 04 -      ld  a,(ix+REGSR)
 2673 D1:C416 1F -  -  -      rra
 2674 D1:C417 7E -  -  -      ld  a,(hl)
 2675 D1:C418 1F -  -  -      rra
 2676 D1:C419 47 -  -  -      ld  b,a
 2677 D1:C41A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2678 D1:C433 70 -  -  -      WRITE_ACCESS
 2679 D1:C434 C3 AB AE D1     jp i6502NextLoad
 2680 D1:C438 -  -  -  -  
 2681 D1:C438 -  -  -  -  ;-----------------------------------------------------------------------------
 2682 D1:C438 -  -  -  -  ;-----------------------------------------------------------------------------
 2683 D1:C438 -  -  -  -  ;-----------------------------------------------------------------------------
 2684 D1:C438 -  -  -  -  ;Instructions by type: Flag Instructions
 2685 D1:C438 -  -  -  -  
 2686 D1:C438 -  -  -  -  ;CLC - Clear Carry Flag
 2687 D1:C438 -  -  -  -  ;0 -> C
 2688 D1:C438 -  -  -  -  ;N	Z	C	I	D	V
 2689 D1:C438 -  -  -  -  ;-	-	0	-	-	-
 2690 D1:C438 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2691 D1:C438 -  -  -  -  ;implied	CLC	18	1	2  
 2692 D1:C438 -  -  -  -  inst6502_clc:
 2693 D1:C438 DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2694 D1:C43C C3 C4 AE D1     jp  i6502FinishLoad
 2695 D1:C440 -  -  -  -  
 2696 D1:C440 -  -  -  -  ;CLD - Clear Decimal Mode
 2697 D1:C440 -  -  -  -  ;0 -> D
 2698 D1:C440 -  -  -  -  ;N	Z	C	I	D	V
 2699 D1:C440 -  -  -  -  ;-	-	-	-	0	-
 2700 D1:C440 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2701 D1:C440 -  -  -  -  ;implied	CLD	D8	1	2  
 2702 D1:C440 -  -  -  -  inst6502_cld:
 2703 D1:C440 DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2704 D1:C444 C3 C4 AE D1     jp  i6502FinishLoad
 2705 D1:C448 -  -  -  -  
 2706 D1:C448 -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2707 D1:C448 -  -  -  -  ;0 -> I
 2708 D1:C448 -  -  -  -  ;N	Z	C	I	D	V
 2709 D1:C448 -  -  -  -  ;-	-	-	0	-	-
 2710 D1:C448 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2711 D1:C448 -  -  -  -  ;implied	CLI	58	1	2  
 2712 D1:C448 -  -  -  -  inst6502_cli:
 2713 D1:C448 DD CB 04 96     res SF_INT,(ix+REGSR)
 2714 D1:C44C C3 C4 AE D1     jp  i6502FinishLoad
 2715 D1:C450 -  -  -  -  
 2716 D1:C450 -  -  -  -  ;CLV - Clear Overflow Flag
 2717 D1:C450 -  -  -  -  ;0 -> V
 2718 D1:C450 -  -  -  -  ;N	Z	C	I	D	V
 2719 D1:C450 -  -  -  -  ;-	-	-	-	-	0
 2720 D1:C450 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2721 D1:C450 -  -  -  -  ;implied	CLV	B8	1	2  
 2722 D1:C450 -  -  -  -  inst6502_clv:
 2723 D1:C450 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2724 D1:C454 C3 C4 AE D1     jp  i6502FinishLoad
 2725 D1:C458 -  -  -  -  
 2726 D1:C458 -  -  -  -  ;SEC - Set Carry Flag
 2727 D1:C458 -  -  -  -  ;1 -> C
 2728 D1:C458 -  -  -  -  ;N	Z	C	I	D	V
 2729 D1:C458 -  -  -  -  ;-	-	1	-	-	-
 2730 D1:C458 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2731 D1:C458 -  -  -  -  ;implied	SEC	38	1	2  
 2732 D1:C458 -  -  -  -  inst6502_sec:
 2733 D1:C458 DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2734 D1:C45C C3 C4 AE D1     jp  i6502FinishLoad
 2735 D1:C460 -  -  -  -  
 2736 D1:C460 -  -  -  -  ;SED - Set Decimal Flag
 2737 D1:C460 -  -  -  -  ;1 -> D
 2738 D1:C460 -  -  -  -  ;N	Z	C	I	D	V
 2739 D1:C460 -  -  -  -  ;-	-	-	-	1	-
 2740 D1:C460 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2741 D1:C460 -  -  -  -  ;implied	SED	F8	1	2  
 2742 D1:C460 -  -  -  -  inst6502_sed:
 2743 D1:C460 DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2744 D1:C464 C3 C4 AE D1     jp  i6502FinishLoad
 2745 D1:C468 -  -  -  -  
 2746 D1:C468 -  -  -  -  ;SEI - Set Interrupt Disable Status
 2747 D1:C468 -  -  -  -  ;1 -> I
 2748 D1:C468 -  -  -  -  ;N	Z	C	I	D	V
 2749 D1:C468 -  -  -  -  ;-	-	-	1	-	-
 2750 D1:C468 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2751 D1:C468 -  -  -  -  ;implied	SEI	78	1	2  
 2752 D1:C468 -  -  -  -  inst6502_sei:
 2753 D1:C468 DD CB 04 D6     set SF_INT,(ix+REGSR)
 2754 D1:C46C C3 C4 AE D1     jp  i6502FinishLoad
 2755 D1:C470 -  -  -  -  
 2756 D1:C470 -  -  -  -  ;-----------------------------------------------------------------------------
 2757 D1:C470 -  -  -  -  ;-----------------------------------------------------------------------------
 2758 D1:C470 -  -  -  -  ;-----------------------------------------------------------------------------
 2759 D1:C470 -  -  -  -  ;Instructions by type: Comparisons
 2760 D1:C470 -  -  -  -  
 2761 D1:C470 -  -  -  -  ;CMP - Compare Memory with Accumulator
 2762 D1:C470 -  -  -  -  ;A - M
 2763 D1:C470 -  -  -  -  ;N	Z	C	I	D	V
 2764 D1:C470 -  -  -  -  ;+	+	+	-	-	-
 2765 D1:C470 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2766 D1:C470 -  -  -  -  
 2767 D1:C470 -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2768 D1:C470 -  -  -  -  inst6502_cmp_imm:
 2769 D1:C470 ED 33 02 -      ADDCYC(2)
 2770 D1:C473 46 -  -  -      ld  b,(hl)
 2771 D1:C474 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2772 D1:C478 -  -  -  -  
 2773 D1:C478 -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2774 D1:C478 -  -  -  -  inst6502_cmp_zp:
 2775 D1:C478 ED 33 03 -      ADDCYC(3)
 2776 D1:C47B 7E -  -  -      ld  a,(hl)
 2777 D1:C47C 01 00 38 D0     ld  bc,ZEROPAGE
 2778 D1:C480 81 -  -  -      add a,c
 2779 D1:C481 4F -  -  -      ld  c,a
 2780 D1:C482 0A -  -  -      ld  a,(bc)
 2781 D1:C483 47 -  -  -      ld  b,a
 2782 D1:C484 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2783 D1:C488 -  -  -  -  
 2784 D1:C488 -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2785 D1:C488 -  -  -  -  inst6502_cmp_zpx:
 2786 D1:C488 ED 33 04 -      ADDCYC(4)
 2787 D1:C48B 7E -  -  -      ld  a,(hl)
 2788 D1:C48C 01 00 38 D0     ld  bc,ZEROPAGE
 2789 D1:C490 81 -  -  -      add a,c
 2790 D1:C491 DD 86 01 -      add a,(ix+REGX)
 2791 D1:C494 4F -  -  -      ld  c,a
 2792 D1:C495 0A -  -  -      ld  a,(bc)
 2793 D1:C496 47 -  -  -      ld  b,a
 2794 D1:C497 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2795 D1:C49B -  -  -  -  
 2796 D1:C49B -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2797 D1:C49B -  -  -  -  inst6502_cmp_abs:
 2798 D1:C49B ED 33 04 -      ADDCYC(4)
 2799 D1:C49E CD C8 B0 D1     call subroutine6502_abs_split_start
 2800 D1:C4A2 E5 -  -  -      push hl
 2801 D1:C4A3 50 -  -  -          ld  d,b
 2802 D1:C4A4 79 -  -  -          ld  a,c
 2803 D1:C4A5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2804 D1:C4A7 ED 4C -  -          mlt bc
 2805 D1:C4A9 21 00 40 D0         ld  hl,PAGETABLE
 2806 D1:C4AD 09 -  -  -          add hl,bc
 2807 D1:C4AE ED 27 -  -          ld  hl,(hl)
 2808 D1:C4B0 06 00 -  -          ld  b,0
 2809 D1:C4B2 4F -  -  -          ld  c,a
 2810 D1:C4B3 09 -  -  -          add hl,bc   ;full address
 2811 D1:C4B4 7E -  -  -          READ_ACCESS
 2812 D1:C4B5 E1 -  -  -      pop hl
 2813 D1:C4B6 47 -  -  -      ld  b,a
 2814 D1:C4B7 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2815 D1:C4BB -  -  -  -  
 2816 D1:C4BB -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2817 D1:C4BB -  -  -  -  inst6502_cmp_absx:
 2818 D1:C4BB ED 33 04 -      ADDCYC(4)
 2819 D1:C4BE CD C8 B0 D1     call subroutine6502_abs_split_start
 2820 D1:C4C2 E5 -  -  -      push hl
 2821 D1:C4C3 50 -  -  -          ld  d,b
 2822 D1:C4C4 79 -  -  -          ld  a,c
 2823 D1:C4C5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2824 D1:C4C7 ED 4C -  -          mlt bc
 2825 D1:C4C9 21 00 40 D0         ld  hl,PAGETABLE
 2826 D1:C4CD 09 -  -  -          add hl,bc
 2827 D1:C4CE ED 27 -  -          ld  hl,(hl)
 2828 D1:C4D0 06 00 -  -          ld  b,0
 2829 D1:C4D2 DD 86 01 -          add a,(ix+REGX)
 2830 D1:C4D5 4F -  -  -          ld  c,a
 2831 D1:C4D6 30 04 -  -          jr  nc,+_
 2832 D1:C4D8 04 -  -  -          inc b
 2833 D1:C4D9 14 -  -  -          inc d
 2834 D1:C4DA FD 23 -  -          ADDCYC(1)
 2835 D1:C4DC 09 -  -  -  _:      add hl,bc   ;full address
 2836 D1:C4DD 7E -  -  -          READ_ACCESS
 2837 D1:C4DE E1 -  -  -      pop hl
 2838 D1:C4DF 47 -  -  -      ld  b,a
 2839 D1:C4E0 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2840 D1:C4E4 -  -  -  -  
 2841 D1:C4E4 -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2842 D1:C4E4 -  -  -  -  inst6502_cmp_absy:
 2843 D1:C4E4 ED 33 04 -      ADDCYC(4)
 2844 D1:C4E7 CD C8 B0 D1     call subroutine6502_abs_split_start
 2845 D1:C4EB E5 -  -  -      push hl
 2846 D1:C4EC 50 -  -  -          ld  d,b
 2847 D1:C4ED 79 -  -  -          ld  a,c
 2848 D1:C4EE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2849 D1:C4F0 ED 4C -  -          mlt bc
 2850 D1:C4F2 21 00 40 D0         ld  hl,PAGETABLE
 2851 D1:C4F6 09 -  -  -          add hl,bc
 2852 D1:C4F7 ED 27 -  -          ld  hl,(hl)
 2853 D1:C4F9 06 00 -  -          ld  b,0
 2854 D1:C4FB DD 86 02 -          add a,(ix+REGY)
 2855 D1:C4FE 4F -  -  -          ld  c,a
 2856 D1:C4FF 30 04 -  -          jr  nc,+_
 2857 D1:C501 04 -  -  -          inc b
 2858 D1:C502 14 -  -  -          inc d
 2859 D1:C503 FD 23 -  -          ADDCYC(1)
 2860 D1:C505 09 -  -  -  _:      add hl,bc   ;full address
 2861 D1:C506 7E -  -  -          READ_ACCESS
 2862 D1:C507 E1 -  -  -      pop hl
 2863 D1:C508 47 -  -  -      ld  b,a
 2864 D1:C509 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2865 D1:C50D -  -  -  -  
 2866 D1:C50D -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2867 D1:C50D -  -  -  -  inst6502_cmp_indx:
 2868 D1:C50D ED 33 06 -      ADDCYC(6)
 2869 D1:C510 E5 -  -  -      push hl
 2870 D1:C511 7E -  -  -          ld  a,(hl)
 2871 D1:C512 21 00 38 D0         ld  hl,ZEROPAGE
 2872 D1:C516 85 -  -  -          add a,L
 2873 D1:C517 DD 86 01 -          add a,(ix+REGX)
 2874 D1:C51A 6F -  -  -          ld  L,a
 2875 D1:C51B 7E -  -  -          ld  a,(hl)
 2876 D1:C51C 2C -  -  -          inc L
 2877 D1:C51D 56 -  -  -          ld  d,(hl)
 2878 D1:C51E 42 -  -  -          ld  b,d
 2879 D1:C51F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2880 D1:C521 ED 4C -  -          mlt bc
 2881 D1:C523 21 00 40 D0         ld  hl,PAGETABLE
 2882 D1:C527 09 -  -  -          add hl,bc
 2883 D1:C528 ED 27 -  -          ld  hl,(hl)
 2884 D1:C52A 06 00 -  -          ld  b,0
 2885 D1:C52C 4F -  -  -          ld  c,a
 2886 D1:C52D 09 -  -  -          add hl,bc
 2887 D1:C52E 7E -  -  -          READ_ACCESS
 2888 D1:C52F E1 -  -  -      pop hl
 2889 D1:C530 47 -  -  -      ld  b,a
 2890 D1:C531 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2891 D1:C535 -  -  -  -  
 2892 D1:C535 -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2893 D1:C535 -  -  -  -  inst6502_cmp_indy:
 2894 D1:C535 ED 33 05 -      ADDCYC(5)
 2895 D1:C538 E5 -  -  -      push hl
 2896 D1:C539 7E -  -  -          ld  a,(hl)
 2897 D1:C53A 21 00 38 D0         ld  hl,ZEROPAGE
 2898 D1:C53E 85 -  -  -          add a,L
 2899 D1:C53F 6F -  -  -          ld  L,a
 2900 D1:C540 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2901 D1:C541 2C -  -  -          inc L
 2902 D1:C542 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2903 D1:C545 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2904 D1:C546 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2905 D1:C548 24 -  -  -          inc h
 2906 D1:C549 FD 23 -  -          ADDCYC(1)
 2907 D1:C54B 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2908 D1:C54C 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2909 D1:C54E ED 6C -  -          mlt hl          ;23.
 2910 D1:C550 01 00 40 D0         ld  bc,PAGETABLE
 2911 D1:C554 09 -  -  -          add hl,bc
 2912 D1:C555 ED 27 -  -          ld  hl,(hl)     ;address get.
 2913 D1:C557 01 00 00 00         ld  bc,0
 2914 D1:C55B 4F -  -  -          ld  c,a
 2915 D1:C55C 09 -  -  -          add hl,bc       ;Full address get.
 2916 D1:C55D 7E -  -  -          READ_ACCESS
 2917 D1:C55E E1 -  -  -      pop hl
 2918 D1:C55F 47 -  -  -      ld  b,a
 2919 D1:C560 C3 46 B1 D1     jp  subroutine6502_cmp_combined_end
 2920 D1:C564 -  -  -  -  
 2921 D1:C564 -  -  -  -  ;-----------------------------------------------------------------------------
 2922 D1:C564 -  -  -  -  ;CPX - Compare Memory and Index X
 2923 D1:C564 -  -  -  -  ;X - M
 2924 D1:C564 -  -  -  -  ;N	Z	C	I	D	V
 2925 D1:C564 -  -  -  -  ;+	+	+	-	-	-
 2926 D1:C564 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2927 D1:C564 -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2928 D1:C564 -  -  -  -  inst6502_cpx_imm:
 2929 D1:C564 ED 33 02 -      ADDCYC(2)
 2930 D1:C567 DD 7E 01 -      ld  a,(ix+REGX)
 2931 D1:C56A BE -  -  -      cp  (hl)
 2932 D1:C56B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2933 D1:C584 C3 AB AE D1     jp  i6502NextLoad
 2934 D1:C588 -  -  -  -  
 2935 D1:C588 -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2936 D1:C588 -  -  -  -  inst6502_cpx_zp:
 2937 D1:C588 ED 33 03 -      ADDCYC(3)
 2938 D1:C58B 7E -  -  -      ld  a,(hl)
 2939 D1:C58C 01 00 38 D0     ld  bc,ZEROPAGE
 2940 D1:C590 81 -  -  -      add a,c
 2941 D1:C591 4F -  -  -      ld  c,a
 2942 D1:C592 0A -  -  -      ld  a,(bc)
 2943 D1:C593 47 -  -  -      ld  b,a
 2944 D1:C594 DD 7E 01 -      ld  a,(ix+REGX)
 2945 D1:C597 B8 -  -  -      cp  b
 2946 D1:C598 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2947 D1:C5B1 C3 AB AE D1     jp i6502NextLoad
 2948 D1:C5B5 -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2949 D1:C5B5 -  -  -  -  inst6502_cpx_abs:
 2950 D1:C5B5 ED 33 04 -      ADDCYC(4)
 2951 D1:C5B8 CD C8 B0 D1     call subroutine6502_abs_split_start
 2952 D1:C5BC E5 -  -  -      push hl
 2953 D1:C5BD 50 -  -  -          ld  d,b
 2954 D1:C5BE 79 -  -  -          ld  a,c
 2955 D1:C5BF 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2956 D1:C5C1 ED 4C -  -          mlt bc
 2957 D1:C5C3 21 00 40 D0         ld  hl,PAGETABLE
 2958 D1:C5C7 09 -  -  -          add hl,bc
 2959 D1:C5C8 ED 27 -  -          ld  hl,(hl)
 2960 D1:C5CA 06 00 -  -          ld  b,0
 2961 D1:C5CC 4F -  -  -          ld  c,a
 2962 D1:C5CD 09 -  -  -          add hl,bc   ;full address
 2963 D1:C5CE 7E -  -  -          READ_ACCESS
 2964 D1:C5CF E1 -  -  -      pop hl
 2965 D1:C5D0 47 -  -  -      ld  b,a
 2966 D1:C5D1 DD 7E 01 -      ld  a,(ix+REGX)
 2967 D1:C5D4 B8 -  -  -      cp  b
 2968 D1:C5D5 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2969 D1:C5EE C3 AB AE D1     jp i6502NextLoad
 2970 D1:C5F2 -  -  -  -  
 2971 D1:C5F2 -  -  -  -  ;-----------------------------------------------------------------------------
 2972 D1:C5F2 -  -  -  -  ;CPY - Compare Memory and Index Y
 2973 D1:C5F2 -  -  -  -  ;Y - M
 2974 D1:C5F2 -  -  -  -  ;N	Z	C	I	D	V
 2975 D1:C5F2 -  -  -  -  ;+	+	+	-	-	-
 2976 D1:C5F2 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2977 D1:C5F2 -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 2978 D1:C5F2 -  -  -  -  inst6502_cpy_imm:
 2979 D1:C5F2 ED 33 02 -      ADDCYC(2)
 2980 D1:C5F5 DD 7E 02 -      ld  a,(ix+REGY)
 2981 D1:C5F8 BE -  -  -      cp  (hl)
 2982 D1:C5F9 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2983 D1:C612 C3 AB AE D1     jp  i6502NextLoad
 2984 D1:C616 -  -  -  -  
 2985 D1:C616 -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 2986 D1:C616 -  -  -  -  inst6502_cpy_zp:
 2987 D1:C616 ED 33 03 -      ADDCYC(3)
 2988 D1:C619 7E -  -  -      ld  a,(hl)
 2989 D1:C61A 01 00 38 D0     ld  bc,ZEROPAGE
 2990 D1:C61E 81 -  -  -      add a,c
 2991 D1:C61F 4F -  -  -      ld  c,a
 2992 D1:C620 0A -  -  -      ld  a,(bc)
 2993 D1:C621 47 -  -  -      ld  b,a
 2994 D1:C622 DD 7E 02 -      ld  a,(ix+REGY)
 2995 D1:C625 B8 -  -  -      cp  b
 2996 D1:C626 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2997 D1:C63F C3 AB AE D1     jp i6502NextLoad
 2998 D1:C643 -  -  -  -  
 2999 D1:C643 -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3000 D1:C643 -  -  -  -  inst6502_cpy_abs:
 3001 D1:C643 ED 33 04 -      ADDCYC(4)
 3002 D1:C646 CD C8 B0 D1     call subroutine6502_abs_split_start
 3003 D1:C64A E5 -  -  -      push hl
 3004 D1:C64B 50 -  -  -          ld  d,b
 3005 D1:C64C 79 -  -  -          ld  a,c
 3006 D1:C64D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3007 D1:C64F ED 4C -  -          mlt bc
 3008 D1:C651 21 00 40 D0         ld  hl,PAGETABLE
 3009 D1:C655 09 -  -  -          add hl,bc
 3010 D1:C656 ED 27 -  -          ld  hl,(hl)
 3011 D1:C658 06 00 -  -          ld  b,0
 3012 D1:C65A 4F -  -  -          ld  c,a
 3013 D1:C65B 09 -  -  -          add hl,bc   ;full address
 3014 D1:C65C 7E -  -  -          READ_ACCESS
 3015 D1:C65D E1 -  -  -      pop hl
 3016 D1:C65E 47 -  -  -      ld  b,a
 3017 D1:C65F DD 7E 02 -      ld  a,(ix+REGY)
 3018 D1:C662 B8 -  -  -      cp  b
 3019 D1:C663 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3020 D1:C67C C3 AB AE D1     jp i6502NextLoad
 3021 D1:C680 -  -  -  -  
 3022 D1:C680 -  -  -  -  
 3023 D1:C680 -  -  -  -  ;-----------------------------------------------------------------------------
 3024 D1:C680 -  -  -  -  ;-----------------------------------------------------------------------------
 3025 D1:C680 -  -  -  -  ;-----------------------------------------------------------------------------
 3026 D1:C680 -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3027 D1:C680 -  -  -  -  
 3028 D1:C680 -  -  -  -  ;branch on C=0
 3029 D1:C680 -  -  -  -  ;relative	BCC oper	90	2	2**
 3030 D1:C680 -  -  -  -  inst6502_bcc:
 3031 D1:C680 ED 33 02 -      ADDCYC(2)
 3032 D1:C683 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3033 D1:C687 C2 AB AE D1     jp  nz,i6502NextLoad
 3034 D1:C68B C3 67 B1 D1     jp  subroutine6502_take_branch
 3035 D1:C68F -  -  -  -  
 3036 D1:C68F -  -  -  -  ;branch on C=1
 3037 D1:C68F -  -  -  -  ;relative	BCS oper	B0	2	2**
 3038 D1:C68F -  -  -  -  inst6502_bcs:
 3039 D1:C68F ED 33 02 -      ADDCYC(2)
 3040 D1:C692 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3041 D1:C696 CA AB AE D1     jp  z,i6502NextLoad
 3042 D1:C69A C3 67 B1 D1     jp  subroutine6502_take_branch
 3043 D1:C69E -  -  -  -  
 3044 D1:C69E -  -  -  -  ;branch on Z=1
 3045 D1:C69E -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3046 D1:C69E -  -  -  -  inst6502_beq:
 3047 D1:C69E ED 33 02 -      ADDCYC(2)
 3048 D1:C6A1 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3049 D1:C6A5 CA AB AE D1     jp  z,i6502NextLoad
 3050 D1:C6A9 C3 67 B1 D1     jp  subroutine6502_take_branch
 3051 D1:C6AD -  -  -  -  
 3052 D1:C6AD -  -  -  -  ;branch on N=1
 3053 D1:C6AD -  -  -  -  ;relative	BMI oper	30	2	2**
 3054 D1:C6AD -  -  -  -  inst6502_bmi:
 3055 D1:C6AD ED 33 02 -      ADDCYC(2)
 3056 D1:C6B0 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3057 D1:C6B4 CA AB AE D1     jp  z,i6502NextLoad
 3058 D1:C6B8 C3 67 B1 D1     jp  subroutine6502_take_branch
 3059 D1:C6BC -  -  -  -  
 3060 D1:C6BC -  -  -  -  
 3061 D1:C6BC -  -  -  -  ;branch on Z=0
 3062 D1:C6BC -  -  -  -  ;relative	BNE oper	D0	2	2**
 3063 D1:C6BC -  -  -  -  inst6502_bne:
 3064 D1:C6BC ED 33 02 -      ADDCYC(2)
 3065 D1:C6BF DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3066 D1:C6C3 C2 AB AE D1     jp  nz,i6502NextLoad
 3067 D1:C6C7 C3 67 B1 D1     jp  subroutine6502_take_branch
 3068 D1:C6CB -  -  -  -  
 3069 D1:C6CB -  -  -  -  ;branch on N=0
 3070 D1:C6CB -  -  -  -  ;relative	BPL oper	10	2	2**
 3071 D1:C6CB -  -  -  -  inst6502_bpl:
 3072 D1:C6CB ED 33 02 -      ADDCYC(2)
 3073 D1:C6CE DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3074 D1:C6D2 C2 AB AE D1     jp  nz,i6502NextLoad
 3075 D1:C6D6 C3 67 B1 D1     jp  subroutine6502_take_branch
 3076 D1:C6DA -  -  -  -  
 3077 D1:C6DA -  -  -  -  ;branch on V=0
 3078 D1:C6DA -  -  -  -  ;relative	BVC oper	50	2	2**
 3079 D1:C6DA -  -  -  -  inst6502_bvc:
 3080 D1:C6DA ED 33 02 -      ADDCYC(2)
 3081 D1:C6DD DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3082 D1:C6E1 C2 AB AE D1     jp  nz,i6502NextLoad
 3083 D1:C6E5 C3 67 B1 D1     jp  subroutine6502_take_branch
 3084 D1:C6E9 -  -  -  -  
 3085 D1:C6E9 -  -  -  -  ;branch on V=1
 3086 D1:C6E9 -  -  -  -  ;relative	BVS oper	70	2	2**
 3087 D1:C6E9 -  -  -  -  inst6502_bvs:
 3088 D1:C6E9 ED 33 02 -      ADDCYC(2)
 3089 D1:C6EC DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3090 D1:C6F0 CA AB AE D1     jp  z,i6502NextLoad
 3091 D1:C6F4 C3 67 B1 D1     jp  subroutine6502_take_branch
 3092 D1:C6F8 -  -  -  -  
 3093 D1:C6F8 -  -  -  -  ;-----------------------------------------------------------------------------
 3094 D1:C6F8 -  -  -  -  ;-----------------------------------------------------------------------------
 3095 D1:C6F8 -  -  -  -  ;-----------------------------------------------------------------------------
 3096 D1:C6F8 -  -  -  -  ;Instructions by type: Interrupts
 3097 D1:C6F8 -  -  -  -  
 3098 D1:C6F8 -  -  -  -  ;BRK - Force Break
 3099 D1:C6F8 -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3100 D1:C6F8 -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3101 D1:C6F8 -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3102 D1:C6F8 -  -  -  -  ;(identifying a reason for the break.)
 3103 D1:C6F8 -  -  -  -  ;The status register will be pushed to the stack with the break
 3104 D1:C6F8 -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3105 D1:C6F8 -  -  -  -  ;instruction, the break flag will be ignored.
 3106 D1:C6F8 -  -  -  -  ;The interrupt disable flag is not set automatically.
 3107 D1:C6F8 -  -  -  -  ;
 3108 D1:C6F8 -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3109 D1:C6F8 -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3110 D1:C6F8 -  -  -  -  ;implied	BRK	00	1	7  
 3111 D1:C6F8 -  -  -  -  inst6502_brk:
 3112 D1:C6F8 ED 33 07 -      ADDCYC(7)
 3113 D1:C6FB 21 00 39 D0     ld  hl,STACKBASE
 3114 D1:C6FF DD 6E 03 -      ld  L,(ix+REGSP)
 3115 D1:C702 52 DD 17 05     ld.s de,(ix+REGPC)
 3116 D1:C706 13 -  -  -      inc de      ;that extra spacer.
 3117 D1:C707 72 -  -  -      ld  (hl),d
 3118 D1:C708 2D -  -  -      dec L
 3119 D1:C709 73 -  -  -      ld  (hl),e
 3120 D1:C70A 2D -  -  -      dec L
 3121 D1:C70B DD 7E 04 -      ld  a,(ix+REGSR)
 3122 D1:C70E CB D7 -  -      set SF_INT,a
 3123 D1:C710 77 -  -  -      ld  (hl),a
 3124 D1:C711 2D -  -  -      dec L
 3125 D1:C712 DD 75 03 -      ld  (ix+REGSP),L
 3126 D1:C715 B7 -  -  -      WAS_NMI_TRIGGERED
 3127 D1:C716 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3128 D1:C71A 28 04 -  -      jr  z,+_
 3129 D1:C71C 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3130 D1:C720 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3131 D1:C724 ED 27 -  -      ld  hl,(hl)
 3132 D1:C726 09 -  -  -      add hl,bc
 3133 D1:C727 ED 17 -  -      ld  de,(hl)
 3134 D1:C729 52 DD 1F 05     ld.s (ix+REGPC),de
 3135 D1:C72D C3 95 AE D1     jp  i6502FirstLoad
 3136 D1:C731 -  -  -  -  
 3137 D1:C731 -  -  -  -  ;RTI - Return from Interrupt
 3138 D1:C731 -  -  -  -  ;The status register is pulled with the break flag
 3139 D1:C731 -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3140 D1:C731 -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3141 D1:C731 -  -  -  -  ;                      from stack
 3142 D1:C731 -  -  -  -  ;implied	RTI	40	1	6  
 3143 D1:C731 -  -  -  -  inst6502_rti:
 3144 D1:C731 21 00 39 D0     ld  hl,STACKBASE
 3145 D1:C735 DD 6E 03 -      ld  l,(ix+REGSP)
 3146 D1:C738 2C -  -  -      inc l
 3147 D1:C739 7E -  -  -      ld  a,(hl)
 3148 D1:C73A 2C -  -  -      inc l
 3149 D1:C73B 5E -  -  -      ld  e,(hl)
 3150 D1:C73C 2C -  -  -      inc l
 3151 D1:C73D 56 -  -  -      ld  d,(hl)
 3152 D1:C73E DD 75 03 -      ld  (ix+REGSP),l
 3153 D1:C741 52 DD 1F 05     ld.s (ix+REGPC),de
 3154 D1:C745 DD 46 04 -      ld  b,(ix+REGSR)
 3155 D1:C748 A8 -  -  -      xor a,b
 3156 D1:C749 E6 DF -  -      and a,%11011111
 3157 D1:C74B A8 -  -  -      xor a,b
 3158 D1:C74C DD 77 04 -      ld  (ix+REGSR),a
 3159 D1:C74F ED 33 06 -      ADDCYC(6)
 3160 D1:C752 C3 95 AE D1     jp  i6502FirstLoad
 3161 D1:C756 -  -  -  -  
 3162 D1:C756 -  -  -  -  
 3163 D1:C756 -  -  -  -  
 3164 D1:C756 -  -  -  -  ;-----------------------------------------------------------------------------
 3165 D1:C756 -  -  -  -  ;-----------------------------------------------------------------------------
 3166 D1:C756 -  -  -  -  ;-----------------------------------------------------------------------------
 3167 D1:C756 -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3168 D1:C756 -  -  -  -  
 3169 D1:C756 -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3170 D1:C756 -  -  -  -  inst6052_jmp_abs:
 3171 D1:C756 7E -  -  -      ld  a,(hl)
 3172 D1:C757 23 -  -  -      inc hl
 3173 D1:C758 1C -  -  -      inc e
 3174 D1:C759 20 0F -  -      jr  nz,+_
 3175 D1:C75B DD 56 06 -      ld  d,(ix+REGPC+1)
 3176 D1:C75E 14 -  -  -      inc d
 3177 D1:C75F 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3178 D1:C761 ED 5C -  -      mlt de
 3179 D1:C763 21 00 40 D0     ld  hl,PAGETABLE
 3180 D1:C767 19 -  -  -      add hl,de
 3181 D1:C768 ED 27 -  -      ld  hl,(hl)
 3182 D1:C76A DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3183 D1:C76D 7E -  -  -      ld  a,(hl)
 3184 D1:C76E DD 77 06 -      ld  (ix+REGPC+1),a
 3185 D1:C771 ED 33 03 -      ADDCYC(3)
 3186 D1:C774 C3 95 AE D1     jp i6502FirstLoad
 3187 D1:C778 -  -  -  -  
 3188 D1:C778 -  -  -  -  
 3189 D1:C778 -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3190 D1:C778 -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3191 D1:C778 -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3192 D1:C778 -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3193 D1:C778 -  -  -  -  inst6502_jmp_indir:
 3194 D1:C778 ED 33 05 -      ADDCYC(5)
 3195 D1:C77B 5E -  -  -      ld  e,(hl)
 3196 D1:C77C 7B -  -  -      ld  a,e
 3197 D1:C77D 23 -  -  -      inc hl
 3198 D1:C77E 3C -  -  -      inc a
 3199 D1:C77F 20 0F -  -      jr  nz,+_
 3200 D1:C781 DD 46 06 -      ld  b,(ix+REGPC+1)
 3201 D1:C784 04 -  -  -      inc b
 3202 D1:C785 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3203 D1:C787 ED 4C -  -      mlt bc
 3204 D1:C789 21 00 40 D0     ld  hl,PAGETABLE
 3205 D1:C78D 09 -  -  -      add hl,bc
 3206 D1:C78E ED 27 -  -      ld  hl,(hl)
 3207 D1:C790 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3208 D1:C791 1C -  -  -      inc e
 3209 D1:C792 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3210 D1:C794 1D -  -  -      dec e
 3211 D1:C795 4B -  -  -      ld  c,e
 3212 D1:C796 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3213 D1:C798 ED 5C -  -      mlt de
 3214 D1:C79A 21 00 40 D0     ld  hl,PAGETABLE
 3215 D1:C79E 19 -  -  -      add hl,de
 3216 D1:C79F ED 27 -  -      ld  hl,(hl)
 3217 D1:C7A1 16 00 -  -      ld  d,0
 3218 D1:C7A3 59 -  -  -      ld  e,c
 3219 D1:C7A4 19 -  -  -      add hl,de   ;full real address reconstructed.
 3220 D1:C7A5 ED 17 -  -      ld  de,(hl)
 3221 D1:C7A7 52 DD 1F 05     ld.s (ix+REGPC),de
 3222 D1:C7AB C3 95 AE D1     jp  i6502FirstLoad
 3223 D1:C7AF -  -  -  -  inst6502_jmp_indir_splitread:
 3224 D1:C7AF -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3225 D1:C7AF -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3226 D1:C7AF 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3227 D1:C7B1 ED 5C -  -      mlt de
 3228 D1:C7B3 21 00 40 D0     ld  hl,PAGETABLE
 3229 D1:C7B7 19 -  -  -      add hl,de
 3230 D1:C7B8 ED 27 -  -      ld  hl,(hl)
 3231 D1:C7BA 56 -  -  -      ld  d,(hl)
 3232 D1:C7BB 01 FF 00 00     ld  bc,255
 3233 D1:C7BF 09 -  -  -      add hl,bc
 3234 D1:C7C0 5E -  -  -      ld  e,(hl)
 3235 D1:C7C1 52 DD 1F 05     ld.s (ix+REGPC),de
 3236 D1:C7C5 C3 95 AE D1     jp  i6502FirstLoad
 3237 D1:C7C9 -  -  -  -  
 3238 D1:C7C9 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3239 D1:C7C9 -  -  -  -  ;    mlt de
 3240 D1:C7C9 -  -  -  -  ;    ld  hl,PAGETABLE
 3241 D1:C7C9 -  -  -  -  ;    add hl,de
 3242 D1:C7C9 -  -  -  -  ;    ld  de,(hl) ;
 3243 D1:C7C9 -  -  -  -  ;    ex  de,hl
 3244 D1:C7C9 -  -  -  -  ;    ld  bc,255
 3245 D1:C7C9 -  -  -  -  ;    add hl,bc
 3246 D1:C7C9 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3247 D1:C7C9 -  -  -  -  ;    ex  de,hl
 3248 D1:C7C9 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3249 D1:C7C9 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3250 D1:C7C9 -  -  -  -  ;    ld  e,(hl)
 3251 D1:C7C9 -  -  -  -  ;    ld  d,a
 3252 D1:C7C9 -  -  -  -  ;    ld.s (ix+REGPC),de
 3253 D1:C7C9 -  -  -  -  ;    jp  i6502FirstLoad
 3254 D1:C7C9 -  -  -  -  
 3255 D1:C7C9 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3256 D1:C7C9 -  -  -  -  inst6502_jsr:
 3257 D1:C7C9 DD 56 06 -      ld  d,(ix+REGPC+1)
 3258 D1:C7CC 4E -  -  -      ld  c,(hl)
 3259 D1:C7CD 23 -  -  -      inc hl
 3260 D1:C7CE 1C -  -  -      inc e
 3261 D1:C7CF 20 0E -  -      jr  nz,+_
 3262 D1:C7D1 14 -  -  -      inc d
 3263 D1:C7D2 7A -  -  -      ld  a,d
 3264 D1:C7D3 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3265 D1:C7D5 ED 5C -  -      mlt de
 3266 D1:C7D7 21 00 40 D0     ld  hl,PAGETABLE
 3267 D1:C7DB 19 -  -  -      add hl,de
 3268 D1:C7DC ED 27 -  -      ld  hl,(hl)
 3269 D1:C7DE 57 -  -  -      ld  d,a
 3270 D1:C7DF 46 -  -  -  _:  ld  b,(hl)
 3271 D1:C7E0 -  -  -  -      ;push de to 6502stack
 3272 D1:C7E0 21 00 39 D0     ld  hl,STACKBASE
 3273 D1:C7E4 DD 6E 03 -      ld  l,(ix+REGSP)
 3274 D1:C7E7 72 -  -  -      ld  (hl),d
 3275 D1:C7E8 2D -  -  -      dec l
 3276 D1:C7E9 73 -  -  -      ld  (hl),e
 3277 D1:C7EA 2D -  -  -      dec l
 3278 D1:C7EB DD 75 03 -      ld  (ix+REGSP),l
 3279 D1:C7EE 52 DD 0F 05     ld.s (ix+REGPC),bc
 3280 D1:C7F2 ED 33 06 -      ADDCYC(6)
 3281 D1:C7F5 C3 95 AE D1     jp  i6502FirstLoad
 3282 D1:C7F9 -  -  -  -  
 3283 D1:C7F9 -  -  -  -  ;implied	RTS	60	1	6
 3284 D1:C7F9 -  -  -  -  inst6502_rts:
 3285 D1:C7F9 21 00 39 D0     ld  hl,STACKBASE
 3286 D1:C7FD DD 6E 03 -      ld  l,(ix+REGSP)
 3287 D1:C800 2C -  -  -      inc l
 3288 D1:C801 5E -  -  -      ld  e,(hl)
 3289 D1:C802 2C -  -  -      inc l
 3290 D1:C803 56 -  -  -      ld  d,(hl)
 3291 D1:C804 DD 75 03 -      ld  (ix+REGSP),l
 3292 D1:C807 52 DD 1F 05     ld.s (ix+REGPC),de
 3293 D1:C80B ED 33 06 -      ADDCYC(6)
 3294 D1:C80E C3 95 AE D1     jp  i6502FirstLoad
 3295 D1:C812 -  -  -  -  
 3296 D1:C812 -  -  -  -  
 3297 D1:C812 -  -  -  -  ;-----------------------------------------------------------------------------
 3298 D1:C812 -  -  -  -  ;-----------------------------------------------------------------------------
 3299 D1:C812 -  -  -  -  ;-----------------------------------------------------------------------------
 3300 D1:C812 -  -  -  -  ;Instructions by type: Miscellaneous
 3301 D1:C812 -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3302 D1:C812 -  -  -  -  ;
 3303 D1:C812 -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3304 D1:C812 -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3305 D1:C812 -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3306 D1:C812 -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3307 D1:C812 -  -  -  -  ;any of the registers, other than the status register (SR).
 3308 D1:C812 -  -  -  -  
 3309 D1:C812 -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3310 D1:C812 -  -  -  -  ;                                           M7	+	-	-	-	M6
 3311 D1:C812 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3312 D1:C812 -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3313 D1:C812 -  -  -  -  inst6502_bit_zp:
 3314 D1:C812 ED 33 03 -      ADDCYC(3)
 3315 D1:C815 7E -  -  -      ld  a,(hl)
 3316 D1:C816 01 00 38 D0     ld  bc,ZEROPAGE
 3317 D1:C81A 81 -  -  -      add a,c
 3318 D1:C81B 4F -  -  -      ld  c,a
 3319 D1:C81C 0A -  -  -      ld  a,(bc)
 3320 D1:C81D DD A6 00 -  _:  and a,(ix+REGA)
 3321 D1:C820 CB 8F -  -      res SF_ZERO,a
 3322 D1:C822 20 02 -  -      jr  nz,$+4
 3323 D1:C824 CB CF -  -      set SF_ZERO,a
 3324 D1:C826 DD 46 04 -      ld  b,(ix+REGSR)
 3325 D1:C829 A8 -  -  -      xor a,b
 3326 D1:C82A E6 C2 -  -      and a,%11000010
 3327 D1:C82C A8 -  -  -      xor a,b
 3328 D1:C82D DD 77 04 -      ld  (ix+REGSR),a
 3329 D1:C830 C3 AB AE D1     jp  i6502NextLoad
 3330 D1:C834 -  -  -  -  
 3331 D1:C834 -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3332 D1:C834 -  -  -  -  inst6502_bit_abs:
 3333 D1:C834 ED 33 04 -      ADDCYC(4)
 3334 D1:C837 CD C8 B0 D1     call subroutine6502_abs_split_start
 3335 D1:C83B E5 -  -  -      push hl
 3336 D1:C83C 50 -  -  -          ld  d,b
 3337 D1:C83D 79 -  -  -          ld  a,c
 3338 D1:C83E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3339 D1:C840 ED 4C -  -          mlt bc
 3340 D1:C842 21 00 40 D0         ld  hl,PAGETABLE
 3341 D1:C846 09 -  -  -          add hl,bc
 3342 D1:C847 ED 27 -  -          ld  hl,(hl)
 3343 D1:C849 06 00 -  -          ld  b,0
 3344 D1:C84B 4F -  -  -          ld  c,a
 3345 D1:C84C 09 -  -  -          add hl,bc   ;full address
 3346 D1:C84D 7E -  -  -          READ_ACCESS
 3347 D1:C84E E1 -  -  -      pop hl
 3348 D1:C84F 18 CC -  -      jr  -_    
 3349 D1:C851 -  -  -  -  
 3350 D1:C851 -  -  -  -  ;NOP - No Operation
 3351 D1:C851 -  -  -  -  ;implied	NOP	EA	1	2  
 3352 D1:C851 -  -  -  -  inst6502_nop:
 3353 D1:C851 ED 33 02 -      ADDCYC(2)
 3354 D1:C854 C3 C4 AE D1     jp  i6502FinishLoad
 3355 D1:C858 -  -  -  -  
 3356 D1:C858 -  -  -  -  ;-----------------------------------------------------------------------------
 3357 D1:C858 -  -  -  -  ;-----------------------------------------------------------------------------
 3358 D1:C858 -  -  -  -  ;-----------------------------------------------------------------------------
 3359 D1:C858 -  -  -  -  ;Instruction not mapped: Terminate emulation
 3360 D1:C858 -  -  -  -  inst6502_:
 3361 D1:C858 C9 -  -  -      ret
 3362 D1:C859 -  -  -  -  
 3363 D1:C859 -  -  -  -  inst6502_halt:
 3364 D1:C859 18 FE -  -      jr $
 3365 D1:C85B C3 C4 AE D1     jp i6502FinishLoad
 3366 D1:C85F -  -  -  -  
 3367 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3368 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3369 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3370 D1:C85F -  -  -  -  ;Instructions by type: Illegal Instructions
 3371 D1:C85F -  -  -  -  
 3372 D1:C85F -  -  -  -  
 3373 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3374 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3375 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3376 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3377 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3378 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3379 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3380 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3381 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3382 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3383 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3384 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3385 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3386 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3387 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3388 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3389 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3390 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3391 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3392 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3393 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3394 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3395 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3396 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3397 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3398 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3399 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3400 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3401 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3402 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3403 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3404 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3405 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3406 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3407 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3408 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3412 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3413 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3414 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3415 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3416 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3417 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3418 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3419 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3423 D1:C85F -  -  -  -  ;-----------------------------------------------------------------------------
 3424 D1:C85F -  -  -  -  
 3425 D1:C85F -  -  -  -  inst6502_instruction_set:
 3426 D1:C85F F8 C6 D1 -  .dl	inst6502_brk					;00
 3427 D1:C862 99 BF D1 -  .dl	inst6502_ora_indx				;01
 3428 D1:C865 58 C8 D1 -  .dl	inst6502_				;02
 3429 D1:C868 58 C8 D1 -  .dl	inst6502_				;03
 3430 D1:C86B 58 C8 D1 -  .dl	inst6502_				;04
 3431 D1:C86E 8C BE D1 -  .dl	inst6502_ora_zp					;05
 3432 D1:C871 44 C0 D1 -  .dl	inst6502_asl_zp					;06
 3433 D1:C874 58 C8 D1 -  .dl	inst6502_				;07
 3434 D1:C877 21 B7 D1 -  .dl	inst6502_php					;08
 3435 D1:C87A 6B BE D1 -  .dl	inst6502_ora_imm				;09
 3436 D1:C87D 20 C0 D1 -  .dl	inst6502_asl					;0A
 3437 D1:C880 58 C8 D1 -  .dl	inst6502_				;0B
 3438 D1:C883 58 C8 D1 -  .dl	inst6502_				;0C
 3439 D1:C886 DF BE D1 -  .dl	inst6502_ora_abs				;0D
 3440 D1:C889 9D C0 D1 -  .dl	inst6502_asl_abs				;0E
 3441 D1:C88C 58 C8 D1 -  .dl	inst6502_				;0F
 3442 D1:C88F CB C6 D1 -  .dl	inst6502_bpl					;10
 3443 D1:C892 D9 BF D1 -  .dl	inst6502_ora_indy				;11
 3444 D1:C895 59 C8 D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3445 D1:C898 58 C8 D1 -  .dl	inst6502_				;13
 3446 D1:C89B 58 C8 D1 -  .dl	inst6502_				;14
 3447 D1:C89E B4 BE D1 -  .dl	inst6502_ora_zpx				;15
 3448 D1:C8A1 6F C0 D1 -  .dl	inst6502_asl_zpx				;16
 3449 D1:C8A4 58 C8 D1 -  .dl	inst6502_				;17
 3450 D1:C8A7 38 C4 D1 -  .dl	inst6502_clc					;18
 3451 D1:C8AA 58 BF D1 -  .dl	inst6502_ora_absy				;19
 3452 D1:C8AD 58 C8 D1 -  .dl	inst6502_				;1A
 3453 D1:C8B0 58 C8 D1 -  .dl	inst6502_				;1B
 3454 D1:C8B3 58 C8 D1 -  .dl	inst6502_				;1C
 3455 D1:C8B6 17 BF D1 -  .dl	inst6502_ora_absx				;1D
 3456 D1:C8B9 DA C0 D1 -  .dl	inst6502_asl_absx				;1E
 3457 D1:C8BC 58 C8 D1 -  .dl	inst6502_				;1F
 3458 D1:C8BF C9 C7 D1 -  .dl	inst6502_jsr					;20
 3459 D1:C8C2 2F BC D1 -  .dl	inst6502_and_indx				;21
 3460 D1:C8C5 58 C8 D1 -  .dl	inst6502_				;22
 3461 D1:C8C8 58 C8 D1 -  .dl	inst6502_				;23
 3462 D1:C8CB 12 C8 D1 -  .dl	inst6502_bit_zp					;24
 3463 D1:C8CE 22 BB D1 -  .dl	inst6502_and_zp					;25
 3464 D1:C8D1 44 C2 D1 -  .dl	inst6502_rol_zp					;26
 3465 D1:C8D4 58 C8 D1 -  .dl	inst6502_				;27
 3466 D1:C8D7 5C B7 D1 -  .dl	inst6502_plp					;28
 3467 D1:C8DA 01 BB D1 -  .dl	inst6502_and_imm				;29
 3468 D1:C8DD 1C C2 D1 -  .dl	inst6502_rol					;2A
 3469 D1:C8E0 58 C8 D1 -  .dl	inst6502_				;2B
 3470 D1:C8E3 34 C8 D1 -  .dl	inst6502_bit_abs				;2C
 3471 D1:C8E6 75 BB D1 -  .dl	inst6502_and_abs				;2D
 3472 D1:C8E9 A3 C2 D1 -  .dl	inst6502_rol_abs				;2E
 3473 D1:C8EC 58 C8 D1 -  .dl	inst6502_				;2F
 3474 D1:C8EF AD C6 D1 -  .dl	inst6502_bmi					;30
 3475 D1:C8F2 6F BC D1 -  .dl	inst6502_and_indy				;31
 3476 D1:C8F5 58 C8 D1 -  .dl	inst6502_				;32
 3477 D1:C8F8 58 C8 D1 -  .dl	inst6502_				;33
 3478 D1:C8FB 58 C8 D1 -  .dl	inst6502_				;34
 3479 D1:C8FE 4A BB D1 -  .dl	inst6502_and_zpx				;35
 3480 D1:C901 72 C2 D1 -  .dl	inst6502_rol_zpx				;36
 3481 D1:C904 58 C8 D1 -  .dl	inst6502_						;37
 3482 D1:C907 58 C4 D1 -  .dl	inst6502_sec					;38
 3483 D1:C90A EE BB D1 -  .dl	inst6502_and_absy				;39
 3484 D1:C90D 58 C8 D1 -  .dl	inst6502_			;3A
 3485 D1:C910 58 C8 D1 -  .dl	inst6502_			;3B
 3486 D1:C913 58 C8 D1 -  .dl	inst6502_			;3C
 3487 D1:C916 AD BB D1 -  .dl	inst6502_and_absx				;3D
 3488 D1:C919 E3 C2 D1 -  .dl	inst6502_rol_absx				;3E
 3489 D1:C91C 58 C8 D1 -  .dl	inst6502_			;3F
 3490 D1:C91F F9 C7 D1 -  .dl	inst6502_rts					;40
 3491 D1:C922 E4 BD D1 -  .dl	inst6502_eor_indx				;41
 3492 D1:C925 58 C8 D1 -  .dl	inst6502_			;42
 3493 D1:C928 58 C8 D1 -  .dl	inst6502_			;43
 3494 D1:C92B 58 C8 D1 -  .dl	inst6502_			;44
 3495 D1:C92E D7 BC D1 -  .dl	inst6502_eor_zp					;45
 3496 D1:C931 42 C1 D1 -  .dl	inst6502_lsr_zp					;46
 3497 D1:C934 58 C8 D1 -  .dl	inst6502_			;47
 3498 D1:C937 0E B7 D1 -  .dl	inst6502_pha					;48
 3499 D1:C93A B6 BC D1 -  .dl	inst6502_eor_imm				;49
 3500 D1:C93D 1E C1 D1 -  .dl	inst6502_lsr					;4A
 3501 D1:C940 58 C8 D1 -  .dl	inst6502_			;4B
 3502 D1:C943 56 C7 D1 -  .dl	inst6052_jmp_abs				;4C
 3503 D1:C946 2A BD D1 -  .dl	inst6502_eor_abs				;4D
 3504 D1:C949 9B C1 D1 -  .dl	inst6502_lsr_abs				;4E
 3505 D1:C94C 58 C8 D1 -  .dl	inst6502_			;4F
 3506 D1:C94F DA C6 D1 -  .dl	inst6502_bvc					;50
 3507 D1:C952 24 BE D1 -  .dl	inst6502_eor_indy				;51
 3508 D1:C955 58 C8 D1 -  .dl	inst6502_			;52
 3509 D1:C958 58 C8 D1 -  .dl	inst6502_			;53
 3510 D1:C95B 58 C8 D1 -  .dl	inst6502_			;54
 3511 D1:C95E FF BC D1 -  .dl	inst6502_eor_zpx				;55
 3512 D1:C961 6D C1 D1 -  .dl	inst6502_lsr_zpx				;56
 3513 D1:C964 58 C8 D1 -  .dl	inst6502_			;57
 3514 D1:C967 48 C4 D1 -  .dl	inst6502_cli					;58
 3515 D1:C96A A3 BD D1 -  .dl	inst6502_eor_absy				;59
 3516 D1:C96D 58 C8 D1 -  .dl	inst6502_			;5A
 3517 D1:C970 58 C8 D1 -  .dl	inst6502_			;5B
 3518 D1:C973 58 C8 D1 -  .dl	inst6502_			;5C
 3519 D1:C976 62 BD D1 -  .dl	inst6502_eor_absx				;5D
 3520 D1:C979 D8 C1 D1 -  .dl	inst6502_lsr_absx				;5E
 3521 D1:C97C 58 C8 D1 -  .dl	inst6502_			;5F
 3522 D1:C97F F9 C7 D1 -  .dl	inst6502_rts					;60
 3523 D1:C982 BC B9 D1 -  .dl	inst6502_adc_indx				;61
 3524 D1:C985 58 C8 D1 -  .dl	inst6502_			;62
 3525 D1:C988 58 C8 D1 -  .dl	inst6502_			;63
 3526 D1:C98B 58 C8 D1 -  .dl	inst6502_			;64
 3527 D1:C98E 27 B9 D1 -  .dl	inst6502_adc_zp					;65
 3528 D1:C991 52 C3 D1 -  .dl	inst6502_ror_zp					;66
 3529 D1:C994 58 C8 D1 -  .dl	inst6502_			;67
 3530 D1:C997 36 B7 D1 -  .dl	inst6502_pla					;68
 3531 D1:C99A 1F B9 D1 -  .dl	inst6502_adc_imm				;69
 3532 D1:C99D 2A C3 D1 -  .dl	inst6502_ror					;6A
 3533 D1:C9A0 58 C8 D1 -  .dl	inst6502_			;6B
 3534 D1:C9A3 78 C7 D1 -  .dl	inst6502_jmp_indir				;6C
 3535 D1:C9A6 4A B9 D1 -  .dl	inst6502_adc_abs				;6D
 3536 D1:C9A9 B1 C3 D1 -  .dl	inst6502_ror_abs				;6E
 3537 D1:C9AC 58 C8 D1 -  .dl	inst6502_			;6F
 3538 D1:C9AF E9 C6 D1 -  .dl	inst6502_bvs					;70
 3539 D1:C9B2 E4 B9 D1 -  .dl	inst6502_adc_indy				;71
 3540 D1:C9B5 58 C8 D1 -  .dl	inst6502_			;72
 3541 D1:C9B8 58 C8 D1 -  .dl	inst6502_			;73
 3542 D1:C9BB 58 C8 D1 -  .dl	inst6502_			;74
 3543 D1:C9BE 37 B9 D1 -  .dl	inst6502_adc_zpx				;75
 3544 D1:C9C1 80 C3 D1 -  .dl	inst6502_ror_zpx				;76
 3545 D1:C9C4 58 C8 D1 -  .dl	inst6502_			;77
 3546 D1:C9C7 68 C4 D1 -  .dl	inst6502_sei					;78
 3547 D1:C9CA 93 B9 D1 -  .dl	inst6502_adc_absy				;79
 3548 D1:C9CD 58 C8 D1 -  .dl	inst6502_			;7A
 3549 D1:C9D0 58 C8 D1 -  .dl	inst6502_			;7B
 3550 D1:C9D3 58 C8 D1 -  .dl	inst6502_			;7C
 3551 D1:C9D6 6A B9 D1 -  .dl	inst6502_adc_absx				;7D
 3552 D1:C9D9 F1 C3 D1 -  .dl	inst6502_ror_absx				;7E
 3553 D1:C9DC 58 C8 D1 -  .dl	inst6502_			;7F
 3554 D1:C9DF 58 C8 D1 -  .dl	inst6502_			;80
 3555 D1:C9E2 76 B5 D1 -  .dl	inst6502_sta_indx				;81
 3556 D1:C9E5 58 C8 D1 -  .dl	inst6502_			;82
 3557 D1:C9E8 58 C8 D1 -  .dl	inst6502_			;83
 3558 D1:C9EB 18 B6 D1 -  .dl	inst6502_sty_zp					;84
 3559 D1:C9EE DB B4 D1 -  .dl	inst6502_sta_zp					;85
 3560 D1:C9F1 CF B5 D1 -  .dl	inst6502_stx_zp					;86
 3561 D1:C9F4 58 C8 D1 -  .dl	inst6502_			;87
 3562 D1:C9F7 52 B8 D1 -  .dl	inst6502_dey					;88
 3563 D1:C9FA 58 C8 D1 -  .dl	inst6502_			;89
 3564 D1:C9FD C1 B6 D1 -  .dl	inst6502_txa					;8A
 3565 D1:CA00 58 C8 D1 -  .dl	inst6502_			;8B
 3566 D1:CA03 3F B6 D1 -  .dl	inst6502_sty_abs				;8C
 3567 D1:CA06 02 B5 D1 -  .dl	inst6502_sta_abs				;8D
 3568 D1:CA09 F6 B5 D1 -  .dl	inst6502_stx_abs				;8E
 3569 D1:CA0C 58 C8 D1 -  .dl	inst6502_			;8F
 3570 D1:CA0F 80 C6 D1 -  .dl	inst6502_bcc					;90
 3571 D1:CA12 A0 B5 D1 -  .dl	inst6502_sta_indy				;91
 3572 D1:CA15 58 C8 D1 -  .dl	inst6502_			;92
 3573 D1:CA18 58 C8 D1 -  .dl	inst6502_			;93
 3574 D1:CA1B 2A B6 D1 -  .dl	inst6502_sty_zpx				;94
 3575 D1:CA1E ED B4 D1 -  .dl	inst6502_sta_zpx				;95
 3576 D1:CA21 E1 B5 D1 -  .dl	inst6502_stx_zpy				;96
 3577 D1:CA24 58 C8 D1 -  .dl	inst6502_			;97
 3578 D1:CA27 EE B6 D1 -  .dl	inst6502_tya					;98
 3579 D1:CA2A 4D B5 D1 -  .dl	inst6502_sta_absy				;99
 3580 D1:CA2D E1 B6 D1 -  .dl	inst6502_txs					;9A
 3581 D1:CA30 58 C8 D1 -  .dl	inst6502_			;9B
 3582 D1:CA33 58 C8 D1 -  .dl	inst6502_			;9C
 3583 D1:CA36 24 B5 D1 -  .dl	inst6502_sta_absx				;9D
 3584 D1:CA39 58 C8 D1 -  .dl	inst6502_			;9E
 3585 D1:CA3C 58 C8 D1 -  .dl	inst6502_			;9F
 3586 D1:CA3F FD B3 D1 -  .dl	inst6502_ldy_imm				;A0
 3587 D1:CA42 9E B2 D1 -  .dl	inst6502_lda_indx				;A1
 3588 D1:CA45 1F B3 D1 -  .dl	inst6502_ldx_imm				;A2
 3589 D1:CA48 58 C8 D1 -  .dl	inst6502_			;A3
 3590 D1:CA4B 1B B4 D1 -  .dl	inst6502_ldy_zp					;A4
 3591 D1:CA4E A0 B1 D1 -  .dl	inst6502_lda_zp					;A5
 3592 D1:CA51 3D B3 D1 -  .dl	inst6502_ldx_zp					;A6
 3593 D1:CA54 58 C8 D1 -  .dl	inst6502_			;A7
 3594 D1:CA57 81 B6 D1 -  .dl	inst6502_tay					;A8
 3595 D1:CA5A 82 B1 D1 -  .dl	inst6502_lda_imm				;A9
 3596 D1:CA5D 61 B6 D1 -  .dl	inst6502_tax					;AA
 3597 D1:CA60 58 C8 D1 -  .dl	inst6502_			;AB
 3598 D1:CA63 68 B4 D1 -  .dl	inst6502_ldy_abs				;AC
 3599 D1:CA66 ED B1 D1 -  .dl	inst6502_lda_abs				;AD
 3600 D1:CA69 8A B3 D1 -  .dl	inst6502_ldx_abs				;AE
 3601 D1:CA6C 58 C8 D1 -  .dl	inst6502_			;AF
 3602 D1:CA6F 8F C6 D1 -  .dl	inst6502_bcs					;B0
 3603 D1:CA72 DB B2 D1 -  .dl	inst6502_lda_indy				;B1
 3604 D1:CA75 58 C8 D1 -  .dl	inst6502_			;B2
 3605 D1:CA78 58 C8 D1 -  .dl	inst6502_			;B3
 3606 D1:CA7B 40 B4 D1 -  .dl	inst6502_ldy_zpx				;B4
 3607 D1:CA7E C5 B1 D1 -  .dl	inst6502_lda_zpx				;B5
 3608 D1:CA81 62 B3 D1 -  .dl	inst6502_ldx_zpy				;B6
 3609 D1:CA84 58 C8 D1 -  .dl	inst6502_			;B7
 3610 D1:CA87 50 C4 D1 -  .dl	inst6502_clv					;B8
 3611 D1:CA8A 60 B2 D1 -  .dl	inst6502_lda_absy				;B9
 3612 D1:CA8D A1 B6 D1 -  .dl	inst6502_tsx					;BA
 3613 D1:CA90 58 C8 D1 -  .dl	inst6502_			;BB
 3614 D1:CA93 9D B4 D1 -  .dl	inst6502_ldy_absx				;BC
 3615 D1:CA96 22 B2 D1 -  .dl	inst6502_lda_absx				;BD
 3616 D1:CA99 BF B3 D1 -  .dl	inst6502_ldx_absy				;BE
 3617 D1:CA9C 58 C8 D1 -  .dl	inst6502_			;BF
 3618 D1:CA9F F2 C5 D1 -  .dl	inst6502_cpy_imm				;C0
 3619 D1:CAA2 0D C5 D1 -  .dl	inst6502_cmp_indx				;C1
 3620 D1:CAA5 58 C8 D1 -  .dl	inst6502_			;C2
 3621 D1:CAA8 58 C8 D1 -  .dl	inst6502_			;C3
 3622 D1:CAAB 16 C6 D1 -  .dl	inst6502_cpy_zp					;C4
 3623 D1:CAAE 78 C4 D1 -  .dl	inst6502_cmp_zp					;C5
 3624 D1:CAB1 76 B7 D1 -  .dl	inst6502_dec_zp					;C6
 3625 D1:CAB4 58 C8 D1 -  .dl	inst6502_			;C7
 3626 D1:CAB7 5C B8 D1 -  .dl	inst6502_iny					;C8
 3627 D1:CABA 70 C4 D1 -  .dl	inst6502_cmp_imm				;C9
 3628 D1:CABD 34 B8 D1 -  .dl	inst6502_dex					;CA
 3629 D1:CAC0 58 C8 D1 -  .dl	inst6502_			;CB
 3630 D1:CAC3 43 C6 D1 -  .dl	inst6502_cpy_abs				;CC
 3631 D1:CAC6 9B C4 D1 -  .dl	inst6502_cmp_abs				;CD
 3632 D1:CAC9 C1 B7 D1 -  .dl	inst6502_dec_abs				;CE
 3633 D1:CACC 58 C8 D1 -  .dl	inst6502_			;CF
 3634 D1:CACF BC C6 D1 -  .dl	inst6502_bne					;D0
 3635 D1:CAD2 35 C5 D1 -  .dl	inst6502_cmp_indy				;D1
 3636 D1:CAD5 58 C8 D1 -  .dl	inst6502_			;D2
 3637 D1:CAD8 58 C8 D1 -  .dl	inst6502_			;D3
 3638 D1:CADB 58 C8 D1 -  .dl	inst6502_			;D4
 3639 D1:CADE 88 C4 D1 -  .dl	inst6502_cmp_zpx				;D5
 3640 D1:CAE1 9A B7 D1 -  .dl	inst6502_dec_zpx				;D6
 3641 D1:CAE4 58 C8 D1 -  .dl	inst6502_			;D7
 3642 D1:CAE7 40 C4 D1 -  .dl	inst6502_cld					;D8
 3643 D1:CAEA E4 C4 D1 -  .dl	inst6502_cmp_absy				;D9
 3644 D1:CAED 58 C8 D1 -  .dl	inst6502_			;DA
 3645 D1:CAF0 58 C8 D1 -  .dl	inst6502_			;DB
 3646 D1:CAF3 58 C8 D1 -  .dl	inst6502_			;DC
 3647 D1:CAF6 BB C4 D1 -  .dl	inst6502_cmp_absx				;DD
 3648 D1:CAF9 F7 B7 D1 -  .dl	inst6502_dec_absx				;DE
 3649 D1:CAFC 58 C8 D1 -  .dl	inst6502_			;DF
 3650 D1:CAFF 64 C5 D1 -  .dl	inst6502_cpx_imm				;E0
 3651 D1:CB02 AD BA D1 -  .dl	inst6502_sbc_indx				;E1
 3652 D1:CB05 58 C8 D1 -  .dl	inst6502_			;E2
 3653 D1:CB08 58 C8 D1 -  .dl	inst6502_			;E3
 3654 D1:CB0B 88 C5 D1 -  .dl	inst6502_cpx_zp					;E4
 3655 D1:CB0E 18 BA D1 -  .dl	inst6502_sbc_zp					;E5
 3656 D1:CB11 61 B8 D1 -  .dl	inst6502_inc_zp					;E6
 3657 D1:CB14 58 C8 D1 -  .dl	inst6502_			;E7
 3658 D1:CB17 57 B8 D1 -  .dl	inst6502_inx					;E8
 3659 D1:CB1A 10 BA D1 -  .dl	inst6502_sbc_imm				;E9
 3660 D1:CB1D 51 C8 D1 -  .dl	inst6502_nop					;EA
 3661 D1:CB20 58 C8 D1 -  .dl	inst6502_			;EB
 3662 D1:CB23 B5 C5 D1 -  .dl	inst6502_cpx_abs				;EC
 3663 D1:CB26 3B BA D1 -  .dl	inst6502_sbc_abs				;ED
 3664 D1:CB29 AC B8 D1 -  .dl	inst6502_inc_abs				;EE
 3665 D1:CB2C 58 C8 D1 -  .dl	inst6502_			;EF
 3666 D1:CB2F 9E C6 D1 -  .dl	inst6502_beq					;F0
 3667 D1:CB32 D5 BA D1 -  .dl	inst6502_sbc_indy				;F1
 3668 D1:CB35 58 C8 D1 -  .dl	inst6502_			;F2
 3669 D1:CB38 58 C8 D1 -  .dl	inst6502_			;F3
 3670 D1:CB3B 58 C8 D1 -  .dl	inst6502_			;F4
 3671 D1:CB3E 28 BA D1 -  .dl	inst6502_sbc_zpx				;F5
 3672 D1:CB41 85 B8 D1 -  .dl	inst6502_inc_zpx				;F6
 3673 D1:CB44 58 C8 D1 -  .dl	inst6502_			;F7
 3674 D1:CB47 60 C4 D1 -  .dl	inst6502_sed					;F8
 3675 D1:CB4A 84 BA D1 -  .dl	inst6502_sbc_absy				;F9
 3676 D1:CB4D 58 C8 D1 -  .dl	inst6502_			;FA
 3677 D1:CB50 58 C8 D1 -  .dl	inst6502_			;FB
 3678 D1:CB53 58 C8 D1 -  .dl	inst6502_			;FC
 3679 D1:CB56 5B BA D1 -  .dl	inst6502_sbc_absx				;FD
 3680 D1:CB59 E2 B8 D1 -  .dl	inst6502_inc_absx				;FE
 3681 D1:CB5C 58 C8 D1 -  .dl	inst6502_			;FF
 3682 D1:CB5F -  -  -  -  
 3683 D1:CB5F -  -  -  -  
 3684 D1:CB5F -  -  -  -  
 3685 D1:CB5F -  -  -  -  
 3686 D1:CB5F -  -  -  -  
 3687 D1:CB5F -  -  -  -  
 3688 D1:CB5F -  -  -  -  
 3689 D1:CB5F -  -  -  -  
 3690 D1:CB5F -  -  -  -  
 3691 D1:CB5F -  -  -  -  
 3692 D1:CB5F -  -  -  -  
 3693 D1:CB5F -  -  -  -  
 3694 D1:CB5F -  -  -  -  
Listing for file "main.z80"
  173 D1:CB5F -  -  -  -  .echo "Main program size: ",$-programStart
