    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD BA AC D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 -  -  -  -      ;load reset vectors
   44 D1:A895 21 6F A8 D1     ld  hl,testVectors
   45 D1:A899 01 01 01 00     ld  bc,$000101
   46 D1:A89D 1E FF -  -      ld  e,$FF
   47 D1:A89F CD CB B3 D1     call i6502_map_pages
   48 D1:A8A3 -  -  -  -      ;load program ROM to lowmem
   49 D1:A8A3 21 6F A9 D1     ld  hl,testCode
   50 D1:A8A7 01 08 20 00     ld  bc,$002008
   51 D1:A8AB 1E 80 -  -      ld  e,$80
   52 D1:A8AD CD CB B3 D1     call i6502_map_pages
   53 D1:A8B1 -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   54 D1:A8B1 -  -  -  -      ;memory to screen.
   55 D1:A8B1 21 00 50 D0     ld  hl,NAMETABLE1
   56 D1:A8B5 01 04 20 00     ld  bc,$002004
   57 D1:A8B9 1E 40 -  -      ld  e,$40
   58 D1:A8BB CD CB B3 D1     call i6502_map_pages
   59 D1:A8BF -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   60 D1:A8BF -  -  -  -      ;start the emulation.
   61 D1:A8BF -  -  -  -      ;jr $
   62 D1:A8BF CD 0D AD D1     call clearTextBuf
   63 D1:A8C3 3E 01 -  -      ld  a,1
   64 D1:A8C5 CD 5A AD D1     call setLineStart
   65 D1:A8C9 CD 63 AD D1     call setCurLine
   66 D1:A8CD 21 EC A9 D1     ld  hl,text001
   67 D1:A8D1 CD 80 AD D1     call printString
   68 D1:A8D5 FD 21 30 AA 
              D1 -  -  -      ld  iy,firstFileHeader
   69 D1:A8DA 01 00 00 00     ld  bc,0
   70 D1:A8DE FD 4E FF -      ld  c,(iy-1)
   71 D1:A8E1 CD 35 AC D1     call vatTraverse
   72 D1:A8E5 30 0C -  -      jr  nc,+_
   73 D1:A8E7 21 03 AA D1     ld  hl,text002
   74 D1:A8EB CD 80 AD D1     call printString
   75 D1:A8EF C3 13 A9 D1     jp endCurrentRun
   76 D1:A8F3 D5 -  -  -  _:  push de
   77 D1:A8F4 21 22 AA D1         ld  hl,text003
   78 D1:A8F8 CD 80 AD D1         call printString
   79 D1:A8FC D1 -  -  -      pop de
   80 D1:A8FD DD 46 FA -      ld  b,(ix-6)
   81 D1:A900 ED 22 F9 -      lea hl,ix-7
   82 D1:A903 7E -  -  -  _:  ld  a,(hl)
   83 D1:A904 2B -  -  -      dec hl
   84 D1:A905 E5 -  -  -      push hl
   85 D1:A906 C5 -  -  -          push bc
   86 D1:A907 CD 96 AD D1             call PrintBigFont
   87 D1:A90B C1 -  -  -          pop bc
   88 D1:A90C E1 -  -  -      pop hl
   89 D1:A90D 10 F4 -  -      djnz -_
   90 D1:A90F CD 6E AD D1     call newLine
   91 D1:A913 -  -  -  -  
   92 D1:A913 -  -  -  -  
   93 D1:A913 -  -  -  -  
   94 D1:A913 -  -  -  -  
   95 D1:A913 -  -  -  -      ;call i6502Init
   96 D1:A913 -  -  -  -  
   97 D1:A913 -  -  -  -  ;    call clearTextBuf
   98 D1:A913 -  -  -  -  ;    ld  hl,helloWorld
   99 D1:A913 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  100 D1:A913 -  -  -  -  ;    ld  bc,13
  101 D1:A913 -  -  -  -  ;    ldir
  102 D1:A913 -  -  -  -  
  103 D1:A913 -  -  -  -  endCurrentRun:
  104 D1:A913 -  -  -  -      ;call printTextBuf
  105 D1:A913 CD 91 AC D1     call fastCopy
  106 D1:A917 00 -  -  -      nop
  107 D1:A918 CD E0 A9 D1     call waituntilnewkeypress
  108 D1:A91C CD D8 A9 D1     call waituntilkeyrelease
  109 D1:A920 -  -  -  -  
  110 D1:A920 -  -  -  -      ;
  111 D1:A920 -  -  -  -      ;
  112 D1:A920 -  -  -  -      ;
  113 D1:A920 -  -  -  -  programExit:
  114 D1:A920 CD AC AC D1     call stopGfx
  115 D1:A924 ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  116 D1:A929 3A FF 31 D0     ld  a,(save_mbase)
  117 D1:A92D ED 6D -  -      ld  MB,a
  118 D1:A92F FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  119 D1:A934 C9 -  -  -      ret
  120 D1:A935 -  -  -  -  
  121 D1:A935 -  -  -  -  loadROM:
  122 D1:A935 CD 10 1A 02     call _ClrLCDAll
  123 D1:A939 21 60 A9 D1 _:  ld  hl,testFilename
  124 D1:A93D CD 20 03 02     call _Mov9ToOP1
  125 D1:A941 CD 0C 05 02     call _ChkFindSym
  126 D1:A945 D8 -  -  -      ret c
  127 D1:A946 CD 98 1F 02     call _ChkInRam
  128 D1:A94A 20 06 -  -      jr  nz,+_
  129 D1:A94C CD 48 14 02     call _Arc_Unarc
  130 D1:A950 18 E7 -  -      jr  -_
  131 D1:A952 00 -  -  -  _:  nop
  132 D1:A953 11 09 00 00     ld  de,9
  133 D1:A957 19 -  -  -      add hl,de
  134 D1:A958 5E -  -  -      ld  e,(hl)
  135 D1:A959 19 -  -  -      add hl,de
  136 D1:A95A 23 -  -  -      inc hl
  137 D1:A95B CD 9C 1D 02     call _LoadDEInd_s   ;ld de,(hl) but DE is 16 bit. Then HL+=2.
  138 D1:A95F -  -  -  -      ;HL=start of program data. DE is size of data.
  139 D1:A95F -  -  -  -      ;
  140 D1:A95F -  -  -  -      ;
  141 D1:A95F -  -  -  -      ; TODO: Finish writing this section.
  142 D1:A95F -  -  -  -      ;
  143 D1:A95F -  -  -  -      ;
  144 D1:A95F C9 -  -  -      ret
  145 D1:A960 -  -  -  -  
  146 D1:A960 -  -  -  -  testFilename:
  147 D1:A960 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  148 D1:A969 -  -  -  -  
  149 D1:A969 -  -  -  -  
  150 D1:A969 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  151 D1:A969 -  -  -  -  testVectors .equ $-(256-6)
  152 D1:A969 00 80 -  -  .dw $8000
  153 D1:A96B 00 80 -  -  .dw $8000
  154 D1:A96D 00 80 -  -  .dw $8000
  155 D1:A96F -  -  -  -  testCode:
  156 D1:A96F A9 00 AA A8 .db $A9,$00,$AA,$A8
  157 D1:A973 BD 14 80 -  .db $BD,$14,$80
  158 D1:A976 C9 00 -  -  .db $C9,$00
  159 D1:A978 F0 08 -  -  .db $F0,$08
  160 D1:A97A 99 21 40 -  .db $99,$21,$40
  161 D1:A97D E8 C8 -  -  .db $E8,$C8
  162 D1:A97F -  -  -  -  ;.db $12
  163 D1:A97F 4C 04 80 02 .db $4C,$04,$80,$02
  164 D1:A983 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  165 D1:A98C 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  166 D1:A991 -  -  -  -  
  167 D1:A991 -  -  -  -  
  168 D1:A991 A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  169 D1:A9A0 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  170 D1:A9B0 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  171 D1:A9B1 -  -  -  -  
  172 D1:A9B1 -  -  -  -  helloWorld:
  173 D1:A9B1 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  174 D1:A9BF -  -  -  -  
  175 D1:A9BF -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  176 D1:A9BF -  -  -  -  ;find yet another hardware reference for something I already did.
  177 D1:A9BF -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  178 D1:A9BF -  -  -  -  ;what we're looking for. Here, we output the same sort of
  179 D1:A9BF -  -  -  -  ;game keys that I've used basically all my programming life.
  180 D1:A9BF -  -  -  -  ;Anyhoo. We'll be using the following:
  181 D1:A9BF -  -  -  -  ;kbitDown	equ 00h
  182 D1:A9BF -  -  -  -  ;kbitLeft	equ 01h
  183 D1:A9BF -  -  -  -  ;kbitRight	equ 02h
  184 D1:A9BF -  -  -  -  ;kbitUp		equ 03h
  185 D1:A9BF -  -  -  -  ;kbitYequ equ 04h
  186 D1:A9BF -  -  -  -  ;kbit2nd		equ 05h
  187 D1:A9BF -  -  -  -  ;kbitMode	equ 06h
  188 D1:A9BF -  -  -  -  ;kbitDel		equ 07h
  189 D1:A9BF -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  190 D1:A9BF -  -  -  -  
  191 D1:A9BF -  -  -  -  getkbd_adl:
  192 D1:A9BF DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  193 D1:A9C4 ED 22 00 -  	lea hl,ix+0
  194 D1:A9C7 36 02 -  -  	ld  (hl),keyModeScanOnce
  195 D1:A9C9 AF -  -  -  	xor a
  196 D1:A9CA BE -  -  -  _:  cp  (hl)
  197 D1:A9CB 20 FD -  -  	jr  nz,-_
  198 D1:A9CD DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  199 D1:A9D0 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  200 D1:A9D3 AD -  -  -  	xor L
  201 D1:A9D4 E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  202 D1:A9D6 AD -  -  -  	xor L
  203 D1:A9D7 C9 -  -  -  	ret
  204 D1:A9D8 -  -  -  -  
  205 D1:A9D8 -  -  -  -  
  206 D1:A9D8 -  -  -  -  waituntilkeyrelease:
  207 D1:A9D8 CD BF A9 D1     call getkbd_adl
  208 D1:A9DC B7 -  -  -      or  a,a
  209 D1:A9DD 20 F9 -  -      jr  nz,waituntilkeyrelease
  210 D1:A9DF C9 -  -  -  	ret
  211 D1:A9E0 -  -  -  -  
  212 D1:A9E0 -  -  -  -  waituntilnewkeypress:
  213 D1:A9E0 CD D8 A9 D1     call waituntilkeyrelease
  214 D1:A9E4 CD BF A9 D1 _:  call getkbd_adl
  215 D1:A9E8 B7 -  -  -  	or  a,a
  216 D1:A9E9 28 F9 -  -  	jr  z,-_
  217 D1:A9EB C9 -  -  -      ret
  218 D1:A9EC -  -  -  -  
  219 D1:A9EC -  -  -  -  
  220 D1:A9EC -  -  -  -  text001:
  221 D1:A9EC 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  222 D1:AA03 -  -  -  -  text002:
  223 D1:AA03 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  224 D1:AA22 -  -  -  -  text003:
  225 D1:AA22 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  226 D1:AA2F -  -  -  -  
  227 D1:AA2F -  -  -  -  
  228 D1:AA2F 07 -  -  -  .db 7
  229 D1:AA30 -  -  -  -  firstFileHeader:
  230 D1:AA30 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  231 D1:AA37 -  -  -  -  
  232 D1:AA37 -  -  -  -  err_:
  233 D1:AA37 -  -  -  -  
  234 D1:AA37 -  -  -  -  err_err:
  235 D1:AA37 E1 -  -  -      pop hl
  236 D1:AA38 CD 80 AD D1     call printString
  237 D1:AA3C -  -  -  -  err_err_quit:
  238 D1:AA3C CD 91 AC D1     call fastCopy
  239 D1:AA40 00 -  -  -      nop
  240 D1:AA41 CD E0 A9 D1     call waituntilnewkeypress
  241 D1:AA45 CD D8 A9 D1     call waituntilkeyrelease
  242 D1:AA49 C3 20 A9 D1     jp programExit
  243 D1:AA4D -  -  -  -  
  244 D1:AA4D -  -  -  -  err_missingFiles:
  245 D1:AA4D F5 -  -  -      push af
  246 D1:AA4E 21 5F AA D1         ld  hl,err_missingFiles_str
  247 D1:AA52 CD 80 AD D1         call printString
  248 D1:AA56 F1 -  -  -      pop af
  249 D1:AA57 CD C6 AD D1     call printSmallNumPair
  250 D1:AA5B C3 3C AA D1     jp err_err_quit
  251 D1:AA5F -  -  -  -  err_missingFiles_str:
  252 D1:AA5F 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  253 D1:AA79 -  -  -  -  
  254 D1:AA79 -  -  -  -  err_tooManyFiles:
  255 D1:AA79 CD 37 AA D1     call err_err
  256 D1:AA7D 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  257 D1:AA93 -  -  -  -  
  258 D1:AA93 -  -  -  -  err_PRGROMTooLarge:
  259 D1:AA93 CD 37 AA D1     call err_err
  260 D1:AA97 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  261 D1:AAAA -  -  -  -  err_CHRROMTooLarge:
  262 D1:AAAA CD 37 AA D1     call err_err
  263 D1:AAAE 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  264 D1:AAC1 -  -  -  -  
  265 D1:AAC1 -  -  -  -  err_missingROMDetected:
  266 D1:AAC1 CD 37 AA D1     call err_err
  267 D1:AAC5 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  268 D1:AAE1 -  -  -  -  
  269 D1:AAE1 -  -  -  -  err_ROMHeaderDamaged:
  270 D1:AAE1 CD 37 AA D1     call err_err
  271 D1:AAE5 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  272 D1:AAFE -  -  -  -  
  273 D1:AAFE -  -  -  -  
  274 D1:AAFE -  -  -  -  ;Input: DE = Address of first file after the container header signature
  275 D1:AAFE -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  276 D1:AAFE -  -  -  -  ;Destroys: All registers.
  277 D1:AAFE -  -  -  -  loadROMFile:
  278 D1:AAFE EB -  -  -      ex  de,hl
  279 D1:AAFF AF -  -  -      xor a,a
  280 D1:AB00 32 94 AC D1     ld  (missing_files),a
  281 D1:AB04 BE -  -  -  _:  cp  (hl)    ;
  282 D1:AB05 23 -  -  -      inc hl      ;
  283 D1:AB06 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  284 D1:AB08 22 91 AC D1     ld  (basefile_sig),hl
  285 D1:AB0C 01 10 00 00     ld  bc,16
  286 D1:AB10 09 -  -  -      add hl,bc
  287 D1:AB11 7E -  -  -      ld  a,(hl)
  288 D1:AB12 FE 01 -  -      cp  a,MAXNUMFILES
  289 D1:AB14 D2 79 AA D1     jp  nc,err_tooManyFiles
  290 D1:AB18 32 04 34 D0     ld  (inputNumFiles),a
  291 D1:AB1C 47 -  -  -      ld  b,a
  292 D1:AB1D 0E 10 -  -      ld  c,16
  293 D1:AB1F ED 4C -  -      mlt bc
  294 D1:AB21 23 -  -  -      inc hl
  295 D1:AB22 E5 -  -  -      push hl
  296 D1:AB23 09 -  -  -          add hl,bc
  297 D1:AB24 FD 21 98 AC 
              D1 -  -  -          ld  iy,FILETABLE
  298 D1:AB29 4E -  -  -          ld  c,(hl)
  299 D1:AB2A 23 -  -  -          inc hl
  300 D1:AB2B 46 -  -  -          ld  b,(hl)
  301 D1:AB2C 23 -  -  -          inc hl
  302 D1:AB2D 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  303 D1:AB31 FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  304 D1:AB34 E1 -  -  -      pop hl
  305 D1:AB35 3C -  -  -      inc a
  306 D1:AB36 3D -  -  -      dec a
  307 D1:AB37 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  308 D1:AB39 -  -  -  -      ;If more than one file, fill FILETABLE.
  309 D1:AB39 -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  310 D1:AB39 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  311 D1:AB3C 47 -  -  -      ld  b,a
  312 D1:AB3D -  -  -  -  loadROMFile_multiFileLoadLoop:
  313 D1:AB3D C5 -  -  -      push bc
  314 D1:AB3E FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  315 D1:AB41 01 10 00 00         ld  bc,16
  316 D1:AB45 11 25 AC D1         ld  de,loadROMFile_tempSigHash
  317 D1:AB49 ED B0 -  -          ldir
  318 D1:AB4B E5 -  -  -          push hl
  319 D1:AB4C FD E5 -  -              push iy
  320 D1:AB4E 01 17 00 00                 ld  bc,23
  321 D1:AB52 FD 21 1E AC 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  322 D1:AB57 CD 35 AC D1                 call vatTraverse    ;returns DE @ datasection size if found
  323 D1:AB5B 30 05 -  -                  jr  nc,+_
  324 D1:AB5D 21 94 AC D1                 ld  hl,missing_files
  325 D1:AB61 34 -  -  -                  inc (hl)
  326 D1:AB62 FD E1 -  -  _:          pop iy
  327 D1:AB64 EB -  -  -              ex  de,hl
  328 D1:AB65 5E -  -  -              ld  e,(hl)
  329 D1:AB66 23 -  -  -              inc hl
  330 D1:AB67 56 -  -  -              ld  d,(hl)
  331 D1:AB68 23 -  -  -              inc hl
  332 D1:AB69 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  333 D1:AB6D FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  334 D1:AB70 E1 -  -  -          pop hl
  335 D1:AB71 C1 -  -  -      pop bc
  336 D1:AB72 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  337 D1:AB75 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  338 D1:AB77 3A 94 AC D1     ld  a,(missing_files)
  339 D1:AB7B B7 -  -  -      or  a,a
  340 D1:AB7C C2 4D AA D1     jp  nz,err_missingFiles
  341 D1:AB80 -  -  -  -  loadROMFile_singleFileLoad:
  342 D1:AB80 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  343 D1:AB80 3A 04 34 D0     ld  a,(inputNumFiles)
  344 D1:AB84 3C -  -  -      inc a
  345 D1:AB85 47 -  -  -      ld  b,a
  346 D1:AB86 21 00 00 00     ld  hl,0
  347 D1:AB8A DD 21 98 AC 
              D1 -  -  -      ld  ix,FILETABLE
  348 D1:AB8F 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  349 D1:AB93 19 -  -  -      add hl,de
  350 D1:AB94 ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  351 D1:AB97 10 F6 -  -      djnz -_
  352 D1:AB99 01 F0 FF FF     ld  bc,-16
  353 D1:AB9D 09 -  -  -      add hl,bc   ;subtract INES header
  354 D1:AB9E 22 95 AC D1     ld  (total_rom_size),hl
  355 D1:ABA2 -  -  -  -      ;Verify that the file actually contains an INES header.
  356 D1:ABA2 -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  357 D1:ABA2 DD 27 00 -      ld  hl,(ix+0)
  358 D1:ABA5 11 B2 BA AC     ld  de,-$53454E         ;4E 45 53 == "NES"
  359 D1:ABA9 19 -  -  -      add hl,de
  360 D1:ABAA C2 E1 AA D1 _:  jp  nz,err_ROMHeaderDamaged
  361 D1:ABAE DD 7E 03 -      ld  a,(ix+3)
  362 D1:ABB1 FE 1A -  -      cp  a,$1A
  363 D1:ABB3 20 F5 -  -      jr  nz,-_   ;19
  364 D1:ABB5 -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  365 D1:ABB5 -  -  -  -      ;Note: The below line is optimized from...
  366 D1:ABB5 DD 2A 9A AC 
              D1 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  367 D1:ABBA -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  368 D1:ABBA -  -  -  -      ;these here just in case there's ever a question about it.
  369 D1:ABBA -  -  -  -  ;    ld  ix,FILETABLE
  370 D1:ABBA -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  371 D1:ABBA DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  372 D1:ABBD DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  373 D1:ABC0 26 00 -  -      ld  h,0
  374 D1:ABC2 54 -  -  -      ld  d,h
  375 D1:ABC3 DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  376 D1:ABC6 E6 0C -  -      and a,%00001100
  377 D1:ABC8 FE 08 -  -      cp  a,%00001000
  378 D1:ABCA 20 1B -  -      jr  nz,+_
  379 D1:ABCC DD 7E 09 -      ld  a,(ix+9)
  380 D1:ABCF 47 -  -  -      ld  b,a
  381 D1:ABD0 E6 0F -  -      and a,$0F
  382 D1:ABD2 FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  383 D1:ABD4 D2 93 AA D1     jp  nc,err_PRGROMTooLarge
  384 D1:ABD8 67 -  -  -      ld  h,a
  385 D1:ABD9 78 -  -  -      ld  a,b
  386 D1:ABDA E6 F0 -  -      and a,$F0
  387 D1:ABDC 07 -  -  -      rlca
  388 D1:ABDD 07 -  -  -      rlca
  389 D1:ABDE 07 -  -  -      rlca
  390 D1:ABDF 07 -  -  -      rlca
  391 D1:ABE0 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  392 D1:ABE2 D2 AA AA D1     jp  nc,err_CHRROMTooLarge
  393 D1:ABE6 57 -  -  -      ld  d,a
  394 D1:ABE7 AF -  -  -  _:  xor a,a
  395 D1:ABE8 32 98 AC D1     ld  (prg_rom_size),a
  396 D1:ABEC 32 9B AC D1     ld  (chr_rom_size),a
  397 D1:ABF0 29 -  -  -      add hl,hl   ;x2
  398 D1:ABF1 29 -  -  -      add hl,hl   ;x4
  399 D1:ABF2 29 -  -  -      add hl,hl   ;x8
  400 D1:ABF3 29 -  -  -      add hl,hl   ;x16
  401 D1:ABF4 29 -  -  -      add hl,hl   ;x32
  402 D1:ABF5 29 -  -  -      add hl,hl   ;x64
  403 D1:ABF6 52 22 99 AC 
              D1 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  404 D1:ABFB EB -  -  -      ex  de,hl
  405 D1:ABFC 29 -  -  -      add hl,hl   ;x2
  406 D1:ABFD 29 -  -  -      add hl,hl   ;x4
  407 D1:ABFE 29 -  -  -      add hl,hl   ;x8
  408 D1:ABFF 29 -  -  -      add hl,hl   ;x16
  409 D1:AC00 29 -  -  -      add hl,hl   ;x32
  410 D1:AC01 52 22 9C AC 
              D1 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  411 D1:AC06 2A 9B AC D1     ld  hl,(chr_rom_size)
  412 D1:AC0A ED 5B 98 AC 
              D1 -  -  -      ld  de,(prg_rom_size)
  413 D1:AC0F 19 -  -  -      add hl,de
  414 D1:AC10 ED 5B 95 AC 
              D1 -  -  -      ld  de,(total_rom_size)
  415 D1:AC15 B7 -  -  -      or  a,a
  416 D1:AC16 ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  417 D1:AC18 28 04 -  -      jr  z,+_
  418 D1:AC1A D2 C1 AA D1     jp  nc,err_missingROMDetected
  419 D1:AC1E -  -  -  -  _:      
  420 D1:AC1E -  -  -  -  
  421 D1:AC1E -  -  -  -  
  422 D1:AC1E -  -  -  -  
  423 D1:AC1E -  -  -  -      
  424 D1:AC1E -  -  -  -  
  425 D1:AC1E -  -  -  -  
  426 D1:AC1E -  -  -  -  
  427 D1:AC1E -  -  -  -  
  428 D1:AC1E -  -  -  -  
  429 D1:AC1E -  -  -  -  
  430 D1:AC1E -  -  -  -  
  431 D1:AC1E -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  432 D1:AC1E 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  433 D1:AC25 -  -  -  -  loadROMFile_tempSigHash:
  434 D1:AC25 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  435 D1:AC35 -  -  -  -  
  436 D1:AC35 -  -  -  -  
  437 D1:AC35 -  -  -  -  ;Input: IY = locationOfSignature. 
  438 D1:AC35 -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  439 D1:AC35 -  -  -  -  ;Output: carry=1: Variable not found.
  440 D1:AC35 -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  441 D1:AC35 -  -  -  -  ;        IX=location of current variable's VAT location.
  442 D1:AC35 -  -  -  -  ;Destroys: All registers not in use.
  443 D1:AC35 -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  444 D1:AC35 -  -  -  -  
  445 D1:AC35 -  -  -  -  ;To continue searching:
  446 D1:AC35 -  -  -  -  ;call vatTraverse_continue with the following inputs:
  447 D1:AC35 -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  448 D1:AC35 -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  449 D1:AC35 -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  450 D1:AC35 -  -  -  -  vatTraverse:
  451 D1:AC35 -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  452 D1:AC35 DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  453 D1:AC3A -  -  -  -  vatTraverse_loop:
  454 D1:AC3A 2A 9A 25 D0     ld  hl,(pTemp)
  455 D1:AC3E ED 12 00 -      lea de,ix+0
  456 D1:AC41 B7 -  -  -      or  a,a
  457 D1:AC42 ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  458 D1:AC44 3F -  -  -      ccf
  459 D1:AC45 D8 -  -  -      ret c
  460 D1:AC46 1A -  -  -      ld  a,(de)
  461 D1:AC47 E6 1F -  -      and a,$1F
  462 D1:AC49 FE 15 -  -      cp  a,AppVarObj
  463 D1:AC4B 20 34 -  -      jr  nz,vatTraverse_skip
  464 D1:AC4D DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  465 D1:AC50 DD 5E FD -      ld  e,(ix-3)
  466 D1:AC53 DD 56 FC -      ld  d,(ix-4)
  467 D1:AC56 CD 98 1F 02     call _ChkInRam
  468 D1:AC5A EB -  -  -      ex  de,hl
  469 D1:AC5B 30 08 -  -      jr  nc,+_
  470 D1:AC5D 11 09 00 00     ld  de,9
  471 D1:AC61 19 -  -  -      add hl,de
  472 D1:AC62 5E -  -  -      ld  e,(hl)
  473 D1:AC63 19 -  -  -      add hl,de
  474 D1:AC64 23 -  -  -      inc hl
  475 D1:AC65 5E -  -  -  _:  ld  e,(hl)
  476 D1:AC66 23 -  -  -      inc hl
  477 D1:AC67 56 -  -  -      ld  d,(hl)
  478 D1:AC68 23 -  -  -      inc hl
  479 D1:AC69 EB -  -  -      ex  de,hl
  480 D1:AC6A B7 -  -  -      or  a,a
  481 D1:AC6B ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  482 D1:AC6D 38 12 -  -      jr  c,vatTraverse_skip
  483 D1:AC6F ED 23 00 -      lea hl,iy+0
  484 D1:AC72 C5 -  -  -      push bc
  485 D1:AC73 1A -  -  -  _:      ld  a,(de)
  486 D1:AC74 13 -  -  -          inc de
  487 D1:AC75 ED A1 -  -          cpi
  488 D1:AC77 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  489 D1:AC79 EA 73 AC D1         jp  pe,-_
  490 D1:AC7D C1 -  -  -      pop bc
  491 D1:AC7E B7 -  -  -      or  a,a
  492 D1:AC7F C9 -  -  -      ret         ;NC. DE = past the signature.
  493 D1:AC80 -  -  -  -  vatTraverse_sigNoMatch:
  494 D1:AC80 C1 -  -  -      pop bc
  495 D1:AC81 -  -  -  -  vatTraverse_continue:
  496 D1:AC81 -  -  -  -  vatTraverse_skip:
  497 D1:AC81 3E 07 -  -      ld  a,7
  498 D1:AC83 11 FF FF FF     ld  de,-1
  499 D1:AC87 DD 86 FA -      add a,(ix-6)
  500 D1:AC8A ED 44 -  -      neg
  501 D1:AC8C 5F -  -  -      ld  e,a
  502 D1:AC8D DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  503 D1:AC8F 18 A9 -  -      jr  vatTraverse_loop
  504 D1:AC91 -  -  -  -  
  505 D1:AC91 -  -  -  -  
  506 D1:AC91 -  -  -  -  
  507 D1:AC91 -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:AC91 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:AC91 -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:AC91 -  -  -  -  
    3 D1:AC91 -  -  -  -  ;Various Parts Contributed by
    4 D1:AC91 -  -  -  -  ;- BrandonW
    5 D1:AC91 -  -  -  -  ;- calc84
    6 D1:AC91 -  -  -  -  ;- MateoConLechuga
    7 D1:AC91 -  -  -  -  ;- Runer112
    8 D1:AC91 -  -  -  -  ;- tr1p1ea
    9 D1:AC91 -  -  -  -  ;- Kerm Martian
   10 D1:AC91 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:AC91 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:AC91 -  -  -  -  ;
    6 D1:AC91 -  -  -  -  ;
    7 D1:AC91 -  -  -  -  ;
    8 D1:AC91 -  -  -  -  
    9 D1:AC91 -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:AC91 -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:AC91 -  -  -  -  
   12 D1:AC91 -  -  -  -  screenBuf1      .equ vRam
   13 D1:AC91 -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:AC91 -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:AC91 -  -  -  -  xPos                .equ $D031F6
   16 D1:AC91 -  -  -  -  yPos                .equ $D031F7
   17 D1:AC91 -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:AC91 -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:AC91 -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:AC91 -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:AC91 -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:AC91 -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:AC91 -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:AC91 -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:AC91 -  -  -  -  
   26 D1:AC91 -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:AC91 -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:AC91 -  -  -  -  
   29 D1:AC91 -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:AC91 -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:AC91 -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:AC91 -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:AC91 -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:AC91 -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:AC91 -  -  -  -  
   36 D1:AC91 -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:AC91 -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:AC91 -  -  -  -  
   39 D1:AC91 -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:AC91 -  -  -  -  ;
   41 D1:AC91 -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:AC91 -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:AC91 -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   44 D1:AC91 -  -  -  -  basefile_sig        .equ inputNumFile+1     ;3b pointer to 16b hash
   45 D1:AC91 -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   46 D1:AC91 -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   47 D1:AC91 -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   48 D1:AC91 -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   49 D1:AC91 -  -  -  -  
   50 D1:AC91 -  -  -  -  MAXPRGROM_HINIB     .equ 1
   51 D1:AC91 -  -  -  -  MAXCHRROM_HINIB     .equ 3
   52 D1:AC91 -  -  -  -  
   53 D1:AC91 -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   54 D1:AC91 -  -  -  -  FILETABLE_STRIDE    .equ 8
   55 D1:AC91 -  -  -  -  FILETABLE           .equ total_rom_size+3      ;(MAXNUMFILES*FILETABLE_STRIDE)b
   56 D1:AC91 -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   57 D1:AC91 -  -  -  -  FILE_ADR_OFFSET     .equ 2
   58 D1:AC91 -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   59 D1:AC91 -  -  -  -  
   60 D1:AC91 -  -  -  -  
   61 D1:AC91 -  -  -  -  
   62 D1:AC91 -  -  -  -  ;
   63 D1:AC91 -  -  -  -  ;
   64 D1:AC91 -  -  -  -  
   65 D1:AC91 -  -  -  -  
   66 D1:AC91 -  -  -  -  
   67 D1:AC91 -  -  -  -  
   68 D1:AC91 -  -  -  -  
   69 D1:AC91 -  -  -  -  #define REGA 0
   70 D1:AC91 -  -  -  -  #define REGX 1
   71 D1:AC91 -  -  -  -  #define REGY 2
   72 D1:AC91 -  -  -  -  #define REGSP 3
   73 D1:AC91 -  -  -  -  #define REGSR 4
   74 D1:AC91 -  -  -  -  #define REGPC 5
   75 D1:AC91 -  -  -  -  #define CYCLES_REMAIN ix+8
   76 D1:AC91 -  -  -  -  #define SF_NEG 7
   77 D1:AC91 -  -  -  -  #define SF_OVER 6 
   78 D1:AC91 -  -  -  -  #define SF_RESERVED 5 
   79 D1:AC91 -  -  -  -  #define SF_BRK 4
   80 D1:AC91 -  -  -  -  #define SF_DEC 3
   81 D1:AC91 -  -  -  -  #define SF_INT 2
   82 D1:AC91 -  -  -  -  #define SF_ZERO 1
   83 D1:AC91 -  -  -  -  #define SF_CARRY 0
   84 D1:AC91 -  -  -  -  
   85 D1:AC91 -  -  -  -  #macro ADDCYC(X)
   86 D1:AC91                 #if (x < 1)
   87 D1:AC91                     nop
   88 D1:AC91                 #elif (X = 1)
   89 D1:AC91                     inc iy
   90 D1:AC91                 #else
   91 D1:AC91                     lea iy,iy+X
   92 D1:AC91                 #endif
   93 D1:AC91             #endmacro
   94 D1:AC91 -  -  -  -  
   95 D1:AC91 -  -  -  -  ;
   96 D1:AC91 -  -  -  -  ;
   97 D1:AC91 -  -  -  -  ;
   98 D1:AC91 -  -  -  -  #endif
   99 D1:AC91 -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:AC91 -  -  -  -  
    4 D1:AC91 -  -  -  -  ;Function list:
    5 D1:AC91 -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:AC91 -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:AC91 -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:AC91 -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:AC91 -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:AC91 -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:AC91 -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:AC91 -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:AC91 -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:AC91 -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:AC91 -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:AC91 -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:AC91 -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:AC91 -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:AC91 -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into screen buffer address.
   20 D1:AC91 -  -  -  -  ;
   21 D1:AC91 -  -  -  -  ;
   22 D1:AC91 -  -  -  -  ;
   23 D1:AC91 -  -  -  -  ;
   24 D1:AC91 -  -  -  -  ;
   25 D1:AC91 -  -  -  -  ;
   26 D1:AC91 -  -  -  -  ;
   27 D1:AC91 -  -  -  -  
   28 D1:AC91 -  -  -  -  
   29 D1:AC91 -  -  -  -  
   30 D1:AC91 -  -  -  -  
   31 D1:AC91 -  -  -  -  ;-----------------------------------------------------------------------------
   32 D1:AC91 -  -  -  -  ;Screen hardware interface stuff
   33 D1:AC91 -  -  -  -  
   34 D1:AC91 -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   35 D1:AC91 -  -  -  -  fastCopy:
   36 D1:AC91 11 00 00 D4     ld  de,screenBuf1
   37 D1:AC95 2A 10 00 E3     ld  hl,(mpLcdBase)
   38 D1:AC99 22 00 34 D0     ld  (curScreenBuf),hl
   39 D1:AC9D B7 -  -  -      or  a,a
   40 D1:AC9E ED 52 -  -      sbc hl,de
   41 D1:ACA0 EB -  -  -      ex  de,hl
   42 D1:ACA1 20 04 -  -      jr  nz,+_
   43 D1:ACA3 21 00 2C D5     ld  hl,screenBuf2
   44 D1:ACA7 22 10 00 E3 _:  ld  (mpLcdBase),hl
   45 D1:ACAB C9 -  -  -      ret
   46 D1:ACAC -  -  -  -  
   47 D1:ACAC -  -  -  -  stopGfx:
   48 D1:ACAC CD 74 03 00     call _boot_ClearVRAM
   49 D1:ACB0 11 2D 09 00     ld  de,lcdNormalMode
   50 D1:ACB4 01 00 00 D4     ld  bc,screenBuf1
   51 D1:ACB8 18 0C -  -      jr  configureScreen
   52 D1:ACBA -  -  -  -  
   53 D1:ACBA -  -  -  -  startGfx:
   54 D1:ACBA CD 74 03 00     call _boot_ClearVRAM
   55 D1:ACBE 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   56 D1:ACC2 01 00 00 D4     ld  bc,screenBuf1
   57 D1:ACC6 -  -  -  -  configureScreen:
   58 D1:ACC6 21 10 00 E3     ld  hl,mpLcdBase
   59 D1:ACCA ED 0F -  -      ld  (hl),bc
   60 D1:ACCC 2E 18 -  -      ld  L,lcdCtrl
   61 D1:ACCE ED 1F -  -      ld  (hl),de
   62 D1:ACD0 2E 01 -  -      ld  L,lcdTiming0 + 1
   63 D1:ACD2 01 08 00 00     ld  bc,8
   64 D1:ACD6 11 05 AD D1     ld  de,screenSettings
   65 D1:ACDA 1A -  -  -  _:  ld  a,(de)
   66 D1:ACDB ED A0 -  -      ldi
   67 D1:ACDD 2B -  -  -      dec hl
   68 D1:ACDE 77 -  -  -      ld  (hl),a
   69 D1:ACDF 23 -  -  -      inc hl
   70 D1:ACE0 EA DA AC D1     jp  pe,-_
   71 D1:ACE4 21 00 2C D5     ld  hl,screenBuf2
   72 D1:ACE8 22 00 34 D0     ld  (curScreenBuf),hl
   73 D1:ACEC -  -  -  -  ;Also copied from graphx
   74 D1:ACEC -  -  -  -  setDefaultPalette:
   75 D1:ACEC 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   76 D1:ACF0 43 -  -  -  	ld	b,e			        ; b = 0
   77 D1:ACF1 78 -  -  -  _:	ld	a,b
   78 D1:ACF2 0F -  -  -  	rrca
   79 D1:ACF3 A8 -  -  -  	xor	a,b
   80 D1:ACF4 E6 E0 -  -  	and	a,224
   81 D1:ACF6 A8 -  -  -  	xor	a,b
   82 D1:ACF7 12 -  -  -  	ld	(de),a
   83 D1:ACF8 13 -  -  -  	inc	de
   84 D1:ACF9 78 -  -  -  	ld	a,b
   85 D1:ACFA 17 -  -  -  	rla
   86 D1:ACFB 17 -  -  -  	rla
   87 D1:ACFC 17 -  -  -  	rla
   88 D1:ACFD 78 -  -  -  	ld	a,b
   89 D1:ACFE 1F -  -  -  	rra
   90 D1:ACFF 12 -  -  -  	ld	(de),a
   91 D1:AD00 13 -  -  -  	inc	de
   92 D1:AD01 04 -  -  -  	inc	b
   93 D1:AD02 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   94 D1:AD04 C9 -  -  -  	ret
   95 D1:AD05 -  -  -  -  
   96 D1:AD05 -  -  -  -  screenSettings:
   97 D1:AD05 -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   98 D1:AD05 -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
   99 D1:AD05 07 -  -  -  	.db	7					; HSW
  100 D1:AD06 57 -  -  -  	.db	87					; HFP
  101 D1:AD07 3F -  -  -  	.db	63					; HBP
  102 D1:AD08 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  103 D1:AD0A B3 -  -  -  	.db	179					; VFP
  104 D1:AD0B 00 -  -  -  	.db	0					; VBP
  105 D1:AD0C 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  106 D1:AD0D -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  107 D1:AD0D -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  108 D1:AD0D -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  109 D1:AD0D -  -  -  -  ; Hz = 48000000/CC = 60
  110 D1:AD0D -  -  -  -  
  111 D1:AD0D -  -  -  -  
  112 D1:AD0D -  -  -  -  ;-----------------------------------------------------------------------------
  113 D1:AD0D -  -  -  -  ; Text Rendering
  114 D1:AD0D -  -  -  -  
  115 D1:AD0D -  -  -  -  clearTextBuf:
  116 D1:AD0D 21 00 50 D0     ld  hl,NAMETABLE1
  117 D1:AD11 11 01 50 D0     ld  de,NAMETABLE1+1
  118 D1:AD15 01 FF 03 00     ld  bc,1023
  119 D1:AD19 36 20 -  -      ld  (hl),' '
  120 D1:AD1B ED B0 -  -      ldir
  121 D1:AD1D C9 -  -  -      ret
  122 D1:AD1E -  -  -  -  
  123 D1:AD1E -  -  -  -  printTextBuf:
  124 D1:AD1E 2A F6 31 D0     ld  hl,(xPos)
  125 D1:AD22 22 52 AD D1     ld  (printTextBuf_smcPosRecovery),hl
  126 D1:AD26 21 00 50 D0     ld  hl,NAMETABLE1
  127 D1:AD2A AF -  -  -      xor a,a
  128 D1:AD2B 32 F7 31 D0     ld  (yPos),a
  129 D1:AD2F 0E 1E -  -      ld  c,30
  130 D1:AD31 3E 08 -  -  _:  ld  a,8
  131 D1:AD33 32 F6 31 D0     ld  (xPos),a
  132 D1:AD37 06 20 -  -      ld  b,$20
  133 D1:AD39 7E -  -  -  _:  ld  a,(hl)
  134 D1:AD3A 23 -  -  -      inc hl
  135 D1:AD3B C5 -  -  -      push bc
  136 D1:AD3C E5 -  -  -          push hl
  137 D1:AD3D CD 96 AD D1             call printBigFont
  138 D1:AD41 E1 -  -  -          pop hl
  139 D1:AD42 C1 -  -  -      pop bc
  140 D1:AD43 10 F4 -  -      djnz -_
  141 D1:AD45 3A F7 31 D0     ld  a,(yPos)
  142 D1:AD49 3C -  -  -      inc a
  143 D1:AD4A 32 F7 31 D0     ld  (yPos),a
  144 D1:AD4E 0D -  -  -      dec  c
  145 D1:AD4F 20 E0 -  -      jr  nz,--_
  146 D1:AD51 -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  147 D1:AD51 21 00 00 00     ld  hl,0
  148 D1:AD55 22 F6 31 D0     ld  (xPos),hl
  149 D1:AD59 C9 -  -  -      ret
  150 D1:AD5A -  -  -  -  
  151 D1:AD5A -  -  -  -  ;A=column to start on
  152 D1:AD5A -  -  -  -  setLineStart:
  153 D1:AD5A 32 F6 31 D0     ld  (xPos),a
  154 D1:AD5E 32 03 34 D0     ld  (linestart),a
  155 D1:AD62 C9 -  -  -      ret
  156 D1:AD63 -  -  -  -  
  157 D1:AD63 -  -  -  -  ;A=row to start on
  158 D1:AD63 -  -  -  -  setCurLine:
  159 D1:AD63 32 F7 31 D0     ld  (yPos),a
  160 D1:AD67 C9 -  -  -      ret
  161 D1:AD68 -  -  -  -  
  162 D1:AD68 -  -  -  -  newPage:
  163 D1:AD68 3E FF -  -      ld  a,$FF
  164 D1:AD6A 32 F7 31 D0     ld  (yPos),a
  165 D1:AD6E -  -  -  -  newLine:
  166 D1:AD6E 3A 03 34 D0     ld  a,(linestart)
  167 D1:AD72 32 F6 31 D0     ld  (xPos),a
  168 D1:AD76 3A F7 31 D0     ld  a,(yPos)
  169 D1:AD7A 3C -  -  -      inc a
  170 D1:AD7B 32 F7 31 D0     ld  (yPos),a
  171 D1:AD7F C9 -  -  -      ret
  172 D1:AD80 -  -  -  -  
  173 D1:AD80 -  -  -  -      
  174 D1:AD80 -  -  -  -      
  175 D1:AD80 -  -  -  -  
  176 D1:AD80 -  -  -  -  ;HL=address to string
  177 D1:AD80 -  -  -  -  printString:
  178 D1:AD80 7E -  -  -      ld  a,(hl)
  179 D1:AD81 23 -  -  -      inc hl
  180 D1:AD82 B7 -  -  -      or  a,a
  181 D1:AD83 C8 -  -  -      ret z
  182 D1:AD84 FE 0A -  -      cp  a,'\n'
  183 D1:AD86 20 06 -  -      jr nz,+_
  184 D1:AD88 CD 6E AD D1     call newLine
  185 D1:AD8C 18 F2 -  -      jr  printString
  186 D1:AD8E E5 -  -  -  _:  push hl
  187 D1:AD8F CD 96 AD D1         call printBigFont
  188 D1:AD93 E1 -  -  -      pop hl
  189 D1:AD94 18 EA -  -      jr printString
  190 D1:AD96 -  -  -  -  
  191 D1:AD96 -  -  -  -  
  192 D1:AD96 -  -  -  -  ;in: A=chrToPrint
  193 D1:AD96 -  -  -  -  printBigFont:
  194 D1:AD96 CD 2B AE D1     call calculateScreenPtr
  195 D1:AD9A EB -  -  -      ex  de,hl
  196 D1:AD9B 6F -  -  -      ld  L,a
  197 D1:AD9C 26 08 -  -      ld  H,8
  198 D1:AD9E ED 6C -  -      mlt hl
  199 D1:ADA0 01 45 AD D1     ld  bc,graphx_textdata
  200 D1:ADA4 09 -  -  -      add hl,bc
  201 D1:ADA5 EB -  -  -      ex  de,hl
  202 D1:ADA6 0E 08 -  -      ld  c,8
  203 D1:ADA8 06 08 -  -  _:  ld  b,8
  204 D1:ADAA 1A -  -  -      ld  a,(de)
  205 D1:ADAB 87 -  -  -  _:  add a,a
  206 D1:ADAC -  -  -  -  fontBGColor_var .equ $+1
  207 D1:ADAC 36 00 -  -      ld  (hl),FONTBGCOLOR
  208 D1:ADAE 30 02 -  -      jr  nc,$+4
  209 D1:ADB0 -  -  -  -  fontFGColor_var .equ $+1
  210 D1:ADB0 36 FF -  -      ld  (hl),FONTFGCOLOR
  211 D1:ADB2 23 -  -  -      inc hl
  212 D1:ADB3 10 F6 -  -      djnz -_
  213 D1:ADB5 79 -  -  -      ld  a,c
  214 D1:ADB6 01 38 01 00     ld  bc,320-8
  215 D1:ADBA 09 -  -  -      add hl,bc
  216 D1:ADBB 4F -  -  -      ld  c,a
  217 D1:ADBC 13 -  -  -      inc de
  218 D1:ADBD 0D -  -  -      dec c
  219 D1:ADBE 20 E8 -  -      jr  nz,--_
  220 D1:ADC0 21 F6 31 D0     ld  hl,xPos
  221 D1:ADC4 34 -  -  -      inc (hl)
  222 D1:ADC5 C9 -  -  -      ret
  223 D1:ADC6 -  -  -  -  
  224 D1:ADC6 -  -  -  -  ;A= 0-255 numeric value to display as hex
  225 D1:ADC6 -  -  -  -  printSmallNumPair:
  226 D1:ADC6 CD 2B AE D1     call calculateScreenPtr
  227 D1:ADCA F5 -  -  -      push af
  228 D1:ADCB 1F -  -  -          rra
  229 D1:ADCC 1F -  -  -          rra
  230 D1:ADCD 1F -  -  -          rra
  231 D1:ADCE 1F -  -  -          rra
  232 D1:ADCF CD DE AD D1         call +_
  233 D1:ADD3 F1 -  -  -      pop af
  234 D1:ADD4 CD DE AD D1     call +_
  235 D1:ADD8 21 F6 31 D0     ld  hl,xPos
  236 D1:ADDC 34 -  -  -      inc (hl)
  237 D1:ADDD C9 -  -  -      ret
  238 D1:ADDE E6 0F -  -  _:  and a,$0F
  239 D1:ADE0 01 40 01 00     ld  bc,320
  240 D1:ADE4 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  241 D1:ADE5 EB -  -  -      ex  de,hl
  242 D1:ADE6 6F -  -  -      ld  L,a
  243 D1:ADE7 26 03 -  -      ld  H,3
  244 D1:ADE9 ED 6C -  -      mlt hl
  245 D1:ADEB 01 45 B1 D1     ld  bc,SmallHexFont
  246 D1:ADEF 09 -  -  -      add hl,bc
  247 D1:ADF0 EB -  -  -      ex  de,hl
  248 D1:ADF1 0E 03 -  -      ld  c,3
  249 D1:ADF3 18 14 -  -      jr  printSmallNumPair_2ndHalf
  250 D1:ADF5 -  -  -  -  printSmallNumPair_1stHalf:
  251 D1:ADF5 1A -  -  -      ld  a,(de)
  252 D1:ADF6 06 04 -  -      ld  b,4
  253 D1:ADF8 87 -  -  -  _:  add a,a
  254 D1:ADF9 36 00 -  -      ld  (hl),FONTBGCOLOR
  255 D1:ADFB 30 02 -  -      jr  nc,$+4
  256 D1:ADFD 36 FF -  -      ld  (hl),FONTFGCOLOR
  257 D1:ADFF 23 -  -  -      inc hl
  258 D1:AE00 10 F6 -  -      djnz -_
  259 D1:AE02 79 -  -  -      ld  a,c
  260 D1:AE03 01 3C 01 00     ld  bc,320-4
  261 D1:AE07 09 -  -  -      add hl,bc
  262 D1:AE08 4F -  -  -      ld  c,a
  263 D1:AE09 -  -  -  -  printSmallNumPair_2ndHalf:
  264 D1:AE09 1A -  -  -      ld  a,(de)
  265 D1:AE0A 07 -  -  -      rlca
  266 D1:AE0B 07 -  -  -      rlca
  267 D1:AE0C 07 -  -  -      rlca
  268 D1:AE0D 07 -  -  -      rlca
  269 D1:AE0E 06 04 -  -      ld  b,4
  270 D1:AE10 87 -  -  -  _:  add a,a
  271 D1:AE11 36 00 -  -      ld  (hl),FONTBGCOLOR
  272 D1:AE13 30 02 -  -      jr  nc,$+4
  273 D1:AE15 36 FF -  -      ld  (hl),FONTFGCOLOR
  274 D1:AE17 23 -  -  -      inc hl
  275 D1:AE18 10 F6 -  -      djnz -_
  276 D1:AE1A 13 -  -  -      inc de
  277 D1:AE1B 79 -  -  -      ld  a,c
  278 D1:AE1C 01 3C 01 00     ld  bc,320-4
  279 D1:AE20 09 -  -  -      add hl,bc
  280 D1:AE21 4F -  -  -      ld  c,a
  281 D1:AE22 0D -  -  -      dec c
  282 D1:AE23 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  283 D1:AE25 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  284 D1:AE29 09 -  -  -      add hl,bc
  285 D1:AE2A C9 -  -  -      ret
  286 D1:AE2B -  -  -  -  
  287 D1:AE2B -  -  -  -  calculateScreenPtr:
  288 D1:AE2B -  -  -  -      ;xcoord: x * 8 
  289 D1:AE2B -  -  -  -      ;ycoord: 320 * 8 * y
  290 D1:AE2B -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  291 D1:AE2B ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  292 D1:AE30 6A -  -  -      ld  L,d     ;yPos
  293 D1:AE31 26 A0 -  -      ld  h,160
  294 D1:AE33 ED 6C -  -      mlt hl
  295 D1:AE35 29 -  -  -      add hl,hl
  296 D1:AE36 16 01 -  -      ld  d,1
  297 D1:AE38 ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  298 D1:AE3A 19 -  -  -      add hl,de
  299 D1:AE3B 29 -  -  -      add hl,hl
  300 D1:AE3C 29 -  -  -      add hl,hl
  301 D1:AE3D 29 -  -  -      add hl,hl
  302 D1:AE3E ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  303 D1:AE43 19 -  -  -      add hl,de
  304 D1:AE44 C9 -  -  -      ret
  305 D1:AE45 -  -  -  -  
  306 D1:AE45 -  -  -  -  
  307 D1:AE45 -  -  -  -  
  308 D1:AE45 -  -  -  -  
  309 D1:AE45 -  -  -  -  
  310 D1:AE45 -  -  -  -  
  311 D1:AE45 -  -  -  -  
  312 D1:AE45 -  -  -  -  
  313 D1:AE45 -  -  -  -  
  314 D1:AE45 -  -  -  -  ;-----------------------------------------------------------------------------
  315 D1:AE45 -  -  -  -  ; Data Section
  316 D1:AE45 -  -  -  -  
  317 D1:AE45 -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  318 D1:AE45 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  319 D1:AE4D C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  320 D1:AE55 D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  321 D1:AE5D 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  322 D1:AE65 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  323 D1:AE6D 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  324 D1:AE75 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  325 D1:AE7D 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  326 D1:AE85 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  327 D1:AE8D C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  328 D1:AE95 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  329 D1:AE9D 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  330 D1:AEA5 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  331 D1:AEAD 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  332 D1:AEB5 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  333 D1:AEBD 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  334 D1:AEC5 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  335 D1:AECD 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  336 D1:AED5 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  337 D1:AEDD FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  338 D1:AEE5 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  339 D1:AEED FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  340 D1:AEF5 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  341 D1:AEFD FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  342 D1:AF05 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  343 D1:AF0D 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  344 D1:AF15 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  345 D1:AF1D 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  346 D1:AF25 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  347 D1:AF2D 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  348 D1:AF35 C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  349 D1:AF3D 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  350 D1:AF45 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  351 D1:AF4D 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  352 D1:AF55 FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  353 D1:AF5D 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  354 D1:AF65 F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  355 D1:AF6D FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  356 D1:AF75 FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  357 D1:AF7D 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  358 D1:AF85 C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  359 D1:AF8D 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  360 D1:AF95 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  361 D1:AF9D C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  362 D1:AFA5 C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  363 D1:AFAD C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  364 D1:AFB5 C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  365 D1:AFBD 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  366 D1:AFC5 FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  367 D1:AFCD 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  368 D1:AFD5 FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  369 D1:AFDD 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  370 D1:AFE5 FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  371 D1:AFED C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  372 D1:AFF5 C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  373 D1:AFFD C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  374 D1:B005 C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  375 D1:B00D C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  376 D1:B015 FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  377 D1:B01D F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  378 D1:B025 C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  379 D1:B02D F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  380 D1:B035 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  381 D1:B03D 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  382 D1:B045 C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  383 D1:B04D 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  384 D1:B055 C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  385 D1:B05D 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  386 D1:B065 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  387 D1:B06D 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  388 D1:B075 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  389 D1:B07D 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  390 D1:B085 C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  391 D1:B08D 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  392 D1:B095 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  393 D1:B09D C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  394 D1:B0A5 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  395 D1:B0AD 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  396 D1:B0B5 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  397 D1:B0BD 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  398 D1:B0C5 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  399 D1:B0CD 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  400 D1:B0D5 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  401 D1:B0DD 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  402 D1:B0E5 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  403 D1:B0ED 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  404 D1:B0F5 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  405 D1:B0FD 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  406 D1:B105 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  407 D1:B10D 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  408 D1:B115 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  409 D1:B11D 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  410 D1:B125 C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  411 D1:B12D E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  412 D1:B135 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  413 D1:B13D 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  414 D1:B145 -  -  -  -  
  415 D1:B145 -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  416 D1:B145 -  -  -  -  ;whose format was copied from a (then-)authorized source
  417 D1:B145 -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  418 D1:B145 -  -  -  -  SmallHexFont:
  419 D1:B145 4E AA AE -  .db $4E,$AA,$AE				;zero
  420 D1:B148 44 C4 4E -  .db $44,$C4,$4E				;one
  421 D1:B14B 4C 24 8E -  .db $4C,$24,$8E				;two
  422 D1:B14E 4C 24 2C -  .db $4C,$24,$2C				;three
  423 D1:B151 48 AE 22 -  .db $48,$AE,$22				;four
  424 D1:B154 4E 8C 2C -  .db $4E,$8C,$2C				;five
  425 D1:B157 45 8E AE -  .db $45,$8E,$AE				;six
  426 D1:B15A 4E 24 88 -  .db $4E,$24,$88				;seven
  427 D1:B15D 4E AE AE -  .db $4E,$AE,$AE				;eight
  428 D1:B160 4E AE 2C -  .db $4E,$AE,$2C				;nine
  429 D1:B163 44 AE AA -  .db $44,$AE,$AA				;A
  430 D1:B166 4C AC AC -  .db $4C,$AC,$AC				;B
  431 D1:B169 46 88 86 -  .db $46,$88,$86				;C
  432 D1:B16C 4C AA AC -  .db $4C,$AA,$AC				;D
  433 D1:B16F 4E 8C 8E -  .db $4E,$8C,$8E				;E
  434 D1:B172 4E 8C 88 -  .db $4E,$8C,$88				;F
  435 D1:B175 -  -  -  -  
  436 D1:B175 -  -  -  -  
  437 D1:B175 -  -  -  -  
Listing for file "main.z80"
  508 D1:B175 -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B175 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B175 -  -  -  -  
    3 D1:B175 -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B175 -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B175 -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B175 -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B175 -  -  -  -  ;
    8 D1:B175 -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B175 -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B175 -  -  -  -  ;
   11 D1:B175 -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B175 -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B175 -  -  -  -  ;
   14 D1:B175 -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B175 -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B175 -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B175 -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B175 -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B175 -  -  -  -  
   20 D1:B175 -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B175 -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+5 \ set SF_OVER,b
   22 D1:B175 -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B175 -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B175 -  -  -  -  
   25 D1:B175 -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ add a,a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B175 -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B175 -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B175 -  -  -  -  
   29 D1:B175 -  -  -  -  
   30 D1:B175 -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B175 -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B175 -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B175 -  -  -  -  
   34 D1:B175 -  -  -  -  
   35 D1:B175 -  -  -  -  
   36 D1:B175 -  -  -  -  
   37 D1:B175 -  -  -  -  ;=============================================================================
   38 D1:B175 -  -  -  -  ;=============================================================================
   39 D1:B175 -  -  -  -  ;=============================================================================
   40 D1:B175 -  -  -  -  ;=============================================================================
   41 D1:B175 -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B175 -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B175 -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B175 -  -  -  -  i6502Init:
   45 D1:B175 -  -  -  -      ;
   46 D1:B175 -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B175 -  -  -  -      ;
   48 D1:B175 21 00 38 D0     ld  hl,main_ram
   49 D1:B179 01 08 20 00     ld  bc,$002008
   50 D1:B17D 1E 00 -  -      ld  e,$00
   51 D1:B17F CD CB B3 D1     call i6502_map_pages
   52 D1:B183 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B187 01 01 20 00     ld  bc,$002001
   54 D1:B18B 1E 20 -  -      ld  e,$20
   55 D1:B18D CD CB B3 D1     call i6502_map_pages
   56 D1:B191 FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B196 DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:B19B ED 22 80 -      lea hl,ix-128
   59 D1:B19E ED 12 81 -      lea de,ix-127
   60 D1:B1A1 01 FF 00 00     ld  bc,255
   61 D1:B1A5 36 00 -  -      ld  (hl),$00
   62 D1:B1A7 ED B0 -  -      ldir
   63 D1:B1A9 CD B2 B3 D1     call i6502_load_instruction_set
   64 D1:B1AD -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:B1AD 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:B1B1 ED 27 -  -      ld  hl,(hl)
   67 D1:B1B3 11 FC 00 00     ld  de,$0000FC
   68 D1:B1B7 19 -  -  -      add hl,de
   69 D1:B1B8 C3 F0 CA D1     jp inst6502_jsr
   70 D1:B1BC -  -  -  -  
   71 D1:B1BC -  -  -  -  i6502FirstLoad:
   72 D1:B1BC 52 DD 17 05     ld.s de,(ix+REGPC)
   73 D1:B1C0 7B -  -  -      ld  a,e
   74 D1:B1C1 1E 08 -  -      ld  e,BASETABLE_STRIDE
   75 D1:B1C3 ED 5C -  -      mlt de
   76 D1:B1C5 21 00 40 D0     ld  hl,PAGETABLE
   77 D1:B1C9 19 -  -  -      add hl,de
   78 D1:B1CA ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   79 D1:B1CC 16 00 -  -      ld  d,0
   80 D1:B1CE 5F -  -  -      ld  e,a
   81 D1:B1CF 19 -  -  -      add hl,de       ;resolve final address
   82 D1:B1D0 18 19 -  -      jr  i6502FinishLoad
   83 D1:B1D2 -  -  -  -  i6502NextLoad:
   84 D1:B1D2 23 -  -  -      inc hl
   85 D1:B1D3 1C -  -  -      inc e
   86 D1:B1D4 20 15 -  -      jr  nz,i6502FinishLoad
   87 D1:B1D6 DD 56 06 -      ld  d,(ix+REGPC+1)
   88 D1:B1D9 14 -  -  -      inc d
   89 D1:B1DA 52 DD 1F 05     ld.s (ix+REGPC),de
   90 D1:B1DE 1E 08 -  -      ld  e,BASETABLE_STRIDE
   91 D1:B1E0 ED 5C -  -      mlt de
   92 D1:B1E2 21 00 40 D0     ld  hl,PAGETABLE
   93 D1:B1E6 19 -  -  -      add hl,de
   94 D1:B1E7 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   95 D1:B1E9 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
   96 D1:B1EB -  -  -  -  i6502FinishLoad:
   97 D1:B1EB 7E -  -  -      ld  a,(hl)
   98 D1:B1EC 23 -  -  -      inc hl
   99 D1:B1ED 1C -  -  -      inc e
  100 D1:B1EE 20 15 -  -      jr  nz,i6502PrepNextPage
  101 D1:B1F0 DD 56 06 -      ld  d,(ix+REGPC+1)
  102 D1:B1F3 14 -  -  -      inc d
  103 D1:B1F4 52 DD 1F 05     ld.s (ix+REGPC),de
  104 D1:B1F8 1E 08 -  -      ld  e,BASETABLE_STRIDE
  105 D1:B1FA ED 5C -  -      mlt de
  106 D1:B1FC 21 00 40 D0     ld  hl,PAGETABLE
  107 D1:B200 19 -  -  -      add hl,de
  108 D1:B201 ED 27 -  -      ld  hl,(hl)
  109 D1:B203 1E 00 -  -      ld  e,0
  110 D1:B205 -  -  -  -  i6502PrepNextPage:
  111 D1:B205 E5 -  -  -      push hl
  112 D1:B206 67 -  -  -          ld  h,a
  113 D1:B207 2E 08 -  -          ld  l,BASETABLE_STRIDE
  114 D1:B209 ED 6C -  -          mlt hl
  115 D1:B20B 01 04 40 D0         ld  bc,JUMPTABLE
  116 D1:B20F 09 -  -  -          add hl,bc
  117 D1:B210 ED 27 -  -          ld  hl,(hl)     ;jumptable
  118 D1:B212 E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  119 D1:B213 C9 -  -  -      ret
  120 D1:B214 -  -  -  -  
  121 D1:B214 -  -  -  -  
  122 D1:B214 -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  123 D1:B214 -  -  -  -  ;   JP i6502FinishLoad
  124 D1:B214 -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  125 D1:B214 -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  126 D1:B214 -  -  -  -  ;   JP i6502NextLoad
  127 D1:B214 -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  128 D1:B214 -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  129 D1:B214 -  -  -  -  ;   JP i6502FinishLoad
  130 D1:B214 -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  131 D1:B214 -  -  -  -  
  132 D1:B214 -  -  -  -  
  133 D1:B214 -  -  -  -  ;-----------------------------------------------------------------------------    
  134 D1:B214 -  -  -  -  ;-----------------------------------------------------------------------------    
  135 D1:B214 -  -  -  -  
  136 D1:B214 -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  137 D1:B214 -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  138 D1:B214 -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  139 D1:B214 -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  140 D1:B214 -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  141 D1:B214 -  -  -  -  
  142 D1:B214 -  -  -  -  ;-----------------------------------------------------------------------------    
  143 D1:B214 -  -  -  -  ;-----------------------------------------------------------------------------    
  144 D1:B214 -  -  -  -  outline6502_imm:
  145 D1:B214 7E -  -  -      ld  a,(hl)  ;oper uses A
  146 D1:B215 -  -  -  -      ;oper
  147 D1:B215 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  148 D1:B228 ED 33 02 -      ADDCYC(2)
  149 D1:B22B C3 D2 B1 D1     jp i6502NextLoad
  150 D1:B22F -  -  -  -  
  151 D1:B22F -  -  -  -  outline6502_abs:
  152 D1:B22F 4E -  -  -      ld  c,(hl)
  153 D1:B230 23 -  -  -      inc hl
  154 D1:B231 1C -  -  -      inc e
  155 D1:B232 20 15 -  -      jr nz,+_
  156 D1:B234 DD 56 06 -      ld  d,(ix+REGPC+1)
  157 D1:B237 14 -  -  -      inc d
  158 D1:B238 52 DD 1F 05     ld.s (ix+REGPC),de
  159 D1:B23C 1E 08 -  -      ld  e,BASETABLE_STRIDE
  160 D1:B23E ED 5C -  -      mlt de
  161 D1:B240 21 00 40 D0     ld  hl,PAGETABLE
  162 D1:B244 19 -  -  -      add hl,de
  163 D1:B245 ED 27 -  -      ld  hl,(hl) ;
  164 D1:B247 1E 00 -  -      ld  e,0
  165 D1:B249 46 -  -  -  _:  ld  b,(hl)
  166 D1:B24A E5 -  -  -      push hl
  167 D1:B24B 50 -  -  -          ld  d,b
  168 D1:B24C 79 -  -  -          ld  a,c
  169 D1:B24D 0E 08 -  -          ld  c,BASETABLE_STRIDE
  170 D1:B24F ED 4C -  -          mlt bc
  171 D1:B251 21 00 40 D0         ld  hl,PAGETABLE
  172 D1:B255 09 -  -  -          add hl,bc
  173 D1:B256 ED 27 -  -          ld  hl,(hl)
  174 D1:B258 06 00 -  -          ld  b,0
  175 D1:B25A 4F -  -  -          ld  c,a
  176 D1:B25B 09 -  -  -          add hl,bc   ;full address
  177 D1:B25C -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  178 D1:B25C 7E -  -  -          ld  a,(hl)  ;oper uses A
  179 D1:B25D -  -  -  -          ;oper
  180 D1:B25D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  181 D1:B270 ED 33 03 -      ADDCYC(3)
  182 D1:B273 E1 -  -  -      pop hl
  183 D1:B274 C3 D2 B1 D1     jp i6502NextLoad
  184 D1:B278 -  -  -  -  
  185 D1:B278 -  -  -  -  outline6502_zeropage:
  186 D1:B278 7E -  -  -      ld  a,(hl)
  187 D1:B279 01 00 38 D0     ld  bc,ZEROPAGE
  188 D1:B27D 81 -  -  -      add a,c
  189 D1:B27E 4F -  -  -      ld  c,a
  190 D1:B27F 0A -  -  -      ld  a,(bc)      ;oper uses A
  191 D1:B280 -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  192 D1:B280 -  -  -  -      ;oper
  193 D1:B280 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  194 D1:B293 ED 33 03 -      ADDCYC(3)
  195 D1:B296 C3 D2 B1 D1     jp i6502NextLoad
  196 D1:B29A -  -  -  -  
  197 D1:B29A -  -  -  -  
  198 D1:B29A -  -  -  -  ;Note: has same split start as abs
  199 D1:B29A -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  200 D1:B29A 4E -  -  -      ld  c,(hl)
  201 D1:B29B 23 -  -  -      inc hl
  202 D1:B29C 1C -  -  -      inc e
  203 D1:B29D 20 15 -  -      jr nz,+_
  204 D1:B29F DD 56 06 -      ld  d,(ix+REGPC+1)
  205 D1:B2A2 14 -  -  -      inc d
  206 D1:B2A3 52 DD 1F 05     ld.s (ix+REGPC),de
  207 D1:B2A7 1E 08 -  -      ld  e,BASETABLE_STRIDE
  208 D1:B2A9 ED 5C -  -      mlt de
  209 D1:B2AB 21 00 40 D0     ld  hl,PAGETABLE
  210 D1:B2AF 19 -  -  -      add hl,de
  211 D1:B2B0 ED 27 -  -      ld  hl,(hl) ;
  212 D1:B2B2 1E 00 -  -      ld  e,0
  213 D1:B2B4 46 -  -  -  _:  ld  b,(hl)
  214 D1:B2B5 E5 -  -  -      push hl
  215 D1:B2B6 50 -  -  -          ld  d,b
  216 D1:B2B7 79 -  -  -          ld  a,c
  217 D1:B2B8 0E 08 -  -          ld  c,BASETABLE_STRIDE
  218 D1:B2BA ED 4C -  -          mlt bc
  219 D1:B2BC 21 00 40 D0         ld  hl,PAGETABLE
  220 D1:B2C0 09 -  -  -          add hl,bc
  221 D1:B2C1 ED 27 -  -          ld  hl,(hl)
  222 D1:B2C3 06 00 -  -          ld  b,0
  223 D1:B2C5 4F -  -  -          ld  c,a
  224 D1:B2C6 DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  225 D1:B2C9 81 -  -  -          add a,c
  226 D1:B2CA 30 04 -  -          jr  nc,+_
  227 D1:B2CC 04 -  -  -          inc b
  228 D1:B2CD 14 -  -  -          inc d
  229 D1:B2CE FD 23 -  -          ADDCYC(1)
  230 D1:B2D0 -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  231 D1:B2D0 09 -  -  -          add hl,bc   ;full address
  232 D1:B2D1 7E -  -  -          ld  a,(hl)  ;oper uses A
  233 D1:B2D2 -  -  -  -          ;oper
  234 D1:B2D2 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  235 D1:B2E5 ED 33 04 -      ADDCYC(4)
  236 D1:B2E8 E1 -  -  -      pop hl
  237 D1:B2E9 C3 D2 B1 D1     jp i6502NextLoad
  238 D1:B2ED -  -  -  -  
  239 D1:B2ED -  -  -  -  
  240 D1:B2ED -  -  -  -  outline6502_zpx:
  241 D1:B2ED 7E -  -  -      ld  a,(hl)
  242 D1:B2EE 01 00 38 D0     ld  bc,ZEROPAGE
  243 D1:B2F2 81 -  -  -      add a,c
  244 D1:B2F3 DD 86 01 -      add a,(ix+REGX)
  245 D1:B2F6 4F -  -  -      ld  c,a
  246 D1:B2F7 0A -  -  -      ld  a,(bc)      ;oper uses A
  247 D1:B2F8 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  248 D1:B2F8 -  -  -  -      ;oper
  249 D1:B2F8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  250 D1:B30B ED 33 04 -      ADDCYC(4)
  251 D1:B30E C3 D2 B1 D1     jp i6502NextLoad
  252 D1:B312 -  -  -  -      
  253 D1:B312 -  -  -  -  outline6502_zpy:
  254 D1:B312 7E -  -  -      ld  a,(hl)
  255 D1:B313 01 00 38 D0     ld  bc,ZEROPAGE
  256 D1:B317 81 -  -  -      add a,c
  257 D1:B318 DD 86 02 -      add a,(ix+REGY)
  258 D1:B31B 4F -  -  -      ld  c,a
  259 D1:B31C 0A -  -  -      ld  a,(bc)      ;oper uses A
  260 D1:B31D -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  261 D1:B31D -  -  -  -      ;oper
  262 D1:B31D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  263 D1:B330 ED 33 04 -      ADDCYC(4)
  264 D1:B333 C3 D2 B1 D1     jp i6502NextLoad
  265 D1:B337 -  -  -  -  
  266 D1:B337 -  -  -  -  outline6502_preidx_indir:
  267 D1:B337 E5 -  -  -      push hl
  268 D1:B338 7E -  -  -          ld  a,(hl)
  269 D1:B339 21 00 38 D0         ld  hl,ZEROPAGE
  270 D1:B33D 85 -  -  -          add a,L
  271 D1:B33E DD 86 01 -          add a,(ix+REGX)
  272 D1:B341 6F -  -  -          ld  L,a
  273 D1:B342 7E -  -  -          ld  a,(hl)
  274 D1:B343 2C -  -  -          inc L
  275 D1:B344 56 -  -  -          ld  d,(hl)
  276 D1:B345 42 -  -  -          ld  b,d
  277 D1:B346 0E 08 -  -          ld  c,BASETABLE_STRIDE
  278 D1:B348 ED 4C -  -          mlt bc
  279 D1:B34A 21 00 40 D0         ld  hl,PAGETABLE
  280 D1:B34E 09 -  -  -          add hl,bc
  281 D1:B34F ED 27 -  -          ld  hl,(hl)
  282 D1:B351 06 00 -  -          ld  b,0
  283 D1:B353 4F -  -  -          ld  c,a
  284 D1:B354 09 -  -  -          add hl,bc
  285 D1:B355 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  286 D1:B355 7E -  -  -          ld  a,(hl)  ;oper uses A.
  287 D1:B356 -  -  -  -          ;oper
  288 D1:B356 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  289 D1:B369 ED 33 06 -          ADDCYC(6)
  290 D1:B36C E1 -  -  -      pop hl
  291 D1:B36D C3 D2 B1 D1     jp i6502NextLoad
  292 D1:B371 -  -  -  -  
  293 D1:B371 -  -  -  -  outline6502_postidx_indir:
  294 D1:B371 E5 -  -  -      push hl
  295 D1:B372 7E -  -  -          ld  a,(hl)
  296 D1:B373 21 00 38 D0         ld  hl,ZEROPAGE
  297 D1:B377 85 -  -  -          add a,L
  298 D1:B378 6F -  -  -          ld  L,a
  299 D1:B379 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  300 D1:B37A 2C -  -  -          inc L
  301 D1:B37B DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  302 D1:B37E 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  303 D1:B37F 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  304 D1:B381 FD 23 -  -          ADDCYC(1)
  305 D1:B383 24 -  -  -          inc h
  306 D1:B384 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  307 D1:B385 2E 08 -  -          ld  L,BASETABLE_STRIDE
  308 D1:B387 ED 6C -  -          mlt hl          ;23.
  309 D1:B389 01 00 40 D0         ld  bc,PAGETABLE
  310 D1:B38D 09 -  -  -          add hl,bc
  311 D1:B38E ED 27 -  -          ld  hl,(hl)     ;address get.
  312 D1:B390 01 00 00 00         ld  bc,0
  313 D1:B394 4F -  -  -          ld  c,a
  314 D1:B395 09 -  -  -          add hl,bc       ;Full address get.
  315 D1:B396 7E -  -  -          ld  a,(hl)
  316 D1:B397 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  317 D1:B397 -  -  -  -          ;oper
  318 D1:B397 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  319 D1:B3AA ED 33 05 -          ADDCYC(5)
  320 D1:B3AD E1 -  -  -      pop hl
  321 D1:B3AE C3 D2 B1 D1     jp i6502NextLoad
  322 D1:B3B2 -  -  -  -  
  323 D1:B3B2 -  -  -  -  ;-----------------------------------------------------------------------------
  324 D1:B3B2 -  -  -  -  ;-----------------------------------------------------------------------------
  325 D1:B3B2 -  -  -  -  ;-----------------------------------------------------------------------------
  326 D1:B3B2 -  -  -  -  
  327 D1:B3B2 -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  328 D1:B3B2 -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  329 D1:B3B2 -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  330 D1:B3B2 -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  331 D1:B3B2 -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  332 D1:B3B2 -  -  -  -  
  333 D1:B3B2 -  -  -  -  ;-----------------------------------------------------------------------------
  334 D1:B3B2 -  -  -  -  
  335 D1:B3B2 -  -  -  -  i6502_load_instruction_set:
  336 D1:B3B2 DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  337 D1:B3B7 21 86 CB D1     ld  hl,inst6502_instruction_set
  338 D1:B3BB 06 00 -  -      ld  b,0
  339 D1:B3BD ED 17 -  -  _:  ld  de,(hl)
  340 D1:B3BF DD 1F 00 -      ld  (ix+0),de
  341 D1:B3C2 23 -  -  -      inc hl
  342 D1:B3C3 23 -  -  -      inc hl
  343 D1:B3C4 23 -  -  -      inc hl
  344 D1:B3C5 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  345 D1:B3C8 10 F3 -  -      djnz -_
  346 D1:B3CA C9 -  -  -      ret
  347 D1:B3CB -  -  -  -  
  348 D1:B3CB -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  349 D1:B3CB -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  350 D1:B3CB -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  351 D1:B3CB -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  352 D1:B3CB -  -  -  -  i6502_map_pages:
  353 D1:B3CB 16 08 -  -      ld  d,BASETABLE_STRIDE
  354 D1:B3CD ED 5C -  -      mlt de
  355 D1:B3CF DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  356 D1:B3D4 DD 19 -  -      add ix,de
  357 D1:B3D6 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  358 D1:B3D7 11 00 01 00     ld  de,256
  359 D1:B3DB E5 -  -  -      push hl
  360 D1:B3DC FD E1 -  -      pop iy
  361 D1:B3DE 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  362 D1:B3DF DD 2F 00 -  _:  ld  (ix+0),hl
  363 D1:B3E2 19 -  -  -      add hl,de                   ;next page z80
  364 D1:B3E3 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  365 D1:B3E6 3D -  -  -      dec a
  366 D1:B3E7 C8 -  -  -      ret z
  367 D1:B3E8 10 F5 -  -      djnz -_
  368 D1:B3EA ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  369 D1:B3ED 18 EF -  -      jr --_
  370 D1:B3EF -  -  -  -  
  371 D1:B3EF -  -  -  -  
  372 D1:B3EF -  -  -  -  subroutine6502_abs_split_start:
  373 D1:B3EF 4E -  -  -      ld  c,(hl)
  374 D1:B3F0 23 -  -  -      inc hl
  375 D1:B3F1 1C -  -  -      inc e
  376 D1:B3F2 20 15 -  -      jr nz,+_
  377 D1:B3F4 DD 56 06 -      ld  d,(ix+REGPC+1)
  378 D1:B3F7 14 -  -  -      inc d
  379 D1:B3F8 52 DD 1F 05     ld.s (ix+REGPC),de
  380 D1:B3FC 1E 08 -  -      ld  e,BASETABLE_STRIDE
  381 D1:B3FE ED 5C -  -      mlt de
  382 D1:B400 21 00 40 D0     ld  hl,PAGETABLE
  383 D1:B404 19 -  -  -      add hl,de
  384 D1:B405 ED 27 -  -      ld  hl,(hl) ;
  385 D1:B407 1E 00 -  -      ld  e,0
  386 D1:B409 46 -  -  -  _:  ld  b,(hl)
  387 D1:B40A C9 -  -  -      ret
  388 D1:B40B -  -  -  -  
  389 D1:B40B -  -  -  -  subroutine6502_adc_combined_end:
  390 D1:B40B DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  391 D1:B40E 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  392 D1:B40F DD 7E 00 -      ld  a,(ix+REGA)
  393 D1:B412 89 -  -  -      adc a,c
  394 D1:B413 DD 77 00 -      ld  (ix+REGA),a
  395 D1:B416 DD 46 04 CB 
              B0 E2 20 B4 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  396 D1:B437 C3 D2 B1 D1     jp i6502NextLoad
  397 D1:B43B -  -  -  -  
  398 D1:B43B -  -  -  -  subroutine6502_sbc_combined_end:
  399 D1:B43B DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  400 D1:B43E 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  401 D1:B43F DD 7E 00 -      ld  a,(ix+REGA)
  402 D1:B442 3F -  -  -      ccf
  403 D1:B443 99 -  -  -      sbc a,c
  404 D1:B444 3F -  -  -      ccf
  405 D1:B445 DD 77 00 -      ld  (ix+REGA),a
  406 D1:B448 DD 46 04 CB 
              B0 E2 52 B4 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  407 D1:B469 C3 D2 B1 D1     jp i6502NextLoad
  408 D1:B46D -  -  -  -  
  409 D1:B46D -  -  -  -  subroutine6502_cmp_combined_end:
  410 D1:B46D DD 7E 00 -      ld  a,(ix+REGA)
  411 D1:B470 B8 -  -  -      cp  b
  412 D1:B471 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  413 D1:B48A C3 D2 B1 D1     jp i6502NextLoad
  414 D1:B48E -  -  -  -  
  415 D1:B48E -  -  -  -  subroutine6502_take_branch:
  416 D1:B48E FD 23 -  -      ADDCYC(1)
  417 D1:B490 7E -  -  -      ld  a,(hl)  ;offset byte
  418 D1:B491 6F -  -  -      ld  L,a
  419 D1:B492 87 -  -  -      add a,a
  420 D1:B493 9F -  -  -      sbc a,a
  421 D1:B494 67 -  -  -      ld  H,a     ;sign-extending offset byte
  422 D1:B495 DD 56 06 -      ld  d,(ix+REGPC+1)
  423 D1:B498 13 -  -  -      inc de
  424 D1:B499 52 19 -  -      add.s hl,de
  425 D1:B49B 7C -  -  -      ld  a,h
  426 D1:B49C BA -  -  -      cp  d       ;is high byte the same?
  427 D1:B49D 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  428 D1:B49F FD 23 -  -      ADDCYC(1)
  429 D1:B4A1 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  430 D1:B4A5 C3 BC B1 D1     jp  i6502FirstLoad
  431 D1:B4A9 -  -  -  -  
  432 D1:B4A9 -  -  -  -  
  433 D1:B4A9 -  -  -  -  ;-----------------------------------------------------------------------------
  434 D1:B4A9 -  -  -  -  
  435 D1:B4A9 -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  436 D1:B4A9 -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  437 D1:B4A9 -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  438 D1:B4A9 -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  439 D1:B4A9 -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  440 D1:B4A9 -  -  -  -  
  441 D1:B4A9 -  -  -  -  ;-----------------------------------------------------------------------------
  442 D1:B4A9 -  -  -  -  
  443 D1:B4A9 -  -  -  -  ;-----------------------------------------------------------------------------
  444 D1:B4A9 -  -  -  -  ;-----------------------------------------------------------------------------
  445 D1:B4A9 -  -  -  -  ;-----------------------------------------------------------------------------
  446 D1:B4A9 -  -  -  -  ;Instructions by type: Transfer Instructions
  447 D1:B4A9 -  -  -  -  ;LDA - Load Accumulator with Memory
  448 D1:B4A9 -  -  -  -  ;    M -> A
  449 D1:B4A9 -  -  -  -  ;    N	Z	C	I	D	V
  450 D1:B4A9 -  -  -  -  ;    +	+	-	-	-	-
  451 D1:B4A9 -  -  -  -  
  452 D1:B4A9 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  453 D1:B4A9 -  -  -  -  ;immediate	LDA #oper	A9	2	2
  454 D1:B4A9 -  -  -  -  inst6502_lda_imm:
  455 D1:B4A9 7E -  -  -      ld  a,(hl)
  456 D1:B4AA DD 77 00 -      ld  (ix+REGA),a
  457 D1:B4AD DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  458 D1:B4C0 ED 33 02 -      ADDCYC(2)
  459 D1:B4C3 C3 D2 B1 D1     jp i6502NextLoad
  460 D1:B4C7 -  -  -  -  
  461 D1:B4C7 -  -  -  -  ;zeropage	LDA oper	A5	2	3
  462 D1:B4C7 -  -  -  -  inst6502_lda_zp:
  463 D1:B4C7 7E -  -  -      ld  a,(hl)
  464 D1:B4C8 01 00 38 D0     ld  bc,ZEROPAGE
  465 D1:B4CC 81 -  -  -      add a,c
  466 D1:B4CD 4F -  -  -      ld  c,a
  467 D1:B4CE 0A -  -  -      ld  a,(bc)
  468 D1:B4CF DD 77 00 -      ld  (ix+REGA),a
  469 D1:B4D2 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  470 D1:B4E5 ED 33 03 -      ADDCYC(3)
  471 D1:B4E8 C3 D2 B1 D1     jp i6502NextLoad
  472 D1:B4EC -  -  -  -  
  473 D1:B4EC -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  474 D1:B4EC -  -  -  -  inst6502_lda_zpx:
  475 D1:B4EC 7E -  -  -      ld  a,(hl)
  476 D1:B4ED 01 00 38 D0     ld  bc,ZEROPAGE
  477 D1:B4F1 81 -  -  -      add a,c
  478 D1:B4F2 DD 86 01 -      add a,(ix+REGX)
  479 D1:B4F5 4F -  -  -      ld  c,a
  480 D1:B4F6 0A -  -  -      ld  a,(bc)
  481 D1:B4F7 DD 77 00 -      ld  (ix+REGA),a
  482 D1:B4FA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  483 D1:B50D ED 33 04 -      ADDCYC(4)
  484 D1:B510 C3 D2 B1 D1     jp i6502NextLoad
  485 D1:B514 -  -  -  -  
  486 D1:B514 -  -  -  -  ;absolute	LDA oper	AD	3	4
  487 D1:B514 -  -  -  -  inst6502_lda_abs:
  488 D1:B514 CD EF B3 D1     call subroutine6502_abs_split_start
  489 D1:B518 E5 -  -  -      push hl
  490 D1:B519 50 -  -  -          ld  d,b
  491 D1:B51A 79 -  -  -          ld  a,c
  492 D1:B51B 0E 08 -  -          ld  c,BASETABLE_STRIDE
  493 D1:B51D ED 4C -  -          mlt bc
  494 D1:B51F 21 00 40 D0         ld  hl,PAGETABLE
  495 D1:B523 09 -  -  -          add hl,bc
  496 D1:B524 ED 27 -  -          ld  hl,(hl)
  497 D1:B526 06 00 -  -          ld  b,0
  498 D1:B528 4F -  -  -          ld  c,a
  499 D1:B529 09 -  -  -          add hl,bc   ;full address
  500 D1:B52A 7E -  -  -          READ_ACCESS
  501 D1:B52B DD 77 00 -          ld (ix+REGA),a
  502 D1:B52E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  503 D1:B541 ED 33 04 -          ADDCYC(4)
  504 D1:B544 E1 -  -  -      pop hl
  505 D1:B545 C3 D2 B1 D1     jp i6502NextLoad
  506 D1:B549 -  -  -  -  
  507 D1:B549 -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  508 D1:B549 -  -  -  -  inst6502_lda_absx:
  509 D1:B549 CD EF B3 D1     call subroutine6502_abs_split_start
  510 D1:B54D E5 -  -  -      push hl
  511 D1:B54E 50 -  -  -          ld  d,b
  512 D1:B54F 79 -  -  -          ld  a,c
  513 D1:B550 0E 08 -  -          ld  c,BASETABLE_STRIDE
  514 D1:B552 ED 4C -  -          mlt bc
  515 D1:B554 21 00 40 D0         ld  hl,PAGETABLE
  516 D1:B558 09 -  -  -          add hl,bc
  517 D1:B559 ED 27 -  -          ld  hl,(hl)
  518 D1:B55B 06 00 -  -          ld  b,0
  519 D1:B55D DD 86 01 -          add a,(ix+REGX)
  520 D1:B560 4F -  -  -          ld  c,a
  521 D1:B561 30 04 -  -          jr  nc,+_
  522 D1:B563 FD 23 -  -          ADDCYC(1)
  523 D1:B565 04 -  -  -          inc b
  524 D1:B566 14 -  -  -          inc d
  525 D1:B567 09 -  -  -  _:      add hl,bc   ;full address
  526 D1:B568 7E -  -  -          READ_ACCESS
  527 D1:B569 DD 77 00 -          ld (ix+REGA),a
  528 D1:B56C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  529 D1:B57F ED 33 04 -          ADDCYC(4)
  530 D1:B582 E1 -  -  -      pop hl
  531 D1:B583 C3 D2 B1 D1     jp i6502NextLoad
  532 D1:B587 -  -  -  -  
  533 D1:B587 -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  534 D1:B587 -  -  -  -  inst6502_lda_absy:
  535 D1:B587 CD EF B3 D1     call subroutine6502_abs_split_start
  536 D1:B58B E5 -  -  -      push hl
  537 D1:B58C 50 -  -  -          ld  d,b
  538 D1:B58D 79 -  -  -          ld  a,c
  539 D1:B58E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  540 D1:B590 ED 4C -  -          mlt bc
  541 D1:B592 21 00 40 D0         ld  hl,PAGETABLE
  542 D1:B596 09 -  -  -          add hl,bc
  543 D1:B597 ED 27 -  -          ld  hl,(hl)
  544 D1:B599 06 00 -  -          ld  b,0
  545 D1:B59B DD 86 02 -          add a,(ix+REGY)
  546 D1:B59E 4F -  -  -          ld  c,a
  547 D1:B59F 30 04 -  -          jr  nc,+_
  548 D1:B5A1 FD 23 -  -          ADDCYC(1)
  549 D1:B5A3 04 -  -  -          inc b
  550 D1:B5A4 14 -  -  -          inc d
  551 D1:B5A5 09 -  -  -  _:      add hl,bc   ;full address
  552 D1:B5A6 7E -  -  -          READ_ACCESS
  553 D1:B5A7 DD 77 00 -          ld (ix+REGA),a
  554 D1:B5AA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  555 D1:B5BD ED 33 04 -          ADDCYC(4)
  556 D1:B5C0 E1 -  -  -      pop hl
  557 D1:B5C1 C3 D2 B1 D1     jp i6502NextLoad
  558 D1:B5C5 -  -  -  -  
  559 D1:B5C5 -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  560 D1:B5C5 -  -  -  -  inst6502_lda_indx:
  561 D1:B5C5 E5 -  -  -      push hl
  562 D1:B5C6 7E -  -  -          ld  a,(hl)
  563 D1:B5C7 21 00 38 D0         ld  hl,ZEROPAGE
  564 D1:B5CB 85 -  -  -          add a,L
  565 D1:B5CC DD 86 01 -          add a,(ix+REGX)
  566 D1:B5CF 6F -  -  -          ld  L,a
  567 D1:B5D0 7E -  -  -          ld  a,(hl)
  568 D1:B5D1 2C -  -  -          inc L
  569 D1:B5D2 56 -  -  -          ld  d,(hl)
  570 D1:B5D3 42 -  -  -          ld  b,d
  571 D1:B5D4 0E 08 -  -          ld  c,BASETABLE_STRIDE
  572 D1:B5D6 ED 4C -  -          mlt bc
  573 D1:B5D8 21 00 40 D0         ld  hl,PAGETABLE
  574 D1:B5DC 09 -  -  -          add hl,bc
  575 D1:B5DD ED 27 -  -          ld  hl,(hl)
  576 D1:B5DF 06 00 -  -          ld  b,0
  577 D1:B5E1 4F -  -  -          ld  c,a
  578 D1:B5E2 09 -  -  -          add hl,bc
  579 D1:B5E3 7E -  -  -          READ_ACCESS
  580 D1:B5E4 DD 77 00 -          ld (ix+REGA),a
  581 D1:B5E7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  582 D1:B5FA ED 33 06 -          ADDCYC(6)
  583 D1:B5FD E1 -  -  -      pop hl
  584 D1:B5FE C3 D2 B1 D1     jp i6502NextLoad
  585 D1:B602 -  -  -  -  
  586 D1:B602 -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  587 D1:B602 -  -  -  -  inst6502_lda_indy:
  588 D1:B602 E5 -  -  -      push hl
  589 D1:B603 7E -  -  -          ld  a,(hl)
  590 D1:B604 21 00 38 D0         ld  hl,ZEROPAGE
  591 D1:B608 85 -  -  -          add a,L
  592 D1:B609 6F -  -  -          ld  L,a
  593 D1:B60A 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  594 D1:B60B 2C -  -  -          inc L
  595 D1:B60C DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  596 D1:B60F 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  597 D1:B610 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  598 D1:B612 FD 23 -  -          ADDCYC(1)
  599 D1:B614 24 -  -  -          inc h
  600 D1:B615 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  601 D1:B616 2E 08 -  -          ld  L,BASETABLE_STRIDE
  602 D1:B618 ED 6C -  -          mlt hl          ;23.
  603 D1:B61A 01 00 40 D0         ld  bc,PAGETABLE
  604 D1:B61E 09 -  -  -          add hl,bc
  605 D1:B61F ED 27 -  -          ld  hl,(hl)     ;address get.
  606 D1:B621 01 00 00 00         ld  bc,0
  607 D1:B625 4F -  -  -          ld  c,a
  608 D1:B626 09 -  -  -          add hl,bc       ;Full address get.
  609 D1:B627 7E -  -  -          READ_ACCESS
  610 D1:B628 DD 77 00 -          ld  (ix+REGA),a
  611 D1:B62B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  612 D1:B63E ED 33 05 -          ADDCYC(5)
  613 D1:B641 E1 -  -  -      pop hl
  614 D1:B642 C3 D2 B1 D1     jp i6502NextLoad
  615 D1:B646 -  -  -  -  
  616 D1:B646 -  -  -  -  ;-----------------------------------------------------------------------------
  617 D1:B646 -  -  -  -  ;LDX - Load Index X with Memory
  618 D1:B646 -  -  -  -  ;    M -> X
  619 D1:B646 -  -  -  -  ;    N	Z	C	I	D	V
  620 D1:B646 -  -  -  -  ;    +	+	-	-	-	-
  621 D1:B646 -  -  -  -  
  622 D1:B646 -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  623 D1:B646 -  -  -  -  inst6502_ldx_imm:
  624 D1:B646 7E -  -  -      ld  a,(hl)
  625 D1:B647 DD 77 01 -      ld  (ix+REGX),a
  626 D1:B64A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  627 D1:B65D ED 33 02 -      ADDCYC(2)
  628 D1:B660 C3 D2 B1 D1     jp i6502NextLoad
  629 D1:B664 -  -  -  -  
  630 D1:B664 -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  631 D1:B664 -  -  -  -  inst6502_ldx_zp:
  632 D1:B664 7E -  -  -      ld  a,(hl)
  633 D1:B665 01 00 38 D0     ld  bc,ZEROPAGE
  634 D1:B669 81 -  -  -      add a,c
  635 D1:B66A 4F -  -  -      ld  c,a
  636 D1:B66B 0A -  -  -      ld  a,(bc)
  637 D1:B66C DD 77 01 -      ld  (ix+REGX),a
  638 D1:B66F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  639 D1:B682 ED 33 03 -      ADDCYC(3)
  640 D1:B685 C3 D2 B1 D1     jp i6502NextLoad
  641 D1:B689 -  -  -  -  
  642 D1:B689 -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  643 D1:B689 -  -  -  -  inst6502_ldx_zpy:
  644 D1:B689 7E -  -  -      ld  a,(hl)
  645 D1:B68A 01 00 38 D0     ld  bc,ZEROPAGE
  646 D1:B68E 81 -  -  -      add a,c
  647 D1:B68F DD 86 02 -      add a,(ix+REGY)
  648 D1:B692 4F -  -  -      ld  c,a
  649 D1:B693 0A -  -  -      ld  a,(bc)
  650 D1:B694 DD 77 01 -      ld  (ix+REGX),a
  651 D1:B697 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  652 D1:B6AA ED 33 04 -      ADDCYC(4)
  653 D1:B6AD C3 D2 B1 D1     jp i6502NextLoad
  654 D1:B6B1 -  -  -  -  
  655 D1:B6B1 -  -  -  -  ;absolute	LDX oper	AE	3	4  
  656 D1:B6B1 -  -  -  -  inst6502_ldx_abs:
  657 D1:B6B1 CD EF B3 D1     call subroutine6502_abs_split_start
  658 D1:B6B5 E5 -  -  -      push hl
  659 D1:B6B6 50 -  -  -          ld  d,b
  660 D1:B6B7 79 -  -  -          ld  a,c
  661 D1:B6B8 0E 08 -  -          ld  c,BASETABLE_STRIDE
  662 D1:B6BA ED 4C -  -          mlt bc
  663 D1:B6BC 21 00 40 D0         ld  hl,PAGETABLE
  664 D1:B6C0 09 -  -  -          add hl,bc
  665 D1:B6C1 ED 27 -  -          ld  hl,(hl)
  666 D1:B6C3 06 00 -  -          ld  b,0
  667 D1:B6C5 4F -  -  -          ld  c,a
  668 D1:B6C6 09 -  -  -          add hl,bc   ;full address
  669 D1:B6C7 7E -  -  -          READ_ACCESS
  670 D1:B6C8 DD 77 01 -          ld (ix+REGX),a
  671 D1:B6CB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  672 D1:B6DE ED 33 04 -          ADDCYC(4)
  673 D1:B6E1 E1 -  -  -      pop hl
  674 D1:B6E2 C3 D2 B1 D1     jp i6502NextLoad
  675 D1:B6E6 -  -  -  -  
  676 D1:B6E6 -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  677 D1:B6E6 -  -  -  -  inst6502_ldx_absy:
  678 D1:B6E6 CD EF B3 D1     call subroutine6502_abs_split_start
  679 D1:B6EA E5 -  -  -      push hl
  680 D1:B6EB 50 -  -  -          ld  d,b
  681 D1:B6EC 79 -  -  -          ld  a,c
  682 D1:B6ED 0E 08 -  -          ld  c,BASETABLE_STRIDE
  683 D1:B6EF ED 4C -  -          mlt bc
  684 D1:B6F1 21 00 40 D0         ld  hl,PAGETABLE
  685 D1:B6F5 09 -  -  -          add hl,bc
  686 D1:B6F6 ED 27 -  -          ld  hl,(hl)
  687 D1:B6F8 06 00 -  -          ld  b,0
  688 D1:B6FA DD 86 02 -          add a,(ix+REGY)
  689 D1:B6FD 4F -  -  -          ld  c,a
  690 D1:B6FE 30 04 -  -          jr  nc,+_
  691 D1:B700 FD 23 -  -          ADDCYC(1)
  692 D1:B702 04 -  -  -          inc b
  693 D1:B703 14 -  -  -          inc d
  694 D1:B704 09 -  -  -  _:      add hl,bc   ;full address
  695 D1:B705 7E -  -  -          READ_ACCESS
  696 D1:B706 DD 77 01 -          ld (ix+REGX),a
  697 D1:B709 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  698 D1:B71C ED 33 04 -          ADDCYC(4)
  699 D1:B71F E1 -  -  -      pop hl
  700 D1:B720 C3 D2 B1 D1     jp i6502NextLoad
  701 D1:B724 -  -  -  -  
  702 D1:B724 -  -  -  -  ;-----------------------------------------------------------------------------
  703 D1:B724 -  -  -  -  ;LDY -  Load Index Y with Memory
  704 D1:B724 -  -  -  -  ;    M -> Y
  705 D1:B724 -  -  -  -  ;    N	Z	C	I	D	V
  706 D1:B724 -  -  -  -  ;    +	+	-	-	-	-
  707 D1:B724 -  -  -  -  
  708 D1:B724 -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  709 D1:B724 -  -  -  -  inst6502_ldy_imm:
  710 D1:B724 7E -  -  -      ld  a,(hl)
  711 D1:B725 DD 77 02 -      ld  (ix+REGY),a
  712 D1:B728 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  713 D1:B73B ED 33 02 -      ADDCYC(2)
  714 D1:B73E C3 D2 B1 D1     jp i6502NextLoad
  715 D1:B742 -  -  -  -  
  716 D1:B742 -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  717 D1:B742 -  -  -  -  inst6502_ldy_zp:
  718 D1:B742 7E -  -  -      ld  a,(hl)
  719 D1:B743 01 00 38 D0     ld  bc,ZEROPAGE
  720 D1:B747 81 -  -  -      add a,c
  721 D1:B748 4F -  -  -      ld  c,a
  722 D1:B749 0A -  -  -      ld  a,(bc)
  723 D1:B74A DD 77 02 -      ld  (ix+REGY),a
  724 D1:B74D DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  725 D1:B760 ED 33 03 -      ADDCYC(3)
  726 D1:B763 C3 D2 B1 D1     jp i6502NextLoad
  727 D1:B767 -  -  -  -  
  728 D1:B767 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  729 D1:B767 -  -  -  -  inst6502_ldy_zpx:
  730 D1:B767 7E -  -  -      ld  a,(hl)
  731 D1:B768 01 00 38 D0     ld  bc,ZEROPAGE
  732 D1:B76C 81 -  -  -      add a,c
  733 D1:B76D DD 86 01 -      add a,(ix+REGX)
  734 D1:B770 4F -  -  -      ld  c,a
  735 D1:B771 0A -  -  -      ld  a,(bc)
  736 D1:B772 DD 77 02 -      ld  (ix+REGY),a
  737 D1:B775 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  738 D1:B788 ED 33 04 -      ADDCYC(4)
  739 D1:B78B C3 D2 B1 D1     jp i6502NextLoad
  740 D1:B78F -  -  -  -  
  741 D1:B78F -  -  -  -  ;absolute	LDY oper	AC	3	4  
  742 D1:B78F -  -  -  -  inst6502_ldy_abs:
  743 D1:B78F CD EF B3 D1     call subroutine6502_abs_split_start
  744 D1:B793 E5 -  -  -      push hl
  745 D1:B794 50 -  -  -          ld  d,b
  746 D1:B795 79 -  -  -          ld  a,c
  747 D1:B796 0E 08 -  -          ld  c,BASETABLE_STRIDE
  748 D1:B798 ED 4C -  -          mlt bc
  749 D1:B79A 21 00 40 D0         ld  hl,PAGETABLE
  750 D1:B79E 09 -  -  -          add hl,bc
  751 D1:B79F ED 27 -  -          ld  hl,(hl)
  752 D1:B7A1 06 00 -  -          ld  b,0
  753 D1:B7A3 4F -  -  -          ld  c,a
  754 D1:B7A4 09 -  -  -          add hl,bc   ;full address
  755 D1:B7A5 7E -  -  -          READ_ACCESS
  756 D1:B7A6 DD 77 02 -          ld (ix+REGY),a
  757 D1:B7A9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  758 D1:B7BC ED 33 04 -          ADDCYC(4)
  759 D1:B7BF E1 -  -  -      pop hl
  760 D1:B7C0 C3 D2 B1 D1     jp i6502NextLoad
  761 D1:B7C4 -  -  -  -  
  762 D1:B7C4 -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  763 D1:B7C4 -  -  -  -  inst6502_ldy_absx:
  764 D1:B7C4 CD EF B3 D1     call subroutine6502_abs_split_start
  765 D1:B7C8 E5 -  -  -      push hl
  766 D1:B7C9 50 -  -  -          ld  d,b
  767 D1:B7CA 79 -  -  -          ld  a,c
  768 D1:B7CB 0E 08 -  -          ld  c,BASETABLE_STRIDE
  769 D1:B7CD ED 4C -  -          mlt bc
  770 D1:B7CF 21 00 40 D0         ld  hl,PAGETABLE
  771 D1:B7D3 09 -  -  -          add hl,bc
  772 D1:B7D4 ED 27 -  -          ld  hl,(hl)
  773 D1:B7D6 06 00 -  -          ld  b,0
  774 D1:B7D8 DD 86 01 -          add a,(ix+REGX)
  775 D1:B7DB 4F -  -  -          ld  c,a
  776 D1:B7DC 30 04 -  -          jr  nc,+_
  777 D1:B7DE FD 23 -  -          ADDCYC(1)
  778 D1:B7E0 04 -  -  -          inc b
  779 D1:B7E1 14 -  -  -          inc d
  780 D1:B7E2 09 -  -  -  _:      add hl,bc   ;full address
  781 D1:B7E3 7E -  -  -          READ_ACCESS
  782 D1:B7E4 DD 77 02 -          ld (ix+REGY),a
  783 D1:B7E7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  784 D1:B7FA ED 33 04 -          ADDCYC(4)
  785 D1:B7FD E1 -  -  -      pop hl
  786 D1:B7FE C3 D2 B1 D1     jp i6502NextLoad
  787 D1:B802 -  -  -  -  
  788 D1:B802 -  -  -  -  ;-----------------------------------------------------------------------------
  789 D1:B802 -  -  -  -  ;STA - Store Accumulator in Memory
  790 D1:B802 -  -  -  -  ;    A -> M
  791 D1:B802 -  -  -  -  ;    N	Z	C	I	D	V
  792 D1:B802 -  -  -  -  ;    -	-	-	-	-	-
  793 D1:B802 -  -  -  -  
  794 D1:B802 -  -  -  -  ;zeropage	STA oper	85	2	3  
  795 D1:B802 -  -  -  -  inst6502_sta_zp:
  796 D1:B802 7E -  -  -      ld  a,(hl)
  797 D1:B803 01 00 38 D0     ld  bc,ZEROPAGE
  798 D1:B807 81 -  -  -      add a,c
  799 D1:B808 4F -  -  -      ld  c,a
  800 D1:B809 DD 7E 00 -      ld  a,(ix+REGA)
  801 D1:B80C 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  802 D1:B80D ED 33 03 -      ADDCYC(3)
  803 D1:B810 C3 D2 B1 D1     jp i6502NextLoad
  804 D1:B814 -  -  -  -  
  805 D1:B814 -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  806 D1:B814 -  -  -  -  inst6502_sta_zpx:
  807 D1:B814 7E -  -  -      ld  a,(hl)
  808 D1:B815 01 00 38 D0     ld  bc,ZEROPAGE
  809 D1:B819 81 -  -  -      add a,c
  810 D1:B81A DD 86 01 -      add a,(ix+REGX)
  811 D1:B81D 4F -  -  -      ld  c,a
  812 D1:B81E DD 7E 00 -      ld  a,(ix+REGA)
  813 D1:B821 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  814 D1:B822 ED 33 04 -      ADDCYC(4)
  815 D1:B825 C3 D2 B1 D1     jp i6502NextLoad
  816 D1:B829 -  -  -  -  
  817 D1:B829 -  -  -  -  ;absolute	STA oper	8D	3	4
  818 D1:B829 -  -  -  -  inst6502_sta_abs:
  819 D1:B829 CD EF B3 D1     call subroutine6502_abs_split_start
  820 D1:B82D E5 -  -  -      push hl
  821 D1:B82E 50 -  -  -          ld  d,b
  822 D1:B82F 79 -  -  -          ld  a,c
  823 D1:B830 0E 08 -  -          ld  c,BASETABLE_STRIDE
  824 D1:B832 ED 4C -  -          mlt bc
  825 D1:B834 21 00 40 D0         ld  hl,PAGETABLE
  826 D1:B838 09 -  -  -          add hl,bc
  827 D1:B839 ED 27 -  -          ld  hl,(hl)
  828 D1:B83B 06 00 -  -          ld  b,0
  829 D1:B83D 4F -  -  -          ld  c,a
  830 D1:B83E 09 -  -  -          add hl,bc   ;full address
  831 D1:B83F DD 46 00 -          ld  b,(ix+REGA)
  832 D1:B842 70 -  -  -          WRITE_ACCESS
  833 D1:B843 ED 33 04 -          ADDCYC(4)
  834 D1:B846 E1 -  -  -      pop hl
  835 D1:B847 C3 D2 B1 D1     jp i6502NextLoad
  836 D1:B84B -  -  -  -  
  837 D1:B84B -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  838 D1:B84B -  -  -  -  inst6502_sta_absx:
  839 D1:B84B CD EF B3 D1     call subroutine6502_abs_split_start
  840 D1:B84F E5 -  -  -      push hl
  841 D1:B850 50 -  -  -          ld  d,b
  842 D1:B851 79 -  -  -          ld  a,c
  843 D1:B852 0E 08 -  -          ld  c,BASETABLE_STRIDE
  844 D1:B854 ED 4C -  -          mlt bc
  845 D1:B856 21 00 40 D0         ld  hl,PAGETABLE
  846 D1:B85A 09 -  -  -          add hl,bc
  847 D1:B85B ED 27 -  -          ld  hl,(hl)
  848 D1:B85D 06 00 -  -          ld  b,0
  849 D1:B85F DD 86 01 -          add a,(ix+REGX)
  850 D1:B862 4F -  -  -          ld  c,a
  851 D1:B863 30 02 -  -          jr  nc,+_
  852 D1:B865 04 -  -  -          inc b
  853 D1:B866 14 -  -  -          inc d
  854 D1:B867 09 -  -  -  _:      add hl,bc   ;full address
  855 D1:B868 DD 46 00 -          ld  b,(ix+REGA)
  856 D1:B86B 70 -  -  -          WRITE_ACCESS
  857 D1:B86C ED 33 05 -          ADDCYC(5)
  858 D1:B86F E1 -  -  -      pop hl
  859 D1:B870 C3 D2 B1 D1     jp i6502NextLoad
  860 D1:B874 -  -  -  -  
  861 D1:B874 -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  862 D1:B874 -  -  -  -  inst6502_sta_absy:
  863 D1:B874 CD EF B3 D1     call subroutine6502_abs_split_start
  864 D1:B878 E5 -  -  -      push hl
  865 D1:B879 50 -  -  -          ld  d,b
  866 D1:B87A 79 -  -  -          ld  a,c
  867 D1:B87B 0E 08 -  -          ld  c,BASETABLE_STRIDE
  868 D1:B87D ED 4C -  -          mlt bc
  869 D1:B87F 21 00 40 D0         ld  hl,PAGETABLE
  870 D1:B883 09 -  -  -          add hl,bc
  871 D1:B884 ED 27 -  -          ld  hl,(hl)
  872 D1:B886 06 00 -  -          ld  b,0
  873 D1:B888 DD 86 02 -          add a,(ix+REGY)
  874 D1:B88B 4F -  -  -          ld  c,a
  875 D1:B88C 30 02 -  -          jr  nc,+_
  876 D1:B88E 04 -  -  -          inc b
  877 D1:B88F 14 -  -  -          inc d
  878 D1:B890 09 -  -  -  _:      add hl,bc   ;full address
  879 D1:B891 DD 46 00 -          ld  b,(ix+REGA)
  880 D1:B894 70 -  -  -          WRITE_ACCESS
  881 D1:B895 ED 33 05 -          ADDCYC(5)
  882 D1:B898 E1 -  -  -      pop hl
  883 D1:B899 C3 D2 B1 D1     jp i6502NextLoad
  884 D1:B89D -  -  -  -  
  885 D1:B89D -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  886 D1:B89D -  -  -  -  inst6502_sta_indx:
  887 D1:B89D E5 -  -  -      push hl
  888 D1:B89E 7E -  -  -          ld  a,(hl)
  889 D1:B89F 21 00 38 D0         ld  hl,ZEROPAGE
  890 D1:B8A3 85 -  -  -          add a,L
  891 D1:B8A4 DD 86 01 -          add a,(ix+REGX)
  892 D1:B8A7 6F -  -  -          ld  L,a
  893 D1:B8A8 7E -  -  -          ld  a,(hl)
  894 D1:B8A9 2C -  -  -          inc L
  895 D1:B8AA 56 -  -  -          ld  d,(hl)
  896 D1:B8AB 42 -  -  -          ld  b,d
  897 D1:B8AC 0E 08 -  -          ld  c,BASETABLE_STRIDE
  898 D1:B8AE ED 4C -  -          mlt bc
  899 D1:B8B0 21 00 40 D0         ld  hl,PAGETABLE
  900 D1:B8B4 09 -  -  -          add hl,bc
  901 D1:B8B5 ED 27 -  -          ld  hl,(hl)
  902 D1:B8B7 06 00 -  -          ld  b,0
  903 D1:B8B9 4F -  -  -          ld  c,a
  904 D1:B8BA 09 -  -  -          add hl,bc
  905 D1:B8BB DD 46 00 -          ld  b,(ix+REGA)
  906 D1:B8BE 70 -  -  -          WRITE_ACCESS
  907 D1:B8BF ED 33 06 -          ADDCYC(6)
  908 D1:B8C2 E1 -  -  -      pop hl
  909 D1:B8C3 C3 D2 B1 D1     jp i6502NextLoad
  910 D1:B8C7 -  -  -  -  
  911 D1:B8C7 -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  912 D1:B8C7 -  -  -  -  inst6502_sta_indy:
  913 D1:B8C7 E5 -  -  -      push hl
  914 D1:B8C8 7E -  -  -          ld  a,(hl)
  915 D1:B8C9 21 00 38 D0         ld  hl,ZEROPAGE
  916 D1:B8CD 85 -  -  -          add a,L
  917 D1:B8CE 6F -  -  -          ld  L,a
  918 D1:B8CF 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  919 D1:B8D0 2C -  -  -          inc L
  920 D1:B8D1 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  921 D1:B8D4 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  922 D1:B8D5 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  923 D1:B8D7 24 -  -  -          inc h
  924 D1:B8D8 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  925 D1:B8D9 2E 08 -  -          ld  L,BASETABLE_STRIDE
  926 D1:B8DB ED 6C -  -          mlt hl          ;23.
  927 D1:B8DD 01 00 40 D0         ld  bc,PAGETABLE
  928 D1:B8E1 09 -  -  -          add hl,bc
  929 D1:B8E2 ED 27 -  -          ld  hl,(hl)     ;address get.
  930 D1:B8E4 01 00 00 00         ld  bc,0
  931 D1:B8E8 4F -  -  -          ld  c,a
  932 D1:B8E9 09 -  -  -          add hl,bc       ;Full address get.
  933 D1:B8EA DD 46 00 -          ld  b,(ix+REGA)
  934 D1:B8ED 70 -  -  -          WRITE_ACCESS
  935 D1:B8EE ED 33 06 -          ADDCYC(6)
  936 D1:B8F1 E1 -  -  -      pop hl
  937 D1:B8F2 C3 D2 B1 D1     jp i6502NextLoad
  938 D1:B8F6 -  -  -  -  
  939 D1:B8F6 -  -  -  -  ;-----------------------------------------------------------------------------
  940 D1:B8F6 -  -  -  -  ;STX - Store Index X in Memory
  941 D1:B8F6 -  -  -  -  ;    X -> M
  942 D1:B8F6 -  -  -  -  ;    N	Z	C	I	D	V
  943 D1:B8F6 -  -  -  -  ;    -	-	-	-	-	-
  944 D1:B8F6 -  -  -  -  
  945 D1:B8F6 -  -  -  -  ;zeropage	STX oper	86	2	3  
  946 D1:B8F6 -  -  -  -  inst6502_stx_zp:
  947 D1:B8F6 7E -  -  -      ld  a,(hl)
  948 D1:B8F7 01 00 38 D0     ld  bc,ZEROPAGE
  949 D1:B8FB 81 -  -  -      add a,c
  950 D1:B8FC 4F -  -  -      ld  c,a
  951 D1:B8FD DD 7E 01 -      ld  a,(ix+REGX)
  952 D1:B900 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  953 D1:B901 ED 33 03 -      ADDCYC(3)
  954 D1:B904 C3 D2 B1 D1     jp i6502NextLoad
  955 D1:B908 -  -  -  -  
  956 D1:B908 -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
  957 D1:B908 -  -  -  -  inst6502_stx_zpy:
  958 D1:B908 7E -  -  -      ld  a,(hl)
  959 D1:B909 01 00 38 D0     ld  bc,ZEROPAGE
  960 D1:B90D 81 -  -  -      add a,c
  961 D1:B90E DD 86 02 -      add a,(ix+REGY)
  962 D1:B911 4F -  -  -      ld  c,a
  963 D1:B912 DD 7E 01 -      ld  a,(ix+REGX)
  964 D1:B915 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  965 D1:B916 ED 33 04 -      ADDCYC(4)
  966 D1:B919 C3 D2 B1 D1     jp i6502NextLoad
  967 D1:B91D -  -  -  -  
  968 D1:B91D -  -  -  -  ;absolute	STX oper	8E	3	4  
  969 D1:B91D -  -  -  -  inst6502_stx_abs:
  970 D1:B91D CD EF B3 D1     call subroutine6502_abs_split_start
  971 D1:B921 E5 -  -  -      push hl
  972 D1:B922 50 -  -  -          ld  d,b
  973 D1:B923 79 -  -  -          ld  a,c
  974 D1:B924 0E 08 -  -          ld  c,BASETABLE_STRIDE
  975 D1:B926 ED 4C -  -          mlt bc
  976 D1:B928 21 00 40 D0         ld  hl,PAGETABLE
  977 D1:B92C 09 -  -  -          add hl,bc
  978 D1:B92D ED 27 -  -          ld  hl,(hl)
  979 D1:B92F 06 00 -  -          ld  b,0
  980 D1:B931 4F -  -  -          ld  c,a
  981 D1:B932 09 -  -  -          add hl,bc   ;full address
  982 D1:B933 DD 46 01 -          ld  b,(ix+REGX)
  983 D1:B936 70 -  -  -          WRITE_ACCESS
  984 D1:B937 ED 33 04 -          ADDCYC(4)
  985 D1:B93A E1 -  -  -      pop hl
  986 D1:B93B C3 D2 B1 D1     jp i6502NextLoad
  987 D1:B93F -  -  -  -  
  988 D1:B93F -  -  -  -  ;-----------------------------------------------------------------------------
  989 D1:B93F -  -  -  -  ;STY - Store Index Y in Memory
  990 D1:B93F -  -  -  -  ;    Y -> M
  991 D1:B93F -  -  -  -  ;    N	Z	C	I	D	V
  992 D1:B93F -  -  -  -  ;    -	-	-	-	-	-
  993 D1:B93F -  -  -  -  
  994 D1:B93F -  -  -  -  ;zeropage	STY oper	84	2	3  
  995 D1:B93F -  -  -  -  inst6502_sty_zp:
  996 D1:B93F 7E -  -  -      ld  a,(hl)
  997 D1:B940 01 00 38 D0     ld  bc,ZEROPAGE
  998 D1:B944 81 -  -  -      add a,c
  999 D1:B945 4F -  -  -      ld  c,a
 1000 D1:B946 DD 7E 02 -      ld  a,(ix+REGY)
 1001 D1:B949 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1002 D1:B94A ED 33 03 -      ADDCYC(3)
 1003 D1:B94D C3 D2 B1 D1     jp i6502NextLoad
 1004 D1:B951 -  -  -  -  
 1005 D1:B951 -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1006 D1:B951 -  -  -  -  inst6502_sty_zpx:
 1007 D1:B951 7E -  -  -      ld  a,(hl)
 1008 D1:B952 01 00 38 D0     ld  bc,ZEROPAGE
 1009 D1:B956 81 -  -  -      add a,c
 1010 D1:B957 DD 86 01 -      add a,(ix+REGX)
 1011 D1:B95A 4F -  -  -      ld  c,a
 1012 D1:B95B DD 7E 02 -      ld  a,(ix+REGY)
 1013 D1:B95E 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1014 D1:B95F ED 33 04 -      ADDCYC(4)
 1015 D1:B962 C3 D2 B1 D1     jp i6502NextLoad
 1016 D1:B966 -  -  -  -  
 1017 D1:B966 -  -  -  -  ;absolute	STY oper	8C	3	4  
 1018 D1:B966 -  -  -  -  inst6502_sty_abs:
 1019 D1:B966 CD EF B3 D1     call subroutine6502_abs_split_start
 1020 D1:B96A E5 -  -  -      push hl
 1021 D1:B96B 50 -  -  -          ld  d,b
 1022 D1:B96C 79 -  -  -          ld  a,c
 1023 D1:B96D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1024 D1:B96F ED 4C -  -          mlt bc
 1025 D1:B971 21 00 40 D0         ld  hl,PAGETABLE
 1026 D1:B975 09 -  -  -          add hl,bc
 1027 D1:B976 ED 27 -  -          ld  hl,(hl)
 1028 D1:B978 06 00 -  -          ld  b,0
 1029 D1:B97A 4F -  -  -          ld  c,a
 1030 D1:B97B 09 -  -  -          add hl,bc   ;full address
 1031 D1:B97C DD 46 02 -          ld  b,(ix+REGY)
 1032 D1:B97F 70 -  -  -          WRITE_ACCESS
 1033 D1:B980 ED 33 04 -          ADDCYC(4)
 1034 D1:B983 E1 -  -  -      pop hl
 1035 D1:B984 C3 D2 B1 D1     jp i6502NextLoad
 1036 D1:B988 -  -  -  -  
 1037 D1:B988 -  -  -  -  ;-----------------------------------------------------------------------------
 1038 D1:B988 -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1039 D1:B988 -  -  -  -  ;N	Z	C	I	D	V
 1040 D1:B988 -  -  -  -  ;+	+	-	-	-	-
 1041 D1:B988 -  -  -  -  ;implied	TAX	AA	1	2
 1042 D1:B988 -  -  -  -  inst6502_tax:
 1043 D1:B988 DD 7E 00 -      ld  a,(ix+REGA)
 1044 D1:B98B DD 77 01 -      ld  (ix+REGX),a
 1045 D1:B98E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1046 D1:B9A1 ED 33 02 -      ADDCYC(2)
 1047 D1:B9A4 C3 EB B1 D1     jp i6502FinishLoad
 1048 D1:B9A8 -  -  -  -  
 1049 D1:B9A8 -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1050 D1:B9A8 -  -  -  -  ;N	Z	C	I	D	V
 1051 D1:B9A8 -  -  -  -  ;+	+	-	-	-	-
 1052 D1:B9A8 -  -  -  -  ;implied	TAY	A8	1	2
 1053 D1:B9A8 -  -  -  -  inst6502_tay:
 1054 D1:B9A8 DD 7E 00 -      ld  a,(ix+REGA)
 1055 D1:B9AB DD 77 02 -      ld  (ix+REGY),a
 1056 D1:B9AE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1057 D1:B9C1 ED 33 02 -      ADDCYC(2)
 1058 D1:B9C4 C3 EB B1 D1     jp i6502FinishLoad
 1059 D1:B9C8 -  -  -  -  
 1060 D1:B9C8 -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1061 D1:B9C8 -  -  -  -  ;N	Z	C	I	D	V
 1062 D1:B9C8 -  -  -  -  ;+	+	-	-	-	-
 1063 D1:B9C8 -  -  -  -  ;implied	TSX	BA	1	2
 1064 D1:B9C8 -  -  -  -  inst6502_tsx:
 1065 D1:B9C8 DD 7E 03 -      ld  a,(ix+REGSP)
 1066 D1:B9CB DD 77 01 -      ld  (ix+REGX),a
 1067 D1:B9CE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1068 D1:B9E1 ED 33 02 -      ADDCYC(2)
 1069 D1:B9E4 C3 EB B1 D1     jp i6502FinishLoad
 1070 D1:B9E8 -  -  -  -  
 1071 D1:B9E8 -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1072 D1:B9E8 -  -  -  -  ;N	Z	C	I	D	V
 1073 D1:B9E8 -  -  -  -  ;+	+	-	-	-	-
 1074 D1:B9E8 -  -  -  -  ;implied	TXA	8A	1	2
 1075 D1:B9E8 -  -  -  -  inst6502_txa:
 1076 D1:B9E8 DD 7E 01 -      ld  a,(ix+REGX)
 1077 D1:B9EB DD 77 00 -      ld  (ix+REGA),a
 1078 D1:B9EE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1079 D1:BA01 ED 33 02 -      ADDCYC(2)
 1080 D1:BA04 C3 EB B1 D1     jp i6502FinishLoad
 1081 D1:BA08 -  -  -  -  
 1082 D1:BA08 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1083 D1:BA08 -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:BA08 -  -  -  -  ;-	-	-	-	-	-
 1085 D1:BA08 -  -  -  -  ;implied	TXS	9A	1	2
 1086 D1:BA08 -  -  -  -  inst6502_txs:
 1087 D1:BA08 DD 7E 01 -      ld  a,(ix+REGX)
 1088 D1:BA0B DD 77 03 -      ld  (ix+REGSP),a
 1089 D1:BA0E ED 33 02 -      ADDCYC(2)
 1090 D1:BA11 C3 EB B1 D1     jp i6502FinishLoad
 1091 D1:BA15 -  -  -  -  
 1092 D1:BA15 -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1093 D1:BA15 -  -  -  -  ;N	Z	C	I	D	V
 1094 D1:BA15 -  -  -  -  ;+	+	-	-	-	-
 1095 D1:BA15 -  -  -  -  ;implied	TYA	98	1	2
 1096 D1:BA15 -  -  -  -  inst6502_tya:
 1097 D1:BA15 DD 7E 02 -      ld  a,(ix+REGY)
 1098 D1:BA18 DD 77 00 -      ld  (ix+REGA),a
 1099 D1:BA1B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1100 D1:BA2E ED 33 02 -      ADDCYC(2)
 1101 D1:BA31 C3 EB B1 D1     jp i6502FinishLoad
 1102 D1:BA35 -  -  -  -  
 1103 D1:BA35 -  -  -  -  ;-----------------------------------------------------------------------------
 1104 D1:BA35 -  -  -  -  ;-----------------------------------------------------------------------------
 1105 D1:BA35 -  -  -  -  ;-----------------------------------------------------------------------------
 1106 D1:BA35 -  -  -  -  ;Instructions by type: Stack Instructions
 1107 D1:BA35 -  -  -  -  ;PHA - Push Accumulator on Stack
 1108 D1:BA35 -  -  -  -  ;    push A
 1109 D1:BA35 -  -  -  -  ;    N	Z	C	I	D	V
 1110 D1:BA35 -  -  -  -  ;    -	-	-	-	-	-
 1111 D1:BA35 -  -  -  -  ;implied	PHA	48	1	3 
 1112 D1:BA35 -  -  -  -  inst6502_pha:
 1113 D1:BA35 DD 7E 00 -      ld  a,(ix+REGA)
 1114 D1:BA38 01 00 39 D0     ld  bc,STACKBASE
 1115 D1:BA3C DD 4E 03 -      ld  c,(ix+REGSP)
 1116 D1:BA3F 02 -  -  -      ld  (bc),a
 1117 D1:BA40 0D -  -  -      dec c
 1118 D1:BA41 DD 71 03 -      ld  (ix+REGSP),c
 1119 D1:BA44 C3 EB B1 D1     jp i6502FinishLoad
 1120 D1:BA48 -  -  -  -  
 1121 D1:BA48 -  -  -  -  ;PHP - Push Processor Status on Stack
 1122 D1:BA48 -  -  -  -  ;    The status register will be pushed with the break
 1123 D1:BA48 -  -  -  -  ;    flag and bit 5 set to 1.
 1124 D1:BA48 -  -  -  -  ;    push SR
 1125 D1:BA48 -  -  -  -  ;    N	Z	C	I	D	V
 1126 D1:BA48 -  -  -  -  ;    -	-	-	-	-	-
 1127 D1:BA48 -  -  -  -  ;implied	PHP	08	1	3  
 1128 D1:BA48 -  -  -  -  inst6502_php:
 1129 D1:BA48 DD 7E 04 -      ld  a,(ix+REGSR)
 1130 D1:BA4B F6 30 -  -      or  a,%00110000
 1131 D1:BA4D 01 00 39 D0     ld  bc,STACKBASE
 1132 D1:BA51 DD 4E 03 -      ld  c,(ix+REGSP)
 1133 D1:BA54 02 -  -  -      ld  (bc),a
 1134 D1:BA55 0D -  -  -      dec c
 1135 D1:BA56 DD 71 03 -      ld  (ix+REGSP),c
 1136 D1:BA59 C3 EB B1 D1     jp i6502FinishLoad
 1137 D1:BA5D -  -  -  -  
 1138 D1:BA5D -  -  -  -  
 1139 D1:BA5D -  -  -  -  
 1140 D1:BA5D -  -  -  -  ;PLA - Pull Accumulator from Stack
 1141 D1:BA5D -  -  -  -  ;    pull A
 1142 D1:BA5D -  -  -  -  ;    N	Z	C	I	D	V
 1143 D1:BA5D -  -  -  -  ;    +	+	-	-	-	-
 1144 D1:BA5D -  -  -  -  ;implied	PLA	68	1	4  
 1145 D1:BA5D -  -  -  -  inst6502_pla:
 1146 D1:BA5D 01 00 39 D0     ld  bc,STACKBASE
 1147 D1:BA61 DD 4E 03 -      ld  c,(ix+REGSP)
 1148 D1:BA64 0C -  -  -      inc c
 1149 D1:BA65 0A -  -  -      ld  a,(bc)
 1150 D1:BA66 DD 71 03 -      ld  (ix+REGSP),c
 1151 D1:BA69 DD 77 00 -      ld  (ix+REGA),a
 1152 D1:BA6C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1153 D1:BA7F C3 EB B1 D1     jp i6502FinishLoad
 1154 D1:BA83 -  -  -  -  
 1155 D1:BA83 -  -  -  -  ;PLP - Pull Processor Status from Stack
 1156 D1:BA83 -  -  -  -  ;    The status register will be pulled with the break
 1157 D1:BA83 -  -  -  -  ;    flag and bit 5 ignored.
 1158 D1:BA83 -  -  -  -  ;    pull SR
 1159 D1:BA83 -  -  -  -  ;    N	Z	C	I	D	V
 1160 D1:BA83 -  -  -  -  ;    from stack
 1161 D1:BA83 -  -  -  -  ;implied	PLP	28	1	4  
 1162 D1:BA83 -  -  -  -  inst6502_plp:
 1163 D1:BA83 01 00 39 D0     ld  bc,STACKBASE
 1164 D1:BA87 DD 4E 03 -      ld  c,(ix+REGSP)
 1165 D1:BA8A 0C -  -  -      inc c
 1166 D1:BA8B 0A -  -  -      ld  a,(bc)
 1167 D1:BA8C DD 71 03 -      ld  (ix+REGSP),c
 1168 D1:BA8F DD 46 04 -      ld  b,(ix+REGSR)
 1169 D1:BA92 A8 -  -  -      xor a,b
 1170 D1:BA93 E6 CF -  -      and a,%11001111
 1171 D1:BA95 A8 -  -  -      xor a,b
 1172 D1:BA96 DD 77 04 -      ld  (ix+REGSR),a
 1173 D1:BA99 C3 EB B1 D1     jp i6502FinishLoad
 1174 D1:BA9D -  -  -  -  
 1175 D1:BA9D -  -  -  -  
 1176 D1:BA9D -  -  -  -  ;-----------------------------------------------------------------------------
 1177 D1:BA9D -  -  -  -  ;-----------------------------------------------------------------------------
 1178 D1:BA9D -  -  -  -  ;-----------------------------------------------------------------------------
 1179 D1:BA9D -  -  -  -  ;Instructions by type: Decrements and Increments
 1180 D1:BA9D -  -  -  -  
 1181 D1:BA9D -  -  -  -  ;DEC -  Decrement Memory by One
 1182 D1:BA9D -  -  -  -  ;    M - 1 -> M
 1183 D1:BA9D -  -  -  -  ;    N	Z	C	I	D	V
 1184 D1:BA9D -  -  -  -  ;    +	+	-	-	-	-
 1185 D1:BA9D -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1186 D1:BA9D -  -  -  -  
 1187 D1:BA9D -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1188 D1:BA9D -  -  -  -  inst6502_dec_zp:
 1189 D1:BA9D 7E -  -  -      ld  a,(hl)
 1190 D1:BA9E 01 00 38 D0     ld  bc,ZEROPAGE
 1191 D1:BAA2 81 -  -  -      add a,c
 1192 D1:BAA3 4F -  -  -      ld  c,a
 1193 D1:BAA4 0A -  -  -      ld  a,(bc)
 1194 D1:BAA5 3D -  -  -      dec a
 1195 D1:BAA6 02 -  -  -      ld  (bc),a
 1196 D1:BAA7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1197 D1:BABA ED 33 05 -      ADDCYC(5)
 1198 D1:BABD C3 D2 B1 D1     jp i6502NextLoad
 1199 D1:BAC1 -  -  -  -  
 1200 D1:BAC1 -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1201 D1:BAC1 -  -  -  -  inst6502_dec_zpx:
 1202 D1:BAC1 7E -  -  -      ld  a,(hl)
 1203 D1:BAC2 01 00 38 D0     ld  bc,ZEROPAGE
 1204 D1:BAC6 81 -  -  -      add a,c
 1205 D1:BAC7 DD 86 01 -      add a,(ix+REGX)
 1206 D1:BACA 4F -  -  -      ld  c,a
 1207 D1:BACB 0A -  -  -      ld  a,(bc)
 1208 D1:BACC 3D -  -  -      dec a
 1209 D1:BACD 02 -  -  -      ld  (bc),a
 1210 D1:BACE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1211 D1:BAE1 ED 33 06 -      ADDCYC(6)
 1212 D1:BAE4 C3 D2 B1 D1     jp i6502NextLoad
 1213 D1:BAE8 -  -  -  -  
 1214 D1:BAE8 -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1215 D1:BAE8 -  -  -  -  inst6502_dec_abs:
 1216 D1:BAE8 CD EF B3 D1     call subroutine6502_abs_split_start
 1217 D1:BAEC E5 -  -  -      push hl
 1218 D1:BAED 50 -  -  -          ld  d,b
 1219 D1:BAEE 79 -  -  -          ld  a,c
 1220 D1:BAEF 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1221 D1:BAF1 ED 4C -  -          mlt bc
 1222 D1:BAF3 21 00 40 D0         ld  hl,PAGETABLE
 1223 D1:BAF7 09 -  -  -          add hl,bc
 1224 D1:BAF8 ED 27 -  -          ld  hl,(hl)
 1225 D1:BAFA 06 00 -  -          ld  b,0
 1226 D1:BAFC 4F -  -  -          ld  c,a
 1227 D1:BAFD 09 -  -  -          add hl,bc   ;full address
 1228 D1:BAFE 7E -  -  -          READ_ACCESS
 1229 D1:BAFF 3D -  -  -          dec a
 1230 D1:BB00 47 -  -  -          ld  b,a
 1231 D1:BB01 -  -  -  -          ;
 1232 D1:BB01 DD 7E 04 -          ld  a,(ix+REGSR)
 1233 D1:BB04 CB 8F -  -          res SF_ZERO,a
 1234 D1:BB06 20 02 -  -          jr  nz,$+4
 1235 D1:BB08 CB CF -  -          set SF_ZERO,a
 1236 D1:BB0A CB BF -  -          res SF_NEG,a
 1237 D1:BB0C FA 11 BB D1         jp  m,$+5
 1238 D1:BB10 CB FF -  -          set SF_NEG,a
 1239 D1:BB12 DD 77 04 -          ld  (ix+REGSR),a
 1240 D1:BB15 -  -  -  -          ;
 1241 D1:BB15 70 -  -  -          WRITE_ACCESS
 1242 D1:BB16 ED 33 06 -          ADDCYC(6)
 1243 D1:BB19 E1 -  -  -      pop hl
 1244 D1:BB1A C3 D2 B1 D1     jp i6502NextLoad
 1245 D1:BB1E -  -  -  -  
 1246 D1:BB1E -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1247 D1:BB1E -  -  -  -  inst6502_dec_absx:
 1248 D1:BB1E CD EF B3 D1     call subroutine6502_abs_split_start
 1249 D1:BB22 E5 -  -  -      push hl
 1250 D1:BB23 50 -  -  -          ld  d,b
 1251 D1:BB24 79 -  -  -          ld  a,c
 1252 D1:BB25 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1253 D1:BB27 ED 4C -  -          mlt bc
 1254 D1:BB29 21 00 40 D0         ld  hl,PAGETABLE
 1255 D1:BB2D 09 -  -  -          add hl,bc
 1256 D1:BB2E ED 27 -  -          ld  hl,(hl)
 1257 D1:BB30 06 00 -  -          ld  b,0
 1258 D1:BB32 DD 86 01 -          add a,(ix+REGX)
 1259 D1:BB35 4F -  -  -          ld  c,a
 1260 D1:BB36 30 02 -  -          jr  nc,+_
 1261 D1:BB38 04 -  -  -          inc b
 1262 D1:BB39 14 -  -  -          inc d
 1263 D1:BB3A 09 -  -  -  _:      add hl,bc   ;full address
 1264 D1:BB3B 7E -  -  -          READ_ACCESS
 1265 D1:BB3C 3D -  -  -          dec a
 1266 D1:BB3D 47 -  -  -          ld  b,a
 1267 D1:BB3E -  -  -  -          ;
 1268 D1:BB3E DD 7E 04 -          ld  a,(ix+REGSR)
 1269 D1:BB41 CB 8F -  -          res SF_ZERO,a
 1270 D1:BB43 20 02 -  -          jr  nz,$+4
 1271 D1:BB45 CB CF -  -          set SF_ZERO,a
 1272 D1:BB47 CB BF -  -          res SF_NEG,a
 1273 D1:BB49 FA 4E BB D1         jp  m,$+5
 1274 D1:BB4D CB FF -  -          set SF_NEG,a
 1275 D1:BB4F DD 77 04 -          ld  (ix+REGSR),a
 1276 D1:BB52 -  -  -  -          ;
 1277 D1:BB52 70 -  -  -          WRITE_ACCESS
 1278 D1:BB53 ED 33 07 -          ADDCYC(7)
 1279 D1:BB56 E1 -  -  -      pop hl
 1280 D1:BB57 C3 D2 B1 D1     jp i6502NextLoad
 1281 D1:BB5B -  -  -  -  
 1282 D1:BB5B -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1283 D1:BB5B -  -  -  -  ;Flags altered: NZ
 1284 D1:BB5B -  -  -  -  ;implied	DEX	CA	1	2  
 1285 D1:BB5B -  -  -  -  inst6502_dex:
 1286 D1:BB5B DD 35 01 -      dec (ix+REGX)
 1287 D1:BB5E DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1288 D1:BB61 CB 8F -  -      res SF_ZERO,a
 1289 D1:BB63 20 02 -  -      jr  nz,$+4
 1290 D1:BB65 CB CF -  -      set SF_ZERO,a
 1291 D1:BB67 CB BF -  -      res SF_NEG,a
 1292 D1:BB69 FA 6E BB D1     jp  m,$+5
 1293 D1:BB6D CB FF -  -      set SF_NEG,a
 1294 D1:BB6F DD 77 04 -      ld  (ix+REGSR),a
 1295 D1:BB72 ED 33 02 -      ADDCYC(2)
 1296 D1:BB75 C3 EB B1 D1     jp i6502FinishLoad
 1297 D1:BB79 -  -  -  -  
 1298 D1:BB79 -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1299 D1:BB79 -  -  -  -  ;Flags altered: NZ
 1300 D1:BB79 -  -  -  -  ;implied	DEY	88	1	2  
 1301 D1:BB79 -  -  -  -  inst6502_dey:
 1302 D1:BB79 DD 35 02 -      dec (ix+REGY)
 1303 D1:BB7C 18 E0 -  -      jr  -_
 1304 D1:BB7E -  -  -  -  
 1305 D1:BB7E -  -  -  -  
 1306 D1:BB7E -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1307 D1:BB7E -  -  -  -  ;Flags altered: NZ
 1308 D1:BB7E -  -  -  -  ;implied	INX	E8	1	2  
 1309 D1:BB7E -  -  -  -  inst6502_inx:
 1310 D1:BB7E DD 34 01 -      inc (ix+REGX)
 1311 D1:BB81 18 DB -  -      jr  -_
 1312 D1:BB83 -  -  -  -  
 1313 D1:BB83 -  -  -  -  
 1314 D1:BB83 -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1315 D1:BB83 -  -  -  -  ;Flags altered: NZ
 1316 D1:BB83 -  -  -  -  ;implied	INY	C8	1	2  
 1317 D1:BB83 -  -  -  -  inst6502_iny:
 1318 D1:BB83 DD 34 02 -      inc (ix+REGY)
 1319 D1:BB86 18 D6 -  -      jr  -_
 1320 D1:BB88 -  -  -  -  
 1321 D1:BB88 -  -  -  -  
 1322 D1:BB88 -  -  -  -  ;INC - Increment Memory by One
 1323 D1:BB88 -  -  -  -  ;    M + 1 -> M
 1324 D1:BB88 -  -  -  -  ;    N	Z	C	I	D	V
 1325 D1:BB88 -  -  -  -  ;    +	+	-	-	-	-
 1326 D1:BB88 -  -  -  -  
 1327 D1:BB88 -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1328 D1:BB88 -  -  -  -  inst6502_inc_zp:
 1329 D1:BB88 7E -  -  -      ld  a,(hl)
 1330 D1:BB89 01 00 38 D0     ld  bc,ZEROPAGE
 1331 D1:BB8D 81 -  -  -      add a,c
 1332 D1:BB8E 4F -  -  -      ld  c,a
 1333 D1:BB8F 0A -  -  -      ld  a,(bc)
 1334 D1:BB90 3C -  -  -      inc a
 1335 D1:BB91 02 -  -  -      ld  (bc),a
 1336 D1:BB92 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1337 D1:BBA5 ED 33 05 -      ADDCYC(5)
 1338 D1:BBA8 C3 D2 B1 D1     jp i6502NextLoad
 1339 D1:BBAC -  -  -  -  
 1340 D1:BBAC -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1341 D1:BBAC -  -  -  -  inst6502_inc_zpx:
 1342 D1:BBAC 7E -  -  -      ld  a,(hl)
 1343 D1:BBAD 01 00 38 D0     ld  bc,ZEROPAGE
 1344 D1:BBB1 81 -  -  -      add a,c
 1345 D1:BBB2 DD 86 01 -      add a,(ix+REGX)
 1346 D1:BBB5 4F -  -  -      ld  c,a
 1347 D1:BBB6 0A -  -  -      ld  a,(bc)
 1348 D1:BBB7 3C -  -  -      inc a
 1349 D1:BBB8 02 -  -  -      ld  (bc),a
 1350 D1:BBB9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1351 D1:BBCC ED 33 06 -      ADDCYC(6)
 1352 D1:BBCF C3 D2 B1 D1     jp i6502NextLoad
 1353 D1:BBD3 -  -  -  -      
 1354 D1:BBD3 -  -  -  -  ;absolute	INC oper	EE	3	6
 1355 D1:BBD3 -  -  -  -  inst6502_inc_abs:
 1356 D1:BBD3 CD EF B3 D1     call subroutine6502_abs_split_start
 1357 D1:BBD7 E5 -  -  -      push hl
 1358 D1:BBD8 50 -  -  -          ld  d,b
 1359 D1:BBD9 79 -  -  -          ld  a,c
 1360 D1:BBDA 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1361 D1:BBDC ED 4C -  -          mlt bc
 1362 D1:BBDE 21 00 40 D0         ld  hl,PAGETABLE
 1363 D1:BBE2 09 -  -  -          add hl,bc
 1364 D1:BBE3 ED 27 -  -          ld  hl,(hl)
 1365 D1:BBE5 06 00 -  -          ld  b,0
 1366 D1:BBE7 4F -  -  -          ld  c,a
 1367 D1:BBE8 09 -  -  -          add hl,bc   ;full address
 1368 D1:BBE9 7E -  -  -          READ_ACCESS
 1369 D1:BBEA 3C -  -  -          inc a
 1370 D1:BBEB 47 -  -  -          ld  b,a
 1371 D1:BBEC -  -  -  -          ;
 1372 D1:BBEC DD 7E 04 -          ld  a,(ix+REGSR)
 1373 D1:BBEF CB 8F -  -          res SF_ZERO,a
 1374 D1:BBF1 20 02 -  -          jr  nz,$+4
 1375 D1:BBF3 CB CF -  -          set SF_ZERO,a
 1376 D1:BBF5 CB BF -  -          res SF_NEG,a
 1377 D1:BBF7 FA FC BB D1         jp  m,$+5
 1378 D1:BBFB CB FF -  -          set SF_NEG,a
 1379 D1:BBFD DD 77 04 -          ld  (ix+REGSR),a
 1380 D1:BC00 -  -  -  -          ;
 1381 D1:BC00 70 -  -  -          WRITE_ACCESS
 1382 D1:BC01 ED 33 06 -          ADDCYC(6)
 1383 D1:BC04 E1 -  -  -      pop hl
 1384 D1:BC05 C3 D2 B1 D1     jp i6502NextLoad
 1385 D1:BC09 -  -  -  -  
 1386 D1:BC09 -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1387 D1:BC09 -  -  -  -  inst6502_inc_absx:
 1388 D1:BC09 CD EF B3 D1     call subroutine6502_abs_split_start
 1389 D1:BC0D E5 -  -  -      push hl
 1390 D1:BC0E 50 -  -  -          ld  d,b
 1391 D1:BC0F 79 -  -  -          ld  a,c
 1392 D1:BC10 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1393 D1:BC12 ED 4C -  -          mlt bc
 1394 D1:BC14 21 00 40 D0         ld  hl,PAGETABLE
 1395 D1:BC18 09 -  -  -          add hl,bc
 1396 D1:BC19 ED 27 -  -          ld  hl,(hl)
 1397 D1:BC1B 06 00 -  -          ld  b,0
 1398 D1:BC1D DD 86 01 -          add a,(ix+REGX)
 1399 D1:BC20 4F -  -  -          ld  c,a
 1400 D1:BC21 30 02 -  -          jr nc,+_
 1401 D1:BC23 04 -  -  -          inc b
 1402 D1:BC24 14 -  -  -          inc d
 1403 D1:BC25 09 -  -  -  _:      add hl,bc   ;full address
 1404 D1:BC26 7E -  -  -          READ_ACCESS
 1405 D1:BC27 3C -  -  -          inc a
 1406 D1:BC28 47 -  -  -          ld  b,a
 1407 D1:BC29 -  -  -  -          ;
 1408 D1:BC29 DD 7E 04 -          ld  a,(ix+REGSR)
 1409 D1:BC2C CB 8F -  -          res SF_ZERO,a
 1410 D1:BC2E 20 02 -  -          jr  nz,$+4
 1411 D1:BC30 CB CF -  -          set SF_ZERO,a
 1412 D1:BC32 CB BF -  -          res SF_NEG,a
 1413 D1:BC34 FA 39 BC D1         jp  m,$+5
 1414 D1:BC38 CB FF -  -          set SF_NEG,a
 1415 D1:BC3A DD 77 04 -          ld  (ix+REGSR),a
 1416 D1:BC3D -  -  -  -          ;
 1417 D1:BC3D 70 -  -  -          WRITE_ACCESS
 1418 D1:BC3E ED 33 07 -          ADDCYC(7)
 1419 D1:BC41 E1 -  -  -      pop hl
 1420 D1:BC42 C3 D2 B1 D1     jp i6502NextLoad
 1421 D1:BC46 -  -  -  -  
 1422 D1:BC46 -  -  -  -  ;-----------------------------------------------------------------------------
 1423 D1:BC46 -  -  -  -  ;-----------------------------------------------------------------------------
 1424 D1:BC46 -  -  -  -  ;-----------------------------------------------------------------------------
 1425 D1:BC46 -  -  -  -  ;Instructions by type: Arithmetic Operations
 1426 D1:BC46 -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1427 D1:BC46 -  -  -  -  ;    N	Z	C	I	D	V
 1428 D1:BC46 -  -  -  -  ;    +	+	+	-	-	+
 1429 D1:BC46 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1430 D1:BC46 -  -  -  -  
 1431 D1:BC46 -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1432 D1:BC46 -  -  -  -  inst6502_adc_imm:
 1433 D1:BC46 ED 33 02 -      ADDCYC(2)
 1434 D1:BC49 4E -  -  -      ld  c,(hl)
 1435 D1:BC4A C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1436 D1:BC4E -  -  -  -      
 1437 D1:BC4E -  -  -  -  
 1438 D1:BC4E -  -  -  -  ;zeropage	ADC oper	65	2	3
 1439 D1:BC4E -  -  -  -  inst6502_adc_zp:
 1440 D1:BC4E ED 33 03 -      ADDCYC(3)
 1441 D1:BC51 7E -  -  -      ld  a,(hl)
 1442 D1:BC52 01 00 38 D0     ld  bc,ZEROPAGE
 1443 D1:BC56 81 -  -  -      add a,c
 1444 D1:BC57 4F -  -  -      ld  c,a
 1445 D1:BC58 0A -  -  -      ld  a,(bc)
 1446 D1:BC59 4F -  -  -      ld  c,a
 1447 D1:BC5A C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1448 D1:BC5E -  -  -  -  
 1449 D1:BC5E -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1450 D1:BC5E -  -  -  -  inst6502_adc_zpx:
 1451 D1:BC5E ED 33 04 -      ADDCYC(4)
 1452 D1:BC61 7E -  -  -      ld  a,(hl)
 1453 D1:BC62 DD 86 01 -      add a,(ix+REGX)
 1454 D1:BC65 01 00 38 D0     ld  bc,ZEROPAGE
 1455 D1:BC69 81 -  -  -      add a,c
 1456 D1:BC6A 4F -  -  -      ld  c,a
 1457 D1:BC6B 0A -  -  -      ld  a,(bc)
 1458 D1:BC6C 4F -  -  -      ld  c,a
 1459 D1:BC6D C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1460 D1:BC71 -  -  -  -  
 1461 D1:BC71 -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1462 D1:BC71 -  -  -  -  inst6502_adc_abs:
 1463 D1:BC71 ED 33 04 -      ADDCYC(4)
 1464 D1:BC74 CD EF B3 D1     call subroutine6502_abs_split_start
 1465 D1:BC78 E5 -  -  -      push hl
 1466 D1:BC79 50 -  -  -          ld  d,b
 1467 D1:BC7A 79 -  -  -          ld  a,c
 1468 D1:BC7B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1469 D1:BC7D ED 4C -  -          mlt bc
 1470 D1:BC7F 21 00 40 D0         ld  hl,PAGETABLE
 1471 D1:BC83 09 -  -  -          add hl,bc
 1472 D1:BC84 ED 27 -  -          ld  hl,(hl)
 1473 D1:BC86 06 00 -  -          ld  b,0
 1474 D1:BC88 4F -  -  -          ld  c,a
 1475 D1:BC89 09 -  -  -          add hl,bc   ;full address
 1476 D1:BC8A 7E -  -  -          READ_ACCESS
 1477 D1:BC8B E1 -  -  -      pop hl
 1478 D1:BC8C 4F -  -  -      ld  c,a
 1479 D1:BC8D C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1480 D1:BC91 -  -  -  -  
 1481 D1:BC91 -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1482 D1:BC91 -  -  -  -  inst6502_adc_absx:
 1483 D1:BC91 ED 33 04 -      ADDCYC(4)
 1484 D1:BC94 CD EF B3 D1     call subroutine6502_abs_split_start
 1485 D1:BC98 E5 -  -  -      push hl
 1486 D1:BC99 50 -  -  -          ld  d,b
 1487 D1:BC9A 79 -  -  -          ld  a,c
 1488 D1:BC9B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1489 D1:BC9D ED 4C -  -          mlt bc
 1490 D1:BC9F 21 00 40 D0         ld  hl,PAGETABLE
 1491 D1:BCA3 09 -  -  -          add hl,bc
 1492 D1:BCA4 ED 27 -  -          ld  hl,(hl)
 1493 D1:BCA6 06 00 -  -          ld  b,0
 1494 D1:BCA8 DD 86 01 -          add a,(ix+REGX)
 1495 D1:BCAB 4F -  -  -          ld  c,a
 1496 D1:BCAC 30 04 -  -          jr  nc,+_
 1497 D1:BCAE FD 23 -  -          ADDCYC(1)
 1498 D1:BCB0 04 -  -  -          inc b
 1499 D1:BCB1 14 -  -  -          inc d
 1500 D1:BCB2 09 -  -  -  _:      add hl,bc   ;full address
 1501 D1:BCB3 7E -  -  -          READ_ACCESS
 1502 D1:BCB4 E1 -  -  -      pop hl
 1503 D1:BCB5 4F -  -  -      ld  c,a
 1504 D1:BCB6 C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1505 D1:BCBA -  -  -  -  
 1506 D1:BCBA -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1507 D1:BCBA -  -  -  -  inst6502_adc_absy:
 1508 D1:BCBA ED 33 04 -      ADDCYC(4)
 1509 D1:BCBD CD EF B3 D1     call subroutine6502_abs_split_start
 1510 D1:BCC1 E5 -  -  -      push hl
 1511 D1:BCC2 50 -  -  -          ld  d,b
 1512 D1:BCC3 79 -  -  -          ld  a,c
 1513 D1:BCC4 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1514 D1:BCC6 ED 4C -  -          mlt bc
 1515 D1:BCC8 21 00 40 D0         ld  hl,PAGETABLE
 1516 D1:BCCC 09 -  -  -          add hl,bc
 1517 D1:BCCD ED 27 -  -          ld  hl,(hl)
 1518 D1:BCCF 06 00 -  -          ld  b,0
 1519 D1:BCD1 DD 86 02 -          add a,(ix+REGY)
 1520 D1:BCD4 4F -  -  -          ld  c,a
 1521 D1:BCD5 30 04 -  -          jr  nc,+_
 1522 D1:BCD7 FD 23 -  -          ADDCYC(1)
 1523 D1:BCD9 04 -  -  -          inc b
 1524 D1:BCDA 14 -  -  -          inc d
 1525 D1:BCDB 09 -  -  -  _:      add hl,bc   ;full address
 1526 D1:BCDC 7E -  -  -          READ_ACCESS
 1527 D1:BCDD E1 -  -  -      pop hl
 1528 D1:BCDE 4F -  -  -      ld  c,a
 1529 D1:BCDF C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1530 D1:BCE3 -  -  -  -  
 1531 D1:BCE3 -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1532 D1:BCE3 -  -  -  -  inst6502_adc_indx:
 1533 D1:BCE3 ED 33 06 -      ADDCYC(6)
 1534 D1:BCE6 E5 -  -  -      push hl
 1535 D1:BCE7 7E -  -  -          ld  a,(hl)
 1536 D1:BCE8 21 00 38 D0         ld  hl,ZEROPAGE
 1537 D1:BCEC 85 -  -  -          add a,L
 1538 D1:BCED DD 86 01 -          add a,(ix+REGX)
 1539 D1:BCF0 6F -  -  -          ld  L,a
 1540 D1:BCF1 7E -  -  -          ld  a,(hl)
 1541 D1:BCF2 2C -  -  -          inc L
 1542 D1:BCF3 56 -  -  -          ld  d,(hl)
 1543 D1:BCF4 42 -  -  -          ld  b,d
 1544 D1:BCF5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1545 D1:BCF7 ED 4C -  -          mlt bc
 1546 D1:BCF9 21 00 40 D0         ld  hl,PAGETABLE
 1547 D1:BCFD 09 -  -  -          add hl,bc
 1548 D1:BCFE ED 27 -  -          ld  hl,(hl)
 1549 D1:BD00 06 00 -  -          ld  b,0
 1550 D1:BD02 4F -  -  -          ld  c,a
 1551 D1:BD03 09 -  -  -          add hl,bc
 1552 D1:BD04 7E -  -  -          READ_ACCESS
 1553 D1:BD05 E1 -  -  -      pop hl
 1554 D1:BD06 4F -  -  -      ld  c,a
 1555 D1:BD07 C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1556 D1:BD0B -  -  -  -  
 1557 D1:BD0B -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1558 D1:BD0B -  -  -  -  inst6502_adc_indy:
 1559 D1:BD0B E5 -  -  -      push hl
 1560 D1:BD0C 7E -  -  -          ld  a,(hl)
 1561 D1:BD0D 21 00 38 D0         ld  hl,ZEROPAGE
 1562 D1:BD11 85 -  -  -          add a,L
 1563 D1:BD12 6F -  -  -          ld  L,a
 1564 D1:BD13 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1565 D1:BD14 2C -  -  -          inc L
 1566 D1:BD15 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1567 D1:BD18 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1568 D1:BD19 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1569 D1:BD1B FD 23 -  -          ADDCYC(1)
 1570 D1:BD1D 24 -  -  -          inc h
 1571 D1:BD1E 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1572 D1:BD1F 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1573 D1:BD21 ED 6C -  -          mlt hl          ;23.
 1574 D1:BD23 01 00 40 D0         ld  bc,PAGETABLE
 1575 D1:BD27 09 -  -  -          add hl,bc
 1576 D1:BD28 ED 27 -  -          ld  hl,(hl)     ;address get.
 1577 D1:BD2A 01 00 00 00         ld  bc,0
 1578 D1:BD2E 4F -  -  -          ld  c,a
 1579 D1:BD2F 09 -  -  -          add hl,bc       ;Full address get.
 1580 D1:BD30 7E -  -  -          READ_ACCESS
 1581 D1:BD31 E1 -  -  -      pop hl
 1582 D1:BD32 4F -  -  -      ld  c,a
 1583 D1:BD33 C3 0B B4 D1     jp  subroutine6502_adc_combined_end
 1584 D1:BD37 -  -  -  -  
 1585 D1:BD37 -  -  -  -  
 1586 D1:BD37 -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1587 D1:BD37 -  -  -  -  ;A - M - C̅ -> A
 1588 D1:BD37 -  -  -  -  ;N	Z	C	I	D	V
 1589 D1:BD37 -  -  -  -  ;+	+	+	-	-	+
 1590 D1:BD37 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1591 D1:BD37 -  -  -  -  
 1592 D1:BD37 -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1593 D1:BD37 -  -  -  -  inst6502_sbc_imm:
 1594 D1:BD37 ED 33 02 -      ADDCYC(2)
 1595 D1:BD3A 4E -  -  -      ld  c,(hl)
 1596 D1:BD3B C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1597 D1:BD3F -  -  -  -  
 1598 D1:BD3F -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1599 D1:BD3F -  -  -  -  inst6502_sbc_zp:
 1600 D1:BD3F ED 33 03 -      ADDCYC(3)
 1601 D1:BD42 7E -  -  -      ld  a,(hl)
 1602 D1:BD43 01 00 38 D0     ld  bc,ZEROPAGE
 1603 D1:BD47 81 -  -  -      add a,c
 1604 D1:BD48 4F -  -  -      ld  c,a
 1605 D1:BD49 0A -  -  -      ld  a,(bc)
 1606 D1:BD4A 4F -  -  -      ld  c,a
 1607 D1:BD4B C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1608 D1:BD4F -  -  -  -  
 1609 D1:BD4F -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1610 D1:BD4F -  -  -  -  inst6502_sbc_zpx:
 1611 D1:BD4F ED 33 04 -      ADDCYC(4)
 1612 D1:BD52 7E -  -  -      ld  a,(hl)
 1613 D1:BD53 DD 86 01 -      add a,(ix+REGX)
 1614 D1:BD56 01 00 38 D0     ld  bc,ZEROPAGE
 1615 D1:BD5A 81 -  -  -      add a,c
 1616 D1:BD5B 4F -  -  -      ld  c,a
 1617 D1:BD5C 0A -  -  -      ld  a,(bc)
 1618 D1:BD5D 4F -  -  -      ld  c,a
 1619 D1:BD5E C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1620 D1:BD62 -  -  -  -  
 1621 D1:BD62 -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1622 D1:BD62 -  -  -  -  inst6502_sbc_abs:
 1623 D1:BD62 ED 33 04 -      ADDCYC(4)
 1624 D1:BD65 CD EF B3 D1     call subroutine6502_abs_split_start
 1625 D1:BD69 E5 -  -  -      push hl
 1626 D1:BD6A 50 -  -  -          ld  d,b
 1627 D1:BD6B 79 -  -  -          ld  a,c
 1628 D1:BD6C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1629 D1:BD6E ED 4C -  -          mlt bc
 1630 D1:BD70 21 00 40 D0         ld  hl,PAGETABLE
 1631 D1:BD74 09 -  -  -          add hl,bc
 1632 D1:BD75 ED 27 -  -          ld  hl,(hl)
 1633 D1:BD77 06 00 -  -          ld  b,0
 1634 D1:BD79 4F -  -  -          ld  c,a
 1635 D1:BD7A 09 -  -  -          add hl,bc   ;full address
 1636 D1:BD7B 7E -  -  -          READ_ACCESS
 1637 D1:BD7C E1 -  -  -      pop hl
 1638 D1:BD7D 4F -  -  -      ld  c,a
 1639 D1:BD7E C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1640 D1:BD82 -  -  -  -  
 1641 D1:BD82 -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1642 D1:BD82 -  -  -  -  inst6502_sbc_absx:
 1643 D1:BD82 ED 33 04 -      ADDCYC(4)
 1644 D1:BD85 CD EF B3 D1     call subroutine6502_abs_split_start
 1645 D1:BD89 E5 -  -  -      push hl
 1646 D1:BD8A 50 -  -  -          ld  d,b
 1647 D1:BD8B 79 -  -  -          ld  a,c
 1648 D1:BD8C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1649 D1:BD8E ED 4C -  -          mlt bc
 1650 D1:BD90 21 00 40 D0         ld  hl,PAGETABLE
 1651 D1:BD94 09 -  -  -          add hl,bc
 1652 D1:BD95 ED 27 -  -          ld  hl,(hl)
 1653 D1:BD97 06 00 -  -          ld  b,0
 1654 D1:BD99 DD 86 01 -          add a,(ix+REGX)
 1655 D1:BD9C 4F -  -  -          ld  c,a
 1656 D1:BD9D 30 04 -  -          jr  nc,+_
 1657 D1:BD9F FD 23 -  -          ADDCYC(1)
 1658 D1:BDA1 04 -  -  -          inc b
 1659 D1:BDA2 14 -  -  -          inc d
 1660 D1:BDA3 09 -  -  -  _:      add hl,bc   ;full address
 1661 D1:BDA4 7E -  -  -          READ_ACCESS
 1662 D1:BDA5 E1 -  -  -      pop hl
 1663 D1:BDA6 4F -  -  -      ld  c,a
 1664 D1:BDA7 C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1665 D1:BDAB -  -  -  -  
 1666 D1:BDAB -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1667 D1:BDAB -  -  -  -  inst6502_sbc_absy:
 1668 D1:BDAB ED 33 04 -      ADDCYC(4)
 1669 D1:BDAE CD EF B3 D1     call subroutine6502_abs_split_start
 1670 D1:BDB2 E5 -  -  -      push hl
 1671 D1:BDB3 50 -  -  -          ld  d,b
 1672 D1:BDB4 79 -  -  -          ld  a,c
 1673 D1:BDB5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1674 D1:BDB7 ED 4C -  -          mlt bc
 1675 D1:BDB9 21 00 40 D0         ld  hl,PAGETABLE
 1676 D1:BDBD 09 -  -  -          add hl,bc
 1677 D1:BDBE ED 27 -  -          ld  hl,(hl)
 1678 D1:BDC0 06 00 -  -          ld  b,0
 1679 D1:BDC2 DD 86 02 -          add a,(ix+REGY)
 1680 D1:BDC5 4F -  -  -          ld  c,a
 1681 D1:BDC6 30 04 -  -          jr  nc,+_
 1682 D1:BDC8 FD 23 -  -          ADDCYC(1)
 1683 D1:BDCA 04 -  -  -          inc b
 1684 D1:BDCB 14 -  -  -          inc d
 1685 D1:BDCC 09 -  -  -  _:      add hl,bc   ;full address
 1686 D1:BDCD 7E -  -  -          READ_ACCESS
 1687 D1:BDCE E1 -  -  -      pop hl
 1688 D1:BDCF 4F -  -  -      ld  c,a
 1689 D1:BDD0 C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1690 D1:BDD4 -  -  -  -  
 1691 D1:BDD4 -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1692 D1:BDD4 -  -  -  -  inst6502_sbc_indx:
 1693 D1:BDD4 ED 33 06 -      ADDCYC(6)
 1694 D1:BDD7 E5 -  -  -      push hl
 1695 D1:BDD8 7E -  -  -          ld  a,(hl)
 1696 D1:BDD9 21 00 38 D0         ld  hl,ZEROPAGE
 1697 D1:BDDD 85 -  -  -          add a,L
 1698 D1:BDDE DD 86 01 -          add a,(ix+REGX)
 1699 D1:BDE1 6F -  -  -          ld  L,a
 1700 D1:BDE2 7E -  -  -          ld  a,(hl)
 1701 D1:BDE3 2C -  -  -          inc L
 1702 D1:BDE4 56 -  -  -          ld  d,(hl)
 1703 D1:BDE5 42 -  -  -          ld  b,d
 1704 D1:BDE6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1705 D1:BDE8 ED 4C -  -          mlt bc
 1706 D1:BDEA 21 00 40 D0         ld  hl,PAGETABLE
 1707 D1:BDEE 09 -  -  -          add hl,bc
 1708 D1:BDEF ED 27 -  -          ld  hl,(hl)
 1709 D1:BDF1 06 00 -  -          ld  b,0
 1710 D1:BDF3 4F -  -  -          ld  c,a
 1711 D1:BDF4 09 -  -  -          add hl,bc
 1712 D1:BDF5 7E -  -  -          READ_ACCESS
 1713 D1:BDF6 E1 -  -  -      pop hl
 1714 D1:BDF7 4F -  -  -      ld  c,a
 1715 D1:BDF8 C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1716 D1:BDFC -  -  -  -  
 1717 D1:BDFC -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1718 D1:BDFC -  -  -  -  inst6502_sbc_indy:
 1719 D1:BDFC E5 -  -  -      push hl
 1720 D1:BDFD 7E -  -  -          ld  a,(hl)
 1721 D1:BDFE 21 00 38 D0         ld  hl,ZEROPAGE
 1722 D1:BE02 85 -  -  -          add a,L
 1723 D1:BE03 6F -  -  -          ld  L,a
 1724 D1:BE04 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1725 D1:BE05 2C -  -  -          inc L
 1726 D1:BE06 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1727 D1:BE09 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1728 D1:BE0A 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1729 D1:BE0C FD 23 -  -          ADDCYC(1)
 1730 D1:BE0E 24 -  -  -          inc h
 1731 D1:BE0F 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1732 D1:BE10 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1733 D1:BE12 ED 6C -  -          mlt hl          ;23.
 1734 D1:BE14 01 00 40 D0         ld  bc,PAGETABLE
 1735 D1:BE18 09 -  -  -          add hl,bc
 1736 D1:BE19 ED 27 -  -          ld  hl,(hl)     ;address get.
 1737 D1:BE1B 01 00 00 00         ld  bc,0
 1738 D1:BE1F 4F -  -  -          ld  c,a
 1739 D1:BE20 09 -  -  -          add hl,bc       ;Full address get.
 1740 D1:BE21 7E -  -  -          READ_ACCESS
 1741 D1:BE22 E1 -  -  -      pop hl
 1742 D1:BE23 4F -  -  -      ld  c,a
 1743 D1:BE24 C3 3B B4 D1     jp  subroutine6502_sbc_combined_end
 1744 D1:BE28 -  -  -  -  
 1745 D1:BE28 -  -  -  -  
 1746 D1:BE28 -  -  -  -  
 1747 D1:BE28 -  -  -  -  ;-----------------------------------------------------------------------------
 1748 D1:BE28 -  -  -  -  ;-----------------------------------------------------------------------------
 1749 D1:BE28 -  -  -  -  ;-----------------------------------------------------------------------------
 1750 D1:BE28 -  -  -  -  ;Instructions by type: Logical Operations
 1751 D1:BE28 -  -  -  -  
 1752 D1:BE28 -  -  -  -  ;AND - AND Memory with Accumulator
 1753 D1:BE28 -  -  -  -  ;A AND M -> A
 1754 D1:BE28 -  -  -  -  ;N	Z	C	I	D	V
 1755 D1:BE28 -  -  -  -  ;+	+	-	-	-	-
 1756 D1:BE28 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1757 D1:BE28 -  -  -  -  
 1758 D1:BE28 -  -  -  -  ;immediate	AND #oper	29	2	2  
 1759 D1:BE28 -  -  -  -  inst6502_and_imm:
 1760 D1:BE28 ED 33 02 -      ADDCYC(2)
 1761 D1:BE2B 7E -  -  -      ld  a,(hl)
 1762 D1:BE2C DD A6 00 -      and a,(ix+REGA)
 1763 D1:BE2F DD 77 00 -      ld  (ix+REGA),A
 1764 D1:BE32 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1765 D1:BE45 C3 D2 B1 D1     jp i6502NextLoad
 1766 D1:BE49 -  -  -  -  
 1767 D1:BE49 -  -  -  -  ;zeropage	AND oper	25	2	3  
 1768 D1:BE49 -  -  -  -  inst6502_and_zp:
 1769 D1:BE49 ED 33 03 -      ADDCYC(3)
 1770 D1:BE4C 7E -  -  -      ld  a,(hl)
 1771 D1:BE4D 01 00 38 D0     ld  bc,ZEROPAGE
 1772 D1:BE51 81 -  -  -      add a,c
 1773 D1:BE52 4F -  -  -      ld  c,a
 1774 D1:BE53 0A -  -  -      ld  a,(bc)
 1775 D1:BE54 DD A6 00 -      and a,(ix+REGA)
 1776 D1:BE57 DD 77 00 -      ld  (ix+REGA),A
 1777 D1:BE5A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1778 D1:BE6D C3 D2 B1 D1     jp i6502NextLoad
 1779 D1:BE71 -  -  -  -  
 1780 D1:BE71 -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1781 D1:BE71 -  -  -  -  inst6502_and_zpx:
 1782 D1:BE71 ED 33 04 -      ADDCYC(4)
 1783 D1:BE74 7E -  -  -      ld  a,(hl)
 1784 D1:BE75 01 00 38 D0     ld  bc,ZEROPAGE
 1785 D1:BE79 81 -  -  -      add a,c
 1786 D1:BE7A DD 86 01 -      add a,(ix+REGX)
 1787 D1:BE7D 4F -  -  -      ld  c,a
 1788 D1:BE7E 0A -  -  -      ld  a,(bc)
 1789 D1:BE7F DD A6 00 -      and a,(ix+REGA)
 1790 D1:BE82 DD 77 00 -      ld  (ix+REGA),A
 1791 D1:BE85 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1792 D1:BE98 C3 D2 B1 D1     jp i6502NextLoad
 1793 D1:BE9C -  -  -  -  
 1794 D1:BE9C -  -  -  -  ;absolute	AND oper	2D	3	4  
 1795 D1:BE9C -  -  -  -  inst6502_and_abs:
 1796 D1:BE9C ED 33 04 -      ADDCYC(4)
 1797 D1:BE9F CD EF B3 D1     call subroutine6502_abs_split_start
 1798 D1:BEA3 E5 -  -  -      push hl
 1799 D1:BEA4 50 -  -  -          ld  d,b
 1800 D1:BEA5 79 -  -  -          ld  a,c
 1801 D1:BEA6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1802 D1:BEA8 ED 4C -  -          mlt bc
 1803 D1:BEAA 21 00 40 D0         ld  hl,PAGETABLE
 1804 D1:BEAE 09 -  -  -          add hl,bc
 1805 D1:BEAF ED 27 -  -          ld  hl,(hl)
 1806 D1:BEB1 06 00 -  -          ld  b,0
 1807 D1:BEB3 4F -  -  -          ld  c,a
 1808 D1:BEB4 09 -  -  -          add hl,bc   ;full address
 1809 D1:BEB5 7E -  -  -          READ_ACCESS
 1810 D1:BEB6 E1 -  -  -      pop hl
 1811 D1:BEB7 DD A6 00 -      and a,(ix+REGA)
 1812 D1:BEBA DD 77 00 -      ld  (ix+REGA),A
 1813 D1:BEBD DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1814 D1:BED0 C3 D2 B1 D1     jp i6502NextLoad
 1815 D1:BED4 -  -  -  -  
 1816 D1:BED4 -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1817 D1:BED4 -  -  -  -  inst6502_and_absx:
 1818 D1:BED4 ED 33 04 -      ADDCYC(4)
 1819 D1:BED7 CD EF B3 D1     call subroutine6502_abs_split_start
 1820 D1:BEDB E5 -  -  -      push hl
 1821 D1:BEDC 50 -  -  -          ld  d,b
 1822 D1:BEDD 79 -  -  -          ld  a,c
 1823 D1:BEDE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1824 D1:BEE0 ED 4C -  -          mlt bc
 1825 D1:BEE2 21 00 40 D0         ld  hl,PAGETABLE
 1826 D1:BEE6 09 -  -  -          add hl,bc
 1827 D1:BEE7 ED 27 -  -          ld  hl,(hl)
 1828 D1:BEE9 06 00 -  -          ld  b,0
 1829 D1:BEEB DD 86 01 -          add a,(ix+REGX)
 1830 D1:BEEE 4F -  -  -          ld  c,a
 1831 D1:BEEF 30 04 -  -          jr  nc,+_
 1832 D1:BEF1 04 -  -  -          inc b
 1833 D1:BEF2 14 -  -  -          inc d
 1834 D1:BEF3 FD 23 -  -          ADDCYC(1)
 1835 D1:BEF5 09 -  -  -  _:      add hl,bc   ;full address
 1836 D1:BEF6 7E -  -  -          READ_ACCESS
 1837 D1:BEF7 E1 -  -  -      pop hl
 1838 D1:BEF8 DD A6 00 -      and a,(ix+REGA)
 1839 D1:BEFB DD 77 00 -      ld  (ix+REGA),A
 1840 D1:BEFE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1841 D1:BF11 C3 D2 B1 D1     jp i6502NextLoad
 1842 D1:BF15 -  -  -  -  
 1843 D1:BF15 -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1844 D1:BF15 -  -  -  -  inst6502_and_absy:
 1845 D1:BF15 ED 33 04 -      ADDCYC(4)
 1846 D1:BF18 CD EF B3 D1     call subroutine6502_abs_split_start
 1847 D1:BF1C E5 -  -  -      push hl
 1848 D1:BF1D 50 -  -  -          ld  d,b
 1849 D1:BF1E 79 -  -  -          ld  a,c
 1850 D1:BF1F 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1851 D1:BF21 ED 4C -  -          mlt bc
 1852 D1:BF23 21 00 40 D0         ld  hl,PAGETABLE
 1853 D1:BF27 09 -  -  -          add hl,bc
 1854 D1:BF28 ED 27 -  -          ld  hl,(hl)
 1855 D1:BF2A 06 00 -  -          ld  b,0
 1856 D1:BF2C DD 86 02 -          add a,(ix+REGY)
 1857 D1:BF2F 4F -  -  -          ld  c,a
 1858 D1:BF30 30 04 -  -          jr  nc,+_
 1859 D1:BF32 04 -  -  -          inc b
 1860 D1:BF33 14 -  -  -          inc d
 1861 D1:BF34 FD 23 -  -          ADDCYC(1)
 1862 D1:BF36 09 -  -  -  _:      add hl,bc   ;full address
 1863 D1:BF37 7E -  -  -          READ_ACCESS
 1864 D1:BF38 E1 -  -  -      pop hl
 1865 D1:BF39 DD A6 00 -      and a,(ix+REGA)
 1866 D1:BF3C DD 77 00 -      ld  (ix+REGA),A
 1867 D1:BF3F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1868 D1:BF52 C3 D2 B1 D1     jp i6502NextLoad
 1869 D1:BF56 -  -  -  -  
 1870 D1:BF56 -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1871 D1:BF56 -  -  -  -  inst6502_and_indx:
 1872 D1:BF56 ED 33 06 -      ADDCYC(6)
 1873 D1:BF59 E5 -  -  -      push hl
 1874 D1:BF5A 7E -  -  -          ld  a,(hl)
 1875 D1:BF5B 21 00 38 D0         ld  hl,ZEROPAGE
 1876 D1:BF5F 85 -  -  -          add a,L
 1877 D1:BF60 DD 86 01 -          add a,(ix+REGX)
 1878 D1:BF63 6F -  -  -          ld  L,a
 1879 D1:BF64 7E -  -  -          ld  a,(hl)
 1880 D1:BF65 2C -  -  -          inc L
 1881 D1:BF66 56 -  -  -          ld  d,(hl)
 1882 D1:BF67 42 -  -  -          ld  b,d
 1883 D1:BF68 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1884 D1:BF6A ED 4C -  -          mlt bc
 1885 D1:BF6C 21 00 40 D0         ld  hl,PAGETABLE
 1886 D1:BF70 09 -  -  -          add hl,bc
 1887 D1:BF71 ED 27 -  -          ld  hl,(hl)
 1888 D1:BF73 06 00 -  -          ld  b,0
 1889 D1:BF75 4F -  -  -          ld  c,a
 1890 D1:BF76 09 -  -  -          add hl,bc
 1891 D1:BF77 7E -  -  -          READ_ACCESS
 1892 D1:BF78 E1 -  -  -      pop hl
 1893 D1:BF79 DD A6 00 -      and a,(ix+REGA)
 1894 D1:BF7C DD 77 00 -      ld  (ix+REGA),A
 1895 D1:BF7F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1896 D1:BF92 C3 D2 B1 D1     jp i6502NextLoad
 1897 D1:BF96 -  -  -  -  
 1898 D1:BF96 -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1899 D1:BF96 -  -  -  -  inst6502_and_indy:
 1900 D1:BF96 ED 33 05 -      ADDCYC(5)
 1901 D1:BF99 E5 -  -  -      push hl
 1902 D1:BF9A 7E -  -  -          ld  a,(hl)
 1903 D1:BF9B 21 00 38 D0         ld  hl,ZEROPAGE
 1904 D1:BF9F 85 -  -  -          add a,L
 1905 D1:BFA0 6F -  -  -          ld  L,a
 1906 D1:BFA1 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1907 D1:BFA2 2C -  -  -          inc L
 1908 D1:BFA3 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1909 D1:BFA6 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1910 D1:BFA7 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1911 D1:BFA9 24 -  -  -          inc h
 1912 D1:BFAA FD 23 -  -          ADDCYC(1)
 1913 D1:BFAC 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1914 D1:BFAD 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1915 D1:BFAF ED 6C -  -          mlt hl          ;23.
 1916 D1:BFB1 01 00 40 D0         ld  bc,PAGETABLE
 1917 D1:BFB5 09 -  -  -          add hl,bc
 1918 D1:BFB6 ED 27 -  -          ld  hl,(hl)     ;address get.
 1919 D1:BFB8 01 00 00 00         ld  bc,0
 1920 D1:BFBC 4F -  -  -          ld  c,a
 1921 D1:BFBD 09 -  -  -          add hl,bc       ;Full address get.
 1922 D1:BFBE 7E -  -  -          READ_ACCESS
 1923 D1:BFBF E1 -  -  -      pop hl
 1924 D1:BFC0 DD A6 00 -      and a,(ix+REGA)
 1925 D1:BFC3 DD 77 00 -      ld  (ix+REGA),A
 1926 D1:BFC6 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1927 D1:BFD9 C3 D2 B1 D1     jp i6502NextLoad
 1928 D1:BFDD -  -  -  -  
 1929 D1:BFDD -  -  -  -  ;-----------------------------------------------------------------------------
 1930 D1:BFDD -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1931 D1:BFDD -  -  -  -  ;A EOR M -> A
 1932 D1:BFDD -  -  -  -  ;N	Z	C	I	D	V
 1933 D1:BFDD -  -  -  -  ;+	+	-	-	-	-
 1934 D1:BFDD -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1935 D1:BFDD -  -  -  -  
 1936 D1:BFDD -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1937 D1:BFDD -  -  -  -  inst6502_eor_imm:
 1938 D1:BFDD ED 33 02 -      ADDCYC(2)
 1939 D1:BFE0 7E -  -  -      ld  a,(hl)
 1940 D1:BFE1 DD AE 00 -      xor a,(ix+REGA)
 1941 D1:BFE4 DD 77 00 -      ld  (ix+REGA),A
 1942 D1:BFE7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1943 D1:BFFA C3 D2 B1 D1     jp i6502NextLoad
 1944 D1:BFFE -  -  -  -  
 1945 D1:BFFE -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1946 D1:BFFE -  -  -  -  inst6502_eor_zp:
 1947 D1:BFFE ED 33 03 -      ADDCYC(3)
 1948 D1:C001 7E -  -  -      ld  a,(hl)
 1949 D1:C002 01 00 38 D0     ld  bc,ZEROPAGE
 1950 D1:C006 81 -  -  -      add a,c
 1951 D1:C007 4F -  -  -      ld  c,a
 1952 D1:C008 0A -  -  -      ld  a,(bc)
 1953 D1:C009 DD AE 00 -      xor a,(ix+REGA)
 1954 D1:C00C DD 77 00 -      ld  (ix+REGA),A
 1955 D1:C00F DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1956 D1:C022 C3 D2 B1 D1     jp i6502NextLoad
 1957 D1:C026 -  -  -  -  
 1958 D1:C026 -  -  -  -  
 1959 D1:C026 -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 1960 D1:C026 -  -  -  -  inst6502_eor_zpx:
 1961 D1:C026 ED 33 04 -      ADDCYC(4)
 1962 D1:C029 7E -  -  -      ld  a,(hl)
 1963 D1:C02A 01 00 38 D0     ld  bc,ZEROPAGE
 1964 D1:C02E 81 -  -  -      add a,c
 1965 D1:C02F DD 86 01 -      add a,(ix+REGX)
 1966 D1:C032 4F -  -  -      ld  c,a
 1967 D1:C033 0A -  -  -      ld  a,(bc)
 1968 D1:C034 DD AE 00 -      xor a,(ix+REGA)
 1969 D1:C037 DD 77 00 -      ld  (ix+REGA),A
 1970 D1:C03A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1971 D1:C04D C3 D2 B1 D1     jp i6502NextLoad
 1972 D1:C051 -  -  -  -  
 1973 D1:C051 -  -  -  -  ;absolute	EOR oper	4D	3	4  
 1974 D1:C051 -  -  -  -  inst6502_eor_abs:
 1975 D1:C051 ED 33 04 -      ADDCYC(4)
 1976 D1:C054 CD EF B3 D1     call subroutine6502_abs_split_start
 1977 D1:C058 E5 -  -  -      push hl
 1978 D1:C059 50 -  -  -          ld  d,b
 1979 D1:C05A 79 -  -  -          ld  a,c
 1980 D1:C05B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1981 D1:C05D ED 4C -  -          mlt bc
 1982 D1:C05F 21 00 40 D0         ld  hl,PAGETABLE
 1983 D1:C063 09 -  -  -          add hl,bc
 1984 D1:C064 ED 27 -  -          ld  hl,(hl)
 1985 D1:C066 06 00 -  -          ld  b,0
 1986 D1:C068 4F -  -  -          ld  c,a
 1987 D1:C069 09 -  -  -          add hl,bc   ;full address
 1988 D1:C06A 7E -  -  -          READ_ACCESS
 1989 D1:C06B E1 -  -  -      pop hl
 1990 D1:C06C DD AE 00 -      xor a,(ix+REGA)
 1991 D1:C06F DD 77 00 -      ld  (ix+REGA),A
 1992 D1:C072 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1993 D1:C085 C3 D2 B1 D1     jp i6502NextLoad
 1994 D1:C089 -  -  -  -  
 1995 D1:C089 -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 1996 D1:C089 -  -  -  -  inst6502_eor_absx:
 1997 D1:C089 ED 33 04 -      ADDCYC(4)
 1998 D1:C08C CD EF B3 D1     call subroutine6502_abs_split_start
 1999 D1:C090 E5 -  -  -      push hl
 2000 D1:C091 50 -  -  -          ld  d,b
 2001 D1:C092 79 -  -  -          ld  a,c
 2002 D1:C093 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2003 D1:C095 ED 4C -  -          mlt bc
 2004 D1:C097 21 00 40 D0         ld  hl,PAGETABLE
 2005 D1:C09B 09 -  -  -          add hl,bc
 2006 D1:C09C ED 27 -  -          ld  hl,(hl)
 2007 D1:C09E 06 00 -  -          ld  b,0
 2008 D1:C0A0 DD 86 01 -          add a,(ix+REGX)
 2009 D1:C0A3 4F -  -  -          ld  c,a
 2010 D1:C0A4 30 04 -  -          jr  nc,+_
 2011 D1:C0A6 04 -  -  -          inc b
 2012 D1:C0A7 14 -  -  -          inc d
 2013 D1:C0A8 FD 23 -  -          ADDCYC(1)
 2014 D1:C0AA 09 -  -  -  _:      add hl,bc   ;full address
 2015 D1:C0AB 7E -  -  -          READ_ACCESS
 2016 D1:C0AC E1 -  -  -      pop hl
 2017 D1:C0AD DD AE 00 -      xor a,(ix+REGA)
 2018 D1:C0B0 DD 77 00 -      ld  (ix+REGA),A
 2019 D1:C0B3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2020 D1:C0C6 C3 D2 B1 D1     jp i6502NextLoad
 2021 D1:C0CA -  -  -  -  
 2022 D1:C0CA -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2023 D1:C0CA -  -  -  -  inst6502_eor_absy:
 2024 D1:C0CA ED 33 04 -      ADDCYC(4)
 2025 D1:C0CD CD EF B3 D1     call subroutine6502_abs_split_start
 2026 D1:C0D1 E5 -  -  -      push hl
 2027 D1:C0D2 50 -  -  -          ld  d,b
 2028 D1:C0D3 79 -  -  -          ld  a,c
 2029 D1:C0D4 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2030 D1:C0D6 ED 4C -  -          mlt bc
 2031 D1:C0D8 21 00 40 D0         ld  hl,PAGETABLE
 2032 D1:C0DC 09 -  -  -          add hl,bc
 2033 D1:C0DD ED 27 -  -          ld  hl,(hl)
 2034 D1:C0DF 06 00 -  -          ld  b,0
 2035 D1:C0E1 DD 86 02 -          add a,(ix+REGY)
 2036 D1:C0E4 4F -  -  -          ld  c,a
 2037 D1:C0E5 30 04 -  -          jr  nc,+_
 2038 D1:C0E7 04 -  -  -          inc b
 2039 D1:C0E8 14 -  -  -          inc d
 2040 D1:C0E9 FD 23 -  -          ADDCYC(1)
 2041 D1:C0EB 09 -  -  -  _:      add hl,bc   ;full address
 2042 D1:C0EC 7E -  -  -          READ_ACCESS
 2043 D1:C0ED E1 -  -  -      pop hl
 2044 D1:C0EE DD AE 00 -      xor a,(ix+REGA)
 2045 D1:C0F1 DD 77 00 -      ld  (ix+REGA),A
 2046 D1:C0F4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2047 D1:C107 C3 D2 B1 D1     jp i6502NextLoad
 2048 D1:C10B -  -  -  -  
 2049 D1:C10B -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2050 D1:C10B -  -  -  -  inst6502_eor_indx:
 2051 D1:C10B ED 33 06 -      ADDCYC(6)
 2052 D1:C10E E5 -  -  -      push hl
 2053 D1:C10F 7E -  -  -          ld  a,(hl)
 2054 D1:C110 21 00 38 D0         ld  hl,ZEROPAGE
 2055 D1:C114 85 -  -  -          add a,L
 2056 D1:C115 DD 86 01 -          add a,(ix+REGX)
 2057 D1:C118 6F -  -  -          ld  L,a
 2058 D1:C119 7E -  -  -          ld  a,(hl)
 2059 D1:C11A 2C -  -  -          inc L
 2060 D1:C11B 56 -  -  -          ld  d,(hl)
 2061 D1:C11C 42 -  -  -          ld  b,d
 2062 D1:C11D 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2063 D1:C11F ED 4C -  -          mlt bc
 2064 D1:C121 21 00 40 D0         ld  hl,PAGETABLE
 2065 D1:C125 09 -  -  -          add hl,bc
 2066 D1:C126 ED 27 -  -          ld  hl,(hl)
 2067 D1:C128 06 00 -  -          ld  b,0
 2068 D1:C12A 4F -  -  -          ld  c,a
 2069 D1:C12B 09 -  -  -          add hl,bc
 2070 D1:C12C 7E -  -  -          READ_ACCESS
 2071 D1:C12D E1 -  -  -      pop hl
 2072 D1:C12E DD AE 00 -      xor a,(ix+REGA)
 2073 D1:C131 DD 77 00 -      ld  (ix+REGA),A
 2074 D1:C134 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2075 D1:C147 C3 D2 B1 D1     jp i6502NextLoad
 2076 D1:C14B -  -  -  -  
 2077 D1:C14B -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2078 D1:C14B -  -  -  -  inst6502_eor_indy:
 2079 D1:C14B ED 33 05 -      ADDCYC(5)
 2080 D1:C14E E5 -  -  -      push hl
 2081 D1:C14F 7E -  -  -          ld  a,(hl)
 2082 D1:C150 21 00 38 D0         ld  hl,ZEROPAGE
 2083 D1:C154 85 -  -  -          add a,L
 2084 D1:C155 6F -  -  -          ld  L,a
 2085 D1:C156 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2086 D1:C157 2C -  -  -          inc L
 2087 D1:C158 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2088 D1:C15B 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2089 D1:C15C 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2090 D1:C15E 24 -  -  -          inc h
 2091 D1:C15F FD 23 -  -          ADDCYC(1)
 2092 D1:C161 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2093 D1:C162 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2094 D1:C164 ED 6C -  -          mlt hl          ;23.
 2095 D1:C166 01 00 40 D0         ld  bc,PAGETABLE
 2096 D1:C16A 09 -  -  -          add hl,bc
 2097 D1:C16B ED 27 -  -          ld  hl,(hl)     ;address get.
 2098 D1:C16D 01 00 00 00         ld  bc,0
 2099 D1:C171 4F -  -  -          ld  c,a
 2100 D1:C172 09 -  -  -          add hl,bc       ;Full address get.
 2101 D1:C173 7E -  -  -          READ_ACCESS
 2102 D1:C174 E1 -  -  -      pop hl
 2103 D1:C175 DD AE 00 -      xor a,(ix+REGA)
 2104 D1:C178 DD 77 00 -      ld  (ix+REGA),A
 2105 D1:C17B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2106 D1:C18E C3 D2 B1 D1     jp i6502NextLoad
 2107 D1:C192 -  -  -  -  
 2108 D1:C192 -  -  -  -  ;-----------------------------------------------------------------------------
 2109 D1:C192 -  -  -  -  ;ORA - OR Memory with Accumulator
 2110 D1:C192 -  -  -  -  ;A OR M -> A
 2111 D1:C192 -  -  -  -  ;N	Z	C	I	D	V
 2112 D1:C192 -  -  -  -  ;+	+	-	-	-	-
 2113 D1:C192 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2114 D1:C192 -  -  -  -  
 2115 D1:C192 -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2116 D1:C192 -  -  -  -  inst6502_ora_imm:
 2117 D1:C192 ED 33 02 -      ADDCYC(2)
 2118 D1:C195 7E -  -  -      ld  a,(hl)
 2119 D1:C196 DD B6 00 -      or  a,(ix+REGA)
 2120 D1:C199 DD 77 00 -      ld  (ix+REGA),A
 2121 D1:C19C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2122 D1:C1AF C3 D2 B1 D1     jp i6502NextLoad
 2123 D1:C1B3 -  -  -  -  
 2124 D1:C1B3 -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2125 D1:C1B3 -  -  -  -  inst6502_ora_zp:
 2126 D1:C1B3 ED 33 03 -      ADDCYC(3)
 2127 D1:C1B6 7E -  -  -      ld  a,(hl)
 2128 D1:C1B7 01 00 38 D0     ld  bc,ZEROPAGE
 2129 D1:C1BB 81 -  -  -      add a,c
 2130 D1:C1BC 4F -  -  -      ld  c,a
 2131 D1:C1BD 0A -  -  -      ld  a,(bc)
 2132 D1:C1BE DD B6 00 -      or  a,(ix+REGA)
 2133 D1:C1C1 DD 77 00 -      ld  (ix+REGA),A
 2134 D1:C1C4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2135 D1:C1D7 C3 D2 B1 D1     jp i6502NextLoad
 2136 D1:C1DB -  -  -  -  
 2137 D1:C1DB -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2138 D1:C1DB -  -  -  -  inst6502_ora_zpx:
 2139 D1:C1DB ED 33 04 -      ADDCYC(4)
 2140 D1:C1DE 7E -  -  -      ld  a,(hl)
 2141 D1:C1DF 01 00 38 D0     ld  bc,ZEROPAGE
 2142 D1:C1E3 81 -  -  -      add a,c
 2143 D1:C1E4 DD 86 01 -      add a,(ix+REGX)
 2144 D1:C1E7 4F -  -  -      ld  c,a
 2145 D1:C1E8 0A -  -  -      ld  a,(bc)
 2146 D1:C1E9 DD B6 00 -      or  a,(ix+REGA)
 2147 D1:C1EC DD 77 00 -      ld  (ix+REGA),A
 2148 D1:C1EF DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2149 D1:C202 C3 D2 B1 D1     jp i6502NextLoad
 2150 D1:C206 -  -  -  -  
 2151 D1:C206 -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2152 D1:C206 -  -  -  -  inst6502_ora_abs:
 2153 D1:C206 ED 33 04 -      ADDCYC(4)
 2154 D1:C209 CD EF B3 D1     call subroutine6502_abs_split_start
 2155 D1:C20D E5 -  -  -      push hl
 2156 D1:C20E 50 -  -  -          ld  d,b
 2157 D1:C20F 79 -  -  -          ld  a,c
 2158 D1:C210 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2159 D1:C212 ED 4C -  -          mlt bc
 2160 D1:C214 21 00 40 D0         ld  hl,PAGETABLE
 2161 D1:C218 09 -  -  -          add hl,bc
 2162 D1:C219 ED 27 -  -          ld  hl,(hl)
 2163 D1:C21B 06 00 -  -          ld  b,0
 2164 D1:C21D 4F -  -  -          ld  c,a
 2165 D1:C21E 09 -  -  -          add hl,bc   ;full address
 2166 D1:C21F 7E -  -  -          READ_ACCESS
 2167 D1:C220 E1 -  -  -      pop hl
 2168 D1:C221 DD B6 00 -      or  a,(ix+REGA)
 2169 D1:C224 DD 77 00 -      ld  (ix+REGA),A
 2170 D1:C227 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2171 D1:C23A C3 D2 B1 D1     jp i6502NextLoad
 2172 D1:C23E -  -  -  -  
 2173 D1:C23E -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2174 D1:C23E -  -  -  -  inst6502_ora_absx:
 2175 D1:C23E ED 33 04 -      ADDCYC(4)
 2176 D1:C241 CD EF B3 D1     call subroutine6502_abs_split_start
 2177 D1:C245 E5 -  -  -      push hl
 2178 D1:C246 50 -  -  -          ld  d,b
 2179 D1:C247 79 -  -  -          ld  a,c
 2180 D1:C248 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2181 D1:C24A ED 4C -  -          mlt bc
 2182 D1:C24C 21 00 40 D0         ld  hl,PAGETABLE
 2183 D1:C250 09 -  -  -          add hl,bc
 2184 D1:C251 ED 27 -  -          ld  hl,(hl)
 2185 D1:C253 06 00 -  -          ld  b,0
 2186 D1:C255 DD 86 01 -          add a,(ix+REGX)
 2187 D1:C258 4F -  -  -          ld  c,a
 2188 D1:C259 30 04 -  -          jr  nc,+_
 2189 D1:C25B 04 -  -  -          inc b
 2190 D1:C25C 14 -  -  -          inc d
 2191 D1:C25D FD 23 -  -          ADDCYC(1)
 2192 D1:C25F 09 -  -  -  _:      add hl,bc   ;full address
 2193 D1:C260 7E -  -  -          READ_ACCESS
 2194 D1:C261 E1 -  -  -      pop hl
 2195 D1:C262 DD B6 00 -      or  a,(ix+REGA)
 2196 D1:C265 DD 77 00 -      ld  (ix+REGA),A
 2197 D1:C268 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2198 D1:C27B C3 D2 B1 D1     jp i6502NextLoad
 2199 D1:C27F -  -  -  -  
 2200 D1:C27F -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2201 D1:C27F -  -  -  -  inst6502_ora_absy:
 2202 D1:C27F ED 33 04 -      ADDCYC(4)
 2203 D1:C282 CD EF B3 D1     call subroutine6502_abs_split_start
 2204 D1:C286 E5 -  -  -      push hl
 2205 D1:C287 50 -  -  -          ld  d,b
 2206 D1:C288 79 -  -  -          ld  a,c
 2207 D1:C289 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2208 D1:C28B ED 4C -  -          mlt bc
 2209 D1:C28D 21 00 40 D0         ld  hl,PAGETABLE
 2210 D1:C291 09 -  -  -          add hl,bc
 2211 D1:C292 ED 27 -  -          ld  hl,(hl)
 2212 D1:C294 06 00 -  -          ld  b,0
 2213 D1:C296 DD 86 02 -          add a,(ix+REGY)
 2214 D1:C299 4F -  -  -          ld  c,a
 2215 D1:C29A 30 04 -  -          jr  nc,+_
 2216 D1:C29C 04 -  -  -          inc b
 2217 D1:C29D 14 -  -  -          inc d
 2218 D1:C29E FD 23 -  -          ADDCYC(1)
 2219 D1:C2A0 09 -  -  -  _:      add hl,bc   ;full address
 2220 D1:C2A1 7E -  -  -          READ_ACCESS
 2221 D1:C2A2 E1 -  -  -      pop hl
 2222 D1:C2A3 DD B6 00 -      or  a,(ix+REGA)
 2223 D1:C2A6 DD 77 00 -      ld  (ix+REGA),A
 2224 D1:C2A9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2225 D1:C2BC C3 D2 B1 D1     jp i6502NextLoad
 2226 D1:C2C0 -  -  -  -  
 2227 D1:C2C0 -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2228 D1:C2C0 -  -  -  -  inst6502_ora_indx:
 2229 D1:C2C0 ED 33 06 -      ADDCYC(6)
 2230 D1:C2C3 E5 -  -  -      push hl
 2231 D1:C2C4 7E -  -  -          ld  a,(hl)
 2232 D1:C2C5 21 00 38 D0         ld  hl,ZEROPAGE
 2233 D1:C2C9 85 -  -  -          add a,L
 2234 D1:C2CA DD 86 01 -          add a,(ix+REGX)
 2235 D1:C2CD 6F -  -  -          ld  L,a
 2236 D1:C2CE 7E -  -  -          ld  a,(hl)
 2237 D1:C2CF 2C -  -  -          inc L
 2238 D1:C2D0 56 -  -  -          ld  d,(hl)
 2239 D1:C2D1 42 -  -  -          ld  b,d
 2240 D1:C2D2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2241 D1:C2D4 ED 4C -  -          mlt bc
 2242 D1:C2D6 21 00 40 D0         ld  hl,PAGETABLE
 2243 D1:C2DA 09 -  -  -          add hl,bc
 2244 D1:C2DB ED 27 -  -          ld  hl,(hl)
 2245 D1:C2DD 06 00 -  -          ld  b,0
 2246 D1:C2DF 4F -  -  -          ld  c,a
 2247 D1:C2E0 09 -  -  -          add hl,bc
 2248 D1:C2E1 7E -  -  -          READ_ACCESS
 2249 D1:C2E2 E1 -  -  -      pop hl
 2250 D1:C2E3 DD B6 00 -      or  a,(ix+REGA)
 2251 D1:C2E6 DD 77 00 -      ld  (ix+REGA),A
 2252 D1:C2E9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2253 D1:C2FC C3 D2 B1 D1     jp i6502NextLoad
 2254 D1:C300 -  -  -  -  
 2255 D1:C300 -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2256 D1:C300 -  -  -  -  inst6502_ora_indy:
 2257 D1:C300 ED 33 05 -      ADDCYC(5)
 2258 D1:C303 E5 -  -  -      push hl
 2259 D1:C304 7E -  -  -          ld  a,(hl)
 2260 D1:C305 21 00 38 D0         ld  hl,ZEROPAGE
 2261 D1:C309 85 -  -  -          add a,L
 2262 D1:C30A 6F -  -  -          ld  L,a
 2263 D1:C30B 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2264 D1:C30C 2C -  -  -          inc L
 2265 D1:C30D DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2266 D1:C310 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2267 D1:C311 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2268 D1:C313 24 -  -  -          inc h
 2269 D1:C314 FD 23 -  -          ADDCYC(1)
 2270 D1:C316 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2271 D1:C317 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2272 D1:C319 ED 6C -  -          mlt hl          ;23.
 2273 D1:C31B 01 00 40 D0         ld  bc,PAGETABLE
 2274 D1:C31F 09 -  -  -          add hl,bc
 2275 D1:C320 ED 27 -  -          ld  hl,(hl)     ;address get.
 2276 D1:C322 01 00 00 00         ld  bc,0
 2277 D1:C326 4F -  -  -          ld  c,a
 2278 D1:C327 09 -  -  -          add hl,bc       ;Full address get.
 2279 D1:C328 7E -  -  -          READ_ACCESS
 2280 D1:C329 E1 -  -  -      pop hl
 2281 D1:C32A DD B6 00 -      or  a,(ix+REGA)
 2282 D1:C32D DD 77 00 -      ld  (ix+REGA),A
 2283 D1:C330 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2284 D1:C343 C3 D2 B1 D1     jp i6502NextLoad
 2285 D1:C347 -  -  -  -  
 2286 D1:C347 -  -  -  -  ;-----------------------------------------------------------------------------
 2287 D1:C347 -  -  -  -  ;-----------------------------------------------------------------------------
 2288 D1:C347 -  -  -  -  ;-----------------------------------------------------------------------------
 2289 D1:C347 -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2290 D1:C347 -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2291 D1:C347 -  -  -  -  ;C <- [76543210] <- 0
 2292 D1:C347 -  -  -  -  ;N	Z	C	I	D	V
 2293 D1:C347 -  -  -  -  ;+	+	+	-	-	-
 2294 D1:C347 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2295 D1:C347 -  -  -  -  
 2296 D1:C347 -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2297 D1:C347 -  -  -  -  inst6502_asl:
 2298 D1:C347 ED 33 02 -      ADDCYC(2)
 2299 D1:C34A DD CB 00 26     sla (ix+REGA)
 2300 D1:C34E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2301 D1:C367 C3 EB B1 D1     jp i6502FinishLoad
 2302 D1:C36B -  -  -  -  
 2303 D1:C36B -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2304 D1:C36B -  -  -  -  inst6502_asl_zp:
 2305 D1:C36B ED 33 05 -      ADDCYC(5)
 2306 D1:C36E 7E -  -  -      ld  a,(hl)
 2307 D1:C36F 01 00 38 D0     ld  bc,ZEROPAGE
 2308 D1:C373 81 -  -  -      add a,c
 2309 D1:C374 4F -  -  -      ld  c,a
 2310 D1:C375 0A -  -  -      ld  a,(bc)
 2311 D1:C376 CB 27 -  -      sla a
 2312 D1:C378 02 -  -  -      ld  (bc),a
 2313 D1:C379 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2314 D1:C392 C3 D2 B1 D1     jp i6502NextLoad
 2315 D1:C396 -  -  -  -  
 2316 D1:C396 -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2317 D1:C396 -  -  -  -  inst6502_asl_zpx:
 2318 D1:C396 ED 33 06 -      ADDCYC(6)
 2319 D1:C399 7E -  -  -      ld  a,(hl)
 2320 D1:C39A 01 00 38 D0     ld  bc,ZEROPAGE
 2321 D1:C39E 81 -  -  -      add a,c
 2322 D1:C39F DD 86 01 -      add a,(ix+REGX)
 2323 D1:C3A2 4F -  -  -      ld  c,a
 2324 D1:C3A3 0A -  -  -      ld  a,(bc)
 2325 D1:C3A4 CB 27 -  -      sla a
 2326 D1:C3A6 02 -  -  -      ld  (bc),a
 2327 D1:C3A7 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2328 D1:C3C0 C3 D2 B1 D1     jp i6502NextLoad
 2329 D1:C3C4 -  -  -  -  
 2330 D1:C3C4 -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2331 D1:C3C4 -  -  -  -  inst6502_asl_abs:
 2332 D1:C3C4 ED 33 06 -      ADDCYC(6)
 2333 D1:C3C7 CD EF B3 D1     call subroutine6502_abs_split_start
 2334 D1:C3CB E5 -  -  -      push hl
 2335 D1:C3CC 50 -  -  -          ld  d,b
 2336 D1:C3CD 79 -  -  -          ld  a,c
 2337 D1:C3CE 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2338 D1:C3D0 ED 4C -  -          mlt bc
 2339 D1:C3D2 21 00 40 D0         ld  hl,PAGETABLE
 2340 D1:C3D6 09 -  -  -          add hl,bc
 2341 D1:C3D7 ED 27 -  -          ld  hl,(hl)
 2342 D1:C3D9 06 00 -  -          ld  b,0
 2343 D1:C3DB 4F -  -  -          ld  c,a
 2344 D1:C3DC 09 -  -  -          add hl,bc   ;full address
 2345 D1:C3DD 7E -  -  -          READ_ACCESS
 2346 D1:C3DE E1 -  -  -      pop hl
 2347 D1:C3DF 7E -  -  -      ld  a,(hl)
 2348 D1:C3E0 CB 27 -  -      sla a
 2349 D1:C3E2 47 -  -  -      ld  b,a
 2350 D1:C3E3 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2351 D1:C3FC 70 -  -  -      WRITE_ACCESS
 2352 D1:C3FD C3 D2 B1 D1     jp i6502NextLoad
 2353 D1:C401 -  -  -  -  
 2354 D1:C401 -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2355 D1:C401 -  -  -  -  inst6502_asl_absx:
 2356 D1:C401 ED 33 07 -      ADDCYC(7)
 2357 D1:C404 CD EF B3 D1     call subroutine6502_abs_split_start
 2358 D1:C408 E5 -  -  -      push hl
 2359 D1:C409 50 -  -  -          ld  d,b
 2360 D1:C40A 79 -  -  -          ld  a,c
 2361 D1:C40B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2362 D1:C40D ED 4C -  -          mlt bc
 2363 D1:C40F 21 00 40 D0         ld  hl,PAGETABLE
 2364 D1:C413 09 -  -  -          add hl,bc
 2365 D1:C414 ED 27 -  -          ld  hl,(hl)
 2366 D1:C416 06 00 -  -          ld  b,0
 2367 D1:C418 DD 86 01 -          add a,(ix+REGX)
 2368 D1:C41B 4F -  -  -          ld  c,a
 2369 D1:C41C 30 02 -  -          jr  nc,+_
 2370 D1:C41E 04 -  -  -          inc b
 2371 D1:C41F 14 -  -  -          inc d
 2372 D1:C420 09 -  -  -  _:      add hl,bc   ;full address
 2373 D1:C421 7E -  -  -          READ_ACCESS
 2374 D1:C422 E1 -  -  -      pop hl
 2375 D1:C423 7E -  -  -      ld  a,(hl)
 2376 D1:C424 CB 27 -  -      sla a
 2377 D1:C426 47 -  -  -      ld  b,a
 2378 D1:C427 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2379 D1:C440 70 -  -  -      WRITE_ACCESS
 2380 D1:C441 C3 D2 B1 D1     jp i6502NextLoad
 2381 D1:C445 -  -  -  -  
 2382 D1:C445 -  -  -  -  ;-----------------------------------------------------------------------------
 2383 D1:C445 -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2384 D1:C445 -  -  -  -  ;0 -> [76543210] -> C
 2385 D1:C445 -  -  -  -  ;N	Z	C	I	D	V
 2386 D1:C445 -  -  -  -  ;0	+	+	-	-	-
 2387 D1:C445 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2388 D1:C445 -  -  -  -  
 2389 D1:C445 -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2390 D1:C445 -  -  -  -  inst6502_lsr:
 2391 D1:C445 ED 33 02 -      ADDCYC(2)
 2392 D1:C448 DD CB 00 3E     srl (ix+REGA)
 2393 D1:C44C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2394 D1:C465 C3 EB B1 D1     jp i6502FinishLoad
 2395 D1:C469 -  -  -  -  
 2396 D1:C469 -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2397 D1:C469 -  -  -  -  inst6502_lsr_zp:
 2398 D1:C469 ED 33 05 -      ADDCYC(5)
 2399 D1:C46C 7E -  -  -      ld  a,(hl)
 2400 D1:C46D 01 00 38 D0     ld  bc,ZEROPAGE
 2401 D1:C471 81 -  -  -      add a,c
 2402 D1:C472 4F -  -  -      ld  c,a
 2403 D1:C473 0A -  -  -      ld  a,(bc)
 2404 D1:C474 CB 3F -  -      srl a
 2405 D1:C476 02 -  -  -      ld  (bc),a
 2406 D1:C477 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2407 D1:C490 C3 D2 B1 D1     jp i6502NextLoad
 2408 D1:C494 -  -  -  -  
 2409 D1:C494 -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2410 D1:C494 -  -  -  -  inst6502_lsr_zpx:
 2411 D1:C494 ED 33 06 -      ADDCYC(6)
 2412 D1:C497 7E -  -  -      ld  a,(hl)
 2413 D1:C498 01 00 38 D0     ld  bc,ZEROPAGE
 2414 D1:C49C 81 -  -  -      add a,c
 2415 D1:C49D DD 86 01 -      add a,(ix+REGX)
 2416 D1:C4A0 4F -  -  -      ld  c,a
 2417 D1:C4A1 0A -  -  -      ld  a,(bc)
 2418 D1:C4A2 CB 3F -  -      srl a
 2419 D1:C4A4 02 -  -  -      ld  (bc),a
 2420 D1:C4A5 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2421 D1:C4BE C3 D2 B1 D1     jp i6502NextLoad
 2422 D1:C4C2 -  -  -  -      
 2423 D1:C4C2 -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2424 D1:C4C2 -  -  -  -  inst6502_lsr_abs:
 2425 D1:C4C2 ED 33 06 -      ADDCYC(6)
 2426 D1:C4C5 CD EF B3 D1     call subroutine6502_abs_split_start
 2427 D1:C4C9 E5 -  -  -      push hl
 2428 D1:C4CA 50 -  -  -          ld  d,b
 2429 D1:C4CB 79 -  -  -          ld  a,c
 2430 D1:C4CC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2431 D1:C4CE ED 4C -  -          mlt bc
 2432 D1:C4D0 21 00 40 D0         ld  hl,PAGETABLE
 2433 D1:C4D4 09 -  -  -          add hl,bc
 2434 D1:C4D5 ED 27 -  -          ld  hl,(hl)
 2435 D1:C4D7 06 00 -  -          ld  b,0
 2436 D1:C4D9 4F -  -  -          ld  c,a
 2437 D1:C4DA 09 -  -  -          add hl,bc   ;full address
 2438 D1:C4DB 7E -  -  -          READ_ACCESS
 2439 D1:C4DC E1 -  -  -      pop hl
 2440 D1:C4DD 7E -  -  -      ld  a,(hl)
 2441 D1:C4DE CB 3F -  -      srl a
 2442 D1:C4E0 47 -  -  -      ld  b,a
 2443 D1:C4E1 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2444 D1:C4FA 70 -  -  -      WRITE_ACCESS
 2445 D1:C4FB C3 D2 B1 D1     jp i6502NextLoad
 2446 D1:C4FF -  -  -  -  
 2447 D1:C4FF -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2448 D1:C4FF -  -  -  -  inst6502_lsr_absx:
 2449 D1:C4FF ED 33 07 -      ADDCYC(7)
 2450 D1:C502 CD EF B3 D1     call subroutine6502_abs_split_start
 2451 D1:C506 E5 -  -  -      push hl
 2452 D1:C507 50 -  -  -          ld  d,b
 2453 D1:C508 79 -  -  -          ld  a,c
 2454 D1:C509 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2455 D1:C50B ED 4C -  -          mlt bc
 2456 D1:C50D 21 00 40 D0         ld  hl,PAGETABLE
 2457 D1:C511 09 -  -  -          add hl,bc
 2458 D1:C512 ED 27 -  -          ld  hl,(hl)
 2459 D1:C514 06 00 -  -          ld  b,0
 2460 D1:C516 DD 86 01 -          add a,(ix+REGX)
 2461 D1:C519 4F -  -  -          ld  c,a
 2462 D1:C51A 30 02 -  -          jr  nc,+_
 2463 D1:C51C 04 -  -  -          inc b
 2464 D1:C51D 14 -  -  -          inc d
 2465 D1:C51E 09 -  -  -  _:      add hl,bc   ;full address
 2466 D1:C51F 7E -  -  -          READ_ACCESS
 2467 D1:C520 E1 -  -  -      pop hl
 2468 D1:C521 7E -  -  -      ld  a,(hl)
 2469 D1:C522 CB 3F -  -      srl a
 2470 D1:C524 47 -  -  -      ld  b,a
 2471 D1:C525 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2472 D1:C53E 70 -  -  -      WRITE_ACCESS
 2473 D1:C53F C3 D2 B1 D1     jp i6502NextLoad
 2474 D1:C543 -  -  -  -  
 2475 D1:C543 -  -  -  -  ;-----------------------------------------------------------------------------
 2476 D1:C543 -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2477 D1:C543 -  -  -  -  ;C <- [76543210] <- C
 2478 D1:C543 -  -  -  -  ;N	Z	C	I	D	V
 2479 D1:C543 -  -  -  -  ;+	+	+	-	-	-
 2480 D1:C543 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2481 D1:C543 -  -  -  -  
 2482 D1:C543 -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2483 D1:C543 -  -  -  -  inst6502_rol:
 2484 D1:C543 ED 33 02 -      ADDCYC(2)
 2485 D1:C546 DD 7E 04 -      ld  a,(ix+REGSR)
 2486 D1:C549 1F -  -  -      rra
 2487 D1:C54A DD CB 00 16     rl (ix+REGA)
 2488 D1:C54E DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2489 D1:C567 C3 EB B1 D1     jp i6502FinishLoad
 2490 D1:C56B -  -  -  -  
 2491 D1:C56B -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2492 D1:C56B -  -  -  -  inst6502_rol_zp:
 2493 D1:C56B ED 33 05 -      ADDCYC(5)
 2494 D1:C56E 7E -  -  -      ld  a,(hl)
 2495 D1:C56F 01 00 38 D0     ld  bc,ZEROPAGE
 2496 D1:C573 81 -  -  -      add a,c
 2497 D1:C574 4F -  -  -      ld  c,a
 2498 D1:C575 DD 7E 04 -      ld  a,(ix+REGSR)
 2499 D1:C578 1F -  -  -      rra
 2500 D1:C579 0A -  -  -      ld  a,(bc)
 2501 D1:C57A 17 -  -  -      rla
 2502 D1:C57B 02 -  -  -      ld  (bc),a
 2503 D1:C57C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2504 D1:C595 C3 D2 B1 D1     jp i6502NextLoad
 2505 D1:C599 -  -  -  -  
 2506 D1:C599 -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2507 D1:C599 -  -  -  -  inst6502_rol_zpx:
 2508 D1:C599 ED 33 06 -      ADDCYC(6)
 2509 D1:C59C 7E -  -  -      ld  a,(hl)
 2510 D1:C59D 01 00 38 D0     ld  bc,ZEROPAGE
 2511 D1:C5A1 81 -  -  -      add a,c
 2512 D1:C5A2 DD 86 01 -      add a,(ix+REGX)
 2513 D1:C5A5 4F -  -  -      ld  c,a
 2514 D1:C5A6 DD 7E 04 -      ld  a,(ix+REGSR)
 2515 D1:C5A9 1F -  -  -      rra
 2516 D1:C5AA 0A -  -  -      ld  a,(bc)
 2517 D1:C5AB 17 -  -  -      rla
 2518 D1:C5AC 02 -  -  -      ld  (bc),a
 2519 D1:C5AD DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2520 D1:C5C6 C3 D2 B1 D1     jp i6502NextLoad
 2521 D1:C5CA -  -  -  -  
 2522 D1:C5CA -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2523 D1:C5CA -  -  -  -  inst6502_rol_abs:
 2524 D1:C5CA ED 33 06 -      ADDCYC(6)
 2525 D1:C5CD CD EF B3 D1     call subroutine6502_abs_split_start
 2526 D1:C5D1 E5 -  -  -      push hl
 2527 D1:C5D2 50 -  -  -          ld  d,b
 2528 D1:C5D3 79 -  -  -          ld  a,c
 2529 D1:C5D4 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2530 D1:C5D6 ED 4C -  -          mlt bc
 2531 D1:C5D8 21 00 40 D0         ld  hl,PAGETABLE
 2532 D1:C5DC 09 -  -  -          add hl,bc
 2533 D1:C5DD ED 27 -  -          ld  hl,(hl)
 2534 D1:C5DF 06 00 -  -          ld  b,0
 2535 D1:C5E1 4F -  -  -          ld  c,a
 2536 D1:C5E2 09 -  -  -          add hl,bc   ;full address
 2537 D1:C5E3 7E -  -  -          READ_ACCESS
 2538 D1:C5E4 E1 -  -  -      pop hl
 2539 D1:C5E5 DD 7E 04 -      ld  a,(ix+REGSR)
 2540 D1:C5E8 1F -  -  -      rra
 2541 D1:C5E9 7E -  -  -      ld  a,(hl)
 2542 D1:C5EA 17 -  -  -      rla
 2543 D1:C5EB 47 -  -  -      ld  b,a
 2544 D1:C5EC DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2545 D1:C605 70 -  -  -      WRITE_ACCESS
 2546 D1:C606 C3 D2 B1 D1     jp i6502NextLoad
 2547 D1:C60A -  -  -  -  
 2548 D1:C60A -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2549 D1:C60A -  -  -  -  inst6502_rol_absx:
 2550 D1:C60A ED 33 07 -      ADDCYC(7)
 2551 D1:C60D CD EF B3 D1     call subroutine6502_abs_split_start
 2552 D1:C611 E5 -  -  -      push hl
 2553 D1:C612 50 -  -  -          ld  d,b
 2554 D1:C613 79 -  -  -          ld  a,c
 2555 D1:C614 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2556 D1:C616 ED 4C -  -          mlt bc
 2557 D1:C618 21 00 40 D0         ld  hl,PAGETABLE
 2558 D1:C61C 09 -  -  -          add hl,bc
 2559 D1:C61D ED 27 -  -          ld  hl,(hl)
 2560 D1:C61F 06 00 -  -          ld  b,0
 2561 D1:C621 DD 86 01 -          add a,(ix+REGX)
 2562 D1:C624 4F -  -  -          ld  c,a
 2563 D1:C625 30 02 -  -          jr  nc,+_
 2564 D1:C627 04 -  -  -          inc b
 2565 D1:C628 14 -  -  -          inc d
 2566 D1:C629 09 -  -  -  _:      add hl,bc   ;full address
 2567 D1:C62A 7E -  -  -          READ_ACCESS
 2568 D1:C62B E1 -  -  -      pop hl
 2569 D1:C62C DD 7E 04 -      ld  a,(ix+REGSR)
 2570 D1:C62F 1F -  -  -      rra
 2571 D1:C630 7E -  -  -      ld  a,(hl)
 2572 D1:C631 17 -  -  -      rla
 2573 D1:C632 47 -  -  -      ld  b,a
 2574 D1:C633 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2575 D1:C64C 70 -  -  -      WRITE_ACCESS
 2576 D1:C64D C3 D2 B1 D1     jp i6502NextLoad
 2577 D1:C651 -  -  -  -  
 2578 D1:C651 -  -  -  -  ;-----------------------------------------------------------------------------
 2579 D1:C651 -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2580 D1:C651 -  -  -  -  ;C -> [76543210] -> C
 2581 D1:C651 -  -  -  -  ;N	Z	C	I	D	V
 2582 D1:C651 -  -  -  -  ;+	+	+	-	-	-
 2583 D1:C651 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2584 D1:C651 -  -  -  -  
 2585 D1:C651 -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2586 D1:C651 -  -  -  -  inst6502_ror:
 2587 D1:C651 ED 33 02 -      ADDCYC(2)
 2588 D1:C654 DD 7E 04 -      ld  a,(ix+REGSR)
 2589 D1:C657 1F -  -  -      rra
 2590 D1:C658 DD CB 00 1E     rr  (ix+REGA)
 2591 D1:C65C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2592 D1:C675 C3 EB B1 D1     jp i6502FinishLoad
 2593 D1:C679 -  -  -  -  
 2594 D1:C679 -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2595 D1:C679 -  -  -  -  inst6502_ror_zp:
 2596 D1:C679 ED 33 05 -      ADDCYC(5)
 2597 D1:C67C 7E -  -  -      ld  a,(hl)
 2598 D1:C67D 01 00 38 D0     ld  bc,ZEROPAGE
 2599 D1:C681 81 -  -  -      add a,c
 2600 D1:C682 4F -  -  -      ld  c,a
 2601 D1:C683 DD 7E 04 -      ld  a,(ix+REGSR)
 2602 D1:C686 1F -  -  -      rra
 2603 D1:C687 0A -  -  -      ld  a,(bc)
 2604 D1:C688 1F -  -  -      rra
 2605 D1:C689 02 -  -  -      ld  (bc),a
 2606 D1:C68A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2607 D1:C6A3 C3 D2 B1 D1     jp i6502NextLoad
 2608 D1:C6A7 -  -  -  -  
 2609 D1:C6A7 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2610 D1:C6A7 -  -  -  -  inst6502_ror_zpx:
 2611 D1:C6A7 ED 33 06 -      ADDCYC(6)
 2612 D1:C6AA 7E -  -  -      ld  a,(hl)
 2613 D1:C6AB 01 00 38 D0     ld  bc,ZEROPAGE
 2614 D1:C6AF 81 -  -  -      add a,c
 2615 D1:C6B0 DD 86 01 -      add a,(ix+REGX)
 2616 D1:C6B3 4F -  -  -      ld  c,a
 2617 D1:C6B4 DD 7E 04 -      ld  a,(ix+REGSR)
 2618 D1:C6B7 1F -  -  -      rra
 2619 D1:C6B8 0A -  -  -      ld  a,(bc)
 2620 D1:C6B9 1F -  -  -      rra
 2621 D1:C6BA 02 -  -  -      ld  (bc),a
 2622 D1:C6BB DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2623 D1:C6D4 C3 D2 B1 D1     jp i6502NextLoad
 2624 D1:C6D8 -  -  -  -  
 2625 D1:C6D8 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2626 D1:C6D8 -  -  -  -  inst6502_ror_abs:
 2627 D1:C6D8 ED 33 06 -      ADDCYC(6)
 2628 D1:C6DB CD EF B3 D1     call subroutine6502_abs_split_start
 2629 D1:C6DF E5 -  -  -      push hl
 2630 D1:C6E0 50 -  -  -          ld  d,b
 2631 D1:C6E1 79 -  -  -          ld  a,c
 2632 D1:C6E2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2633 D1:C6E4 ED 4C -  -          mlt bc
 2634 D1:C6E6 21 00 40 D0         ld  hl,PAGETABLE
 2635 D1:C6EA 09 -  -  -          add hl,bc
 2636 D1:C6EB ED 27 -  -          ld  hl,(hl)
 2637 D1:C6ED 06 00 -  -          ld  b,0
 2638 D1:C6EF 4F -  -  -          ld  c,a
 2639 D1:C6F0 09 -  -  -          add hl,bc   ;full address
 2640 D1:C6F1 7E -  -  -          READ_ACCESS
 2641 D1:C6F2 E1 -  -  -      pop hl
 2642 D1:C6F3 DD 7E 04 -      ld  a,(ix+REGSR)
 2643 D1:C6F6 1F -  -  -      rra
 2644 D1:C6F7 7E -  -  -      ld  a,(hl)
 2645 D1:C6F8 1F -  -  -      rra
 2646 D1:C6F9 47 -  -  -      ld  b,a
 2647 D1:C6FA DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2648 D1:C713 70 -  -  -      WRITE_ACCESS
 2649 D1:C714 C3 D2 B1 D1     jp i6502NextLoad
 2650 D1:C718 -  -  -  -  
 2651 D1:C718 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2652 D1:C718 -  -  -  -  inst6502_ror_absx:
 2653 D1:C718 ED 33 07 -      ADDCYC(7)
 2654 D1:C71B CD EF B3 D1     call subroutine6502_abs_split_start
 2655 D1:C71F E5 -  -  -      push hl
 2656 D1:C720 50 -  -  -          ld  d,b
 2657 D1:C721 79 -  -  -          ld  a,c
 2658 D1:C722 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2659 D1:C724 ED 4C -  -          mlt bc
 2660 D1:C726 21 00 40 D0         ld  hl,PAGETABLE
 2661 D1:C72A 09 -  -  -          add hl,bc
 2662 D1:C72B ED 27 -  -          ld  hl,(hl)
 2663 D1:C72D 06 00 -  -          ld  b,0
 2664 D1:C72F DD 86 01 -          add a,(ix+REGX)
 2665 D1:C732 4F -  -  -          ld  c,a
 2666 D1:C733 30 02 -  -          jr  nc,+_
 2667 D1:C735 04 -  -  -          inc b
 2668 D1:C736 14 -  -  -          inc d
 2669 D1:C737 09 -  -  -  _:      add hl,bc   ;full address
 2670 D1:C738 7E -  -  -          READ_ACCESS
 2671 D1:C739 E1 -  -  -      pop hl
 2672 D1:C73A DD 7E 04 -      ld  a,(ix+REGSR)
 2673 D1:C73D 1F -  -  -      rra
 2674 D1:C73E 7E -  -  -      ld  a,(hl)
 2675 D1:C73F 1F -  -  -      rra
 2676 D1:C740 47 -  -  -      ld  b,a
 2677 D1:C741 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2678 D1:C75A 70 -  -  -      WRITE_ACCESS
 2679 D1:C75B C3 D2 B1 D1     jp i6502NextLoad
 2680 D1:C75F -  -  -  -  
 2681 D1:C75F -  -  -  -  ;-----------------------------------------------------------------------------
 2682 D1:C75F -  -  -  -  ;-----------------------------------------------------------------------------
 2683 D1:C75F -  -  -  -  ;-----------------------------------------------------------------------------
 2684 D1:C75F -  -  -  -  ;Instructions by type: Flag Instructions
 2685 D1:C75F -  -  -  -  
 2686 D1:C75F -  -  -  -  ;CLC - Clear Carry Flag
 2687 D1:C75F -  -  -  -  ;0 -> C
 2688 D1:C75F -  -  -  -  ;N	Z	C	I	D	V
 2689 D1:C75F -  -  -  -  ;-	-	0	-	-	-
 2690 D1:C75F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2691 D1:C75F -  -  -  -  ;implied	CLC	18	1	2  
 2692 D1:C75F -  -  -  -  inst6502_clc:
 2693 D1:C75F DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2694 D1:C763 C3 EB B1 D1     jp  i6502FinishLoad
 2695 D1:C767 -  -  -  -  
 2696 D1:C767 -  -  -  -  ;CLD - Clear Decimal Mode
 2697 D1:C767 -  -  -  -  ;0 -> D
 2698 D1:C767 -  -  -  -  ;N	Z	C	I	D	V
 2699 D1:C767 -  -  -  -  ;-	-	-	-	0	-
 2700 D1:C767 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2701 D1:C767 -  -  -  -  ;implied	CLD	D8	1	2  
 2702 D1:C767 -  -  -  -  inst6502_cld:
 2703 D1:C767 DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2704 D1:C76B C3 EB B1 D1     jp  i6502FinishLoad
 2705 D1:C76F -  -  -  -  
 2706 D1:C76F -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2707 D1:C76F -  -  -  -  ;0 -> I
 2708 D1:C76F -  -  -  -  ;N	Z	C	I	D	V
 2709 D1:C76F -  -  -  -  ;-	-	-	0	-	-
 2710 D1:C76F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2711 D1:C76F -  -  -  -  ;implied	CLI	58	1	2  
 2712 D1:C76F -  -  -  -  inst6502_cli:
 2713 D1:C76F DD CB 04 96     res SF_INT,(ix+REGSR)
 2714 D1:C773 C3 EB B1 D1     jp  i6502FinishLoad
 2715 D1:C777 -  -  -  -  
 2716 D1:C777 -  -  -  -  ;CLV - Clear Overflow Flag
 2717 D1:C777 -  -  -  -  ;0 -> V
 2718 D1:C777 -  -  -  -  ;N	Z	C	I	D	V
 2719 D1:C777 -  -  -  -  ;-	-	-	-	-	0
 2720 D1:C777 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2721 D1:C777 -  -  -  -  ;implied	CLV	B8	1	2  
 2722 D1:C777 -  -  -  -  inst6502_clv:
 2723 D1:C777 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2724 D1:C77B C3 EB B1 D1     jp  i6502FinishLoad
 2725 D1:C77F -  -  -  -  
 2726 D1:C77F -  -  -  -  ;SEC - Set Carry Flag
 2727 D1:C77F -  -  -  -  ;1 -> C
 2728 D1:C77F -  -  -  -  ;N	Z	C	I	D	V
 2729 D1:C77F -  -  -  -  ;-	-	1	-	-	-
 2730 D1:C77F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2731 D1:C77F -  -  -  -  ;implied	SEC	38	1	2  
 2732 D1:C77F -  -  -  -  inst6502_sec:
 2733 D1:C77F DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2734 D1:C783 C3 EB B1 D1     jp  i6502FinishLoad
 2735 D1:C787 -  -  -  -  
 2736 D1:C787 -  -  -  -  ;SED - Set Decimal Flag
 2737 D1:C787 -  -  -  -  ;1 -> D
 2738 D1:C787 -  -  -  -  ;N	Z	C	I	D	V
 2739 D1:C787 -  -  -  -  ;-	-	-	-	1	-
 2740 D1:C787 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2741 D1:C787 -  -  -  -  ;implied	SED	F8	1	2  
 2742 D1:C787 -  -  -  -  inst6502_sed:
 2743 D1:C787 DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2744 D1:C78B C3 EB B1 D1     jp  i6502FinishLoad
 2745 D1:C78F -  -  -  -  
 2746 D1:C78F -  -  -  -  ;SEI - Set Interrupt Disable Status
 2747 D1:C78F -  -  -  -  ;1 -> I
 2748 D1:C78F -  -  -  -  ;N	Z	C	I	D	V
 2749 D1:C78F -  -  -  -  ;-	-	-	1	-	-
 2750 D1:C78F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2751 D1:C78F -  -  -  -  ;implied	SEI	78	1	2  
 2752 D1:C78F -  -  -  -  inst6502_sei:
 2753 D1:C78F DD CB 04 D6     set SF_INT,(ix+REGSR)
 2754 D1:C793 C3 EB B1 D1     jp  i6502FinishLoad
 2755 D1:C797 -  -  -  -  
 2756 D1:C797 -  -  -  -  ;-----------------------------------------------------------------------------
 2757 D1:C797 -  -  -  -  ;-----------------------------------------------------------------------------
 2758 D1:C797 -  -  -  -  ;-----------------------------------------------------------------------------
 2759 D1:C797 -  -  -  -  ;Instructions by type: Comparisons
 2760 D1:C797 -  -  -  -  
 2761 D1:C797 -  -  -  -  ;CMP - Compare Memory with Accumulator
 2762 D1:C797 -  -  -  -  ;A - M
 2763 D1:C797 -  -  -  -  ;N	Z	C	I	D	V
 2764 D1:C797 -  -  -  -  ;+	+	+	-	-	-
 2765 D1:C797 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2766 D1:C797 -  -  -  -  
 2767 D1:C797 -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2768 D1:C797 -  -  -  -  inst6502_cmp_imm:
 2769 D1:C797 ED 33 02 -      ADDCYC(2)
 2770 D1:C79A 46 -  -  -      ld  b,(hl)
 2771 D1:C79B C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2772 D1:C79F -  -  -  -  
 2773 D1:C79F -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2774 D1:C79F -  -  -  -  inst6502_cmp_zp:
 2775 D1:C79F ED 33 03 -      ADDCYC(3)
 2776 D1:C7A2 7E -  -  -      ld  a,(hl)
 2777 D1:C7A3 01 00 38 D0     ld  bc,ZEROPAGE
 2778 D1:C7A7 81 -  -  -      add a,c
 2779 D1:C7A8 4F -  -  -      ld  c,a
 2780 D1:C7A9 0A -  -  -      ld  a,(bc)
 2781 D1:C7AA 47 -  -  -      ld  b,a
 2782 D1:C7AB C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2783 D1:C7AF -  -  -  -  
 2784 D1:C7AF -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2785 D1:C7AF -  -  -  -  inst6502_cmp_zpx:
 2786 D1:C7AF ED 33 04 -      ADDCYC(4)
 2787 D1:C7B2 7E -  -  -      ld  a,(hl)
 2788 D1:C7B3 01 00 38 D0     ld  bc,ZEROPAGE
 2789 D1:C7B7 81 -  -  -      add a,c
 2790 D1:C7B8 DD 86 01 -      add a,(ix+REGX)
 2791 D1:C7BB 4F -  -  -      ld  c,a
 2792 D1:C7BC 0A -  -  -      ld  a,(bc)
 2793 D1:C7BD 47 -  -  -      ld  b,a
 2794 D1:C7BE C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2795 D1:C7C2 -  -  -  -  
 2796 D1:C7C2 -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2797 D1:C7C2 -  -  -  -  inst6502_cmp_abs:
 2798 D1:C7C2 ED 33 04 -      ADDCYC(4)
 2799 D1:C7C5 CD EF B3 D1     call subroutine6502_abs_split_start
 2800 D1:C7C9 E5 -  -  -      push hl
 2801 D1:C7CA 50 -  -  -          ld  d,b
 2802 D1:C7CB 79 -  -  -          ld  a,c
 2803 D1:C7CC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2804 D1:C7CE ED 4C -  -          mlt bc
 2805 D1:C7D0 21 00 40 D0         ld  hl,PAGETABLE
 2806 D1:C7D4 09 -  -  -          add hl,bc
 2807 D1:C7D5 ED 27 -  -          ld  hl,(hl)
 2808 D1:C7D7 06 00 -  -          ld  b,0
 2809 D1:C7D9 4F -  -  -          ld  c,a
 2810 D1:C7DA 09 -  -  -          add hl,bc   ;full address
 2811 D1:C7DB 7E -  -  -          READ_ACCESS
 2812 D1:C7DC E1 -  -  -      pop hl
 2813 D1:C7DD 47 -  -  -      ld  b,a
 2814 D1:C7DE C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2815 D1:C7E2 -  -  -  -  
 2816 D1:C7E2 -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2817 D1:C7E2 -  -  -  -  inst6502_cmp_absx:
 2818 D1:C7E2 ED 33 04 -      ADDCYC(4)
 2819 D1:C7E5 CD EF B3 D1     call subroutine6502_abs_split_start
 2820 D1:C7E9 E5 -  -  -      push hl
 2821 D1:C7EA 50 -  -  -          ld  d,b
 2822 D1:C7EB 79 -  -  -          ld  a,c
 2823 D1:C7EC 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2824 D1:C7EE ED 4C -  -          mlt bc
 2825 D1:C7F0 21 00 40 D0         ld  hl,PAGETABLE
 2826 D1:C7F4 09 -  -  -          add hl,bc
 2827 D1:C7F5 ED 27 -  -          ld  hl,(hl)
 2828 D1:C7F7 06 00 -  -          ld  b,0
 2829 D1:C7F9 DD 86 01 -          add a,(ix+REGX)
 2830 D1:C7FC 4F -  -  -          ld  c,a
 2831 D1:C7FD 30 04 -  -          jr  nc,+_
 2832 D1:C7FF 04 -  -  -          inc b
 2833 D1:C800 14 -  -  -          inc d
 2834 D1:C801 FD 23 -  -          ADDCYC(1)
 2835 D1:C803 09 -  -  -  _:      add hl,bc   ;full address
 2836 D1:C804 7E -  -  -          READ_ACCESS
 2837 D1:C805 E1 -  -  -      pop hl
 2838 D1:C806 47 -  -  -      ld  b,a
 2839 D1:C807 C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2840 D1:C80B -  -  -  -  
 2841 D1:C80B -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2842 D1:C80B -  -  -  -  inst6502_cmp_absy:
 2843 D1:C80B ED 33 04 -      ADDCYC(4)
 2844 D1:C80E CD EF B3 D1     call subroutine6502_abs_split_start
 2845 D1:C812 E5 -  -  -      push hl
 2846 D1:C813 50 -  -  -          ld  d,b
 2847 D1:C814 79 -  -  -          ld  a,c
 2848 D1:C815 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2849 D1:C817 ED 4C -  -          mlt bc
 2850 D1:C819 21 00 40 D0         ld  hl,PAGETABLE
 2851 D1:C81D 09 -  -  -          add hl,bc
 2852 D1:C81E ED 27 -  -          ld  hl,(hl)
 2853 D1:C820 06 00 -  -          ld  b,0
 2854 D1:C822 DD 86 02 -          add a,(ix+REGY)
 2855 D1:C825 4F -  -  -          ld  c,a
 2856 D1:C826 30 04 -  -          jr  nc,+_
 2857 D1:C828 04 -  -  -          inc b
 2858 D1:C829 14 -  -  -          inc d
 2859 D1:C82A FD 23 -  -          ADDCYC(1)
 2860 D1:C82C 09 -  -  -  _:      add hl,bc   ;full address
 2861 D1:C82D 7E -  -  -          READ_ACCESS
 2862 D1:C82E E1 -  -  -      pop hl
 2863 D1:C82F 47 -  -  -      ld  b,a
 2864 D1:C830 C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2865 D1:C834 -  -  -  -  
 2866 D1:C834 -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2867 D1:C834 -  -  -  -  inst6502_cmp_indx:
 2868 D1:C834 ED 33 06 -      ADDCYC(6)
 2869 D1:C837 E5 -  -  -      push hl
 2870 D1:C838 7E -  -  -          ld  a,(hl)
 2871 D1:C839 21 00 38 D0         ld  hl,ZEROPAGE
 2872 D1:C83D 85 -  -  -          add a,L
 2873 D1:C83E DD 86 01 -          add a,(ix+REGX)
 2874 D1:C841 6F -  -  -          ld  L,a
 2875 D1:C842 7E -  -  -          ld  a,(hl)
 2876 D1:C843 2C -  -  -          inc L
 2877 D1:C844 56 -  -  -          ld  d,(hl)
 2878 D1:C845 42 -  -  -          ld  b,d
 2879 D1:C846 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2880 D1:C848 ED 4C -  -          mlt bc
 2881 D1:C84A 21 00 40 D0         ld  hl,PAGETABLE
 2882 D1:C84E 09 -  -  -          add hl,bc
 2883 D1:C84F ED 27 -  -          ld  hl,(hl)
 2884 D1:C851 06 00 -  -          ld  b,0
 2885 D1:C853 4F -  -  -          ld  c,a
 2886 D1:C854 09 -  -  -          add hl,bc
 2887 D1:C855 7E -  -  -          READ_ACCESS
 2888 D1:C856 E1 -  -  -      pop hl
 2889 D1:C857 47 -  -  -      ld  b,a
 2890 D1:C858 C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2891 D1:C85C -  -  -  -  
 2892 D1:C85C -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2893 D1:C85C -  -  -  -  inst6502_cmp_indy:
 2894 D1:C85C ED 33 05 -      ADDCYC(5)
 2895 D1:C85F E5 -  -  -      push hl
 2896 D1:C860 7E -  -  -          ld  a,(hl)
 2897 D1:C861 21 00 38 D0         ld  hl,ZEROPAGE
 2898 D1:C865 85 -  -  -          add a,L
 2899 D1:C866 6F -  -  -          ld  L,a
 2900 D1:C867 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2901 D1:C868 2C -  -  -          inc L
 2902 D1:C869 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2903 D1:C86C 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2904 D1:C86D 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2905 D1:C86F 24 -  -  -          inc h
 2906 D1:C870 FD 23 -  -          ADDCYC(1)
 2907 D1:C872 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2908 D1:C873 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2909 D1:C875 ED 6C -  -          mlt hl          ;23.
 2910 D1:C877 01 00 40 D0         ld  bc,PAGETABLE
 2911 D1:C87B 09 -  -  -          add hl,bc
 2912 D1:C87C ED 27 -  -          ld  hl,(hl)     ;address get.
 2913 D1:C87E 01 00 00 00         ld  bc,0
 2914 D1:C882 4F -  -  -          ld  c,a
 2915 D1:C883 09 -  -  -          add hl,bc       ;Full address get.
 2916 D1:C884 7E -  -  -          READ_ACCESS
 2917 D1:C885 E1 -  -  -      pop hl
 2918 D1:C886 47 -  -  -      ld  b,a
 2919 D1:C887 C3 6D B4 D1     jp  subroutine6502_cmp_combined_end
 2920 D1:C88B -  -  -  -  
 2921 D1:C88B -  -  -  -  ;-----------------------------------------------------------------------------
 2922 D1:C88B -  -  -  -  ;CPX - Compare Memory and Index X
 2923 D1:C88B -  -  -  -  ;X - M
 2924 D1:C88B -  -  -  -  ;N	Z	C	I	D	V
 2925 D1:C88B -  -  -  -  ;+	+	+	-	-	-
 2926 D1:C88B -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2927 D1:C88B -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2928 D1:C88B -  -  -  -  inst6502_cpx_imm:
 2929 D1:C88B ED 33 02 -      ADDCYC(2)
 2930 D1:C88E DD 7E 01 -      ld  a,(ix+REGX)
 2931 D1:C891 BE -  -  -      cp  (hl)
 2932 D1:C892 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2933 D1:C8AB C3 D2 B1 D1     jp  i6502NextLoad
 2934 D1:C8AF -  -  -  -  
 2935 D1:C8AF -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2936 D1:C8AF -  -  -  -  inst6502_cpx_zp:
 2937 D1:C8AF ED 33 03 -      ADDCYC(3)
 2938 D1:C8B2 7E -  -  -      ld  a,(hl)
 2939 D1:C8B3 01 00 38 D0     ld  bc,ZEROPAGE
 2940 D1:C8B7 81 -  -  -      add a,c
 2941 D1:C8B8 4F -  -  -      ld  c,a
 2942 D1:C8B9 0A -  -  -      ld  a,(bc)
 2943 D1:C8BA 47 -  -  -      ld  b,a
 2944 D1:C8BB DD 7E 01 -      ld  a,(ix+REGX)
 2945 D1:C8BE B8 -  -  -      cp  b
 2946 D1:C8BF DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2947 D1:C8D8 C3 D2 B1 D1     jp i6502NextLoad
 2948 D1:C8DC -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2949 D1:C8DC -  -  -  -  inst6502_cpx_abs:
 2950 D1:C8DC ED 33 04 -      ADDCYC(4)
 2951 D1:C8DF CD EF B3 D1     call subroutine6502_abs_split_start
 2952 D1:C8E3 E5 -  -  -      push hl
 2953 D1:C8E4 50 -  -  -          ld  d,b
 2954 D1:C8E5 79 -  -  -          ld  a,c
 2955 D1:C8E6 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2956 D1:C8E8 ED 4C -  -          mlt bc
 2957 D1:C8EA 21 00 40 D0         ld  hl,PAGETABLE
 2958 D1:C8EE 09 -  -  -          add hl,bc
 2959 D1:C8EF ED 27 -  -          ld  hl,(hl)
 2960 D1:C8F1 06 00 -  -          ld  b,0
 2961 D1:C8F3 4F -  -  -          ld  c,a
 2962 D1:C8F4 09 -  -  -          add hl,bc   ;full address
 2963 D1:C8F5 7E -  -  -          READ_ACCESS
 2964 D1:C8F6 E1 -  -  -      pop hl
 2965 D1:C8F7 47 -  -  -      ld  b,a
 2966 D1:C8F8 DD 7E 01 -      ld  a,(ix+REGX)
 2967 D1:C8FB B8 -  -  -      cp  b
 2968 D1:C8FC DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2969 D1:C915 C3 D2 B1 D1     jp i6502NextLoad
 2970 D1:C919 -  -  -  -  
 2971 D1:C919 -  -  -  -  ;-----------------------------------------------------------------------------
 2972 D1:C919 -  -  -  -  ;CPY - Compare Memory and Index Y
 2973 D1:C919 -  -  -  -  ;Y - M
 2974 D1:C919 -  -  -  -  ;N	Z	C	I	D	V
 2975 D1:C919 -  -  -  -  ;+	+	+	-	-	-
 2976 D1:C919 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2977 D1:C919 -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 2978 D1:C919 -  -  -  -  inst6502_cpy_imm:
 2979 D1:C919 ED 33 02 -      ADDCYC(2)
 2980 D1:C91C DD 7E 02 -      ld  a,(ix+REGY)
 2981 D1:C91F BE -  -  -      cp  (hl)
 2982 D1:C920 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2983 D1:C939 C3 D2 B1 D1     jp  i6502NextLoad
 2984 D1:C93D -  -  -  -  
 2985 D1:C93D -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 2986 D1:C93D -  -  -  -  inst6502_cpy_zp:
 2987 D1:C93D ED 33 03 -      ADDCYC(3)
 2988 D1:C940 7E -  -  -      ld  a,(hl)
 2989 D1:C941 01 00 38 D0     ld  bc,ZEROPAGE
 2990 D1:C945 81 -  -  -      add a,c
 2991 D1:C946 4F -  -  -      ld  c,a
 2992 D1:C947 0A -  -  -      ld  a,(bc)
 2993 D1:C948 47 -  -  -      ld  b,a
 2994 D1:C949 DD 7E 02 -      ld  a,(ix+REGY)
 2995 D1:C94C B8 -  -  -      cp  b
 2996 D1:C94D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2997 D1:C966 C3 D2 B1 D1     jp i6502NextLoad
 2998 D1:C96A -  -  -  -  
 2999 D1:C96A -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3000 D1:C96A -  -  -  -  inst6502_cpy_abs:
 3001 D1:C96A ED 33 04 -      ADDCYC(4)
 3002 D1:C96D CD EF B3 D1     call subroutine6502_abs_split_start
 3003 D1:C971 E5 -  -  -      push hl
 3004 D1:C972 50 -  -  -          ld  d,b
 3005 D1:C973 79 -  -  -          ld  a,c
 3006 D1:C974 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3007 D1:C976 ED 4C -  -          mlt bc
 3008 D1:C978 21 00 40 D0         ld  hl,PAGETABLE
 3009 D1:C97C 09 -  -  -          add hl,bc
 3010 D1:C97D ED 27 -  -          ld  hl,(hl)
 3011 D1:C97F 06 00 -  -          ld  b,0
 3012 D1:C981 4F -  -  -          ld  c,a
 3013 D1:C982 09 -  -  -          add hl,bc   ;full address
 3014 D1:C983 7E -  -  -          READ_ACCESS
 3015 D1:C984 E1 -  -  -      pop hl
 3016 D1:C985 47 -  -  -      ld  b,a
 3017 D1:C986 DD 7E 02 -      ld  a,(ix+REGY)
 3018 D1:C989 B8 -  -  -      cp  b
 3019 D1:C98A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3020 D1:C9A3 C3 D2 B1 D1     jp i6502NextLoad
 3021 D1:C9A7 -  -  -  -  
 3022 D1:C9A7 -  -  -  -  
 3023 D1:C9A7 -  -  -  -  ;-----------------------------------------------------------------------------
 3024 D1:C9A7 -  -  -  -  ;-----------------------------------------------------------------------------
 3025 D1:C9A7 -  -  -  -  ;-----------------------------------------------------------------------------
 3026 D1:C9A7 -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3027 D1:C9A7 -  -  -  -  
 3028 D1:C9A7 -  -  -  -  ;branch on C=0
 3029 D1:C9A7 -  -  -  -  ;relative	BCC oper	90	2	2**
 3030 D1:C9A7 -  -  -  -  inst6502_bcc:
 3031 D1:C9A7 ED 33 02 -      ADDCYC(2)
 3032 D1:C9AA DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3033 D1:C9AE C2 D2 B1 D1     jp  nz,i6502NextLoad
 3034 D1:C9B2 C3 8E B4 D1     jp  subroutine6502_take_branch
 3035 D1:C9B6 -  -  -  -  
 3036 D1:C9B6 -  -  -  -  ;branch on C=1
 3037 D1:C9B6 -  -  -  -  ;relative	BCS oper	B0	2	2**
 3038 D1:C9B6 -  -  -  -  inst6502_bcs:
 3039 D1:C9B6 ED 33 02 -      ADDCYC(2)
 3040 D1:C9B9 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3041 D1:C9BD CA D2 B1 D1     jp  z,i6502NextLoad
 3042 D1:C9C1 C3 8E B4 D1     jp  subroutine6502_take_branch
 3043 D1:C9C5 -  -  -  -  
 3044 D1:C9C5 -  -  -  -  ;branch on Z=1
 3045 D1:C9C5 -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3046 D1:C9C5 -  -  -  -  inst6502_beq:
 3047 D1:C9C5 ED 33 02 -      ADDCYC(2)
 3048 D1:C9C8 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3049 D1:C9CC CA D2 B1 D1     jp  z,i6502NextLoad
 3050 D1:C9D0 C3 8E B4 D1     jp  subroutine6502_take_branch
 3051 D1:C9D4 -  -  -  -  
 3052 D1:C9D4 -  -  -  -  ;branch on N=1
 3053 D1:C9D4 -  -  -  -  ;relative	BMI oper	30	2	2**
 3054 D1:C9D4 -  -  -  -  inst6502_bmi:
 3055 D1:C9D4 ED 33 02 -      ADDCYC(2)
 3056 D1:C9D7 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3057 D1:C9DB CA D2 B1 D1     jp  z,i6502NextLoad
 3058 D1:C9DF C3 8E B4 D1     jp  subroutine6502_take_branch
 3059 D1:C9E3 -  -  -  -  
 3060 D1:C9E3 -  -  -  -  
 3061 D1:C9E3 -  -  -  -  ;branch on Z=0
 3062 D1:C9E3 -  -  -  -  ;relative	BNE oper	D0	2	2**
 3063 D1:C9E3 -  -  -  -  inst6502_bne:
 3064 D1:C9E3 ED 33 02 -      ADDCYC(2)
 3065 D1:C9E6 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3066 D1:C9EA C2 D2 B1 D1     jp  nz,i6502NextLoad
 3067 D1:C9EE C3 8E B4 D1     jp  subroutine6502_take_branch
 3068 D1:C9F2 -  -  -  -  
 3069 D1:C9F2 -  -  -  -  ;branch on N=0
 3070 D1:C9F2 -  -  -  -  ;relative	BPL oper	10	2	2**
 3071 D1:C9F2 -  -  -  -  inst6502_bpl:
 3072 D1:C9F2 ED 33 02 -      ADDCYC(2)
 3073 D1:C9F5 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3074 D1:C9F9 C2 D2 B1 D1     jp  nz,i6502NextLoad
 3075 D1:C9FD C3 8E B4 D1     jp  subroutine6502_take_branch
 3076 D1:CA01 -  -  -  -  
 3077 D1:CA01 -  -  -  -  ;branch on V=0
 3078 D1:CA01 -  -  -  -  ;relative	BVC oper	50	2	2**
 3079 D1:CA01 -  -  -  -  inst6502_bvc:
 3080 D1:CA01 ED 33 02 -      ADDCYC(2)
 3081 D1:CA04 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3082 D1:CA08 C2 D2 B1 D1     jp  nz,i6502NextLoad
 3083 D1:CA0C C3 8E B4 D1     jp  subroutine6502_take_branch
 3084 D1:CA10 -  -  -  -  
 3085 D1:CA10 -  -  -  -  ;branch on V=1
 3086 D1:CA10 -  -  -  -  ;relative	BVS oper	70	2	2**
 3087 D1:CA10 -  -  -  -  inst6502_bvs:
 3088 D1:CA10 ED 33 02 -      ADDCYC(2)
 3089 D1:CA13 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3090 D1:CA17 CA D2 B1 D1     jp  z,i6502NextLoad
 3091 D1:CA1B C3 8E B4 D1     jp  subroutine6502_take_branch
 3092 D1:CA1F -  -  -  -  
 3093 D1:CA1F -  -  -  -  ;-----------------------------------------------------------------------------
 3094 D1:CA1F -  -  -  -  ;-----------------------------------------------------------------------------
 3095 D1:CA1F -  -  -  -  ;-----------------------------------------------------------------------------
 3096 D1:CA1F -  -  -  -  ;Instructions by type: Interrupts
 3097 D1:CA1F -  -  -  -  
 3098 D1:CA1F -  -  -  -  ;BRK - Force Break
 3099 D1:CA1F -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3100 D1:CA1F -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3101 D1:CA1F -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3102 D1:CA1F -  -  -  -  ;(identifying a reason for the break.)
 3103 D1:CA1F -  -  -  -  ;The status register will be pushed to the stack with the break
 3104 D1:CA1F -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3105 D1:CA1F -  -  -  -  ;instruction, the break flag will be ignored.
 3106 D1:CA1F -  -  -  -  ;The interrupt disable flag is not set automatically.
 3107 D1:CA1F -  -  -  -  ;
 3108 D1:CA1F -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3109 D1:CA1F -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3110 D1:CA1F -  -  -  -  ;implied	BRK	00	1	7  
 3111 D1:CA1F -  -  -  -  inst6502_brk:
 3112 D1:CA1F ED 33 07 -      ADDCYC(7)
 3113 D1:CA22 21 00 39 D0     ld  hl,STACKBASE
 3114 D1:CA26 DD 6E 03 -      ld  L,(ix+REGSP)
 3115 D1:CA29 52 DD 17 05     ld.s de,(ix+REGPC)
 3116 D1:CA2D 13 -  -  -      inc de      ;that extra spacer.
 3117 D1:CA2E 72 -  -  -      ld  (hl),d
 3118 D1:CA2F 2D -  -  -      dec L
 3119 D1:CA30 73 -  -  -      ld  (hl),e
 3120 D1:CA31 2D -  -  -      dec L
 3121 D1:CA32 DD 7E 04 -      ld  a,(ix+REGSR)
 3122 D1:CA35 CB D7 -  -      set SF_INT,a
 3123 D1:CA37 77 -  -  -      ld  (hl),a
 3124 D1:CA38 2D -  -  -      dec L
 3125 D1:CA39 DD 75 03 -      ld  (ix+REGSP),L
 3126 D1:CA3C B7 -  -  -      WAS_NMI_TRIGGERED
 3127 D1:CA3D 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3128 D1:CA41 28 04 -  -      jr  z,+_
 3129 D1:CA43 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3130 D1:CA47 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3131 D1:CA4B ED 27 -  -      ld  hl,(hl)
 3132 D1:CA4D 09 -  -  -      add hl,bc
 3133 D1:CA4E ED 17 -  -      ld  de,(hl)
 3134 D1:CA50 52 DD 1F 05     ld.s (ix+REGPC),de
 3135 D1:CA54 C3 BC B1 D1     jp  i6502FirstLoad
 3136 D1:CA58 -  -  -  -  
 3137 D1:CA58 -  -  -  -  ;RTI - Return from Interrupt
 3138 D1:CA58 -  -  -  -  ;The status register is pulled with the break flag
 3139 D1:CA58 -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3140 D1:CA58 -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3141 D1:CA58 -  -  -  -  ;                      from stack
 3142 D1:CA58 -  -  -  -  ;implied	RTI	40	1	6  
 3143 D1:CA58 -  -  -  -  inst6502_rti:
 3144 D1:CA58 21 00 39 D0     ld  hl,STACKBASE
 3145 D1:CA5C DD 6E 03 -      ld  l,(ix+REGSP)
 3146 D1:CA5F 2C -  -  -      inc l
 3147 D1:CA60 7E -  -  -      ld  a,(hl)
 3148 D1:CA61 2C -  -  -      inc l
 3149 D1:CA62 5E -  -  -      ld  e,(hl)
 3150 D1:CA63 2C -  -  -      inc l
 3151 D1:CA64 56 -  -  -      ld  d,(hl)
 3152 D1:CA65 DD 75 03 -      ld  (ix+REGSP),l
 3153 D1:CA68 52 DD 1F 05     ld.s (ix+REGPC),de
 3154 D1:CA6C DD 46 04 -      ld  b,(ix+REGSR)
 3155 D1:CA6F A8 -  -  -      xor a,b
 3156 D1:CA70 E6 DF -  -      and a,%11011111
 3157 D1:CA72 A8 -  -  -      xor a,b
 3158 D1:CA73 DD 77 04 -      ld  (ix+REGSR),a
 3159 D1:CA76 ED 33 06 -      ADDCYC(6)
 3160 D1:CA79 C3 BC B1 D1     jp  i6502FirstLoad
 3161 D1:CA7D -  -  -  -  
 3162 D1:CA7D -  -  -  -  
 3163 D1:CA7D -  -  -  -  
 3164 D1:CA7D -  -  -  -  ;-----------------------------------------------------------------------------
 3165 D1:CA7D -  -  -  -  ;-----------------------------------------------------------------------------
 3166 D1:CA7D -  -  -  -  ;-----------------------------------------------------------------------------
 3167 D1:CA7D -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3168 D1:CA7D -  -  -  -  
 3169 D1:CA7D -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3170 D1:CA7D -  -  -  -  inst6052_jmp_abs:
 3171 D1:CA7D 7E -  -  -      ld  a,(hl)
 3172 D1:CA7E 23 -  -  -      inc hl
 3173 D1:CA7F 1C -  -  -      inc e
 3174 D1:CA80 20 0F -  -      jr  nz,+_
 3175 D1:CA82 DD 56 06 -      ld  d,(ix+REGPC+1)
 3176 D1:CA85 14 -  -  -      inc d
 3177 D1:CA86 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3178 D1:CA88 ED 5C -  -      mlt de
 3179 D1:CA8A 21 00 40 D0     ld  hl,PAGETABLE
 3180 D1:CA8E 19 -  -  -      add hl,de
 3181 D1:CA8F ED 27 -  -      ld  hl,(hl)
 3182 D1:CA91 DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3183 D1:CA94 7E -  -  -      ld  a,(hl)
 3184 D1:CA95 DD 77 06 -      ld  (ix+REGPC+1),a
 3185 D1:CA98 ED 33 03 -      ADDCYC(3)
 3186 D1:CA9B C3 BC B1 D1     jp i6502FirstLoad
 3187 D1:CA9F -  -  -  -  
 3188 D1:CA9F -  -  -  -  
 3189 D1:CA9F -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3190 D1:CA9F -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3191 D1:CA9F -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3192 D1:CA9F -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3193 D1:CA9F -  -  -  -  inst6502_jmp_indir:
 3194 D1:CA9F ED 33 05 -      ADDCYC(5)
 3195 D1:CAA2 5E -  -  -      ld  e,(hl)
 3196 D1:CAA3 7B -  -  -      ld  a,e
 3197 D1:CAA4 23 -  -  -      inc hl
 3198 D1:CAA5 3C -  -  -      inc a
 3199 D1:CAA6 20 0F -  -      jr  nz,+_
 3200 D1:CAA8 DD 46 06 -      ld  b,(ix+REGPC+1)
 3201 D1:CAAB 04 -  -  -      inc b
 3202 D1:CAAC 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3203 D1:CAAE ED 4C -  -      mlt bc
 3204 D1:CAB0 21 00 40 D0     ld  hl,PAGETABLE
 3205 D1:CAB4 09 -  -  -      add hl,bc
 3206 D1:CAB5 ED 27 -  -      ld  hl,(hl)
 3207 D1:CAB7 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3208 D1:CAB8 1C -  -  -      inc e
 3209 D1:CAB9 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3210 D1:CABB 1D -  -  -      dec e
 3211 D1:CABC 4B -  -  -      ld  c,e
 3212 D1:CABD 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3213 D1:CABF ED 5C -  -      mlt de
 3214 D1:CAC1 21 00 40 D0     ld  hl,PAGETABLE
 3215 D1:CAC5 19 -  -  -      add hl,de
 3216 D1:CAC6 ED 27 -  -      ld  hl,(hl)
 3217 D1:CAC8 16 00 -  -      ld  d,0
 3218 D1:CACA 59 -  -  -      ld  e,c
 3219 D1:CACB 19 -  -  -      add hl,de   ;full real address reconstructed.
 3220 D1:CACC ED 17 -  -      ld  de,(hl)
 3221 D1:CACE 52 DD 1F 05     ld.s (ix+REGPC),de
 3222 D1:CAD2 C3 BC B1 D1     jp  i6502FirstLoad
 3223 D1:CAD6 -  -  -  -  inst6502_jmp_indir_splitread:
 3224 D1:CAD6 -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3225 D1:CAD6 -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3226 D1:CAD6 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3227 D1:CAD8 ED 5C -  -      mlt de
 3228 D1:CADA 21 00 40 D0     ld  hl,PAGETABLE
 3229 D1:CADE 19 -  -  -      add hl,de
 3230 D1:CADF ED 27 -  -      ld  hl,(hl)
 3231 D1:CAE1 56 -  -  -      ld  d,(hl)
 3232 D1:CAE2 01 FF 00 00     ld  bc,255
 3233 D1:CAE6 09 -  -  -      add hl,bc
 3234 D1:CAE7 5E -  -  -      ld  e,(hl)
 3235 D1:CAE8 52 DD 1F 05     ld.s (ix+REGPC),de
 3236 D1:CAEC C3 BC B1 D1     jp  i6502FirstLoad
 3237 D1:CAF0 -  -  -  -  
 3238 D1:CAF0 -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3239 D1:CAF0 -  -  -  -  ;    mlt de
 3240 D1:CAF0 -  -  -  -  ;    ld  hl,PAGETABLE
 3241 D1:CAF0 -  -  -  -  ;    add hl,de
 3242 D1:CAF0 -  -  -  -  ;    ld  de,(hl) ;
 3243 D1:CAF0 -  -  -  -  ;    ex  de,hl
 3244 D1:CAF0 -  -  -  -  ;    ld  bc,255
 3245 D1:CAF0 -  -  -  -  ;    add hl,bc
 3246 D1:CAF0 -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3247 D1:CAF0 -  -  -  -  ;    ex  de,hl
 3248 D1:CAF0 -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3249 D1:CAF0 -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3250 D1:CAF0 -  -  -  -  ;    ld  e,(hl)
 3251 D1:CAF0 -  -  -  -  ;    ld  d,a
 3252 D1:CAF0 -  -  -  -  ;    ld.s (ix+REGPC),de
 3253 D1:CAF0 -  -  -  -  ;    jp  i6502FirstLoad
 3254 D1:CAF0 -  -  -  -  
 3255 D1:CAF0 -  -  -  -  ;absolute	JSR oper	20	3	6  
 3256 D1:CAF0 -  -  -  -  inst6502_jsr:
 3257 D1:CAF0 DD 56 06 -      ld  d,(ix+REGPC+1)
 3258 D1:CAF3 4E -  -  -      ld  c,(hl)
 3259 D1:CAF4 23 -  -  -      inc hl
 3260 D1:CAF5 1C -  -  -      inc e
 3261 D1:CAF6 20 0E -  -      jr  nz,+_
 3262 D1:CAF8 14 -  -  -      inc d
 3263 D1:CAF9 7A -  -  -      ld  a,d
 3264 D1:CAFA 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3265 D1:CAFC ED 5C -  -      mlt de
 3266 D1:CAFE 21 00 40 D0     ld  hl,PAGETABLE
 3267 D1:CB02 19 -  -  -      add hl,de
 3268 D1:CB03 ED 27 -  -      ld  hl,(hl)
 3269 D1:CB05 57 -  -  -      ld  d,a
 3270 D1:CB06 46 -  -  -  _:  ld  b,(hl)
 3271 D1:CB07 -  -  -  -      ;push de to 6502stack
 3272 D1:CB07 21 00 39 D0     ld  hl,STACKBASE
 3273 D1:CB0B DD 6E 03 -      ld  l,(ix+REGSP)
 3274 D1:CB0E 72 -  -  -      ld  (hl),d
 3275 D1:CB0F 2D -  -  -      dec l
 3276 D1:CB10 73 -  -  -      ld  (hl),e
 3277 D1:CB11 2D -  -  -      dec l
 3278 D1:CB12 DD 75 03 -      ld  (ix+REGSP),l
 3279 D1:CB15 52 DD 0F 05     ld.s (ix+REGPC),bc
 3280 D1:CB19 ED 33 06 -      ADDCYC(6)
 3281 D1:CB1C C3 BC B1 D1     jp  i6502FirstLoad
 3282 D1:CB20 -  -  -  -  
 3283 D1:CB20 -  -  -  -  ;implied	RTS	60	1	6
 3284 D1:CB20 -  -  -  -  inst6502_rts:
 3285 D1:CB20 21 00 39 D0     ld  hl,STACKBASE
 3286 D1:CB24 DD 6E 03 -      ld  l,(ix+REGSP)
 3287 D1:CB27 2C -  -  -      inc l
 3288 D1:CB28 5E -  -  -      ld  e,(hl)
 3289 D1:CB29 2C -  -  -      inc l
 3290 D1:CB2A 56 -  -  -      ld  d,(hl)
 3291 D1:CB2B DD 75 03 -      ld  (ix+REGSP),l
 3292 D1:CB2E 52 DD 1F 05     ld.s (ix+REGPC),de
 3293 D1:CB32 ED 33 06 -      ADDCYC(6)
 3294 D1:CB35 C3 BC B1 D1     jp  i6502FirstLoad
 3295 D1:CB39 -  -  -  -  
 3296 D1:CB39 -  -  -  -  
 3297 D1:CB39 -  -  -  -  ;-----------------------------------------------------------------------------
 3298 D1:CB39 -  -  -  -  ;-----------------------------------------------------------------------------
 3299 D1:CB39 -  -  -  -  ;-----------------------------------------------------------------------------
 3300 D1:CB39 -  -  -  -  ;Instructions by type: Miscellaneous
 3301 D1:CB39 -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3302 D1:CB39 -  -  -  -  ;
 3303 D1:CB39 -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3304 D1:CB39 -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3305 D1:CB39 -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3306 D1:CB39 -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3307 D1:CB39 -  -  -  -  ;any of the registers, other than the status register (SR).
 3308 D1:CB39 -  -  -  -  
 3309 D1:CB39 -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3310 D1:CB39 -  -  -  -  ;                                           M7	+	-	-	-	M6
 3311 D1:CB39 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3312 D1:CB39 -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3313 D1:CB39 -  -  -  -  inst6502_bit_zp:
 3314 D1:CB39 ED 33 03 -      ADDCYC(3)
 3315 D1:CB3C 7E -  -  -      ld  a,(hl)
 3316 D1:CB3D 01 00 38 D0     ld  bc,ZEROPAGE
 3317 D1:CB41 81 -  -  -      add a,c
 3318 D1:CB42 4F -  -  -      ld  c,a
 3319 D1:CB43 0A -  -  -      ld  a,(bc)
 3320 D1:CB44 DD A6 00 -  _:  and a,(ix+REGA)
 3321 D1:CB47 CB 8F -  -      res SF_ZERO,a
 3322 D1:CB49 20 02 -  -      jr  nz,$+4
 3323 D1:CB4B CB CF -  -      set SF_ZERO,a
 3324 D1:CB4D DD 46 04 -      ld  b,(ix+REGSR)
 3325 D1:CB50 A8 -  -  -      xor a,b
 3326 D1:CB51 E6 C2 -  -      and a,%11000010
 3327 D1:CB53 A8 -  -  -      xor a,b
 3328 D1:CB54 DD 77 04 -      ld  (ix+REGSR),a
 3329 D1:CB57 C3 D2 B1 D1     jp  i6502NextLoad
 3330 D1:CB5B -  -  -  -  
 3331 D1:CB5B -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3332 D1:CB5B -  -  -  -  inst6502_bit_abs:
 3333 D1:CB5B ED 33 04 -      ADDCYC(4)
 3334 D1:CB5E CD EF B3 D1     call subroutine6502_abs_split_start
 3335 D1:CB62 E5 -  -  -      push hl
 3336 D1:CB63 50 -  -  -          ld  d,b
 3337 D1:CB64 79 -  -  -          ld  a,c
 3338 D1:CB65 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3339 D1:CB67 ED 4C -  -          mlt bc
 3340 D1:CB69 21 00 40 D0         ld  hl,PAGETABLE
 3341 D1:CB6D 09 -  -  -          add hl,bc
 3342 D1:CB6E ED 27 -  -          ld  hl,(hl)
 3343 D1:CB70 06 00 -  -          ld  b,0
 3344 D1:CB72 4F -  -  -          ld  c,a
 3345 D1:CB73 09 -  -  -          add hl,bc   ;full address
 3346 D1:CB74 7E -  -  -          READ_ACCESS
 3347 D1:CB75 E1 -  -  -      pop hl
 3348 D1:CB76 18 CC -  -      jr  -_    
 3349 D1:CB78 -  -  -  -  
 3350 D1:CB78 -  -  -  -  ;NOP - No Operation
 3351 D1:CB78 -  -  -  -  ;implied	NOP	EA	1	2  
 3352 D1:CB78 -  -  -  -  inst6502_nop:
 3353 D1:CB78 ED 33 02 -      ADDCYC(2)
 3354 D1:CB7B C3 EB B1 D1     jp  i6502FinishLoad
 3355 D1:CB7F -  -  -  -  
 3356 D1:CB7F -  -  -  -  ;-----------------------------------------------------------------------------
 3357 D1:CB7F -  -  -  -  ;-----------------------------------------------------------------------------
 3358 D1:CB7F -  -  -  -  ;-----------------------------------------------------------------------------
 3359 D1:CB7F -  -  -  -  ;Instruction not mapped: Terminate emulation
 3360 D1:CB7F -  -  -  -  inst6502_:
 3361 D1:CB7F C9 -  -  -      ret
 3362 D1:CB80 -  -  -  -  
 3363 D1:CB80 -  -  -  -  inst6502_halt:
 3364 D1:CB80 18 FE -  -      jr $
 3365 D1:CB82 C3 EB B1 D1     jp i6502FinishLoad
 3366 D1:CB86 -  -  -  -  
 3367 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3368 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3369 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3370 D1:CB86 -  -  -  -  ;Instructions by type: Illegal Instructions
 3371 D1:CB86 -  -  -  -  
 3372 D1:CB86 -  -  -  -  
 3373 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3374 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3375 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3376 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3377 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3378 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3379 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3380 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3381 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3382 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3383 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3384 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3385 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3386 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3387 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3388 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3389 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3390 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3391 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3392 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3393 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3394 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3395 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3396 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3397 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3398 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3399 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3400 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3401 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3402 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3403 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3404 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3405 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3406 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3407 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3408 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3412 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3413 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3414 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3415 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3416 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3417 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3418 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3419 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3423 D1:CB86 -  -  -  -  ;-----------------------------------------------------------------------------
 3424 D1:CB86 -  -  -  -  
 3425 D1:CB86 -  -  -  -  inst6502_instruction_set:
 3426 D1:CB86 1F CA D1 -  .dl	inst6502_brk					;00
 3427 D1:CB89 C0 C2 D1 -  .dl	inst6502_ora_indx				;01
 3428 D1:CB8C 7F CB D1 -  .dl	inst6502_				;02
 3429 D1:CB8F 7F CB D1 -  .dl	inst6502_				;03
 3430 D1:CB92 7F CB D1 -  .dl	inst6502_				;04
 3431 D1:CB95 B3 C1 D1 -  .dl	inst6502_ora_zp					;05
 3432 D1:CB98 6B C3 D1 -  .dl	inst6502_asl_zp					;06
 3433 D1:CB9B 7F CB D1 -  .dl	inst6502_				;07
 3434 D1:CB9E 48 BA D1 -  .dl	inst6502_php					;08
 3435 D1:CBA1 92 C1 D1 -  .dl	inst6502_ora_imm				;09
 3436 D1:CBA4 47 C3 D1 -  .dl	inst6502_asl					;0A
 3437 D1:CBA7 7F CB D1 -  .dl	inst6502_				;0B
 3438 D1:CBAA 7F CB D1 -  .dl	inst6502_				;0C
 3439 D1:CBAD 06 C2 D1 -  .dl	inst6502_ora_abs				;0D
 3440 D1:CBB0 C4 C3 D1 -  .dl	inst6502_asl_abs				;0E
 3441 D1:CBB3 7F CB D1 -  .dl	inst6502_				;0F
 3442 D1:CBB6 F2 C9 D1 -  .dl	inst6502_bpl					;10
 3443 D1:CBB9 00 C3 D1 -  .dl	inst6502_ora_indy				;11
 3444 D1:CBBC 80 CB D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3445 D1:CBBF 7F CB D1 -  .dl	inst6502_				;13
 3446 D1:CBC2 7F CB D1 -  .dl	inst6502_				;14
 3447 D1:CBC5 DB C1 D1 -  .dl	inst6502_ora_zpx				;15
 3448 D1:CBC8 96 C3 D1 -  .dl	inst6502_asl_zpx				;16
 3449 D1:CBCB 7F CB D1 -  .dl	inst6502_				;17
 3450 D1:CBCE 5F C7 D1 -  .dl	inst6502_clc					;18
 3451 D1:CBD1 7F C2 D1 -  .dl	inst6502_ora_absy				;19
 3452 D1:CBD4 7F CB D1 -  .dl	inst6502_				;1A
 3453 D1:CBD7 7F CB D1 -  .dl	inst6502_				;1B
 3454 D1:CBDA 7F CB D1 -  .dl	inst6502_				;1C
 3455 D1:CBDD 3E C2 D1 -  .dl	inst6502_ora_absx				;1D
 3456 D1:CBE0 01 C4 D1 -  .dl	inst6502_asl_absx				;1E
 3457 D1:CBE3 7F CB D1 -  .dl	inst6502_				;1F
 3458 D1:CBE6 F0 CA D1 -  .dl	inst6502_jsr					;20
 3459 D1:CBE9 56 BF D1 -  .dl	inst6502_and_indx				;21
 3460 D1:CBEC 7F CB D1 -  .dl	inst6502_				;22
 3461 D1:CBEF 7F CB D1 -  .dl	inst6502_				;23
 3462 D1:CBF2 39 CB D1 -  .dl	inst6502_bit_zp					;24
 3463 D1:CBF5 49 BE D1 -  .dl	inst6502_and_zp					;25
 3464 D1:CBF8 6B C5 D1 -  .dl	inst6502_rol_zp					;26
 3465 D1:CBFB 7F CB D1 -  .dl	inst6502_				;27
 3466 D1:CBFE 83 BA D1 -  .dl	inst6502_plp					;28
 3467 D1:CC01 28 BE D1 -  .dl	inst6502_and_imm				;29
 3468 D1:CC04 43 C5 D1 -  .dl	inst6502_rol					;2A
 3469 D1:CC07 7F CB D1 -  .dl	inst6502_				;2B
 3470 D1:CC0A 5B CB D1 -  .dl	inst6502_bit_abs				;2C
 3471 D1:CC0D 9C BE D1 -  .dl	inst6502_and_abs				;2D
 3472 D1:CC10 CA C5 D1 -  .dl	inst6502_rol_abs				;2E
 3473 D1:CC13 7F CB D1 -  .dl	inst6502_				;2F
 3474 D1:CC16 D4 C9 D1 -  .dl	inst6502_bmi					;30
 3475 D1:CC19 96 BF D1 -  .dl	inst6502_and_indy				;31
 3476 D1:CC1C 7F CB D1 -  .dl	inst6502_				;32
 3477 D1:CC1F 7F CB D1 -  .dl	inst6502_				;33
 3478 D1:CC22 7F CB D1 -  .dl	inst6502_				;34
 3479 D1:CC25 71 BE D1 -  .dl	inst6502_and_zpx				;35
 3480 D1:CC28 99 C5 D1 -  .dl	inst6502_rol_zpx				;36
 3481 D1:CC2B 7F CB D1 -  .dl	inst6502_						;37
 3482 D1:CC2E 7F C7 D1 -  .dl	inst6502_sec					;38
 3483 D1:CC31 15 BF D1 -  .dl	inst6502_and_absy				;39
 3484 D1:CC34 7F CB D1 -  .dl	inst6502_			;3A
 3485 D1:CC37 7F CB D1 -  .dl	inst6502_			;3B
 3486 D1:CC3A 7F CB D1 -  .dl	inst6502_			;3C
 3487 D1:CC3D D4 BE D1 -  .dl	inst6502_and_absx				;3D
 3488 D1:CC40 0A C6 D1 -  .dl	inst6502_rol_absx				;3E
 3489 D1:CC43 7F CB D1 -  .dl	inst6502_			;3F
 3490 D1:CC46 20 CB D1 -  .dl	inst6502_rts					;40
 3491 D1:CC49 0B C1 D1 -  .dl	inst6502_eor_indx				;41
 3492 D1:CC4C 7F CB D1 -  .dl	inst6502_			;42
 3493 D1:CC4F 7F CB D1 -  .dl	inst6502_			;43
 3494 D1:CC52 7F CB D1 -  .dl	inst6502_			;44
 3495 D1:CC55 FE BF D1 -  .dl	inst6502_eor_zp					;45
 3496 D1:CC58 69 C4 D1 -  .dl	inst6502_lsr_zp					;46
 3497 D1:CC5B 7F CB D1 -  .dl	inst6502_			;47
 3498 D1:CC5E 35 BA D1 -  .dl	inst6502_pha					;48
 3499 D1:CC61 DD BF D1 -  .dl	inst6502_eor_imm				;49
 3500 D1:CC64 45 C4 D1 -  .dl	inst6502_lsr					;4A
 3501 D1:CC67 7F CB D1 -  .dl	inst6502_			;4B
 3502 D1:CC6A 7D CA D1 -  .dl	inst6052_jmp_abs				;4C
 3503 D1:CC6D 51 C0 D1 -  .dl	inst6502_eor_abs				;4D
 3504 D1:CC70 C2 C4 D1 -  .dl	inst6502_lsr_abs				;4E
 3505 D1:CC73 7F CB D1 -  .dl	inst6502_			;4F
 3506 D1:CC76 01 CA D1 -  .dl	inst6502_bvc					;50
 3507 D1:CC79 4B C1 D1 -  .dl	inst6502_eor_indy				;51
 3508 D1:CC7C 7F CB D1 -  .dl	inst6502_			;52
 3509 D1:CC7F 7F CB D1 -  .dl	inst6502_			;53
 3510 D1:CC82 7F CB D1 -  .dl	inst6502_			;54
 3511 D1:CC85 26 C0 D1 -  .dl	inst6502_eor_zpx				;55
 3512 D1:CC88 94 C4 D1 -  .dl	inst6502_lsr_zpx				;56
 3513 D1:CC8B 7F CB D1 -  .dl	inst6502_			;57
 3514 D1:CC8E 6F C7 D1 -  .dl	inst6502_cli					;58
 3515 D1:CC91 CA C0 D1 -  .dl	inst6502_eor_absy				;59
 3516 D1:CC94 7F CB D1 -  .dl	inst6502_			;5A
 3517 D1:CC97 7F CB D1 -  .dl	inst6502_			;5B
 3518 D1:CC9A 7F CB D1 -  .dl	inst6502_			;5C
 3519 D1:CC9D 89 C0 D1 -  .dl	inst6502_eor_absx				;5D
 3520 D1:CCA0 FF C4 D1 -  .dl	inst6502_lsr_absx				;5E
 3521 D1:CCA3 7F CB D1 -  .dl	inst6502_			;5F
 3522 D1:CCA6 20 CB D1 -  .dl	inst6502_rts					;60
 3523 D1:CCA9 E3 BC D1 -  .dl	inst6502_adc_indx				;61
 3524 D1:CCAC 7F CB D1 -  .dl	inst6502_			;62
 3525 D1:CCAF 7F CB D1 -  .dl	inst6502_			;63
 3526 D1:CCB2 7F CB D1 -  .dl	inst6502_			;64
 3527 D1:CCB5 4E BC D1 -  .dl	inst6502_adc_zp					;65
 3528 D1:CCB8 79 C6 D1 -  .dl	inst6502_ror_zp					;66
 3529 D1:CCBB 7F CB D1 -  .dl	inst6502_			;67
 3530 D1:CCBE 5D BA D1 -  .dl	inst6502_pla					;68
 3531 D1:CCC1 46 BC D1 -  .dl	inst6502_adc_imm				;69
 3532 D1:CCC4 51 C6 D1 -  .dl	inst6502_ror					;6A
 3533 D1:CCC7 7F CB D1 -  .dl	inst6502_			;6B
 3534 D1:CCCA 9F CA D1 -  .dl	inst6502_jmp_indir				;6C
 3535 D1:CCCD 71 BC D1 -  .dl	inst6502_adc_abs				;6D
 3536 D1:CCD0 D8 C6 D1 -  .dl	inst6502_ror_abs				;6E
 3537 D1:CCD3 7F CB D1 -  .dl	inst6502_			;6F
 3538 D1:CCD6 10 CA D1 -  .dl	inst6502_bvs					;70
 3539 D1:CCD9 0B BD D1 -  .dl	inst6502_adc_indy				;71
 3540 D1:CCDC 7F CB D1 -  .dl	inst6502_			;72
 3541 D1:CCDF 7F CB D1 -  .dl	inst6502_			;73
 3542 D1:CCE2 7F CB D1 -  .dl	inst6502_			;74
 3543 D1:CCE5 5E BC D1 -  .dl	inst6502_adc_zpx				;75
 3544 D1:CCE8 A7 C6 D1 -  .dl	inst6502_ror_zpx				;76
 3545 D1:CCEB 7F CB D1 -  .dl	inst6502_			;77
 3546 D1:CCEE 8F C7 D1 -  .dl	inst6502_sei					;78
 3547 D1:CCF1 BA BC D1 -  .dl	inst6502_adc_absy				;79
 3548 D1:CCF4 7F CB D1 -  .dl	inst6502_			;7A
 3549 D1:CCF7 7F CB D1 -  .dl	inst6502_			;7B
 3550 D1:CCFA 7F CB D1 -  .dl	inst6502_			;7C
 3551 D1:CCFD 91 BC D1 -  .dl	inst6502_adc_absx				;7D
 3552 D1:CD00 18 C7 D1 -  .dl	inst6502_ror_absx				;7E
 3553 D1:CD03 7F CB D1 -  .dl	inst6502_			;7F
 3554 D1:CD06 7F CB D1 -  .dl	inst6502_			;80
 3555 D1:CD09 9D B8 D1 -  .dl	inst6502_sta_indx				;81
 3556 D1:CD0C 7F CB D1 -  .dl	inst6502_			;82
 3557 D1:CD0F 7F CB D1 -  .dl	inst6502_			;83
 3558 D1:CD12 3F B9 D1 -  .dl	inst6502_sty_zp					;84
 3559 D1:CD15 02 B8 D1 -  .dl	inst6502_sta_zp					;85
 3560 D1:CD18 F6 B8 D1 -  .dl	inst6502_stx_zp					;86
 3561 D1:CD1B 7F CB D1 -  .dl	inst6502_			;87
 3562 D1:CD1E 79 BB D1 -  .dl	inst6502_dey					;88
 3563 D1:CD21 7F CB D1 -  .dl	inst6502_			;89
 3564 D1:CD24 E8 B9 D1 -  .dl	inst6502_txa					;8A
 3565 D1:CD27 7F CB D1 -  .dl	inst6502_			;8B
 3566 D1:CD2A 66 B9 D1 -  .dl	inst6502_sty_abs				;8C
 3567 D1:CD2D 29 B8 D1 -  .dl	inst6502_sta_abs				;8D
 3568 D1:CD30 1D B9 D1 -  .dl	inst6502_stx_abs				;8E
 3569 D1:CD33 7F CB D1 -  .dl	inst6502_			;8F
 3570 D1:CD36 A7 C9 D1 -  .dl	inst6502_bcc					;90
 3571 D1:CD39 C7 B8 D1 -  .dl	inst6502_sta_indy				;91
 3572 D1:CD3C 7F CB D1 -  .dl	inst6502_			;92
 3573 D1:CD3F 7F CB D1 -  .dl	inst6502_			;93
 3574 D1:CD42 51 B9 D1 -  .dl	inst6502_sty_zpx				;94
 3575 D1:CD45 14 B8 D1 -  .dl	inst6502_sta_zpx				;95
 3576 D1:CD48 08 B9 D1 -  .dl	inst6502_stx_zpy				;96
 3577 D1:CD4B 7F CB D1 -  .dl	inst6502_			;97
 3578 D1:CD4E 15 BA D1 -  .dl	inst6502_tya					;98
 3579 D1:CD51 74 B8 D1 -  .dl	inst6502_sta_absy				;99
 3580 D1:CD54 08 BA D1 -  .dl	inst6502_txs					;9A
 3581 D1:CD57 7F CB D1 -  .dl	inst6502_			;9B
 3582 D1:CD5A 7F CB D1 -  .dl	inst6502_			;9C
 3583 D1:CD5D 4B B8 D1 -  .dl	inst6502_sta_absx				;9D
 3584 D1:CD60 7F CB D1 -  .dl	inst6502_			;9E
 3585 D1:CD63 7F CB D1 -  .dl	inst6502_			;9F
 3586 D1:CD66 24 B7 D1 -  .dl	inst6502_ldy_imm				;A0
 3587 D1:CD69 C5 B5 D1 -  .dl	inst6502_lda_indx				;A1
 3588 D1:CD6C 46 B6 D1 -  .dl	inst6502_ldx_imm				;A2
 3589 D1:CD6F 7F CB D1 -  .dl	inst6502_			;A3
 3590 D1:CD72 42 B7 D1 -  .dl	inst6502_ldy_zp					;A4
 3591 D1:CD75 C7 B4 D1 -  .dl	inst6502_lda_zp					;A5
 3592 D1:CD78 64 B6 D1 -  .dl	inst6502_ldx_zp					;A6
 3593 D1:CD7B 7F CB D1 -  .dl	inst6502_			;A7
 3594 D1:CD7E A8 B9 D1 -  .dl	inst6502_tay					;A8
 3595 D1:CD81 A9 B4 D1 -  .dl	inst6502_lda_imm				;A9
 3596 D1:CD84 88 B9 D1 -  .dl	inst6502_tax					;AA
 3597 D1:CD87 7F CB D1 -  .dl	inst6502_			;AB
 3598 D1:CD8A 8F B7 D1 -  .dl	inst6502_ldy_abs				;AC
 3599 D1:CD8D 14 B5 D1 -  .dl	inst6502_lda_abs				;AD
 3600 D1:CD90 B1 B6 D1 -  .dl	inst6502_ldx_abs				;AE
 3601 D1:CD93 7F CB D1 -  .dl	inst6502_			;AF
 3602 D1:CD96 B6 C9 D1 -  .dl	inst6502_bcs					;B0
 3603 D1:CD99 02 B6 D1 -  .dl	inst6502_lda_indy				;B1
 3604 D1:CD9C 7F CB D1 -  .dl	inst6502_			;B2
 3605 D1:CD9F 7F CB D1 -  .dl	inst6502_			;B3
 3606 D1:CDA2 67 B7 D1 -  .dl	inst6502_ldy_zpx				;B4
 3607 D1:CDA5 EC B4 D1 -  .dl	inst6502_lda_zpx				;B5
 3608 D1:CDA8 89 B6 D1 -  .dl	inst6502_ldx_zpy				;B6
 3609 D1:CDAB 7F CB D1 -  .dl	inst6502_			;B7
 3610 D1:CDAE 77 C7 D1 -  .dl	inst6502_clv					;B8
 3611 D1:CDB1 87 B5 D1 -  .dl	inst6502_lda_absy				;B9
 3612 D1:CDB4 C8 B9 D1 -  .dl	inst6502_tsx					;BA
 3613 D1:CDB7 7F CB D1 -  .dl	inst6502_			;BB
 3614 D1:CDBA C4 B7 D1 -  .dl	inst6502_ldy_absx				;BC
 3615 D1:CDBD 49 B5 D1 -  .dl	inst6502_lda_absx				;BD
 3616 D1:CDC0 E6 B6 D1 -  .dl	inst6502_ldx_absy				;BE
 3617 D1:CDC3 7F CB D1 -  .dl	inst6502_			;BF
 3618 D1:CDC6 19 C9 D1 -  .dl	inst6502_cpy_imm				;C0
 3619 D1:CDC9 34 C8 D1 -  .dl	inst6502_cmp_indx				;C1
 3620 D1:CDCC 7F CB D1 -  .dl	inst6502_			;C2
 3621 D1:CDCF 7F CB D1 -  .dl	inst6502_			;C3
 3622 D1:CDD2 3D C9 D1 -  .dl	inst6502_cpy_zp					;C4
 3623 D1:CDD5 9F C7 D1 -  .dl	inst6502_cmp_zp					;C5
 3624 D1:CDD8 9D BA D1 -  .dl	inst6502_dec_zp					;C6
 3625 D1:CDDB 7F CB D1 -  .dl	inst6502_			;C7
 3626 D1:CDDE 83 BB D1 -  .dl	inst6502_iny					;C8
 3627 D1:CDE1 97 C7 D1 -  .dl	inst6502_cmp_imm				;C9
 3628 D1:CDE4 5B BB D1 -  .dl	inst6502_dex					;CA
 3629 D1:CDE7 7F CB D1 -  .dl	inst6502_			;CB
 3630 D1:CDEA 6A C9 D1 -  .dl	inst6502_cpy_abs				;CC
 3631 D1:CDED C2 C7 D1 -  .dl	inst6502_cmp_abs				;CD
 3632 D1:CDF0 E8 BA D1 -  .dl	inst6502_dec_abs				;CE
 3633 D1:CDF3 7F CB D1 -  .dl	inst6502_			;CF
 3634 D1:CDF6 E3 C9 D1 -  .dl	inst6502_bne					;D0
 3635 D1:CDF9 5C C8 D1 -  .dl	inst6502_cmp_indy				;D1
 3636 D1:CDFC 7F CB D1 -  .dl	inst6502_			;D2
 3637 D1:CDFF 7F CB D1 -  .dl	inst6502_			;D3
 3638 D1:CE02 7F CB D1 -  .dl	inst6502_			;D4
 3639 D1:CE05 AF C7 D1 -  .dl	inst6502_cmp_zpx				;D5
 3640 D1:CE08 C1 BA D1 -  .dl	inst6502_dec_zpx				;D6
 3641 D1:CE0B 7F CB D1 -  .dl	inst6502_			;D7
 3642 D1:CE0E 67 C7 D1 -  .dl	inst6502_cld					;D8
 3643 D1:CE11 0B C8 D1 -  .dl	inst6502_cmp_absy				;D9
 3644 D1:CE14 7F CB D1 -  .dl	inst6502_			;DA
 3645 D1:CE17 7F CB D1 -  .dl	inst6502_			;DB
 3646 D1:CE1A 7F CB D1 -  .dl	inst6502_			;DC
 3647 D1:CE1D E2 C7 D1 -  .dl	inst6502_cmp_absx				;DD
 3648 D1:CE20 1E BB D1 -  .dl	inst6502_dec_absx				;DE
 3649 D1:CE23 7F CB D1 -  .dl	inst6502_			;DF
 3650 D1:CE26 8B C8 D1 -  .dl	inst6502_cpx_imm				;E0
 3651 D1:CE29 D4 BD D1 -  .dl	inst6502_sbc_indx				;E1
 3652 D1:CE2C 7F CB D1 -  .dl	inst6502_			;E2
 3653 D1:CE2F 7F CB D1 -  .dl	inst6502_			;E3
 3654 D1:CE32 AF C8 D1 -  .dl	inst6502_cpx_zp					;E4
 3655 D1:CE35 3F BD D1 -  .dl	inst6502_sbc_zp					;E5
 3656 D1:CE38 88 BB D1 -  .dl	inst6502_inc_zp					;E6
 3657 D1:CE3B 7F CB D1 -  .dl	inst6502_			;E7
 3658 D1:CE3E 7E BB D1 -  .dl	inst6502_inx					;E8
 3659 D1:CE41 37 BD D1 -  .dl	inst6502_sbc_imm				;E9
 3660 D1:CE44 78 CB D1 -  .dl	inst6502_nop					;EA
 3661 D1:CE47 7F CB D1 -  .dl	inst6502_			;EB
 3662 D1:CE4A DC C8 D1 -  .dl	inst6502_cpx_abs				;EC
 3663 D1:CE4D 62 BD D1 -  .dl	inst6502_sbc_abs				;ED
 3664 D1:CE50 D3 BB D1 -  .dl	inst6502_inc_abs				;EE
 3665 D1:CE53 7F CB D1 -  .dl	inst6502_			;EF
 3666 D1:CE56 C5 C9 D1 -  .dl	inst6502_beq					;F0
 3667 D1:CE59 FC BD D1 -  .dl	inst6502_sbc_indy				;F1
 3668 D1:CE5C 7F CB D1 -  .dl	inst6502_			;F2
 3669 D1:CE5F 7F CB D1 -  .dl	inst6502_			;F3
 3670 D1:CE62 7F CB D1 -  .dl	inst6502_			;F4
 3671 D1:CE65 4F BD D1 -  .dl	inst6502_sbc_zpx				;F5
 3672 D1:CE68 AC BB D1 -  .dl	inst6502_inc_zpx				;F6
 3673 D1:CE6B 7F CB D1 -  .dl	inst6502_			;F7
 3674 D1:CE6E 87 C7 D1 -  .dl	inst6502_sed					;F8
 3675 D1:CE71 AB BD D1 -  .dl	inst6502_sbc_absy				;F9
 3676 D1:CE74 7F CB D1 -  .dl	inst6502_			;FA
 3677 D1:CE77 7F CB D1 -  .dl	inst6502_			;FB
 3678 D1:CE7A 7F CB D1 -  .dl	inst6502_			;FC
 3679 D1:CE7D 82 BD D1 -  .dl	inst6502_sbc_absx				;FD
 3680 D1:CE80 09 BC D1 -  .dl	inst6502_inc_absx				;FE
 3681 D1:CE83 7F CB D1 -  .dl	inst6502_			;FF
 3682 D1:CE86 -  -  -  -  
 3683 D1:CE86 -  -  -  -  
 3684 D1:CE86 -  -  -  -  
 3685 D1:CE86 -  -  -  -  
 3686 D1:CE86 -  -  -  -  
 3687 D1:CE86 -  -  -  -  
 3688 D1:CE86 -  -  -  -  
 3689 D1:CE86 -  -  -  -  
 3690 D1:CE86 -  -  -  -  
 3691 D1:CE86 -  -  -  -  
 3692 D1:CE86 -  -  -  -  
 3693 D1:CE86 -  -  -  -  
 3694 D1:CE86 -  -  -  -  
Listing for file "main.z80"
  509 D1:CE86 -  -  -  -  .echo "Main program size: ",$-programStart
