    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "main.z80"
    2 00:0000 -  -  -  -  .org userMem-2
    3 D1:A87F EF 7B -  -  .db $EF, $7B
    4 D1:A881 -  -  -  -  
    5 D1:A881 -  -  -  -  ;SPASM help msg
    6 D1:A881 -  -  -  -  ;-E = Assemble eZ80 code
    7 D1:A881 -  -  -  -  ;-T = Generate code listing
    8 D1:A881 -  -  -  -  ;-C = Code counter mode
    9 D1:A881 -  -  -  -  ;-L = Symbol table mode
   10 D1:A881 -  -  -  -  ;-S = Stats mode
   11 D1:A881 -  -  -  -  ;-O = Don't write to output file
   12 D1:A881 -  -  -  -  ;-I [directory] = Add include directory
   13 D1:A881 -  -  -  -  ;-A = Labels are cAse-sensitive
   14 D1:A881 -  -  -  -  ;-D<name>[=value] = Create a define 'name' [with 'value']
   15 D1:A881 -  -  -  -  ;-N = Don't use colors for messages
   16 D1:A881 -  -  -  -  ;-V <Expression> = Pipe expression directly into assembly
   17 D1:A881 -  -  -  -  ;-H = Print this help message
   18 D1:A881 -  -  -  -  
   19 D1:A881 -  -  -  -  
   20 D1:A881 -  -  -  -  
   21 D1:A881 -  -  -  -  
   22 D1:A881 -  -  -  -  programStart:
   23 D1:A881 F3 -  -  -      di
   24 D1:A882 ED 73 FC 31 
              D0 -  -  -      ld  (save_spl),sp
   25 D1:A887 ED 6E -  -      ld  a,MB
   26 D1:A889 32 FF 31 D0     ld  (save_mbase),a
   27 D1:A88D 3E D0 -  -      ld  a,$D0
   28 D1:A88F ED 6D -  -      ld  MB,a
   29 D1:A891 CD 06 AE D1     call startGfx
   30 D1:A895 -  -  -  -      ;
   31 D1:A895 -  -  -  -      ; todo; write test 6502 program, map it into rom.
   32 D1:A895 -  -  -  -      ; map virtual screen device into ram too. 32x30 screen ascii display
   33 D1:A895 -  -  -  -      ; is probably looking nice right about now.
   34 D1:A895 -  -  -  -      ; Could probably map it into PPU space since we're not actually doing
   35 D1:A895 -  -  -  -      ; anything about that until long after we're done testing core integrity
   36 D1:A895 -  -  -  -      ; You'll probably want to create a mockup vector table then do some equate
   37 D1:A895 -  -  -  -      ; magic to offset it and map it to $FFXX such that the three vectors will
   38 D1:A895 -  -  -  -      ; magically line up with $FFFA-$FFFF. NMI, RES, and IRQ. In that order.
   39 D1:A895 -  -  -  -      ; The rest of the page won't need to matter. It could literally be the
   40 D1:A895 -  -  -  -      ; surrounding eZ80 data/code. Just... don't allow writes to it.
   41 D1:A895 -  -  -  -      ;
   42 D1:A895 -  -  -  -  
   43 D1:A895 21 00 00 D4     ld  hl,screenBuf1
   44 D1:A899 11 01 00 D4     ld  de,screenBuf1+1
   45 D1:A89D 01 FF 57 02     ld  bc,(2*240*320)-1
   46 D1:A8A1 36 00 -  -      ld  (hl),$00
   47 D1:A8A3 ED B0 -  -      ldir
   48 D1:A8A5 -  -  -  -  
   49 D1:A8A5 -  -  -  -  
   50 D1:A8A5 -  -  -  -      ;load reset vectors
   51 D1:A8A5 21 56 A8 D1     ld  hl,testVectors
   52 D1:A8A9 01 01 01 00     ld  bc,$000101
   53 D1:A8AD 1E FF -  -      ld  e,$FF
   54 D1:A8AF CD 17 B5 D1     call i6502_map_pages
   55 D1:A8B3 -  -  -  -      ;load program ROM to lowmem
   56 D1:A8B3 21 56 A9 D1     ld  hl,testCode
   57 D1:A8B7 01 08 20 00     ld  bc,$002008
   58 D1:A8BB 1E 80 -  -      ld  e,$80
   59 D1:A8BD CD 17 B5 D1     call i6502_map_pages
   60 D1:A8C1 -  -  -  -      ;map nametable to writeable address space. Write routine to mirror this
   61 D1:A8C1 -  -  -  -      ;memory to screen.
   62 D1:A8C1 21 00 50 D0     ld  hl,NAMETABLE1
   63 D1:A8C5 01 04 20 00     ld  bc,$002004
   64 D1:A8C9 1E 40 -  -      ld  e,$40
   65 D1:A8CB CD 17 B5 D1     call i6502_map_pages
   66 D1:A8CF -  -  -  -      ;Everything should be ready. Set up the debug environment and then
   67 D1:A8CF -  -  -  -      ;start the emulation.
   68 D1:A8CF -  -  -  -      ;jr $
   69 D1:A8CF CD 59 AE D1     call clearTextBuf
   70 D1:A8D3 3E 01 -  -      ld  a,1
   71 D1:A8D5 CD A6 AE D1     call setLineStart
   72 D1:A8D9 CD AF AE D1     call setCurLine
   73 D1:A8DD 21 D3 A9 D1     ld  hl,text001
   74 D1:A8E1 CD CC AE D1     call printString
   75 D1:A8E5 FD 21 1A AA 
              D1 -  -  -      ld  iy,firstFileHeader
   76 D1:A8EA 01 00 00 00     ld  bc,0
   77 D1:A8EE FD 4E FF -      ld  c,(iy-1)
   78 D1:A8F1 CD 81 AD D1     call vatTraverse
   79 D1:A8F5 DA 37 AA D1     jp  c,err_noContainersFound
   80 D1:A8F9 D5 -  -  -      push de
   81 D1:A8FA 21 EA A9 D1         ld  hl,text003
   82 D1:A8FE CD CC AE D1         call printString
   83 D1:A902 DD 46 FA -          ld  b,(ix-6)
   84 D1:A905 ED 22 F9 -          lea hl,ix-7
   85 D1:A908 7E -  -  -  _:      ld  a,(hl)
   86 D1:A909 2B -  -  -          dec hl
   87 D1:A90A E5 -  -  -          push hl
   88 D1:A90B C5 -  -  -              push bc
   89 D1:A90C CD E2 AE D1                 call PrintBigFont
   90 D1:A910 C1 -  -  -              pop bc
   91 D1:A911 E1 -  -  -          pop hl
   92 D1:A912 10 F4 -  -          djnz -_
   93 D1:A914 CD BA AE D1         call newLine
   94 D1:A918 D1 -  -  -      pop de
   95 D1:A919 CD 50 AB D1     call loadROMFile
   96 D1:A91D -  -  -  -  
   97 D1:A91D 21 F7 A9 D1     ld  hl,text004
   98 D1:A921 CD CC AE D1     call printString
   99 D1:A925 -  -  -  -  
  100 D1:A925 -  -  -  -  
  101 D1:A925 -  -  -  -  
  102 D1:A925 -  -  -  -      ;call i6502Init
  103 D1:A925 -  -  -  -  
  104 D1:A925 -  -  -  -  ;    call clearTextBuf
  105 D1:A925 -  -  -  -  ;    ld  hl,helloWorld
  106 D1:A925 -  -  -  -  ;    ld  de,NAMETABLE1+(32*1)+1
  107 D1:A925 -  -  -  -  ;    ld  bc,13
  108 D1:A925 -  -  -  -  ;    ldir
  109 D1:A925 -  -  -  -  
  110 D1:A925 -  -  -  -  endCurrentRun:
  111 D1:A925 -  -  -  -      ;call printTextBuf
  112 D1:A925 CD DD AD D1     call fastCopy
  113 D1:A929 00 -  -  -      nop
  114 D1:A92A CD C7 A9 D1     call waituntilnewkeypress
  115 D1:A92E CD BF A9 D1     call waituntilkeyrelease
  116 D1:A932 -  -  -  -  
  117 D1:A932 -  -  -  -      ;
  118 D1:A932 -  -  -  -      ;
  119 D1:A932 -  -  -  -      ;
  120 D1:A932 -  -  -  -  programExit:
  121 D1:A932 CD F8 AD D1     call stopGfx
  122 D1:A936 ED 7B FC 31 
              D0 -  -  -      ld  sp,(save_spl)
  123 D1:A93B 3A FF 31 D0     ld  a,(save_mbase)
  124 D1:A93F ED 6D -  -      ld  MB,a
  125 D1:A941 FD 21 80 00 
              D0 -  -  -      ld  iy,flags
  126 D1:A946 C9 -  -  -      ret
  127 D1:A947 -  -  -  -  
  128 D1:A947 -  -  -  -  
  129 D1:A947 -  -  -  -  testFilename:
  130 D1:A947 15 4E 45 53 
              54 45 53 54 
              00 -  -  -  .db AppVarObj,"NESTEST",0
  131 D1:A950 -  -  -  -  
  132 D1:A950 -  -  -  -  
  133 D1:A950 -  -  -  -  ;NMI, RES, and IRQ. In that order.
  134 D1:A950 -  -  -  -  testVectors .equ $-(256-6)
  135 D1:A950 00 80 -  -  .dw $8000
  136 D1:A952 00 80 -  -  .dw $8000
  137 D1:A954 00 80 -  -  .dw $8000
  138 D1:A956 -  -  -  -  testCode:
  139 D1:A956 A9 00 AA A8 .db $A9,$00,$AA,$A8
  140 D1:A95A BD 14 80 -  .db $BD,$14,$80
  141 D1:A95D C9 00 -  -  .db $C9,$00
  142 D1:A95F F0 08 -  -  .db $F0,$08
  143 D1:A961 99 21 40 -  .db $99,$21,$40
  144 D1:A964 E8 C8 -  -  .db $E8,$C8
  145 D1:A966 -  -  -  -  ;.db $12
  146 D1:A966 4C 04 80 02 .db $4C,$04,$80,$02
  147 D1:A96A 48 65 6C 6C 
              6F 2C 20 57 
              6F -  -  -  .db $48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F
  148 D1:A973 72 6C 64 21 
              00 -  -  -  .db $72,$6C,$64,$21,$00
  149 D1:A978 -  -  -  -  
  150 D1:A978 -  -  -  -  
  151 D1:A978 A9 00 AA A8 
              BD 11 80 C9 
              00 F0 05 99 
              21 40 D0 -  .db $A9,$00,$AA,$A8,$BD,$11,$80,$C9,$00,$F0,$05,$99,$21,$40,$D0
  152 D1:A987 F4 02 48 65 
              6C 6C 6F 2C 
              20 57 6F 72 
              6C 64 21 00 .db $F4,$02,$48,$65,$6C,$6C,$6F,$2C,$20,$57,$6F,$72,$6C,$64,$21,$00
  153 D1:A997 02 -  -  -  .db $02     ;JAM. Emulator terminates on unsupported instructions or JAMs.
  154 D1:A998 -  -  -  -  
  155 D1:A998 -  -  -  -  helloWorld:
  156 D1:A998 48 65 6C 6C 
              6F 2C 20 57 
              6F 72 6C 64 
              21 00 -  -  .db "Hello, World!",0
  157 D1:A9A6 -  -  -  -  
  158 D1:A9A6 -  -  -  -  ;Copied from my Falldown2 project. I didn't want to have to
  159 D1:A9A6 -  -  -  -  ;find yet another hardware reference for something I already did.
  160 D1:A9A6 -  -  -  -  ;But I'll have to do it again anyway because this isn't exactly
  161 D1:A9A6 -  -  -  -  ;what we're looking for. Here, we output the same sort of
  162 D1:A9A6 -  -  -  -  ;game keys that I've used basically all my programming life.
  163 D1:A9A6 -  -  -  -  ;Anyhoo. We'll be using the following:
  164 D1:A9A6 -  -  -  -  ;kbitDown	equ 00h
  165 D1:A9A6 -  -  -  -  ;kbitLeft	equ 01h
  166 D1:A9A6 -  -  -  -  ;kbitRight	equ 02h
  167 D1:A9A6 -  -  -  -  ;kbitUp		equ 03h
  168 D1:A9A6 -  -  -  -  ;kbitYequ equ 04h
  169 D1:A9A6 -  -  -  -  ;kbit2nd		equ 05h
  170 D1:A9A6 -  -  -  -  ;kbitMode	equ 06h
  171 D1:A9A6 -  -  -  -  ;kbitDel		equ 07h
  172 D1:A9A6 -  -  -  -  ;You can find the other defines approximately where I found the stuff above.
  173 D1:A9A6 -  -  -  -  
  174 D1:A9A6 -  -  -  -  getkbd_adl:
  175 D1:A9A6 DD 21 00 00 
              F5 -  -  -  	ld  ix,mpKeyMode
  176 D1:A9AB ED 22 00 -  	lea hl,ix+0
  177 D1:A9AE 36 02 -  -  	ld  (hl),keyModeScanOnce
  178 D1:A9B0 AF -  -  -  	xor a
  179 D1:A9B1 BE -  -  -  _:  cp  (hl)
  180 D1:A9B2 20 FD -  -  	jr  nz,-_
  181 D1:A9B4 DD 7E 12 -  	ld  a,(ix+kbdG1-mpKeyRange)
  182 D1:A9B7 DD 6E 1E -  	ld  l,(ix+kbdG7-mpKeyRange)
  183 D1:A9BA AD -  -  -  	xor L
  184 D1:A9BB E6 F0 -  -  	and 11110000b	;mask out lower bits to let me shove dpad bits in
  185 D1:A9BD AD -  -  -  	xor L
  186 D1:A9BE C9 -  -  -  	ret
  187 D1:A9BF -  -  -  -  
  188 D1:A9BF -  -  -  -  
  189 D1:A9BF -  -  -  -  waituntilkeyrelease:
  190 D1:A9BF CD A6 A9 D1     call getkbd_adl
  191 D1:A9C3 B7 -  -  -      or  a,a
  192 D1:A9C4 20 F9 -  -      jr  nz,waituntilkeyrelease
  193 D1:A9C6 C9 -  -  -  	ret
  194 D1:A9C7 -  -  -  -  
  195 D1:A9C7 -  -  -  -  waituntilnewkeypress:
  196 D1:A9C7 CD BF A9 D1     call waituntilkeyrelease
  197 D1:A9CB CD A6 A9 D1 _:  call getkbd_adl
  198 D1:A9CF B7 -  -  -  	or  a,a
  199 D1:A9D0 28 F9 -  -  	jr  z,-_
  200 D1:A9D2 C9 -  -  -      ret
  201 D1:A9D3 -  -  -  -  
  202 D1:A9D3 -  -  -  -  
  203 D1:A9D3 -  -  -  -  text001:
  204 D1:A9D3 4C 6F 6F 6B 
              69 6E 67 20 
              75 70 20 6E 
              65 73 74 65 
              73 74 2E 2E 
              2E 0A 00 -  .db "Looking up nestest...\n",0
  205 D1:A9EA -  -  -  -  text003:
  206 D1:A9EA 46 69 6C 65 
              20 66 6F 75 
              6E 64 3A 20 
              00 -  -  -  .db "File found: ",0
  207 D1:A9F7 -  -  -  -  text004:
  208 D1:A9F7 52 4F 4D 46 
              69 6C 65 20 
              6C 6F 61 64 
              65 64 20 61 
              6E 64 20 72 
              65 61 64 79 
              20 74 6F 20 
              72 75 6E 2E 
              0A 00 -  -  .db "ROMFile loaded and ready to run.\n",0
  209 D1:AA19 -  -  -  -  
  210 D1:AA19 -  -  -  -  
  211 D1:AA19 07 -  -  -  .db 7
  212 D1:AA1A -  -  -  -  firstFileHeader:
  213 D1:AA1A 43 45 4E 52 
              4F 4D 00 -  .db "CENROM",0
  214 D1:AA21 -  -  -  -  
  215 D1:AA21 -  -  -  -  err_:
  216 D1:AA21 -  -  -  -  
  217 D1:AA21 -  -  -  -  err_err:
  218 D1:AA21 E1 -  -  -      pop hl
  219 D1:AA22 CD CC AE D1     call printString
  220 D1:AA26 -  -  -  -  err_err_quit:
  221 D1:AA26 CD DD AD D1     call fastCopy
  222 D1:AA2A 00 -  -  -      nop
  223 D1:AA2B CD C7 A9 D1     call waituntilnewkeypress
  224 D1:AA2F CD BF A9 D1     call waituntilkeyrelease
  225 D1:AA33 C3 32 A9 D1     jp programExit
  226 D1:AA37 -  -  -  -  
  227 D1:AA37 -  -  -  -  err_noContainersFound:
  228 D1:AA37 CD 21 AA D1     call err_err
  229 D1:AA3B 54 72 61 76 
              65 72 73 65 
              20 66 6F 75 
              6E 64 20 6E 
              6F 20 63 61 
              6E 64 69 64 
              61 74 65 73 
              2E 0A 00 -  .db "Traverse found no candidates.\n",0
  230 D1:AA5A -  -  -  -  
  231 D1:AA5A -  -  -  -  err_missingFiles:
  232 D1:AA5A F5 -  -  -      push af
  233 D1:AA5B 21 6C AA D1         ld  hl,err_missingFiles_str
  234 D1:AA5F CD CC AE D1         call printString
  235 D1:AA63 F1 -  -  -      pop af
  236 D1:AA64 CD 12 AF D1     call printSmallNumPair
  237 D1:AA68 C3 26 AA D1     jp err_err_quit
  238 D1:AA6C -  -  -  -  err_missingFiles_str:
  239 D1:AA6C 4E 75 6D 62 
              65 72 20 6F 
              66 20 66 69 
              6C 65 73 20 
              6D 69 73 73 
              69 6E 67 3A 
              20 00 -  -  .db "Number of files missing: ",0
  240 D1:AA86 -  -  -  -  
  241 D1:AA86 -  -  -  -  err_tooManyFiles:
  242 D1:AA86 CD 21 AA D1     call err_err
  243 D1:AA8A 54 6F 6F 20 
              6D 61 6E 79 
              20 66 69 6C 
              65 73 20 66 
              6F 75 6E 64 
              2E 00 -  -  .db "Too many files found.",0
  244 D1:AAA0 -  -  -  -  
  245 D1:AAA0 -  -  -  -  err_PRGROMTooLarge:
  246 D1:AAA0 CD 21 AA D1     call err_err
  247 D1:AAA4 50 52 47 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "PRG_ROM too large.",0
  248 D1:AAB7 -  -  -  -  err_CHRROMTooLarge:
  249 D1:AAB7 CD 21 AA D1     call err_err
  250 D1:AABB 43 48 52 5F 
              52 4F 4D 20 
              74 6F 6F 20 
              6C 61 72 67 
              65 2E 00 -  .db "CHR_ROM too large.",0
  251 D1:AACE -  -  -  -  
  252 D1:AACE -  -  -  -  err_missingROMDetected:
  253 D1:AACE CD 21 AA D1     call err_err
  254 D1:AAD2 50 52 47 2B 
              43 48 52 20 
              3E 20 41 63 
              74 75 61 6C 
              20 66 69 6C 
              65 20 64 61 
              74 61 2E 00 .db "PRG+CHR > Actual file data.",0
  255 D1:AAEE -  -  -  -  
  256 D1:AAEE -  -  -  -  err_ROMHeaderDamaged:
  257 D1:AAEE CD 21 AA D1     call err_err
  258 D1:AAF2 49 4E 45 53 
              20 52 4F 4D 
              20 68 65 61 
              64 65 72 20 
              64 61 6D 61 
              67 65 64 2E 
              00 -  -  -  .db "INES ROM header damaged.",0
  259 D1:AB0B -  -  -  -  
  260 D1:AB0B -  -  -  -  err_MapperOutOfRange:
  261 D1:AB0B CD 21 AA D1     call err_err
  262 D1:AB0F 4D 61 70 70 
              65 72 20 73 
              70 65 63 69 
              66 69 65 64 
              20 6F 75 74 
              20 6F 66 20 
              72 61 6E 67 
              65 2E 00 -  .db "Mapper specified out of range.",0
  263 D1:AB2E -  -  -  -  
  264 D1:AB2E -  -  -  -  err_CHRROMNotFound:
  265 D1:AB2E CD 21 AA D1     call err_err
  266 D1:AB32 43 48 52 5F 
              52 4F 4D 20 
              6E 6F 74 20 
              66 6F 75 6E 
              64 20 69 6E 
              73 69 64 65 
              20 66 69 6C 
              65 00 -  -  .db "CHR_ROM not found inside file",0
  267 D1:AB50 -  -  -  -  
  268 D1:AB50 -  -  -  -  
  269 D1:AB50 -  -  -  -  ;Input: DE = Address of first file after the container header signature
  270 D1:AB50 -  -  -  -  ;Outputs: ROM vectors recorded and ready to map
  271 D1:AB50 -  -  -  -  ;Destroys: All registers.
  272 D1:AB50 -  -  -  -  loadROMFile:
  273 D1:AB50 EB -  -  -      ex  de,hl
  274 D1:AB51 AF -  -  -      xor a,a
  275 D1:AB52 32 08 34 D0     ld  (missing_files),a
  276 D1:AB56 BE -  -  -  _:  cp  (hl)    ;
  277 D1:AB57 23 -  -  -      inc hl      ;
  278 D1:AB58 20 FC -  -      jr  nz,-_   ;skips past zero-terminated string containing full ROM name
  279 D1:AB5A 22 05 34 D0     ld  (basefile_sig),hl
  280 D1:AB5E 01 10 00 00     ld  bc,SIZEOF_INTEGRITY_HASH
  281 D1:AB62 09 -  -  -      add hl,bc
  282 D1:AB63 7E -  -  -      ld  a,(hl)
  283 D1:AB64 FE 01 -  -      cp  a,MAXNUMFILES
  284 D1:AB66 D2 86 AA D1     jp  nc,err_tooManyFiles
  285 D1:AB6A 32 04 34 D0     ld  (inputNumFiles),a
  286 D1:AB6E 47 -  -  -      ld  b,a
  287 D1:AB6F -  -  -  -  ;    ld  c,SIZEOF_INTEGRITY_HASH     ;c already set to this value from earlier.
  288 D1:AB6F ED 4C -  -      mlt bc
  289 D1:AB71 23 -  -  -      inc hl
  290 D1:AB72 E5 -  -  -      push hl
  291 D1:AB73 09 -  -  -          add hl,bc
  292 D1:AB74 FD 21 21 34 
              D0 -  -  -          ld  iy,FILETABLE
  293 D1:AB79 4E -  -  -          ld  c,(hl)
  294 D1:AB7A 23 -  -  -          inc hl
  295 D1:AB7B 46 -  -  -          ld  b,(hl)
  296 D1:AB7C 23 -  -  -          inc hl
  297 D1:AB7D 52 FD 0F 00         ld.s (iy+FILE_SIZE_OFFSET),bc
  298 D1:AB81 FD 2F 02 -          ld  (iy+FILE_ADR_OFFSET),hl
  299 D1:AB84 E1 -  -  -      pop hl
  300 D1:AB85 3C -  -  -      inc a
  301 D1:AB86 3D -  -  -      dec a
  302 D1:AB87 28 47 -  -      jr  z,loadROMFile_singleFileLoad
  303 D1:AB89 -  -  -  -      ;If more than one file, fill FILETABLE.
  304 D1:AB89 -  -  -  -      ;NOTE: For now, this machinery is disabled. Only a single file is allowed.
  305 D1:AB89 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  306 D1:AB8C 47 -  -  -      ld  b,a
  307 D1:AB8D -  -  -  -  loadROMFile_multiFileLoadLoop:
  308 D1:AB8D C5 -  -  -      push bc
  309 D1:AB8E FD 2F 05 -          ld  (iy+FILE_SIG_ADR_OFFSET),hl
  310 D1:AB91 01 10 00 00         ld  bc,16
  311 D1:AB95 11 71 AD D1         ld  de,loadROMFile_tempSigHash
  312 D1:AB99 ED B0 -  -          ldir
  313 D1:AB9B E5 -  -  -          push hl
  314 D1:AB9C FD E5 -  -              push iy
  315 D1:AB9E 01 17 00 00                 ld  bc,23
  316 D1:ABA2 FD 21 6A AD 
              D1 -  -  -                  ld  iy,loadROMFile_tempSig
  317 D1:ABA7 CD 81 AD D1                 call vatTraverse    ;returns DE @ datasection size if found
  318 D1:ABAB 30 05 -  -                  jr  nc,+_
  319 D1:ABAD 21 08 34 D0                 ld  hl,missing_files
  320 D1:ABB1 34 -  -  -                  inc (hl)
  321 D1:ABB2 FD E1 -  -  _:          pop iy
  322 D1:ABB4 EB -  -  -              ex  de,hl
  323 D1:ABB5 5E -  -  -              ld  e,(hl)
  324 D1:ABB6 23 -  -  -              inc hl
  325 D1:ABB7 56 -  -  -              ld  d,(hl)
  326 D1:ABB8 23 -  -  -              inc hl
  327 D1:ABB9 52 FD 1F 00             ld.s (iy+FILE_SIZE_OFFSET),de
  328 D1:ABBD FD 2F 02 -              ld  (iy+FILE_ADR_OFFSET),hl
  329 D1:ABC0 E1 -  -  -          pop hl
  330 D1:ABC1 C1 -  -  -      pop bc
  331 D1:ABC2 ED 33 08 -      lea iy,iy+FILETABLE_STRIDE
  332 D1:ABC5 10 C6 -  -      djnz loadROMFile_multiFileLoadLoop
  333 D1:ABC7 3A 08 34 D0     ld  a,(missing_files)
  334 D1:ABCB B7 -  -  -      or  a,a
  335 D1:ABCC C2 5A AA D1     jp  nz,err_missingFiles
  336 D1:ABD0 -  -  -  -  loadROMFile_singleFileLoad:
  337 D1:ABD0 -  -  -  -      ;Compute size of ROM by summing filesizes, less INES header
  338 D1:ABD0 3A 04 34 D0     ld  a,(inputNumFiles)
  339 D1:ABD4 3C -  -  -      inc a
  340 D1:ABD5 47 -  -  -      ld  b,a
  341 D1:ABD6 21 00 00 00     ld  hl,0
  342 D1:ABDA DD 21 21 34 
              D0 -  -  -      ld  ix,FILETABLE
  343 D1:ABDF 52 DD 17 00 _:  ld.s de,(ix+FILE_SIZE_OFFSET)
  344 D1:ABE3 19 -  -  -      add hl,de
  345 D1:ABE4 ED 32 08 -      lea ix,ix+FILETABLE_STRIDE
  346 D1:ABE7 10 F6 -  -      djnz -_
  347 D1:ABE9 01 F0 FF FF     ld  bc,-16
  348 D1:ABED 09 -  -  -      add hl,bc   ;subtract INES header
  349 D1:ABEE 22 09 34 D0     ld  (total_rom_size),hl
  350 D1:ABF2 -  -  -  -      ;Verify that the file actually contains an INES header.
  351 D1:ABF2 -  -  -  -      ;TODO: Do this at an earlier stage. Such as file selection.
  352 D1:ABF2 DD 2A 23 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  353 D1:ABF7 DD 27 00 -      ld  hl,(ix+0)
  354 D1:ABFA 11 4E 45 53     ld  de,$53454E         ;4E 45 53 == "NES"
  355 D1:ABFE B7 -  -  -      or  a,a
  356 D1:ABFF ED 52 -  -      sbc hl,de   ;Note: add does not affect zero flag. Can't test this via -DE
  357 D1:AC01 C2 EE AA D1 _:  jp  nz,err_ROMHeaderDamaged
  358 D1:AC05 DD 7E 03 -      ld  a,(ix+3)
  359 D1:AC08 FE 1A -  -      cp  a,$1A
  360 D1:AC0A 20 F5 -  -      jr  nz,-_   ;19
  361 D1:AC0C -  -  -  -      ;Compute ROM size by reading INES header. This should be equ or lt above.
  362 D1:AC0C -  -  -  -      ;Note: The below line is optimized from...
  363 D1:AC0C DD 2A 23 34 
              D0 -  -  -      ld  ix,(FILETABLE+FILE_ADR_OFFSET)
  364 D1:AC11 -  -  -  -      ;... these lines. But the intent might not be perfectly clear. We'll keep
  365 D1:AC11 -  -  -  -      ;these here just in case there's ever a question about it.
  366 D1:AC11 -  -  -  -  ;    ld  ix,FILETABLE
  367 D1:AC11 -  -  -  -  ;    ld  ix,(ix+FILE_ADR_OFFSET)
  368 D1:AC11 DD 6E 04 -      ld  L,(ix+4)    ;PRG ROM count, low
  369 D1:AC14 DD 5E 05 -      ld  e,(ix+5)    ;CHR ROM count, low
  370 D1:AC17 26 00 -  -      ld  h,0
  371 D1:AC19 54 -  -  -      ld  d,h
  372 D1:AC1A DD 7E 07 -      ld  a,(ix+7)    ;Check for INES2 bits
  373 D1:AC1D E6 0C -  -      and a,%00001100
  374 D1:AC1F FE 08 -  -      cp  a,%00001000
  375 D1:AC21 20 1B -  -      jr  nz,+_
  376 D1:AC23 DD 7E 09 -      ld  a,(ix+9)
  377 D1:AC26 47 -  -  -      ld  b,a
  378 D1:AC27 E6 0F -  -      and a,$0F
  379 D1:AC29 FE 02 -  -      cp  a,MAXPRGROM_HINIB+1
  380 D1:AC2B D2 A0 AA D1     jp  nc,err_PRGROMTooLarge
  381 D1:AC2F 67 -  -  -      ld  h,a
  382 D1:AC30 78 -  -  -      ld  a,b
  383 D1:AC31 E6 F0 -  -      and a,$F0
  384 D1:AC33 07 -  -  -      rlca
  385 D1:AC34 07 -  -  -      rlca
  386 D1:AC35 07 -  -  -      rlca
  387 D1:AC36 07 -  -  -      rlca
  388 D1:AC37 FE 04 -  -      cp  a,MAXCHRROM_HINIB+1
  389 D1:AC39 D2 B7 AA D1     jp  nc,err_CHRROMTooLarge
  390 D1:AC3D 57 -  -  -      ld  d,a
  391 D1:AC3E AF -  -  -  _:  xor a,a
  392 D1:AC3F 32 0C 34 D0     ld  (prg_rom_size),a
  393 D1:AC43 32 0F 34 D0     ld  (chr_rom_size),a
  394 D1:AC47 29 -  -  -      add hl,hl   ;x2
  395 D1:AC48 29 -  -  -      add hl,hl   ;x4
  396 D1:AC49 29 -  -  -      add hl,hl   ;x8
  397 D1:AC4A 29 -  -  -      add hl,hl   ;x16
  398 D1:AC4B 29 -  -  -      add hl,hl   ;x32
  399 D1:AC4C 29 -  -  -      add hl,hl   ;x64
  400 D1:AC4D 52 22 0D 34 
              D0 -  -  -      ld.s (prg_rom_size+1),hl    ;x64x256
  401 D1:AC52 EB -  -  -      ex  de,hl
  402 D1:AC53 29 -  -  -      add hl,hl   ;x2
  403 D1:AC54 29 -  -  -      add hl,hl   ;x4
  404 D1:AC55 29 -  -  -      add hl,hl   ;x8
  405 D1:AC56 29 -  -  -      add hl,hl   ;x16
  406 D1:AC57 29 -  -  -      add hl,hl   ;x32
  407 D1:AC58 52 22 10 34 
              D0 -  -  -      ld.s (chr_rom_size+1),hl    ;x32x256
  408 D1:AC5D 2A 0F 34 D0     ld  hl,(chr_rom_size)
  409 D1:AC61 ED 5B 0C 34 
              D0 -  -  -      ld  de,(prg_rom_size)
  410 D1:AC66 19 -  -  -      add hl,de
  411 D1:AC67 ED 5B 09 34 
              D0 -  -  -      ld  de,(total_rom_size)
  412 D1:AC6C B7 -  -  -      or  a,a
  413 D1:AC6D ED 52 -  -      sbc hl,de   ;declared-actual. declared must be equal to or smaller.
  414 D1:AC6F 28 04 -  -      jr  z,+_
  415 D1:AC71 D2 CE AA D1     jp  nc,err_missingROMDetected
  416 D1:AC75 -  -  -  -  _:  ;Find trainer, PRG, and CHR base addresses
  417 D1:AC75 ED 22 10 -      lea hl,ix+16
  418 D1:AC78 22 18 34 D0     ld  (trainer_base),hl   ;whether it exists or not.
  419 D1:AC7C 11 00 00 00     ld  de,0
  420 D1:AC80 DD CB 06 56     bit 2,(ix+6)
  421 D1:AC84 28 04 -  -      jr  z,+_
  422 D1:AC86 11 00 02 00     ld  de,512
  423 D1:AC8A 19 -  -  -  _:  add hl,de
  424 D1:AC8B 22 18 34 D0     ld  (prg_rom_base),hl
  425 D1:AC8F FD 21 21 34 
              D0 -  -  -      ld  iy,FILETABLE
  426 D1:AC94 52 FD 27 00     ld.s hl,(iy+FILE_SIZE_OFFSET)
  427 D1:AC98 B7 -  -  -      or  a,a
  428 D1:AC99 ED 52 -  -      sbc hl,de   ;less possible trainer
  429 D1:AC9B 11 10 00 00     ld  de,16
  430 D1:AC9F ED 52 -  -      sbc hl,de   ;less iNES header. Remaining is now size of current file.
  431 D1:ACA1 EB -  -  -      ex  de,hl   ;curfilesize is now in DE
  432 D1:ACA2 2A 0C 34 D0     ld  hl,(prg_rom_size)   ;keep subtracting filesize from this until carry.
  433 D1:ACA6 B7 -  -  -      or  a,a
  434 D1:ACA7 ED 52 -  -      sbc hl,de   ;if carry, prg_rom end is inside this file. Undo: HL is offset.
  435 D1:ACA9 0E 00 -  -      ld  c,0     ;0th file current
  436 D1:ACAB 38 1D -  -      jr  c,loadROMFile_locatedCHRROM
  437 D1:ACAD 3A 04 34 D0     ld  a,(inputNumFiles)
  438 D1:ACB1 B7 -  -  -      or  a,a
  439 D1:ACB2 28 12 -  -      jr  z,loadROMFile_noCHRROMFound
  440 D1:ACB4 47 -  -  -      ld  b,a
  441 D1:ACB5 ED 33 08 -  _:  lea iy,iy+FILETABLE_STRIDE
  442 D1:ACB8 52 ED 5B 00 
              00 00 -  -      ld.s de,(FILE_SIZE_OFFSET)
  443 D1:ACBE 0C -  -  -      inc c
  444 D1:ACBF B7 -  -  -      or  a,a
  445 D1:ACC0 ED 52 -  -      sbc hl,de   ;
  446 D1:ACC2 38 06 -  -      jr  c,loadROMFile_locatedCHRROM
  447 D1:ACC4 10 EF -  -      djnz -_
  448 D1:ACC6 -  -  -  -  loadROMFile_noCHRROMFound:
  449 D1:ACC6 C3 2E AB D1     jp  err_CHRROMNotFound
  450 D1:ACCA -  -  -  -  loadROMFile_locatedCHRROM:
  451 D1:ACCA 19 -  -  -      add hl,de       ;Undid subtract. HL is now offset in current file
  452 D1:ACCB FD 17 02 -      ld  de,(iy+FILE_ADR_OFFSET) ;so get address inside that file.
  453 D1:ACCE 19 -  -  -      add hl,de
  454 D1:ACCF 79 -  -  -      ld  a,c
  455 D1:ACD0 22 1B 34 D0     ld  (chr_rom_base),hl
  456 D1:ACD4 32 1E 34 D0     ld  (chr_rom_base_file),a
  457 D1:ACD8 -  -  -  -      ;Detect mapper and run its initializer
  458 D1:ACD8 DD 7E 06 -      ld  a,(ix+6)
  459 D1:ACDB DD 46 07 -      ld  b,(ix+7)
  460 D1:ACDE 07 -  -  -      rlca
  461 D1:ACDF 07 -  -  -      rlca
  462 D1:ACE0 07 -  -  -      rlca
  463 D1:ACE1 07 -  -  -      rlca
  464 D1:ACE2 A8 -  -  -      xor a,b
  465 D1:ACE3 E6 0F -  -      and a,$0F
  466 D1:ACE5 A8 -  -  -      xor a,b
  467 D1:ACE6 52 EB -  -      ex.s de,hl  ;clears HLU,DEU
  468 D1:ACE8 5F -  -  -      ld  e,a
  469 D1:ACE9 21 12 34 D0     ld  hl,submapper
  470 D1:ACED 36 00 -  -      ld  (hl),0
  471 D1:ACEF 78 -  -  -      ld  a,b
  472 D1:ACF0 E6 0C -  -      and a,%00001100
  473 D1:ACF2 FE 08 -  -      cp  a,%00001000
  474 D1:ACF4 3E 00 -  -      ld  a,0
  475 D1:ACF6 20 0E -  -      jr  nz,+_
  476 D1:ACF8 DD 46 08 -      ld  b,(ix+8)
  477 D1:ACFB 78 -  -  -      ld  a,b
  478 D1:ACFC 07 -  -  -      rlca
  479 D1:ACFD 07 -  -  -      rlca
  480 D1:ACFE 07 -  -  -      rlca
  481 D1:ACFF 07 -  -  -      rlca
  482 D1:AD00 E6 0F -  -      and a,$0F
  483 D1:AD02 77 -  -  -      ld  (hl),a
  484 D1:AD03 78 -  -  -      ld  a,b
  485 D1:AD04 E6 0F -  -      and a,$0F
  486 D1:AD06 57 -  -  -  _:  ld  d,a
  487 D1:AD07 ED 53 14 34 
              D0 -  -  -      ld  (mapper_id),de
  488 D1:AD0C 21 FF FF FF     ld  hl,-NUMBER_OF_MAPPERS
  489 D1:AD10 19 -  -  -      add hl,de
  490 D1:AD11 DA 0B AB D1     jp  c,err_MapperOutOfRange
  491 D1:AD15 ED 62 -  -      sbc hl,hl
  492 D1:AD17 19 -  -  -      add hl,de               ;hl=de. both are mapper IDs
  493 D1:AD18 2E 09 -  -      ld  L,MAPPER_STRIDE
  494 D1:AD1A 55 -  -  -      ld  d,L
  495 D1:AD1B ED 6C -  -      mlt hl                  ;high byte multiply
  496 D1:AD1D 65 -  -  -      ld  h,L
  497 D1:AD1E 2E 00 -  -      ld  L,0
  498 D1:AD20 ED 5C -  -      mlt de                  ;low byte multiply
  499 D1:AD22 19 -  -  -      add hl,de               ;This is the best 16bit * 8bit I know to do.
  500 D1:AD23 11 2F AD D1     ld  de,mapper_table
  501 D1:AD27 19 -  -  -      add hl,de
  502 D1:AD28 22 15 34 D0     ld  (mapper_adr_base),hl
  503 D1:AD2C ED 27 -  -      ld  hl,(hl)
  504 D1:AD2E E9 -  -  -      jp  (hl)
  505 D1:AD2F -  -  -  -  
  506 D1:AD2F -  -  -  -  mapper_table:   ;entries 9 wide
  507 D1:AD2F 38 AD D1 -  .dl mapper0_init
  508 D1:AD32 66 AD D1 -  .dl mapper0_read
  509 D1:AD35 68 AD D1 -  .dl mapper0_write
  510 D1:AD38 -  -  -  -  
  511 D1:AD38 -  -  -  -  mapper0_init:
  512 D1:AD38 -  -  -  -      ;map trainer, if exist
  513 D1:AD38 DD CB 06 56     bit 2,(ix+6)
  514 D1:AD3C 28 0D -  -      jr  z,+_
  515 D1:AD3E 2A 18 34 D0     ld  hl,(trainer_base)
  516 D1:AD42 1E 70 -  -      ld  e,$70
  517 D1:AD44 0E 02 -  -      ld  c,2
  518 D1:AD46 41 -  -  -      ld  b,c
  519 D1:AD47 CD 17 B5 D1     call i6502_map_pages
  520 D1:AD4B 2A 0C 34 D0 _:  ld  hl,(prg_rom_size)
  521 D1:AD4F 11 FF BF FF     ld  de,-(16384+1)
  522 D1:AD53 19 -  -  -      add hl,de   ;carry if more than 1 16KB segment
  523 D1:AD54 2A 18 34 D0     ld  hl,(prg_rom_base)
  524 D1:AD58 06 80 -  -      ld  b,$80
  525 D1:AD5A 58 -  -  -      ld  e,b
  526 D1:AD5B 0E 40 -  -      ld  c,$40
  527 D1:AD5D 30 02 -  -      jr  nc,+_
  528 D1:AD5F CB 21 -  -      sla c
  529 D1:AD61 CD 17 B5 D1 _:  call i6502_map_pages
  530 D1:AD65 C9 -  -  -      ret
  531 D1:AD66 -  -  -  -  
  532 D1:AD66 -  -  -  -  
  533 D1:AD66 -  -  -  -  mapper0_read:
  534 D1:AD66 7E -  -  -      ld  a,(hl)
  535 D1:AD67 C9 -  -  -      ret
  536 D1:AD68 -  -  -  -  mapper0_write:
  537 D1:AD68 70 -  -  -      ld  (hl),b
  538 D1:AD69 C9 -  -  -      ret
  539 D1:AD6A -  -  -  -  
  540 D1:AD6A -  -  -  -  
  541 D1:AD6A -  -  -  -  
  542 D1:AD6A -  -  -  -  
  543 D1:AD6A -  -  -  -  
  544 D1:AD6A -  -  -  -  loadROMFile_tempSig:    ;total 23 bytes
  545 D1:AD6A 43 45 4E 52 
              4F 32 00 -  .db "CENRO2",0
  546 D1:AD71 -  -  -  -  loadROMFile_tempSigHash:
  547 D1:AD71 00 00 00 00 
              00 00 00 00 
              00 00 00 00 
              00 00 00 00 .db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ;16 bytes for hash
  548 D1:AD81 -  -  -  -  
  549 D1:AD81 -  -  -  -  
  550 D1:AD81 -  -  -  -  ;Input: IY = locationOfSignature. 
  551 D1:AD81 -  -  -  -  ;       BC=size of signature (long load to clear BCU), still limited to 255.
  552 D1:AD81 -  -  -  -  ;Output: carry=1: Variable not found.
  553 D1:AD81 -  -  -  -  ;Output: carry=0: DE=address of variable data start after the signature
  554 D1:AD81 -  -  -  -  ;        IX=location of current variable's VAT location.
  555 D1:AD81 -  -  -  -  ;Destroys: All registers not in use.
  556 D1:AD81 -  -  -  -  ;NOTES: This routine is capable of resuming a search that has ended.
  557 D1:AD81 -  -  -  -  
  558 D1:AD81 -  -  -  -  ;To continue searching:
  559 D1:AD81 -  -  -  -  ;call vatTraverse_continue with the following inputs:
  560 D1:AD81 -  -  -  -  ;   IX preserved from a non-carry return of vatTraverse.
  561 D1:AD81 -  -  -  -  ;   BC = same as input for vatTraverse. vatTraverse does not destroy this reg.
  562 D1:AD81 -  -  -  -  ;   WARNING: DO NOT KEEP SEARCHING AFTER CALL RETURNS CARRY. START A NEW SEARCH.
  563 D1:AD81 -  -  -  -  vatTraverse:
  564 D1:AD81 -  -  -  -      ;progPtr = progvat start; ptemp = progvatend
  565 D1:AD81 DD 2A 9D 25 
              D0 -  -  -      ld  ix,(progPtr)
  566 D1:AD86 -  -  -  -  vatTraverse_loop:
  567 D1:AD86 2A 9A 25 D0     ld  hl,(pTemp)
  568 D1:AD8A ED 12 00 -      lea de,ix+0
  569 D1:AD8D B7 -  -  -      or  a,a
  570 D1:AD8E ED 52 -  -      sbc hl,de   ;HL<DE while in pVAT, else carry set.
  571 D1:AD90 3F -  -  -      ccf
  572 D1:AD91 D8 -  -  -      ret c
  573 D1:AD92 1A -  -  -      ld  a,(de)
  574 D1:AD93 E6 1F -  -      and a,$1F
  575 D1:AD95 FE 15 -  -      cp  a,AppVarObj
  576 D1:AD97 20 34 -  -      jr  nz,vatTraverse_skip
  577 D1:AD99 DD 17 F9 -      ld  de,(ix-7)   ;puts "page" byte in DEU
  578 D1:AD9C DD 5E FD -      ld  e,(ix-3)
  579 D1:AD9F DD 56 FC -      ld  d,(ix-4)
  580 D1:ADA2 CD 98 1F 02     call _ChkInRam
  581 D1:ADA6 EB -  -  -      ex  de,hl
  582 D1:ADA7 30 08 -  -      jr  nc,+_
  583 D1:ADA9 11 09 00 00     ld  de,9
  584 D1:ADAD 19 -  -  -      add hl,de
  585 D1:ADAE 5E -  -  -      ld  e,(hl)
  586 D1:ADAF 19 -  -  -      add hl,de
  587 D1:ADB0 23 -  -  -      inc hl
  588 D1:ADB1 5E -  -  -  _:  ld  e,(hl)
  589 D1:ADB2 23 -  -  -      inc hl
  590 D1:ADB3 56 -  -  -      ld  d,(hl)
  591 D1:ADB4 23 -  -  -      inc hl
  592 D1:ADB5 EB -  -  -      ex  de,hl
  593 D1:ADB6 B7 -  -  -      or  a,a
  594 D1:ADB7 ED 42 -  -      sbc hl,bc   ;varsize-entrysize. If carry, entry cannot possibly be in var.
  595 D1:ADB9 38 12 -  -      jr  c,vatTraverse_skip
  596 D1:ADBB ED 23 00 -      lea hl,iy+0
  597 D1:ADBE C5 -  -  -      push bc
  598 D1:ADBF 1A -  -  -  _:      ld  a,(de)
  599 D1:ADC0 13 -  -  -          inc de
  600 D1:ADC1 ED A1 -  -          cpi
  601 D1:ADC3 20 07 -  -          jr  nz,vatTraverse_sigNoMatch
  602 D1:ADC5 EA BF AD D1         jp  pe,-_
  603 D1:ADC9 C1 -  -  -      pop bc
  604 D1:ADCA B7 -  -  -      or  a,a
  605 D1:ADCB C9 -  -  -      ret         ;NC. DE = past the signature.
  606 D1:ADCC -  -  -  -  vatTraverse_sigNoMatch:
  607 D1:ADCC C1 -  -  -      pop bc
  608 D1:ADCD -  -  -  -  vatTraverse_continue:
  609 D1:ADCD -  -  -  -  vatTraverse_skip:
  610 D1:ADCD 3E 07 -  -      ld  a,7
  611 D1:ADCF 11 FF FF FF     ld  de,-1
  612 D1:ADD3 DD 86 FA -      add a,(ix-6)
  613 D1:ADD6 ED 44 -  -      neg
  614 D1:ADD8 5F -  -  -      ld  e,a
  615 D1:ADD9 DD 19 -  -      add ix,de   ;because "sbc ix,de" isn't a thing. Boo.
  616 D1:ADDB 18 A9 -  -      jr  vatTraverse_loop
  617 D1:ADDD -  -  -  -  
  618 D1:ADDD -  -  -  -  
  619 D1:ADDD -  -  -  -  
  620 D1:ADDD -  -  -  -  #include "lcd.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    1 D1:ADDD -  -  -  -  #include "ti84pce.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\ti84pce.inc"
    1 D1:ADDD -  -  -  -  ;TI-84 Plus CE Include File
    2 D1:ADDD -  -  -  -  
    3 D1:ADDD -  -  -  -  ;Various Parts Contributed by
    4 D1:ADDD -  -  -  -  ;- BrandonW
    5 D1:ADDD -  -  -  -  ;- calc84
    6 D1:ADDD -  -  -  -  ;- MateoConLechuga
    7 D1:ADDD -  -  -  -  ;- Runer112
    8 D1:ADDD -  -  -  -  ;- tr1p1ea
    9 D1:ADDD -  -  -  -  ;- Kerm Martian
   10 D1:ADDD -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    2 D1:ADDD -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
    5 D1:ADDD -  -  -  -  ;
    6 D1:ADDD -  -  -  -  ;
    7 D1:ADDD -  -  -  -  ;
    8 D1:ADDD -  -  -  -  
    9 D1:ADDD -  -  -  -  FONTFGCOLOR .EQU $FF
   10 D1:ADDD -  -  -  -  FONTBGCOLOR .EQU $00
   11 D1:ADDD -  -  -  -  
   12 D1:ADDD -  -  -  -  screenBuf1      .equ vRam
   13 D1:ADDD -  -  -  -  screenBuf2      .equ vRam+(320*240)
   14 D1:ADDD -  -  -  -  ;DO NOT MOVE THESE.
   15 D1:ADDD -  -  -  -  xPos                .equ $D031F6
   16 D1:ADDD -  -  -  -  yPos                .equ $D031F7
   17 D1:ADDD -  -  -  -  slopPos             .equ $D031F8        ;extra byte here
   18 D1:ADDD -  -  -  -  debugram            .equ $D031F9        ;FA and FB occupied too.
   19 D1:ADDD -  -  -  -  save_spl            .equ $D031FC        ;FD and FE occupied too.
   20 D1:ADDD -  -  -  -  save_mbase          .equ $D031FF        ;
   21 D1:ADDD -  -  -  -  core_memory_ix      .equ $D03280        ;occupies D03200 to D032FF
   22 D1:ADDD -  -  -  -  scrap_mapping       .equ $D03300        ;256 bytes. maps to nowhere important.
   23 D1:ADDD -  -  -  -  saferam1            .equ $D03400        ;1024 bytes available. Define later.
   24 D1:ADDD -  -  -  -  main_ram            .equ $D03800        ;$0800 bytes of main system memory
   25 D1:ADDD -  -  -  -  
   26 D1:ADDD -  -  -  -  ZEROPAGE            .equ main_ram+(0*256)
   27 D1:ADDD -  -  -  -  STACKBASE           .equ main_ram+(1*256)
   28 D1:ADDD -  -  -  -  
   29 D1:ADDD -  -  -  -  BASETABLE           .equ $D04000        ;variable size. 256*BASETABLE_STRIDE
   30 D1:ADDD -  -  -  -  BASETABLE_STRIDE    .equ 8
   31 D1:ADDD -  -  -  -  PAGETABLE_OFFSET    .equ 0
   32 D1:ADDD -  -  -  -  PAGETABLE           .equ BASETABLE+PAGETABLE_OFFSET
   33 D1:ADDD -  -  -  -  JUMPTABLE_OFFSET    .equ 4
   34 D1:ADDD -  -  -  -  JUMPTABLE           .equ BASETABLE+JUMPTABLE_OFFSET
   35 D1:ADDD -  -  -  -  
   36 D1:ADDD -  -  -  -  NAMETABLE1          .equ BASETABLE+(512*BASETABLE_STRIDE)
   37 D1:ADDD -  -  -  -  NAMETABLE2          .equ NAMETABLE1 + 1024
   38 D1:ADDD -  -  -  -  
   39 D1:ADDD -  -  -  -  ;saferam1 1024 bytes storage
   40 D1:ADDD -  -  -  -  ;
   41 D1:ADDD -  -  -  -  curScreenBuf        .equ saferam1           ;3b
   42 D1:ADDD -  -  -  -  linestart           .equ curScreenBuf+3     ;1b
   43 D1:ADDD -  -  -  -  inputNumFiles       .equ linestart+1        ;1b
   44 D1:ADDD -  -  -  -  basefile_sig        .equ inputNumFiles+1    ;3b pointer to 16b hash
   45 D1:ADDD -  -  -  -  missing_files       .equ basefile_sig+3     ;1b
   46 D1:ADDD -  -  -  -  total_rom_size      .equ missing_files+1    ;3b
   47 D1:ADDD -  -  -  -  prg_rom_size        .equ total_rom_size+3   ;3b
   48 D1:ADDD -  -  -  -  chr_rom_size        .equ prg_rom_size+3     ;3b
   49 D1:ADDD -  -  -  -  submapper           .equ chr_rom_size+3     ;1b. iNES2 thing. Not often used.
   50 D1:ADDD -  -  -  -  ines_flag_6         .equ submapper+1        ;1b. Flags that a mapper may need.
   51 D1:ADDD -  -  -  -  mapper_id           .equ ines_flag_6+1      ;3b. Convenience load for 12 bits
   52 D1:ADDD -  -  -  -  mapper_adr_base     .equ mapper_id+1        ;3b. Used to load mapper
   53 D1:ADDD -  -  -  -  trainer_base        .equ mapper_adr_base+3  ;3b. If exist, starts here
   54 D1:ADDD -  -  -  -  prg_rom_base        .equ mapper_adr_base+3  ;3b. Adjusted in case of trainer.
   55 D1:ADDD -  -  -  -  chr_rom_base        .equ prg_rom_base+3     ;3b. Located somewhere.
   56 D1:ADDD -  -  -  -  chr_rom_base_file   .equ chr_rom_base+3     ;1b. Nonzero if not in first file.
   57 D1:ADDD -  -  -  -  
   58 D1:ADDD -  -  -  -  SIZEOF_INTEGRITY_HASH    .equ 16
   59 D1:ADDD -  -  -  -  MAXPRGROM_HINIB     .equ 1
   60 D1:ADDD -  -  -  -  MAXCHRROM_HINIB     .equ 3
   61 D1:ADDD -  -  -  -  NUMBER_OF_MAPPERS   .equ 1
   62 D1:ADDD -  -  -  -  MAPPER_STRIDE       .equ 9
   63 D1:ADDD -  -  -  -  
   64 D1:ADDD -  -  -  -  MAXNUMFILES         .equ 1                  ;set to 32 later. that's like 1.5MB
   65 D1:ADDD -  -  -  -  FILETABLE_STRIDE    .equ 8
   66 D1:ADDD -  -  -  -  FILETABLE           .equ chr_rom_base_file+3   ;(MAXNUMFILES*FILETABLE_STRIDE)b
   67 D1:ADDD -  -  -  -  FILE_SIZE_OFFSET    .equ 0
   68 D1:ADDD -  -  -  -  FILE_ADR_OFFSET     .equ 2
   69 D1:ADDD -  -  -  -  FILE_SIG_ADR_OFFSET .equ 5
   70 D1:ADDD -  -  -  -  
   71 D1:ADDD -  -  -  -  
   72 D1:ADDD -  -  -  -  
   73 D1:ADDD -  -  -  -  ;
   74 D1:ADDD -  -  -  -  ;
   75 D1:ADDD -  -  -  -  
   76 D1:ADDD -  -  -  -  
   77 D1:ADDD -  -  -  -  
   78 D1:ADDD -  -  -  -  
   79 D1:ADDD -  -  -  -  
   80 D1:ADDD -  -  -  -  #define REGA 0
   81 D1:ADDD -  -  -  -  #define REGX 1
   82 D1:ADDD -  -  -  -  #define REGY 2
   83 D1:ADDD -  -  -  -  #define REGSP 3
   84 D1:ADDD -  -  -  -  #define REGSR 4
   85 D1:ADDD -  -  -  -  #define REGPC 5
   86 D1:ADDD -  -  -  -  #define CYCLES_REMAIN ix+8
   87 D1:ADDD -  -  -  -  #define SF_NEG 7
   88 D1:ADDD -  -  -  -  #define SF_OVER 6 
   89 D1:ADDD -  -  -  -  #define SF_RESERVED 5 
   90 D1:ADDD -  -  -  -  #define SF_BRK 4
   91 D1:ADDD -  -  -  -  #define SF_DEC 3
   92 D1:ADDD -  -  -  -  #define SF_INT 2
   93 D1:ADDD -  -  -  -  #define SF_ZERO 1
   94 D1:ADDD -  -  -  -  #define SF_CARRY 0
   95 D1:ADDD -  -  -  -  
   96 D1:ADDD -  -  -  -  #macro ADDCYC(X)
   97 D1:ADDD                 #if (x < 1)
   98 D1:ADDD                     nop
   99 D1:ADDD                 #elif (X = 1)
  100 D1:ADDD                     inc iy
  101 D1:ADDD                 #else
  102 D1:ADDD                     lea iy,iy+X
  103 D1:ADDD                 #endif
  104 D1:ADDD             #endmacro
  105 D1:ADDD -  -  -  -  
  106 D1:ADDD -  -  -  -  ;
  107 D1:ADDD -  -  -  -  ;
  108 D1:ADDD -  -  -  -  ;
  109 D1:ADDD -  -  -  -  #endif
  110 D1:ADDD -  -  -  -  .list
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\lcd.z80"
    3 D1:ADDD -  -  -  -  
    4 D1:ADDD -  -  -  -  ;Function list:
    5 D1:ADDD -  -  -  -  ; fastCopy - Swaps drawing buffer to display what is currently written there.
    6 D1:ADDD -  -  -  -  ; startGfx - Configures LCD to run in graphx mode. UNSAFE TO RUN MORE THAN ONCE
    7 D1:ADDD -  -  -  -  ; stopGfx - Restores LCD configuration to TI-OS default.
    8 D1:ADDD -  -  -  -  ; configureScreen - Swaps screen configuration betwen current and stored.
    9 D1:ADDD -  -  -  -  ; setDefaultPalette - Sets default (XLIBC) color palette.
   10 D1:ADDD -  -  -  -  ; clearTextBuf - no inputs. Sets text buffer to all spaces.
   11 D1:ADDD -  -  -  -  ; printTextBuf - no inputs. Mirrors buffer to screen.
   12 D1:ADDD -  -  -  -  ; setLineStart - A=xpos. Set xPos and linestart
   13 D1:ADDD -  -  -  -  ; setCurLine - A=ypos. Set yPos.
   14 D1:ADDD -  -  -  -  ; newLine - no inputs. sets linestart = xPos, increments yPos
   15 D1:ADDD -  -  -  -  ; newPage - no inputs. sets linestart = xPos, yPos = 0
   16 D1:ADDD -  -  -  -  ; printString - HL=address to string. destroys all.
   17 D1:ADDD -  -  -  -  ; printBigFont - A=ASCII char to print at xPos,yPos. Advances xPos by 1.
   18 D1:ADDD -  -  -  -  ; printSmallNumPair - A=0-255 to print at xPos,Ypos. Advances xPos by 1.
   19 D1:ADDD -  -  -  -  ; calculateScreenPtr - Converts xPos,yPos into screen buffer address.
   20 D1:ADDD -  -  -  -  ;
   21 D1:ADDD -  -  -  -  ;
   22 D1:ADDD -  -  -  -  ;
   23 D1:ADDD -  -  -  -  ;
   24 D1:ADDD -  -  -  -  ;
   25 D1:ADDD -  -  -  -  ;
   26 D1:ADDD -  -  -  -  ;
   27 D1:ADDD -  -  -  -  
   28 D1:ADDD -  -  -  -  
   29 D1:ADDD -  -  -  -  
   30 D1:ADDD -  -  -  -  
   31 D1:ADDD -  -  -  -  ;-----------------------------------------------------------------------------
   32 D1:ADDD -  -  -  -  ;Screen hardware interface stuff
   33 D1:ADDD -  -  -  -  
   34 D1:ADDD -  -  -  -  ;It ought to be called "bufSwap" but I just can't. I won't.
   35 D1:ADDD -  -  -  -  fastCopy:
   36 D1:ADDD 11 00 00 D4     ld  de,screenBuf1
   37 D1:ADE1 2A 10 00 E3     ld  hl,(mpLcdBase)
   38 D1:ADE5 22 00 34 D0     ld  (curScreenBuf),hl
   39 D1:ADE9 B7 -  -  -      or  a,a
   40 D1:ADEA ED 52 -  -      sbc hl,de
   41 D1:ADEC EB -  -  -      ex  de,hl
   42 D1:ADED 20 04 -  -      jr  nz,+_
   43 D1:ADEF 21 00 2C D5     ld  hl,screenBuf2
   44 D1:ADF3 22 10 00 E3 _:  ld  (mpLcdBase),hl
   45 D1:ADF7 C9 -  -  -      ret
   46 D1:ADF8 -  -  -  -  
   47 D1:ADF8 -  -  -  -  stopGfx:
   48 D1:ADF8 CD 74 03 00     call _boot_ClearVRAM
   49 D1:ADFC 11 2D 09 00     ld  de,lcdNormalMode
   50 D1:AE00 01 00 00 D4     ld  bc,screenBuf1
   51 D1:AE04 18 0C -  -      jr  configureScreen
   52 D1:AE06 -  -  -  -  
   53 D1:AE06 -  -  -  -  startGfx:
   54 D1:AE06 CD 74 03 00     call _boot_ClearVRAM
   55 D1:AE0A 11 27 39 01     ld  de,lcdWatermark+lcdIntFront+lcdPwr+lcdBgr+lcdBpp8
   56 D1:AE0E 01 00 00 D4     ld  bc,screenBuf1
   57 D1:AE12 -  -  -  -  configureScreen:
   58 D1:AE12 21 10 00 E3     ld  hl,mpLcdBase
   59 D1:AE16 ED 0F -  -      ld  (hl),bc
   60 D1:AE18 2E 18 -  -      ld  L,lcdCtrl
   61 D1:AE1A ED 1F -  -      ld  (hl),de
   62 D1:AE1C 2E 01 -  -      ld  L,lcdTiming0 + 1
   63 D1:AE1E 01 08 00 00     ld  bc,8
   64 D1:AE22 11 51 AE D1     ld  de,screenSettings
   65 D1:AE26 1A -  -  -  _:  ld  a,(de)
   66 D1:AE27 ED A0 -  -      ldi
   67 D1:AE29 2B -  -  -      dec hl
   68 D1:AE2A 77 -  -  -      ld  (hl),a
   69 D1:AE2B 23 -  -  -      inc hl
   70 D1:AE2C EA 26 AE D1     jp  pe,-_
   71 D1:AE30 21 00 2C D5     ld  hl,screenBuf2
   72 D1:AE34 22 00 34 D0     ld  (curScreenBuf),hl
   73 D1:AE38 -  -  -  -  ;Also copied from graphx
   74 D1:AE38 -  -  -  -  setDefaultPalette:
   75 D1:AE38 11 00 02 E3 	ld	de,mpLcdPalette	    ; address of mmio palette
   76 D1:AE3C 43 -  -  -  	ld	b,e			        ; b = 0
   77 D1:AE3D 78 -  -  -  _:	ld	a,b
   78 D1:AE3E 0F -  -  -  	rrca
   79 D1:AE3F A8 -  -  -  	xor	a,b
   80 D1:AE40 E6 E0 -  -  	and	a,224
   81 D1:AE42 A8 -  -  -  	xor	a,b
   82 D1:AE43 12 -  -  -  	ld	(de),a
   83 D1:AE44 13 -  -  -  	inc	de
   84 D1:AE45 78 -  -  -  	ld	a,b
   85 D1:AE46 17 -  -  -  	rla
   86 D1:AE47 17 -  -  -  	rla
   87 D1:AE48 17 -  -  -  	rla
   88 D1:AE49 78 -  -  -  	ld	a,b
   89 D1:AE4A 1F -  -  -  	rra
   90 D1:AE4B 12 -  -  -  	ld	(de),a
   91 D1:AE4C 13 -  -  -  	inc	de
   92 D1:AE4D 04 -  -  -  	inc	b
   93 D1:AE4E 20 ED -  -  	jr	nz,-_		    ; loop for 256 times to fill palette
   94 D1:AE50 C9 -  -  -  	ret
   95 D1:AE51 -  -  -  -  
   96 D1:AE51 -  -  -  -  screenSettings:
   97 D1:AE51 -  -  -  -  ;Copied from my old Falldown2 project, which was also copied from graphx.asm
   98 D1:AE51 -  -  -  -  ;	.db	14 shl 2			; PPL shl 2
   99 D1:AE51 07 -  -  -  	.db	7					; HSW
  100 D1:AE52 57 -  -  -  	.db	87					; HFP
  101 D1:AE53 3F -  -  -  	.db	63					; HBP
  102 D1:AE54 3F 01 -  -  	.dw	(0 >> 10)+319		; (VSW shl 10)+LPP
  103 D1:AE56 B3 -  -  -  	.db	179					; VFP
  104 D1:AE57 00 -  -  -  	.db	0					; VBP
  105 D1:AE58 00 -  -  -  	.db	(0 >> 6)+(0 >> 5)+0	; (ACB shl 6)+(CLKSEL shl 5)+PCD_LO
  106 D1:AE59 -  -  -  -  ;  H = ((PPL+1)*16)+(HSW+1)+(HFP+1)+(HBP+1) = 240+8+88+64 = 400
  107 D1:AE59 -  -  -  -  ;  V = (LPP+1)+(VSW+1)+VFP+VBP = 320+1+179+0 = 500
  108 D1:AE59 -  -  -  -  ; CC = H*V*PCD*2 = 400*500*2*2 = 800000
  109 D1:AE59 -  -  -  -  ; Hz = 48000000/CC = 60
  110 D1:AE59 -  -  -  -  
  111 D1:AE59 -  -  -  -  
  112 D1:AE59 -  -  -  -  ;-----------------------------------------------------------------------------
  113 D1:AE59 -  -  -  -  ; Text Rendering
  114 D1:AE59 -  -  -  -  
  115 D1:AE59 -  -  -  -  clearTextBuf:
  116 D1:AE59 21 00 50 D0     ld  hl,NAMETABLE1
  117 D1:AE5D 11 01 50 D0     ld  de,NAMETABLE1+1
  118 D1:AE61 01 FF 03 00     ld  bc,1023
  119 D1:AE65 36 20 -  -      ld  (hl),' '
  120 D1:AE67 ED B0 -  -      ldir
  121 D1:AE69 C9 -  -  -      ret
  122 D1:AE6A -  -  -  -  
  123 D1:AE6A -  -  -  -  printTextBuf:
  124 D1:AE6A 2A F6 31 D0     ld  hl,(xPos)
  125 D1:AE6E 22 9E AE D1     ld  (printTextBuf_smcPosRecovery),hl
  126 D1:AE72 21 00 50 D0     ld  hl,NAMETABLE1
  127 D1:AE76 AF -  -  -      xor a,a
  128 D1:AE77 32 F7 31 D0     ld  (yPos),a
  129 D1:AE7B 0E 1E -  -      ld  c,30
  130 D1:AE7D 3E 08 -  -  _:  ld  a,8
  131 D1:AE7F 32 F6 31 D0     ld  (xPos),a
  132 D1:AE83 06 20 -  -      ld  b,$20
  133 D1:AE85 7E -  -  -  _:  ld  a,(hl)
  134 D1:AE86 23 -  -  -      inc hl
  135 D1:AE87 C5 -  -  -      push bc
  136 D1:AE88 E5 -  -  -          push hl
  137 D1:AE89 CD E2 AE D1             call printBigFont
  138 D1:AE8D E1 -  -  -          pop hl
  139 D1:AE8E C1 -  -  -      pop bc
  140 D1:AE8F 10 F4 -  -      djnz -_
  141 D1:AE91 3A F7 31 D0     ld  a,(yPos)
  142 D1:AE95 3C -  -  -      inc a
  143 D1:AE96 32 F7 31 D0     ld  (yPos),a
  144 D1:AE9A 0D -  -  -      dec  c
  145 D1:AE9B 20 E0 -  -      jr  nz,--_
  146 D1:AE9D -  -  -  -  printTextBuf_smcPosRecovery .equ $+1
  147 D1:AE9D 21 00 00 00     ld  hl,0
  148 D1:AEA1 22 F6 31 D0     ld  (xPos),hl
  149 D1:AEA5 C9 -  -  -      ret
  150 D1:AEA6 -  -  -  -  
  151 D1:AEA6 -  -  -  -  ;A=column to start on
  152 D1:AEA6 -  -  -  -  setLineStart:
  153 D1:AEA6 32 F6 31 D0     ld  (xPos),a
  154 D1:AEAA 32 03 34 D0     ld  (linestart),a
  155 D1:AEAE C9 -  -  -      ret
  156 D1:AEAF -  -  -  -  
  157 D1:AEAF -  -  -  -  ;A=row to start on
  158 D1:AEAF -  -  -  -  setCurLine:
  159 D1:AEAF 32 F7 31 D0     ld  (yPos),a
  160 D1:AEB3 C9 -  -  -      ret
  161 D1:AEB4 -  -  -  -  
  162 D1:AEB4 -  -  -  -  newPage:
  163 D1:AEB4 3E FF -  -      ld  a,$FF
  164 D1:AEB6 32 F7 31 D0     ld  (yPos),a
  165 D1:AEBA -  -  -  -  newLine:
  166 D1:AEBA 3A 03 34 D0     ld  a,(linestart)
  167 D1:AEBE 32 F6 31 D0     ld  (xPos),a
  168 D1:AEC2 3A F7 31 D0     ld  a,(yPos)
  169 D1:AEC6 3C -  -  -      inc a
  170 D1:AEC7 32 F7 31 D0     ld  (yPos),a
  171 D1:AECB C9 -  -  -      ret
  172 D1:AECC -  -  -  -  
  173 D1:AECC -  -  -  -      
  174 D1:AECC -  -  -  -      
  175 D1:AECC -  -  -  -  
  176 D1:AECC -  -  -  -  ;HL=address to string
  177 D1:AECC -  -  -  -  printString:
  178 D1:AECC 7E -  -  -      ld  a,(hl)
  179 D1:AECD 23 -  -  -      inc hl
  180 D1:AECE B7 -  -  -      or  a,a
  181 D1:AECF C8 -  -  -      ret z
  182 D1:AED0 FE 0A -  -      cp  a,'\n'
  183 D1:AED2 20 06 -  -      jr nz,+_
  184 D1:AED4 CD BA AE D1     call newLine
  185 D1:AED8 18 F2 -  -      jr  printString
  186 D1:AEDA E5 -  -  -  _:  push hl
  187 D1:AEDB CD E2 AE D1         call printBigFont
  188 D1:AEDF E1 -  -  -      pop hl
  189 D1:AEE0 18 EA -  -      jr printString
  190 D1:AEE2 -  -  -  -  
  191 D1:AEE2 -  -  -  -  
  192 D1:AEE2 -  -  -  -  ;in: A=chrToPrint
  193 D1:AEE2 -  -  -  -  printBigFont:
  194 D1:AEE2 CD 77 AF D1     call calculateScreenPtr
  195 D1:AEE6 EB -  -  -      ex  de,hl
  196 D1:AEE7 6F -  -  -      ld  L,a
  197 D1:AEE8 26 08 -  -      ld  H,8
  198 D1:AEEA ED 6C -  -      mlt hl
  199 D1:AEEC 01 91 AE D1     ld  bc,graphx_textdata
  200 D1:AEF0 09 -  -  -      add hl,bc
  201 D1:AEF1 EB -  -  -      ex  de,hl
  202 D1:AEF2 0E 08 -  -      ld  c,8
  203 D1:AEF4 06 08 -  -  _:  ld  b,8
  204 D1:AEF6 1A -  -  -      ld  a,(de)
  205 D1:AEF7 87 -  -  -  _:  add a,a
  206 D1:AEF8 -  -  -  -  fontBGColor_var .equ $+1
  207 D1:AEF8 36 00 -  -      ld  (hl),FONTBGCOLOR
  208 D1:AEFA 30 02 -  -      jr  nc,$+4
  209 D1:AEFC -  -  -  -  fontFGColor_var .equ $+1
  210 D1:AEFC 36 FF -  -      ld  (hl),FONTFGCOLOR
  211 D1:AEFE 23 -  -  -      inc hl
  212 D1:AEFF 10 F6 -  -      djnz -_
  213 D1:AF01 79 -  -  -      ld  a,c
  214 D1:AF02 01 38 01 00     ld  bc,320-8
  215 D1:AF06 09 -  -  -      add hl,bc
  216 D1:AF07 4F -  -  -      ld  c,a
  217 D1:AF08 13 -  -  -      inc de
  218 D1:AF09 0D -  -  -      dec c
  219 D1:AF0A 20 E8 -  -      jr  nz,--_
  220 D1:AF0C 21 F6 31 D0     ld  hl,xPos
  221 D1:AF10 34 -  -  -      inc (hl)
  222 D1:AF11 C9 -  -  -      ret
  223 D1:AF12 -  -  -  -  
  224 D1:AF12 -  -  -  -  ;A= 0-255 numeric value to display as hex
  225 D1:AF12 -  -  -  -  printSmallNumPair:
  226 D1:AF12 CD 77 AF D1     call calculateScreenPtr
  227 D1:AF16 F5 -  -  -      push af
  228 D1:AF17 1F -  -  -          rra
  229 D1:AF18 1F -  -  -          rra
  230 D1:AF19 1F -  -  -          rra
  231 D1:AF1A 1F -  -  -          rra
  232 D1:AF1B CD 2A AF D1         call +_
  233 D1:AF1F F1 -  -  -      pop af
  234 D1:AF20 CD 2A AF D1     call +_
  235 D1:AF24 21 F6 31 D0     ld  hl,xPos
  236 D1:AF28 34 -  -  -      inc (hl)
  237 D1:AF29 C9 -  -  -      ret
  238 D1:AF2A E6 0F -  -  _:  and a,$0F
  239 D1:AF2C 01 40 01 00     ld  bc,320
  240 D1:AF30 09 -  -  -      add hl,bc   ;drop height by one. These small chars are *short*
  241 D1:AF31 EB -  -  -      ex  de,hl
  242 D1:AF32 6F -  -  -      ld  L,a
  243 D1:AF33 26 03 -  -      ld  H,3
  244 D1:AF35 ED 6C -  -      mlt hl
  245 D1:AF37 01 91 B2 D1     ld  bc,SmallHexFont
  246 D1:AF3B 09 -  -  -      add hl,bc
  247 D1:AF3C EB -  -  -      ex  de,hl
  248 D1:AF3D 0E 03 -  -      ld  c,3
  249 D1:AF3F 18 14 -  -      jr  printSmallNumPair_2ndHalf
  250 D1:AF41 -  -  -  -  printSmallNumPair_1stHalf:
  251 D1:AF41 1A -  -  -      ld  a,(de)
  252 D1:AF42 06 04 -  -      ld  b,4
  253 D1:AF44 87 -  -  -  _:  add a,a
  254 D1:AF45 36 00 -  -      ld  (hl),FONTBGCOLOR
  255 D1:AF47 30 02 -  -      jr  nc,$+4
  256 D1:AF49 36 FF -  -      ld  (hl),FONTFGCOLOR
  257 D1:AF4B 23 -  -  -      inc hl
  258 D1:AF4C 10 F6 -  -      djnz -_
  259 D1:AF4E 79 -  -  -      ld  a,c
  260 D1:AF4F 01 3C 01 00     ld  bc,320-4
  261 D1:AF53 09 -  -  -      add hl,bc
  262 D1:AF54 4F -  -  -      ld  c,a
  263 D1:AF55 -  -  -  -  printSmallNumPair_2ndHalf:
  264 D1:AF55 1A -  -  -      ld  a,(de)
  265 D1:AF56 07 -  -  -      rlca
  266 D1:AF57 07 -  -  -      rlca
  267 D1:AF58 07 -  -  -      rlca
  268 D1:AF59 07 -  -  -      rlca
  269 D1:AF5A 06 04 -  -      ld  b,4
  270 D1:AF5C 87 -  -  -  _:  add a,a
  271 D1:AF5D 36 00 -  -      ld  (hl),FONTBGCOLOR
  272 D1:AF5F 30 02 -  -      jr  nc,$+4
  273 D1:AF61 36 FF -  -      ld  (hl),FONTFGCOLOR
  274 D1:AF63 23 -  -  -      inc hl
  275 D1:AF64 10 F6 -  -      djnz -_
  276 D1:AF66 13 -  -  -      inc de
  277 D1:AF67 79 -  -  -      ld  a,c
  278 D1:AF68 01 3C 01 00     ld  bc,320-4
  279 D1:AF6C 09 -  -  -      add hl,bc
  280 D1:AF6D 4F -  -  -      ld  c,a
  281 D1:AF6E 0D -  -  -      dec c
  282 D1:AF6F 20 D0 -  -      jr  nz,printSmallNumPair_1stHalf
  283 D1:AF71 01 84 F8 FF     ld  bc,-(320*(1+5))+4
  284 D1:AF75 09 -  -  -      add hl,bc
  285 D1:AF76 C9 -  -  -      ret
  286 D1:AF77 -  -  -  -  
  287 D1:AF77 -  -  -  -  calculateScreenPtr:
  288 D1:AF77 -  -  -  -      ;xcoord: x * 8 
  289 D1:AF77 -  -  -  -      ;ycoord: 320 * 8 * y
  290 D1:AF77 -  -  -  -      ;coord: (8x)+320*8y -> 8(x+320y)
  291 D1:AF77 ED 5B F6 31 
              D0 -  -  -      ld  de,(xPos)
  292 D1:AF7C 6A -  -  -      ld  L,d     ;yPos
  293 D1:AF7D 26 A0 -  -      ld  h,160
  294 D1:AF7F ED 6C -  -      mlt hl
  295 D1:AF81 29 -  -  -      add hl,hl
  296 D1:AF82 16 01 -  -      ld  d,1
  297 D1:AF84 ED 5C -  -      mlt de      ;DE=E. Clears high bytes.
  298 D1:AF86 19 -  -  -      add hl,de
  299 D1:AF87 29 -  -  -      add hl,hl
  300 D1:AF88 29 -  -  -      add hl,hl
  301 D1:AF89 29 -  -  -      add hl,hl
  302 D1:AF8A ED 5B 00 34 
              D0 -  -  -      ld  de,(curScreenBuf)
  303 D1:AF8F 19 -  -  -      add hl,de
  304 D1:AF90 C9 -  -  -      ret
  305 D1:AF91 -  -  -  -  
  306 D1:AF91 -  -  -  -  
  307 D1:AF91 -  -  -  -  
  308 D1:AF91 -  -  -  -  
  309 D1:AF91 -  -  -  -  
  310 D1:AF91 -  -  -  -  
  311 D1:AF91 -  -  -  -  
  312 D1:AF91 -  -  -  -  
  313 D1:AF91 -  -  -  -  
  314 D1:AF91 -  -  -  -  ;-----------------------------------------------------------------------------
  315 D1:AF91 -  -  -  -  ; Data Section
  316 D1:AF91 -  -  -  -  
  317 D1:AF91 -  -  -  -  graphx_textdata		.EQU $-(8*' ')		;points to what would be start of ASCII
  318 D1:AF91 00 00 00 00 
              00 00 00 00 .db	$00,$00,$00,$00,$00,$00,$00,$00 ;
  319 D1:AF99 C0 C0 C0 C0 
              C0 00 C0 00 .db	$C0,$C0,$C0,$C0,$C0,$00,$C0,$00 ; !
  320 D1:AFA1 D8 D8 D8 00 
              00 00 00 00 .db	$D8,$D8,$D8,$00,$00,$00,$00,$00 ; "
  321 D1:AFA9 6C 6C FE 6C 
              FE 6C 6C 00 .db	$6C,$6C,$FE,$6C,$FE,$6C,$6C,$00 ; #
  322 D1:AFB1 18 7E C0 7C 
              06 FC 18 00 .db	$18,$7E,$C0,$7C,$06,$FC,$18,$00 ; $
  323 D1:AFB9 00 C6 CC 18 
              30 66 C6 00 .db	$00,$C6,$CC,$18,$30,$66,$C6,$00 ; %
  324 D1:AFC1 38 6C 38 76 
              DC CC 76 00 .db	$38,$6C,$38,$76,$DC,$CC,$76,$00 ; &
  325 D1:AFC9 30 30 60 00 
              00 00 00 00 .db	$30,$30,$60,$00,$00,$00,$00,$00 ; '
  326 D1:AFD1 30 60 C0 C0 
              C0 60 30 00 .db	$30,$60,$C0,$C0,$C0,$60,$30,$00 ; (
  327 D1:AFD9 C0 60 30 30 
              30 60 C0 00 .db	$C0,$60,$30,$30,$30,$60,$C0,$00 ; )
  328 D1:AFE1 00 66 3C FF 
              3C 66 00 00 .db	$00,$66,$3C,$FF,$3C,$66,$00,$00 ; *
  329 D1:AFE9 00 30 30 FC 
              FC 30 30 00 .db	$00,$30,$30,$FC,$FC,$30,$30,$00 ; +
  330 D1:AFF1 00 00 00 00 
              00 60 60 C0 .db	$00,$00,$00,$00,$00,$60,$60,$C0 ; ,
  331 D1:AFF9 00 00 00 FC 
              00 00 00 00 .db	$00,$00,$00,$FC,$00,$00,$00,$00 ; -
  332 D1:B001 00 00 00 00 
              00 C0 C0 00 .db	$00,$00,$00,$00,$00,$C0,$C0,$00 ; .
  333 D1:B009 06 0C 18 30 
              60 C0 80 00 .db	$06,$0C,$18,$30,$60,$C0,$80,$00 ; /
  334 D1:B011 7C CE DE F6 
              E6 C6 7C 00 .db	$7C,$CE,$DE,$F6,$E6,$C6,$7C,$00 ; 0
  335 D1:B019 30 70 30 30 
              30 30 FC 00 .db	$30,$70,$30,$30,$30,$30,$FC,$00 ; 1
  336 D1:B021 7C C6 06 7C 
              C0 C0 FE 00 .db	$7C,$C6,$06,$7C,$C0,$C0,$FE,$00 ; 2
  337 D1:B029 FC 06 06 3C 
              06 06 FC 00 .db	$FC,$06,$06,$3C,$06,$06,$FC,$00 ; 3
  338 D1:B031 0C CC CC CC 
              FE 0C 0C 00 .db	$0C,$CC,$CC,$CC,$FE,$0C,$0C,$00 ; 4
  339 D1:B039 FE C0 FC 06 
              06 C6 7C 00 .db	$FE,$C0,$FC,$06,$06,$C6,$7C,$00 ; 5
  340 D1:B041 7C C0 C0 FC 
              C6 C6 7C 00 .db	$7C,$C0,$C0,$FC,$C6,$C6,$7C,$00 ; 6
  341 D1:B049 FE 06 06 0C 
              18 30 30 00 .db	$FE,$06,$06,$0C,$18,$30,$30,$00 ; 7
  342 D1:B051 7C C6 C6 7C 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$7C,$C6,$C6,$7C,$00 ; 8
  343 D1:B059 7C C6 C6 7E 
              06 06 7C 00 .db	$7C,$C6,$C6,$7E,$06,$06,$7C,$00 ; 9
  344 D1:B061 00 C0 C0 00 
              00 C0 C0 00 .db	$00,$C0,$C0,$00,$00,$C0,$C0,$00 ; :
  345 D1:B069 00 60 60 00 
              00 60 60 C0 .db	$00,$60,$60,$00,$00,$60,$60,$C0 ; ;
  346 D1:B071 18 30 60 C0 
              60 30 18 00 .db	$18,$30,$60,$C0,$60,$30,$18,$00 ; <
  347 D1:B079 00 00 FC 00 
              FC 00 00 00 .db	$00,$00,$FC,$00,$FC,$00,$00,$00 ; =
  348 D1:B081 C0 60 30 18 
              30 60 C0 00 .db	$C0,$60,$30,$18,$30,$60,$C0,$00 ; >
  349 D1:B089 78 CC 18 30 
              30 00 30 00 .db	$78,$CC,$18,$30,$30,$00,$30,$00 ; ?
  350 D1:B091 7C C6 DE DE 
              DE C0 7E 00 .db	$7C,$C6,$DE,$DE,$DE,$C0,$7E,$00 ; @
  351 D1:B099 38 6C C6 C6 
              FE C6 C6 00 .db	$38,$6C,$C6,$C6,$FE,$C6,$C6,$00 ; A
  352 D1:B0A1 FC C6 C6 FC 
              C6 C6 FC 00 .db	$FC,$C6,$C6,$FC,$C6,$C6,$FC,$00 ; B
  353 D1:B0A9 7C C6 C0 C0 
              C0 C6 7C 00 .db	$7C,$C6,$C0,$C0,$C0,$C6,$7C,$00 ; C
  354 D1:B0B1 F8 CC C6 C6 
              C6 CC F8 00 .db	$F8,$CC,$C6,$C6,$C6,$CC,$F8,$00 ; D
  355 D1:B0B9 FE C0 C0 F8 
              C0 C0 FE 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$FE,$00 ; E
  356 D1:B0C1 FE C0 C0 F8 
              C0 C0 C0 00 .db	$FE,$C0,$C0,$F8,$C0,$C0,$C0,$00 ; F
  357 D1:B0C9 7C C6 C0 C0 
              CE C6 7C 00 .db	$7C,$C6,$C0,$C0,$CE,$C6,$7C,$00 ; G
  358 D1:B0D1 C6 C6 C6 FE 
              C6 C6 C6 00 .db	$C6,$C6,$C6,$FE,$C6,$C6,$C6,$00 ; H
  359 D1:B0D9 7E 18 18 18 
              18 18 7E 00 .db	$7E,$18,$18,$18,$18,$18,$7E,$00 ; I
  360 D1:B0E1 06 06 06 06 
              06 C6 7C 00 .db	$06,$06,$06,$06,$06,$C6,$7C,$00 ; J
  361 D1:B0E9 C6 CC D8 F0 
              D8 CC C6 00 .db	$C6,$CC,$D8,$F0,$D8,$CC,$C6,$00 ; K
  362 D1:B0F1 C0 C0 C0 C0 
              C0 C0 FE 00 .db	$C0,$C0,$C0,$C0,$C0,$C0,$FE,$00 ; L
  363 D1:B0F9 C6 EE FE FE 
              D6 C6 C6 00 .db	$C6,$EE,$FE,$FE,$D6,$C6,$C6,$00 ; M
  364 D1:B101 C6 E6 F6 DE 
              CE C6 C6 00 .db	$C6,$E6,$F6,$DE,$CE,$C6,$C6,$00 ; N
  365 D1:B109 7C C6 C6 C6 
              C6 C6 7C 00 .db	$7C,$C6,$C6,$C6,$C6,$C6,$7C,$00 ; O
  366 D1:B111 FC C6 C6 FC 
              C0 C0 C0 00 .db	$FC,$C6,$C6,$FC,$C0,$C0,$C0,$00 ; P
  367 D1:B119 7C C6 C6 C6 
              D6 DE 7C 06 .db	$7C,$C6,$C6,$C6,$D6,$DE,$7C,$06 ; Q
  368 D1:B121 FC C6 C6 FC 
              D8 CC C6 00 .db	$FC,$C6,$C6,$FC,$D8,$CC,$C6,$00 ; R
  369 D1:B129 7C C6 C0 7C 
              06 C6 7C 00 .db	$7C,$C6,$C0,$7C,$06,$C6,$7C,$00 ; S
  370 D1:B131 FF 18 18 18 
              18 18 18 00 .db	$FF,$18,$18,$18,$18,$18,$18,$00 ; T
  371 D1:B139 C6 C6 C6 C6 
              C6 C6 FE 00 .db	$C6,$C6,$C6,$C6,$C6,$C6,$FE,$00 ; U
  372 D1:B141 C6 C6 C6 C6 
              C6 7C 38 00 .db	$C6,$C6,$C6,$C6,$C6,$7C,$38,$00 ; V
  373 D1:B149 C6 C6 C6 C6 
              D6 FE 6C 00 .db	$C6,$C6,$C6,$C6,$D6,$FE,$6C,$00 ; W
  374 D1:B151 C6 C6 6C 38 
              6C C6 C6 00 .db	$C6,$C6,$6C,$38,$6C,$C6,$C6,$00 ; X
  375 D1:B159 C6 C6 C6 7C 
              18 30 E0 00 .db	$C6,$C6,$C6,$7C,$18,$30,$E0,$00 ; Y
  376 D1:B161 FE 06 0C 18 
              30 60 FE 00 .db	$FE,$06,$0C,$18,$30,$60,$FE,$00 ; Z
  377 D1:B169 F0 C0 C0 C0 
              C0 C0 F0 00 .db	$F0,$C0,$C0,$C0,$C0,$C0,$F0,$00 ; [
  378 D1:B171 C0 60 30 18 
              0C 06 02 00 .db	$C0,$60,$30,$18,$0C,$06,$02,$00 ; \
  379 D1:B179 F0 30 30 30 
              30 30 F0 00 .db	$F0,$30,$30,$30,$30,$30,$F0,$00 ; ]
  380 D1:B181 10 38 6C C6 
              00 00 00 00 .db	$10,$38,$6C,$C6,$00,$00,$00,$00 ; ^
  381 D1:B189 00 00 00 00 
              00 00 00 FF .db	$00,$00,$00,$00,$00,$00,$00,$FF ; _
  382 D1:B191 C0 C0 60 00 
              00 00 00 00 .db	$C0,$C0,$60,$00,$00,$00,$00,$00 ; `
  383 D1:B199 00 00 7C 06 
              7E C6 7E 00 .db	$00,$00,$7C,$06,$7E,$C6,$7E,$00 ; a
  384 D1:B1A1 C0 C0 C0 FC 
              C6 C6 FC 00 .db	$C0,$C0,$C0,$FC,$C6,$C6,$FC,$00 ; b
  385 D1:B1A9 00 00 7C C6 
              C0 C6 7C 00 .db	$00,$00,$7C,$C6,$C0,$C6,$7C,$00 ; c
  386 D1:B1B1 06 06 06 7E 
              C6 C6 7E 00 .db	$06,$06,$06,$7E,$C6,$C6,$7E,$00 ; d
  387 D1:B1B9 00 00 7C C6 
              FE C0 7C 00 .db	$00,$00,$7C,$C6,$FE,$C0,$7C,$00 ; e
  388 D1:B1C1 1C 36 30 78 
              30 30 78 00 .db	$1C,$36,$30,$78,$30,$30,$78,$00 ; f
  389 D1:B1C9 00 00 7E C6 
              C6 7E 06 FC .db	$00,$00,$7E,$C6,$C6,$7E,$06,$FC ; g
  390 D1:B1D1 C0 C0 FC C6 
              C6 C6 C6 00 .db	$C0,$C0,$FC,$C6,$C6,$C6,$C6,$00 ; h
  391 D1:B1D9 18 00 38 18 
              18 18 3C 00 .db	$18,$00,$38,$18,$18,$18,$3C,$00 ; i
  392 D1:B1E1 06 00 06 06 
              06 06 C6 7C .db	$06,$00,$06,$06,$06,$06,$C6,$7C ; j
  393 D1:B1E9 C0 C0 CC D8 
              F8 CC C6 00 .db	$C0,$C0,$CC,$D8,$F8,$CC,$C6,$00 ; k
  394 D1:B1F1 38 18 18 18 
              18 18 3C 00 .db	$38,$18,$18,$18,$18,$18,$3C,$00 ; l
  395 D1:B1F9 00 00 CC FE 
              FE D6 D6 00 .db	$00,$00,$CC,$FE,$FE,$D6,$D6,$00 ; m
  396 D1:B201 00 00 FC C6 
              C6 C6 C6 00 .db	$00,$00,$FC,$C6,$C6,$C6,$C6,$00 ; n
  397 D1:B209 00 00 7C C6 
              C6 C6 7C 00 .db	$00,$00,$7C,$C6,$C6,$C6,$7C,$00 ; o
  398 D1:B211 00 00 FC C6 
              C6 FC C0 C0 .db	$00,$00,$FC,$C6,$C6,$FC,$C0,$C0 ; p
  399 D1:B219 00 00 7E C6 
              C6 7E 06 06 .db	$00,$00,$7E,$C6,$C6,$7E,$06,$06 ; q
  400 D1:B221 00 00 FC C6 
              C0 C0 C0 00 .db	$00,$00,$FC,$C6,$C0,$C0,$C0,$00 ; r
  401 D1:B229 00 00 7E C0 
              7C 06 FC 00 .db	$00,$00,$7E,$C0,$7C,$06,$FC,$00 ; s
  402 D1:B231 30 30 FC 30 
              30 30 1C 00 .db	$30,$30,$FC,$30,$30,$30,$1C,$00 ; t
  403 D1:B239 00 00 C6 C6 
              C6 C6 7E 00 .db	$00,$00,$C6,$C6,$C6,$C6,$7E,$00 ; u
  404 D1:B241 00 00 C6 C6 
              C6 7C 38 00 .db	$00,$00,$C6,$C6,$C6,$7C,$38,$00 ; v
  405 D1:B249 00 00 C6 C6 
              D6 FE 6C 00 .db	$00,$00,$C6,$C6,$D6,$FE,$6C,$00 ; w
  406 D1:B251 00 00 C6 6C 
              38 6C C6 00 .db	$00,$00,$C6,$6C,$38,$6C,$C6,$00 ; x
  407 D1:B259 00 00 C6 C6 
              C6 7E 06 FC .db	$00,$00,$C6,$C6,$C6,$7E,$06,$FC ; y
  408 D1:B261 00 00 FE 0C 
              38 60 FE 00 .db	$00,$00,$FE,$0C,$38,$60,$FE,$00 ; z
  409 D1:B269 1C 30 30 E0 
              30 30 1C 00 .db	$1C,$30,$30,$E0,$30,$30,$1C,$00 ; {
  410 D1:B271 C0 C0 C0 00 
              C0 C0 C0 00 .db	$C0,$C0,$C0,$00,$C0,$C0,$C0,$00 ; |
  411 D1:B279 E0 30 30 1C 
              30 30 E0 00 .db	$E0,$30,$30,$1C,$30,$30,$E0,$00 ; }
  412 D1:B281 76 DC 00 00 
              00 00 00 00 .db	$76,$DC,$00,$00,$00,$00,$00,$00 ; ~
  413 D1:B289 00 10 38 6C 
              C6 C6 FE 00 .db	$00,$10,$38,$6C,$C6,$C6,$FE,$00 ; △
  414 D1:B291 -  -  -  -  
  415 D1:B291 -  -  -  -  ;Copied from the Escheron: Twilight over Ragnoth project
  416 D1:B291 -  -  -  -  ;whose format was copied from a (then-)authorized source
  417 D1:B291 -  -  -  -  ;for DoorsCS (I think? The one for the 83+) by "Kerm Martian".
  418 D1:B291 -  -  -  -  SmallHexFont:
  419 D1:B291 4E AA AE -  .db $4E,$AA,$AE				;zero
  420 D1:B294 44 C4 4E -  .db $44,$C4,$4E				;one
  421 D1:B297 4C 24 8E -  .db $4C,$24,$8E				;two
  422 D1:B29A 4C 24 2C -  .db $4C,$24,$2C				;three
  423 D1:B29D 48 AE 22 -  .db $48,$AE,$22				;four
  424 D1:B2A0 4E 8C 2C -  .db $4E,$8C,$2C				;five
  425 D1:B2A3 45 8E AE -  .db $45,$8E,$AE				;six
  426 D1:B2A6 4E 24 88 -  .db $4E,$24,$88				;seven
  427 D1:B2A9 4E AE AE -  .db $4E,$AE,$AE				;eight
  428 D1:B2AC 4E AE 2C -  .db $4E,$AE,$2C				;nine
  429 D1:B2AF 44 AE AA -  .db $44,$AE,$AA				;A
  430 D1:B2B2 4C AC AC -  .db $4C,$AC,$AC				;B
  431 D1:B2B5 46 88 86 -  .db $46,$88,$86				;C
  432 D1:B2B8 4C AA AC -  .db $4C,$AA,$AC				;D
  433 D1:B2BB 4E 8C 8E -  .db $4E,$8C,$8E				;E
  434 D1:B2BE 4E 8C 88 -  .db $4E,$8C,$88				;F
  435 D1:B2C1 -  -  -  -  
  436 D1:B2C1 -  -  -  -  
  437 D1:B2C1 -  -  -  -  
Listing for file "main.z80"
  621 D1:B2C1 -  -  -  -  #include "core.z80"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    1 D1:B2C1 -  -  -  -  #include "defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\defs.inc"
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
    2 D1:B2C1 -  -  -  -  
    3 D1:B2C1 -  -  -  -  ;TODO: DEFINE MEMORY ACCESS MACROS. ONE OR MORE FOR READ AND WRITE.
    4 D1:B2C1 -  -  -  -  ;FIGURE OUT HOW TO GET BOTH HIGH AND LOW BYTE OF ORIGINAL ADDRESS
    5 D1:B2C1 -  -  -  -  ;AND PERFORM ALTERNATE ACTIONS BASED ON WHAT HARDWARE WAS ACCESSED.
    6 D1:B2C1 -  -  -  -  ;NOTE: PATTERN SHOWS THAT D=MSB, C=LSB OF 6502 ADDRESS. USE THIS.
    7 D1:B2C1 -  -  -  -  ;
    8 D1:B2C1 -  -  -  -  ;THESE MACROS ARE PLACEHOLDERS. CHANGE THEM LATER ON TO REFLECT ACTUAL
    9 D1:B2C1 -  -  -  -  ;HARDWARE SHENANIGANS.
   10 D1:B2C1 -  -  -  -  ;
   11 D1:B2C1 -  -  -  -  ;NOTE: WRITE ACCESSES RELY ON KNOWING WHAT DATA TO WRITE. CAN'T STORE THAT IN A
   12 D1:B2C1 -  -  -  -  ;      SINCE WE NEED TO DO CONDITIONING. REGISTER B IS UNUSED SO LET'S USE THAT.
   13 D1:B2C1 -  -  -  -  ;
   14 D1:B2C1 -  -  -  -  #define READ_ACCESS ld a,(hl)
   15 D1:B2C1 -  -  -  -  #define WRITE_ACCESS ld (hl),b
   16 D1:B2C1 -  -  -  -  ;Later, put in actual test. Z if not triggered, NZ if triggered. This
   17 D1:B2C1 -  -  -  -  ;alters the behavior of the BRK instruction.
   18 D1:B2C1 -  -  -  -  #define WAS_NMI_TRIGGERED or  a
   19 D1:B2C1 -  -  -  -  
   20 D1:B2C1 -  -  -  -  #define OPRFLG_C res SF_CARRY,b \ jr nc,$+4 \ set SF_CARRY,b
   21 D1:B2C1 -  -  -  -  #define OPRFLG_V res SF_OVER,b \ jp po,$+5 \ set SF_OVER,b
   22 D1:B2C1 -  -  -  -  #define OPRFLG_Z res SF_ZERO,b \ jr nz,$+4 \ set SF_ZERO,b
   23 D1:B2C1 -  -  -  -  #define OPRFLG_N res SF_NEG,b \ jr nc,$+4 \ set SF_NEG,b
   24 D1:B2C1 -  -  -  -  
   25 D1:B2C1 -  -  -  -  #define FLAGS_ZN ld b,(ix+REGSR) \ add a,a \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   26 D1:B2C1 -  -  -  -  #define FLAGS_CZN ld b,(ix+REGSR) \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   27 D1:B2C1 -  -  -  -  #define FLAGS_VCZN ld b,(ix+REGSR) \ OPRFLG_V \ OPRFLG_C \ add a,a  \ OPRFLG_Z \ OPRFLG_N \ ld (ix+REGSR),b
   28 D1:B2C1 -  -  -  -  
   29 D1:B2C1 -  -  -  -  
   30 D1:B2C1 -  -  -  -  ;Modify later to include provisions for hardware i/o based on page
   31 D1:B2C1 -  -  -  -  #define HW_READ(src_reg) ld a,(src_reg)
   32 D1:B2C1 -  -  -  -  #define HW_WRITE(dst_reg) ld (dst_reg),a
   33 D1:B2C1 -  -  -  -  
   34 D1:B2C1 -  -  -  -  
   35 D1:B2C1 -  -  -  -  
   36 D1:B2C1 -  -  -  -  
   37 D1:B2C1 -  -  -  -  ;=============================================================================
   38 D1:B2C1 -  -  -  -  ;=============================================================================
   39 D1:B2C1 -  -  -  -  ;=============================================================================
   40 D1:B2C1 -  -  -  -  ;=============================================================================
   41 D1:B2C1 -  -  -  -  ;You should have set up the mappings already. This is because
   42 D1:B2C1 -  -  -  -  ;mappings are program-dependant. Only $0000-$3FFF will be mapped in here
   43 D1:B2C1 -  -  -  -  ;more or less because I don't expect anything else to map that.
   44 D1:B2C1 -  -  -  -  i6502Init:
   45 D1:B2C1 -  -  -  -      ;
   46 D1:B2C1 -  -  -  -      ; At this point, you may need to randomize 2048 bytes at main_ram
   47 D1:B2C1 -  -  -  -      ;
   48 D1:B2C1 21 00 38 D0     ld  hl,main_ram
   49 D1:B2C5 01 08 20 00     ld  bc,$002008
   50 D1:B2C9 1E 00 -  -      ld  e,$00
   51 D1:B2CB CD 17 B5 D1     call i6502_map_pages
   52 D1:B2CF 21 00 33 D0     ld  hl,scrap_mapping
   53 D1:B2D3 01 01 20 00     ld  bc,$002001
   54 D1:B2D7 1E 20 -  -      ld  e,$20
   55 D1:B2D9 CD 17 B5 D1     call i6502_map_pages
   56 D1:B2DD FD 21 02 00 
              00 -  -  -      ld  iy,2    ;8 cycle startup. Hooking into inst6502_jsr for init
   57 D1:B2E2 DD 21 80 32 
              D0 -  -  -      ld  ix,core_memory_ix
   58 D1:B2E7 ED 22 80 -      lea hl,ix-128
   59 D1:B2EA ED 12 81 -      lea de,ix-127
   60 D1:B2ED 01 FF 00 00     ld  bc,255
   61 D1:B2F1 36 00 -  -      ld  (hl),$00
   62 D1:B2F3 ED B0 -  -      ldir
   63 D1:B2F5 CD FE B4 D1     call i6502_load_instruction_set
   64 D1:B2F9 -  -  -  -      ;Note: SP may need initialization. So does SR for interrupts. Or somesuch.
   65 D1:B2F9 21 F8 47 D0     ld  hl,PAGETABLE+(255*BASETABLE_STRIDE)
   66 D1:B2FD ED 27 -  -      ld  hl,(hl)
   67 D1:B2FF 11 FC 00 00     ld  de,$0000FC
   68 D1:B303 19 -  -  -      add hl,de
   69 D1:B304 C3 3C CC D1     jp inst6502_jsr
   70 D1:B308 -  -  -  -  
   71 D1:B308 -  -  -  -  i6502FirstLoad:
   72 D1:B308 52 DD 17 05     ld.s de,(ix+REGPC)
   73 D1:B30C 7B -  -  -      ld  a,e
   74 D1:B30D 1E 08 -  -      ld  e,BASETABLE_STRIDE
   75 D1:B30F ED 5C -  -      mlt de
   76 D1:B311 21 00 40 D0     ld  hl,PAGETABLE
   77 D1:B315 19 -  -  -      add hl,de
   78 D1:B316 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   79 D1:B318 16 00 -  -      ld  d,0
   80 D1:B31A 5F -  -  -      ld  e,a
   81 D1:B31B 19 -  -  -      add hl,de       ;resolve final address
   82 D1:B31C 18 19 -  -      jr  i6502FinishLoad
   83 D1:B31E -  -  -  -  i6502NextLoad:
   84 D1:B31E 23 -  -  -      inc hl
   85 D1:B31F 1C -  -  -      inc e
   86 D1:B320 20 15 -  -      jr  nz,i6502FinishLoad
   87 D1:B322 DD 56 06 -      ld  d,(ix+REGPC+1)
   88 D1:B325 14 -  -  -      inc d
   89 D1:B326 52 DD 1F 05     ld.s (ix+REGPC),de
   90 D1:B32A 1E 08 -  -      ld  e,BASETABLE_STRIDE
   91 D1:B32C ED 5C -  -      mlt de
   92 D1:B32E 21 00 40 D0     ld  hl,PAGETABLE
   93 D1:B332 19 -  -  -      add hl,de
   94 D1:B333 ED 27 -  -      ld  hl,(hl)     ;get address to current page's base
   95 D1:B335 1E 00 -  -      ld  e,0         ;PCL known to be zero at this point.
   96 D1:B337 -  -  -  -  i6502FinishLoad:
   97 D1:B337 7E -  -  -      ld  a,(hl)
   98 D1:B338 23 -  -  -      inc hl
   99 D1:B339 1C -  -  -      inc e
  100 D1:B33A 20 15 -  -      jr  nz,i6502PrepNextPage
  101 D1:B33C DD 56 06 -      ld  d,(ix+REGPC+1)
  102 D1:B33F 14 -  -  -      inc d
  103 D1:B340 52 DD 1F 05     ld.s (ix+REGPC),de
  104 D1:B344 1E 08 -  -      ld  e,BASETABLE_STRIDE
  105 D1:B346 ED 5C -  -      mlt de
  106 D1:B348 21 00 40 D0     ld  hl,PAGETABLE
  107 D1:B34C 19 -  -  -      add hl,de
  108 D1:B34D ED 27 -  -      ld  hl,(hl)
  109 D1:B34F 1E 00 -  -      ld  e,0
  110 D1:B351 -  -  -  -  i6502PrepNextPage:
  111 D1:B351 E5 -  -  -      push hl
  112 D1:B352 67 -  -  -          ld  h,a
  113 D1:B353 2E 08 -  -          ld  l,BASETABLE_STRIDE
  114 D1:B355 ED 6C -  -          mlt hl
  115 D1:B357 01 04 40 D0         ld  bc,JUMPTABLE
  116 D1:B35B 09 -  -  -          add hl,bc
  117 D1:B35C ED 27 -  -          ld  hl,(hl)     ;jumptable
  118 D1:B35E E3 -  -  -          ex  (sp),hl     ;exch with exec addr, jumpto-via-ret
  119 D1:B35F C9 -  -  -      ret
  120 D1:B360 -  -  -  -  
  121 D1:B360 -  -  -  -  
  122 D1:B360 -  -  -  -  ;Instructions one byte wide returns to the main loop via:
  123 D1:B360 -  -  -  -  ;   JP i6502FinishLoad
  124 D1:B360 -  -  -  -  ;Those with parameters have HL at the address in quetion, and is expected to
  125 D1:B360 -  -  -  -  ;advance HL and E at the end of the instruction. You return to main loop via:
  126 D1:B360 -  -  -  -  ;   JP i6502NextLoad
  127 D1:B360 -  -  -  -  ;Unless you manually advance the pointer to the next instruction.
  128 D1:B360 -  -  -  -  ;You really shouldn't but if you must do that, then also do this:
  129 D1:B360 -  -  -  -  ;   JP i6502FinishLoad
  130 D1:B360 -  -  -  -  ;Remember that register E is very important; it tells you about page boundaries.
  131 D1:B360 -  -  -  -  
  132 D1:B360 -  -  -  -  
  133 D1:B360 -  -  -  -  ;-----------------------------------------------------------------------------    
  134 D1:B360 -  -  -  -  ;-----------------------------------------------------------------------------    
  135 D1:B360 -  -  -  -  
  136 D1:B360 -  -  -  -  ;    ***   *   *  *****  *      *****  **  *  ***** 
  137 D1:B360 -  -  -  -  ;   *   *  *   *    *    *        *    **  *  *     
  138 D1:B360 -  -  -  -  ;   *   *  *   *    *    *        *    * * *  ***   
  139 D1:B360 -  -  -  -  ;   *   *  *   *    *    *        *    *  **  *     
  140 D1:B360 -  -  -  -  ;    ***    ***     *    *****  *****  *  **  ***** 
  141 D1:B360 -  -  -  -  
  142 D1:B360 -  -  -  -  ;-----------------------------------------------------------------------------    
  143 D1:B360 -  -  -  -  ;-----------------------------------------------------------------------------    
  144 D1:B360 -  -  -  -  outline6502_imm:
  145 D1:B360 7E -  -  -      ld  a,(hl)  ;oper uses A
  146 D1:B361 -  -  -  -      ;oper
  147 D1:B361 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  148 D1:B374 ED 33 02 -      ADDCYC(2)
  149 D1:B377 C3 1E B3 D1     jp i6502NextLoad
  150 D1:B37B -  -  -  -  
  151 D1:B37B -  -  -  -  outline6502_abs:
  152 D1:B37B 4E -  -  -      ld  c,(hl)
  153 D1:B37C 23 -  -  -      inc hl
  154 D1:B37D 1C -  -  -      inc e
  155 D1:B37E 20 15 -  -      jr nz,+_
  156 D1:B380 DD 56 06 -      ld  d,(ix+REGPC+1)
  157 D1:B383 14 -  -  -      inc d
  158 D1:B384 52 DD 1F 05     ld.s (ix+REGPC),de
  159 D1:B388 1E 08 -  -      ld  e,BASETABLE_STRIDE
  160 D1:B38A ED 5C -  -      mlt de
  161 D1:B38C 21 00 40 D0     ld  hl,PAGETABLE
  162 D1:B390 19 -  -  -      add hl,de
  163 D1:B391 ED 27 -  -      ld  hl,(hl) ;
  164 D1:B393 1E 00 -  -      ld  e,0
  165 D1:B395 46 -  -  -  _:  ld  b,(hl)
  166 D1:B396 E5 -  -  -      push hl
  167 D1:B397 50 -  -  -          ld  d,b
  168 D1:B398 79 -  -  -          ld  a,c
  169 D1:B399 0E 08 -  -          ld  c,BASETABLE_STRIDE
  170 D1:B39B ED 4C -  -          mlt bc
  171 D1:B39D 21 00 40 D0         ld  hl,PAGETABLE
  172 D1:B3A1 09 -  -  -          add hl,bc
  173 D1:B3A2 ED 27 -  -          ld  hl,(hl)
  174 D1:B3A4 06 00 -  -          ld  b,0
  175 D1:B3A6 4F -  -  -          ld  c,a
  176 D1:B3A7 09 -  -  -          add hl,bc   ;full address
  177 D1:B3A8 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  178 D1:B3A8 7E -  -  -          ld  a,(hl)  ;oper uses A
  179 D1:B3A9 -  -  -  -          ;oper
  180 D1:B3A9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  181 D1:B3BC ED 33 03 -      ADDCYC(3)
  182 D1:B3BF E1 -  -  -      pop hl
  183 D1:B3C0 C3 1E B3 D1     jp i6502NextLoad
  184 D1:B3C4 -  -  -  -  
  185 D1:B3C4 -  -  -  -  outline6502_zeropage:
  186 D1:B3C4 7E -  -  -      ld  a,(hl)
  187 D1:B3C5 01 00 38 D0     ld  bc,ZEROPAGE
  188 D1:B3C9 81 -  -  -      add a,c
  189 D1:B3CA 4F -  -  -      ld  c,a
  190 D1:B3CB 0A -  -  -      ld  a,(bc)      ;oper uses A
  191 D1:B3CC -  -  -  -      ;HARDWARE ACCESS PAGING NOT ALLOWED. NO HARDWARE INTERACTS WITH PAGE ZERO.
  192 D1:B3CC -  -  -  -      ;oper
  193 D1:B3CC DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  194 D1:B3DF ED 33 03 -      ADDCYC(3)
  195 D1:B3E2 C3 1E B3 D1     jp i6502NextLoad
  196 D1:B3E6 -  -  -  -  
  197 D1:B3E6 -  -  -  -  
  198 D1:B3E6 -  -  -  -  ;Note: has same split start as abs
  199 D1:B3E6 -  -  -  -  outline6502_abs_idx_x:  ;INDEXED WITH X. INDEX WITH Y VARIATION EXISTS. CAREFUL.
  200 D1:B3E6 4E -  -  -      ld  c,(hl)
  201 D1:B3E7 23 -  -  -      inc hl
  202 D1:B3E8 1C -  -  -      inc e
  203 D1:B3E9 20 15 -  -      jr nz,+_
  204 D1:B3EB DD 56 06 -      ld  d,(ix+REGPC+1)
  205 D1:B3EE 14 -  -  -      inc d
  206 D1:B3EF 52 DD 1F 05     ld.s (ix+REGPC),de
  207 D1:B3F3 1E 08 -  -      ld  e,BASETABLE_STRIDE
  208 D1:B3F5 ED 5C -  -      mlt de
  209 D1:B3F7 21 00 40 D0     ld  hl,PAGETABLE
  210 D1:B3FB 19 -  -  -      add hl,de
  211 D1:B3FC ED 27 -  -      ld  hl,(hl) ;
  212 D1:B3FE 1E 00 -  -      ld  e,0
  213 D1:B400 46 -  -  -  _:  ld  b,(hl)
  214 D1:B401 E5 -  -  -      push hl
  215 D1:B402 50 -  -  -          ld  d,b
  216 D1:B403 79 -  -  -          ld  a,c
  217 D1:B404 0E 08 -  -          ld  c,BASETABLE_STRIDE
  218 D1:B406 ED 4C -  -          mlt bc
  219 D1:B408 21 00 40 D0         ld  hl,PAGETABLE
  220 D1:B40C 09 -  -  -          add hl,bc
  221 D1:B40D ED 27 -  -          ld  hl,(hl)
  222 D1:B40F 06 00 -  -          ld  b,0
  223 D1:B411 4F -  -  -          ld  c,a
  224 D1:B412 DD 7E 01 -          ld  a,(ix+REGX)        ;REPLACE WITH REGY WHEN INSTRUCTION CALLS FOR IT
  225 D1:B415 81 -  -  -          add a,c
  226 D1:B416 30 04 -  -          jr  nc,+_
  227 D1:B418 04 -  -  -          inc b
  228 D1:B419 14 -  -  -          inc d
  229 D1:B41A FD 23 -  -          ADDCYC(1)
  230 D1:B41C -  -  -  -  _:      ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  231 D1:B41C 09 -  -  -          add hl,bc   ;full address
  232 D1:B41D 7E -  -  -          ld  a,(hl)  ;oper uses A
  233 D1:B41E -  -  -  -          ;oper
  234 D1:B41E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  235 D1:B431 ED 33 04 -      ADDCYC(4)
  236 D1:B434 E1 -  -  -      pop hl
  237 D1:B435 C3 1E B3 D1     jp i6502NextLoad
  238 D1:B439 -  -  -  -  
  239 D1:B439 -  -  -  -  
  240 D1:B439 -  -  -  -  outline6502_zpx:
  241 D1:B439 7E -  -  -      ld  a,(hl)
  242 D1:B43A 01 00 38 D0     ld  bc,ZEROPAGE
  243 D1:B43E 81 -  -  -      add a,c
  244 D1:B43F DD 86 01 -      add a,(ix+REGX)
  245 D1:B442 4F -  -  -      ld  c,a
  246 D1:B443 0A -  -  -      ld  a,(bc)      ;oper uses A
  247 D1:B444 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  248 D1:B444 -  -  -  -      ;oper
  249 D1:B444 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  250 D1:B457 ED 33 04 -      ADDCYC(4)
  251 D1:B45A C3 1E B3 D1     jp i6502NextLoad
  252 D1:B45E -  -  -  -      
  253 D1:B45E -  -  -  -  outline6502_zpy:
  254 D1:B45E 7E -  -  -      ld  a,(hl)
  255 D1:B45F 01 00 38 D0     ld  bc,ZEROPAGE
  256 D1:B463 81 -  -  -      add a,c
  257 D1:B464 DD 86 02 -      add a,(ix+REGY)
  258 D1:B467 4F -  -  -      ld  c,a
  259 D1:B468 0A -  -  -      ld  a,(bc)      ;oper uses A
  260 D1:B469 -  -  -  -      ;HARDWARE PAGING NOT ALLOWED. HARDWARE DOES NOT INTERACT WITH PAGE ZERO
  261 D1:B469 -  -  -  -      ;oper
  262 D1:B469 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  263 D1:B47C ED 33 04 -      ADDCYC(4)
  264 D1:B47F C3 1E B3 D1     jp i6502NextLoad
  265 D1:B483 -  -  -  -  
  266 D1:B483 -  -  -  -  outline6502_preidx_indir:
  267 D1:B483 E5 -  -  -      push hl
  268 D1:B484 7E -  -  -          ld  a,(hl)
  269 D1:B485 21 00 38 D0         ld  hl,ZEROPAGE
  270 D1:B489 85 -  -  -          add a,L
  271 D1:B48A DD 86 01 -          add a,(ix+REGX)
  272 D1:B48D 6F -  -  -          ld  L,a
  273 D1:B48E 7E -  -  -          ld  a,(hl)
  274 D1:B48F 2C -  -  -          inc L
  275 D1:B490 56 -  -  -          ld  d,(hl)
  276 D1:B491 42 -  -  -          ld  b,d
  277 D1:B492 0E 08 -  -          ld  c,BASETABLE_STRIDE
  278 D1:B494 ED 4C -  -          mlt bc
  279 D1:B496 21 00 40 D0         ld  hl,PAGETABLE
  280 D1:B49A 09 -  -  -          add hl,bc
  281 D1:B49B ED 27 -  -          ld  hl,(hl)
  282 D1:B49D 06 00 -  -          ld  b,0
  283 D1:B49F 4F -  -  -          ld  c,a
  284 D1:B4A0 09 -  -  -          add hl,bc
  285 D1:B4A1 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  286 D1:B4A1 7E -  -  -          ld  a,(hl)  ;oper uses A.
  287 D1:B4A2 -  -  -  -          ;oper
  288 D1:B4A2 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  289 D1:B4B5 ED 33 06 -          ADDCYC(6)
  290 D1:B4B8 E1 -  -  -      pop hl
  291 D1:B4B9 C3 1E B3 D1     jp i6502NextLoad
  292 D1:B4BD -  -  -  -  
  293 D1:B4BD -  -  -  -  outline6502_postidx_indir:
  294 D1:B4BD E5 -  -  -      push hl
  295 D1:B4BE 7E -  -  -          ld  a,(hl)
  296 D1:B4BF 21 00 38 D0         ld  hl,ZEROPAGE
  297 D1:B4C3 85 -  -  -          add a,L
  298 D1:B4C4 6F -  -  -          ld  L,a
  299 D1:B4C5 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  300 D1:B4C6 2C -  -  -          inc L
  301 D1:B4C7 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  302 D1:B4CA 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  303 D1:B4CB 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  304 D1:B4CD FD 23 -  -          ADDCYC(1)
  305 D1:B4CF 24 -  -  -          inc h
  306 D1:B4D0 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  307 D1:B4D1 2E 08 -  -          ld  L,BASETABLE_STRIDE
  308 D1:B4D3 ED 6C -  -          mlt hl          ;23.
  309 D1:B4D5 01 00 40 D0         ld  bc,PAGETABLE
  310 D1:B4D9 09 -  -  -          add hl,bc
  311 D1:B4DA ED 27 -  -          ld  hl,(hl)     ;address get.
  312 D1:B4DC 01 00 00 00         ld  bc,0
  313 D1:B4E0 4F -  -  -          ld  c,a
  314 D1:B4E1 09 -  -  -          add hl,bc       ;Full address get.
  315 D1:B4E2 7E -  -  -          ld  a,(hl)
  316 D1:B4E3 -  -  -  -          ;INSERT HARDWARE ACCESS PAGING. REGISTER D CONTAINS ACCESS PAGE
  317 D1:B4E3 -  -  -  -          ;oper
  318 D1:B4E3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  319 D1:B4F6 ED 33 05 -          ADDCYC(5)
  320 D1:B4F9 E1 -  -  -      pop hl
  321 D1:B4FA C3 1E B3 D1     jp i6502NextLoad
  322 D1:B4FE -  -  -  -  
  323 D1:B4FE -  -  -  -  ;-----------------------------------------------------------------------------
  324 D1:B4FE -  -  -  -  ;-----------------------------------------------------------------------------
  325 D1:B4FE -  -  -  -  ;-----------------------------------------------------------------------------
  326 D1:B4FE -  -  -  -  
  327 D1:B4FE -  -  -  -  ;  ***  *   * ****  ****   ***  *   * ***** ***** **  * *****  ***  
  328 D1:B4FE -  -  -  -  ; *     *   * *   * *   * *   * *   *   *     *   **  * *     *     
  329 D1:B4FE -  -  -  -  ;  ***  *   * ****  ****  *   * *   *   *     *   * * * ***    ***  
  330 D1:B4FE -  -  -  -  ;     * *   * *   * *   * *   * *   *   *     *   *  ** *         * 
  331 D1:B4FE -  -  -  -  ;  ***   ***  ****  *   *  ***   ***    *   ***** *  ** *****  ***  
  332 D1:B4FE -  -  -  -  
  333 D1:B4FE -  -  -  -  ;-----------------------------------------------------------------------------
  334 D1:B4FE -  -  -  -  
  335 D1:B4FE -  -  -  -  i6502_load_instruction_set:
  336 D1:B4FE DD 21 04 40 
              D0 -  -  -      ld  ix,JUMPTABLE
  337 D1:B503 21 D2 CC D1     ld  hl,inst6502_instruction_set
  338 D1:B507 06 00 -  -      ld  b,0
  339 D1:B509 ED 17 -  -  _:  ld  de,(hl)
  340 D1:B50B DD 1F 00 -      ld  (ix+0),de
  341 D1:B50E 23 -  -  -      inc hl
  342 D1:B50F 23 -  -  -      inc hl
  343 D1:B510 23 -  -  -      inc hl
  344 D1:B511 ED 32 08 -      lea ix,ix+BASETABLE_STRIDE
  345 D1:B514 10 F3 -  -      djnz -_
  346 D1:B516 C9 -  -  -      ret
  347 D1:B517 -  -  -  -  
  348 D1:B517 -  -  -  -  ;HL=Base_ez80_address, C=Numpages_in_map, B=numpages_in_space, E=starting_page
  349 D1:B517 -  -  -  -  ;Example: To map and mirror 2KB RAM at $D03800 inside first 8KB of 6502 space
  350 D1:B517 -  -  -  -  ;HL=$D03800, C=$08, B=$20, E=$00
  351 D1:B517 -  -  -  -  ;Note: B should be a power of two and evenly divisible by C.
  352 D1:B517 -  -  -  -  i6502_map_pages:
  353 D1:B517 16 08 -  -      ld  d,BASETABLE_STRIDE
  354 D1:B519 ED 5C -  -      mlt de
  355 D1:B51B DD 21 00 40 
              D0 -  -  -      ld  ix,PAGETABLE
  356 D1:B520 DD 19 -  -      add ix,de
  357 D1:B522 78 -  -  -      ld  a,b     ;A = main counter for total number of pages in mapping space
  358 D1:B523 11 00 01 00     ld  de,256
  359 D1:B527 E5 -  -  -      push hl
  360 D1:B528 FD E1 -  -      pop iy
  361 D1:B52A 41 -  -  -  _:  ld  b,c     ;looping for number of pages to map
  362 D1:B52B DD 2F 00 -  _:  ld  (ix+0),hl
  363 D1:B52E 19 -  -  -      add hl,de                   ;next page z80
  364 D1:B52F ED 32 08 -      lea ix,ix+BASETABLE_STRIDE  ;next page entry
  365 D1:B532 3D -  -  -      dec a
  366 D1:B533 C8 -  -  -      ret z
  367 D1:B534 10 F5 -  -      djnz -_
  368 D1:B536 ED 23 00 -      lea hl,iy+0     ;start z80 pages over again for mirroring
  369 D1:B539 18 EF -  -      jr --_
  370 D1:B53B -  -  -  -  
  371 D1:B53B -  -  -  -  
  372 D1:B53B -  -  -  -  subroutine6502_abs_split_start:
  373 D1:B53B 4E -  -  -      ld  c,(hl)
  374 D1:B53C 23 -  -  -      inc hl
  375 D1:B53D 1C -  -  -      inc e
  376 D1:B53E 20 15 -  -      jr nz,+_
  377 D1:B540 DD 56 06 -      ld  d,(ix+REGPC+1)
  378 D1:B543 14 -  -  -      inc d
  379 D1:B544 52 DD 1F 05     ld.s (ix+REGPC),de
  380 D1:B548 1E 08 -  -      ld  e,BASETABLE_STRIDE
  381 D1:B54A ED 5C -  -      mlt de
  382 D1:B54C 21 00 40 D0     ld  hl,PAGETABLE
  383 D1:B550 19 -  -  -      add hl,de
  384 D1:B551 ED 27 -  -      ld  hl,(hl) ;
  385 D1:B553 1E 00 -  -      ld  e,0
  386 D1:B555 46 -  -  -  _:  ld  b,(hl)
  387 D1:B556 C9 -  -  -      ret
  388 D1:B557 -  -  -  -  
  389 D1:B557 -  -  -  -  subroutine6502_adc_combined_end:
  390 D1:B557 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  391 D1:B55A 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  392 D1:B55B DD 7E 00 -      ld  a,(ix+REGA)
  393 D1:B55E 89 -  -  -      adc a,c
  394 D1:B55F DD 77 00 -      ld  (ix+REGA),a
  395 D1:B562 DD 46 04 CB 
              B0 E2 6C B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  396 D1:B583 C3 1E B3 D1     jp i6502NextLoad
  397 D1:B587 -  -  -  -  
  398 D1:B587 -  -  -  -  subroutine6502_sbc_combined_end:
  399 D1:B587 DD 7E 04 -      ld  a,(ix+REGSR)   ;flags register
  400 D1:B58A 1F -  -  -      rra             ;gets b0 (6502 carry) into (Z80) carry flag.
  401 D1:B58B DD 7E 00 -      ld  a,(ix+REGA)
  402 D1:B58E 3F -  -  -      ccf
  403 D1:B58F 99 -  -  -      sbc a,c
  404 D1:B590 3F -  -  -      ccf
  405 D1:B591 DD 77 00 -      ld  (ix+REGA),a
  406 D1:B594 DD 46 04 CB 
              B0 E2 9E B5 
              D1 CB F0 -      FLAGS_VCZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB 80 30 02 
              CB C0 87 CB 
              88 20 02 CB 
              C8 CB B8 30 
              02 CB F8 DD 
              70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  407 D1:B5B5 C3 1E B3 D1     jp i6502NextLoad
  408 D1:B5B9 -  -  -  -  
  409 D1:B5B9 -  -  -  -  subroutine6502_cmp_combined_end:
  410 D1:B5B9 DD 7E 00 -      ld  a,(ix+REGA)
  411 D1:B5BC B8 -  -  -      cp  b
  412 D1:B5BD DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  413 D1:B5D6 C3 1E B3 D1     jp i6502NextLoad
  414 D1:B5DA -  -  -  -  
  415 D1:B5DA -  -  -  -  subroutine6502_take_branch:
  416 D1:B5DA FD 23 -  -      ADDCYC(1)
  417 D1:B5DC 7E -  -  -      ld  a,(hl)  ;offset byte
  418 D1:B5DD 6F -  -  -      ld  L,a
  419 D1:B5DE 87 -  -  -      add a,a
  420 D1:B5DF 9F -  -  -      sbc a,a
  421 D1:B5E0 67 -  -  -      ld  H,a     ;sign-extending offset byte
  422 D1:B5E1 DD 56 06 -      ld  d,(ix+REGPC+1)
  423 D1:B5E4 13 -  -  -      inc de
  424 D1:B5E5 52 19 -  -      add.s hl,de
  425 D1:B5E7 7C -  -  -      ld  a,h
  426 D1:B5E8 BA -  -  -      cp  d       ;is high byte the same?
  427 D1:B5E9 28 02 -  -      jr  z,+_    ;if so, do not add another clock
  428 D1:B5EB FD 23 -  -      ADDCYC(1)
  429 D1:B5ED 52 DD 2F 05 _:  ld.s (ix+REGPC),hl
  430 D1:B5F1 C3 08 B3 D1     jp  i6502FirstLoad
  431 D1:B5F5 -  -  -  -  
  432 D1:B5F5 -  -  -  -  
  433 D1:B5F5 -  -  -  -  ;-----------------------------------------------------------------------------
  434 D1:B5F5 -  -  -  -  
  435 D1:B5F5 -  -  -  -  ; *** **  *  *** ***** ***  *   *  *** ***** *** ***  **  *     ***  ***** *****                                                
  436 D1:B5F5 -  -  -  -  ;  *  **  * *      *   *  * *   * *      *    * *   * **  *    *     *       *                   
  437 D1:B5F5 -  -  -  -  ;  *  * * *  ***   *   ***  *   * *      *    * *   * * * *     ***  ***     *                          
  438 D1:B5F5 -  -  -  -  ;  *  *  **     *  *   *  * *   * *      *    * *   * *  **        * *       *                   
  439 D1:B5F5 -  -  -  -  ; *** *  **  ***   *   *  *  ***   ***   *   *** ***  *  **     ***  *****   *                                 
  440 D1:B5F5 -  -  -  -  
  441 D1:B5F5 -  -  -  -  ;-----------------------------------------------------------------------------
  442 D1:B5F5 -  -  -  -  
  443 D1:B5F5 -  -  -  -  ;-----------------------------------------------------------------------------
  444 D1:B5F5 -  -  -  -  ;-----------------------------------------------------------------------------
  445 D1:B5F5 -  -  -  -  ;-----------------------------------------------------------------------------
  446 D1:B5F5 -  -  -  -  ;Instructions by type: Transfer Instructions
  447 D1:B5F5 -  -  -  -  ;LDA - Load Accumulator with Memory
  448 D1:B5F5 -  -  -  -  ;    M -> A
  449 D1:B5F5 -  -  -  -  ;    N	Z	C	I	D	V
  450 D1:B5F5 -  -  -  -  ;    +	+	-	-	-	-
  451 D1:B5F5 -  -  -  -  
  452 D1:B5F5 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
  453 D1:B5F5 -  -  -  -  ;immediate	LDA #oper	A9	2	2
  454 D1:B5F5 -  -  -  -  inst6502_lda_imm:
  455 D1:B5F5 7E -  -  -      ld  a,(hl)
  456 D1:B5F6 DD 77 00 -      ld  (ix+REGA),a
  457 D1:B5F9 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  458 D1:B60C ED 33 02 -      ADDCYC(2)
  459 D1:B60F C3 1E B3 D1     jp i6502NextLoad
  460 D1:B613 -  -  -  -  
  461 D1:B613 -  -  -  -  ;zeropage	LDA oper	A5	2	3
  462 D1:B613 -  -  -  -  inst6502_lda_zp:
  463 D1:B613 7E -  -  -      ld  a,(hl)
  464 D1:B614 01 00 38 D0     ld  bc,ZEROPAGE
  465 D1:B618 81 -  -  -      add a,c
  466 D1:B619 4F -  -  -      ld  c,a
  467 D1:B61A 0A -  -  -      ld  a,(bc)
  468 D1:B61B DD 77 00 -      ld  (ix+REGA),a
  469 D1:B61E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  470 D1:B631 ED 33 03 -      ADDCYC(3)
  471 D1:B634 C3 1E B3 D1     jp i6502NextLoad
  472 D1:B638 -  -  -  -  
  473 D1:B638 -  -  -  -  ;zeropage,X	LDA oper,X	B5	2	4 
  474 D1:B638 -  -  -  -  inst6502_lda_zpx:
  475 D1:B638 7E -  -  -      ld  a,(hl)
  476 D1:B639 01 00 38 D0     ld  bc,ZEROPAGE
  477 D1:B63D 81 -  -  -      add a,c
  478 D1:B63E DD 86 01 -      add a,(ix+REGX)
  479 D1:B641 4F -  -  -      ld  c,a
  480 D1:B642 0A -  -  -      ld  a,(bc)
  481 D1:B643 DD 77 00 -      ld  (ix+REGA),a
  482 D1:B646 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  483 D1:B659 ED 33 04 -      ADDCYC(4)
  484 D1:B65C C3 1E B3 D1     jp i6502NextLoad
  485 D1:B660 -  -  -  -  
  486 D1:B660 -  -  -  -  ;absolute	LDA oper	AD	3	4
  487 D1:B660 -  -  -  -  inst6502_lda_abs:
  488 D1:B660 CD 3B B5 D1     call subroutine6502_abs_split_start
  489 D1:B664 E5 -  -  -      push hl
  490 D1:B665 50 -  -  -          ld  d,b
  491 D1:B666 79 -  -  -          ld  a,c
  492 D1:B667 0E 08 -  -          ld  c,BASETABLE_STRIDE
  493 D1:B669 ED 4C -  -          mlt bc
  494 D1:B66B 21 00 40 D0         ld  hl,PAGETABLE
  495 D1:B66F 09 -  -  -          add hl,bc
  496 D1:B670 ED 27 -  -          ld  hl,(hl)
  497 D1:B672 06 00 -  -          ld  b,0
  498 D1:B674 4F -  -  -          ld  c,a
  499 D1:B675 09 -  -  -          add hl,bc   ;full address
  500 D1:B676 7E -  -  -          READ_ACCESS
  501 D1:B677 DD 77 00 -          ld (ix+REGA),a
  502 D1:B67A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  503 D1:B68D ED 33 04 -          ADDCYC(4)
  504 D1:B690 E1 -  -  -      pop hl
  505 D1:B691 C3 1E B3 D1     jp i6502NextLoad
  506 D1:B695 -  -  -  -  
  507 D1:B695 -  -  -  -  ;absolute,X	LDA oper,X	BD	3	4* 
  508 D1:B695 -  -  -  -  inst6502_lda_absx:
  509 D1:B695 CD 3B B5 D1     call subroutine6502_abs_split_start
  510 D1:B699 E5 -  -  -      push hl
  511 D1:B69A 50 -  -  -          ld  d,b
  512 D1:B69B 79 -  -  -          ld  a,c
  513 D1:B69C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  514 D1:B69E ED 4C -  -          mlt bc
  515 D1:B6A0 21 00 40 D0         ld  hl,PAGETABLE
  516 D1:B6A4 09 -  -  -          add hl,bc
  517 D1:B6A5 ED 27 -  -          ld  hl,(hl)
  518 D1:B6A7 06 00 -  -          ld  b,0
  519 D1:B6A9 DD 86 01 -          add a,(ix+REGX)
  520 D1:B6AC 4F -  -  -          ld  c,a
  521 D1:B6AD 30 04 -  -          jr  nc,+_
  522 D1:B6AF FD 23 -  -          ADDCYC(1)
  523 D1:B6B1 04 -  -  -          inc b
  524 D1:B6B2 14 -  -  -          inc d
  525 D1:B6B3 09 -  -  -  _:      add hl,bc   ;full address
  526 D1:B6B4 7E -  -  -          READ_ACCESS
  527 D1:B6B5 DD 77 00 -          ld (ix+REGA),a
  528 D1:B6B8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  529 D1:B6CB ED 33 04 -          ADDCYC(4)
  530 D1:B6CE E1 -  -  -      pop hl
  531 D1:B6CF C3 1E B3 D1     jp i6502NextLoad
  532 D1:B6D3 -  -  -  -  
  533 D1:B6D3 -  -  -  -  ;absolute,Y	LDA oper,Y	B9	3	4* 
  534 D1:B6D3 -  -  -  -  inst6502_lda_absy:
  535 D1:B6D3 CD 3B B5 D1     call subroutine6502_abs_split_start
  536 D1:B6D7 E5 -  -  -      push hl
  537 D1:B6D8 50 -  -  -          ld  d,b
  538 D1:B6D9 79 -  -  -          ld  a,c
  539 D1:B6DA 0E 08 -  -          ld  c,BASETABLE_STRIDE
  540 D1:B6DC ED 4C -  -          mlt bc
  541 D1:B6DE 21 00 40 D0         ld  hl,PAGETABLE
  542 D1:B6E2 09 -  -  -          add hl,bc
  543 D1:B6E3 ED 27 -  -          ld  hl,(hl)
  544 D1:B6E5 06 00 -  -          ld  b,0
  545 D1:B6E7 DD 86 02 -          add a,(ix+REGY)
  546 D1:B6EA 4F -  -  -          ld  c,a
  547 D1:B6EB 30 04 -  -          jr  nc,+_
  548 D1:B6ED FD 23 -  -          ADDCYC(1)
  549 D1:B6EF 04 -  -  -          inc b
  550 D1:B6F0 14 -  -  -          inc d
  551 D1:B6F1 09 -  -  -  _:      add hl,bc   ;full address
  552 D1:B6F2 7E -  -  -          READ_ACCESS
  553 D1:B6F3 DD 77 00 -          ld (ix+REGA),a
  554 D1:B6F6 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  555 D1:B709 ED 33 04 -          ADDCYC(4)
  556 D1:B70C E1 -  -  -      pop hl
  557 D1:B70D C3 1E B3 D1     jp i6502NextLoad
  558 D1:B711 -  -  -  -  
  559 D1:B711 -  -  -  -  ;(indirect,X)	LDA (oper,X)	A1	2	6
  560 D1:B711 -  -  -  -  inst6502_lda_indx:
  561 D1:B711 E5 -  -  -      push hl
  562 D1:B712 7E -  -  -          ld  a,(hl)
  563 D1:B713 21 00 38 D0         ld  hl,ZEROPAGE
  564 D1:B717 85 -  -  -          add a,L
  565 D1:B718 DD 86 01 -          add a,(ix+REGX)
  566 D1:B71B 6F -  -  -          ld  L,a
  567 D1:B71C 7E -  -  -          ld  a,(hl)
  568 D1:B71D 2C -  -  -          inc L
  569 D1:B71E 56 -  -  -          ld  d,(hl)
  570 D1:B71F 42 -  -  -          ld  b,d
  571 D1:B720 0E 08 -  -          ld  c,BASETABLE_STRIDE
  572 D1:B722 ED 4C -  -          mlt bc
  573 D1:B724 21 00 40 D0         ld  hl,PAGETABLE
  574 D1:B728 09 -  -  -          add hl,bc
  575 D1:B729 ED 27 -  -          ld  hl,(hl)
  576 D1:B72B 06 00 -  -          ld  b,0
  577 D1:B72D 4F -  -  -          ld  c,a
  578 D1:B72E 09 -  -  -          add hl,bc
  579 D1:B72F 7E -  -  -          READ_ACCESS
  580 D1:B730 DD 77 00 -          ld (ix+REGA),a
  581 D1:B733 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  582 D1:B746 ED 33 06 -          ADDCYC(6)
  583 D1:B749 E1 -  -  -      pop hl
  584 D1:B74A C3 1E B3 D1     jp i6502NextLoad
  585 D1:B74E -  -  -  -  
  586 D1:B74E -  -  -  -  ;(indirect),Y	LDA (oper),Y	B1	2	5*
  587 D1:B74E -  -  -  -  inst6502_lda_indy:
  588 D1:B74E E5 -  -  -      push hl
  589 D1:B74F 7E -  -  -          ld  a,(hl)
  590 D1:B750 21 00 38 D0         ld  hl,ZEROPAGE
  591 D1:B754 85 -  -  -          add a,L
  592 D1:B755 6F -  -  -          ld  L,a
  593 D1:B756 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  594 D1:B757 2C -  -  -          inc L
  595 D1:B758 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  596 D1:B75B 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  597 D1:B75C 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  598 D1:B75E FD 23 -  -          ADDCYC(1)
  599 D1:B760 24 -  -  -          inc h
  600 D1:B761 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  601 D1:B762 2E 08 -  -          ld  L,BASETABLE_STRIDE
  602 D1:B764 ED 6C -  -          mlt hl          ;23.
  603 D1:B766 01 00 40 D0         ld  bc,PAGETABLE
  604 D1:B76A 09 -  -  -          add hl,bc
  605 D1:B76B ED 27 -  -          ld  hl,(hl)     ;address get.
  606 D1:B76D 01 00 00 00         ld  bc,0
  607 D1:B771 4F -  -  -          ld  c,a
  608 D1:B772 09 -  -  -          add hl,bc       ;Full address get.
  609 D1:B773 7E -  -  -          READ_ACCESS
  610 D1:B774 DD 77 00 -          ld  (ix+REGA),a
  611 D1:B777 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  612 D1:B78A ED 33 05 -          ADDCYC(5)
  613 D1:B78D E1 -  -  -      pop hl
  614 D1:B78E C3 1E B3 D1     jp i6502NextLoad
  615 D1:B792 -  -  -  -  
  616 D1:B792 -  -  -  -  ;-----------------------------------------------------------------------------
  617 D1:B792 -  -  -  -  ;LDX - Load Index X with Memory
  618 D1:B792 -  -  -  -  ;    M -> X
  619 D1:B792 -  -  -  -  ;    N	Z	C	I	D	V
  620 D1:B792 -  -  -  -  ;    +	+	-	-	-	-
  621 D1:B792 -  -  -  -  
  622 D1:B792 -  -  -  -  ;immediate	LDX #oper	A2	2	2  
  623 D1:B792 -  -  -  -  inst6502_ldx_imm:
  624 D1:B792 7E -  -  -      ld  a,(hl)
  625 D1:B793 DD 77 01 -      ld  (ix+REGX),a
  626 D1:B796 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  627 D1:B7A9 ED 33 02 -      ADDCYC(2)
  628 D1:B7AC C3 1E B3 D1     jp i6502NextLoad
  629 D1:B7B0 -  -  -  -  
  630 D1:B7B0 -  -  -  -  ;zeropage	LDX oper	A6	2	3 
  631 D1:B7B0 -  -  -  -  inst6502_ldx_zp:
  632 D1:B7B0 7E -  -  -      ld  a,(hl)
  633 D1:B7B1 01 00 38 D0     ld  bc,ZEROPAGE
  634 D1:B7B5 81 -  -  -      add a,c
  635 D1:B7B6 4F -  -  -      ld  c,a
  636 D1:B7B7 0A -  -  -      ld  a,(bc)
  637 D1:B7B8 DD 77 01 -      ld  (ix+REGX),a
  638 D1:B7BB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  639 D1:B7CE ED 33 03 -      ADDCYC(3)
  640 D1:B7D1 C3 1E B3 D1     jp i6502NextLoad
  641 D1:B7D5 -  -  -  -  
  642 D1:B7D5 -  -  -  -  ;zeropage,Y	LDX oper,Y	B6	2	4  
  643 D1:B7D5 -  -  -  -  inst6502_ldx_zpy:
  644 D1:B7D5 7E -  -  -      ld  a,(hl)
  645 D1:B7D6 01 00 38 D0     ld  bc,ZEROPAGE
  646 D1:B7DA 81 -  -  -      add a,c
  647 D1:B7DB DD 86 02 -      add a,(ix+REGY)
  648 D1:B7DE 4F -  -  -      ld  c,a
  649 D1:B7DF 0A -  -  -      ld  a,(bc)
  650 D1:B7E0 DD 77 01 -      ld  (ix+REGX),a
  651 D1:B7E3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  652 D1:B7F6 ED 33 04 -      ADDCYC(4)
  653 D1:B7F9 C3 1E B3 D1     jp i6502NextLoad
  654 D1:B7FD -  -  -  -  
  655 D1:B7FD -  -  -  -  ;absolute	LDX oper	AE	3	4  
  656 D1:B7FD -  -  -  -  inst6502_ldx_abs:
  657 D1:B7FD CD 3B B5 D1     call subroutine6502_abs_split_start
  658 D1:B801 E5 -  -  -      push hl
  659 D1:B802 50 -  -  -          ld  d,b
  660 D1:B803 79 -  -  -          ld  a,c
  661 D1:B804 0E 08 -  -          ld  c,BASETABLE_STRIDE
  662 D1:B806 ED 4C -  -          mlt bc
  663 D1:B808 21 00 40 D0         ld  hl,PAGETABLE
  664 D1:B80C 09 -  -  -          add hl,bc
  665 D1:B80D ED 27 -  -          ld  hl,(hl)
  666 D1:B80F 06 00 -  -          ld  b,0
  667 D1:B811 4F -  -  -          ld  c,a
  668 D1:B812 09 -  -  -          add hl,bc   ;full address
  669 D1:B813 7E -  -  -          READ_ACCESS
  670 D1:B814 DD 77 01 -          ld (ix+REGX),a
  671 D1:B817 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  672 D1:B82A ED 33 04 -          ADDCYC(4)
  673 D1:B82D E1 -  -  -      pop hl
  674 D1:B82E C3 1E B3 D1     jp i6502NextLoad
  675 D1:B832 -  -  -  -  
  676 D1:B832 -  -  -  -  ;absolute,Y	LDX oper,Y	BE	3	4* 
  677 D1:B832 -  -  -  -  inst6502_ldx_absy:
  678 D1:B832 CD 3B B5 D1     call subroutine6502_abs_split_start
  679 D1:B836 E5 -  -  -      push hl
  680 D1:B837 50 -  -  -          ld  d,b
  681 D1:B838 79 -  -  -          ld  a,c
  682 D1:B839 0E 08 -  -          ld  c,BASETABLE_STRIDE
  683 D1:B83B ED 4C -  -          mlt bc
  684 D1:B83D 21 00 40 D0         ld  hl,PAGETABLE
  685 D1:B841 09 -  -  -          add hl,bc
  686 D1:B842 ED 27 -  -          ld  hl,(hl)
  687 D1:B844 06 00 -  -          ld  b,0
  688 D1:B846 DD 86 02 -          add a,(ix+REGY)
  689 D1:B849 4F -  -  -          ld  c,a
  690 D1:B84A 30 04 -  -          jr  nc,+_
  691 D1:B84C FD 23 -  -          ADDCYC(1)
  692 D1:B84E 04 -  -  -          inc b
  693 D1:B84F 14 -  -  -          inc d
  694 D1:B850 09 -  -  -  _:      add hl,bc   ;full address
  695 D1:B851 7E -  -  -          READ_ACCESS
  696 D1:B852 DD 77 01 -          ld (ix+REGX),a
  697 D1:B855 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  698 D1:B868 ED 33 04 -          ADDCYC(4)
  699 D1:B86B E1 -  -  -      pop hl
  700 D1:B86C C3 1E B3 D1     jp i6502NextLoad
  701 D1:B870 -  -  -  -  
  702 D1:B870 -  -  -  -  ;-----------------------------------------------------------------------------
  703 D1:B870 -  -  -  -  ;LDY -  Load Index Y with Memory
  704 D1:B870 -  -  -  -  ;    M -> Y
  705 D1:B870 -  -  -  -  ;    N	Z	C	I	D	V
  706 D1:B870 -  -  -  -  ;    +	+	-	-	-	-
  707 D1:B870 -  -  -  -  
  708 D1:B870 -  -  -  -  ;immediate	LDY #oper	A0	2	2  
  709 D1:B870 -  -  -  -  inst6502_ldy_imm:
  710 D1:B870 7E -  -  -      ld  a,(hl)
  711 D1:B871 DD 77 02 -      ld  (ix+REGY),a
  712 D1:B874 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  713 D1:B887 ED 33 02 -      ADDCYC(2)
  714 D1:B88A C3 1E B3 D1     jp i6502NextLoad
  715 D1:B88E -  -  -  -  
  716 D1:B88E -  -  -  -  ;zeropage	LDY oper	A4	2	3  
  717 D1:B88E -  -  -  -  inst6502_ldy_zp:
  718 D1:B88E 7E -  -  -      ld  a,(hl)
  719 D1:B88F 01 00 38 D0     ld  bc,ZEROPAGE
  720 D1:B893 81 -  -  -      add a,c
  721 D1:B894 4F -  -  -      ld  c,a
  722 D1:B895 0A -  -  -      ld  a,(bc)
  723 D1:B896 DD 77 02 -      ld  (ix+REGY),a
  724 D1:B899 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  725 D1:B8AC ED 33 03 -      ADDCYC(3)
  726 D1:B8AF C3 1E B3 D1     jp i6502NextLoad
  727 D1:B8B3 -  -  -  -  
  728 D1:B8B3 -  -  -  -  ;zeropage,X	LDY oper,X	B4	2	4  
  729 D1:B8B3 -  -  -  -  inst6502_ldy_zpx:
  730 D1:B8B3 7E -  -  -      ld  a,(hl)
  731 D1:B8B4 01 00 38 D0     ld  bc,ZEROPAGE
  732 D1:B8B8 81 -  -  -      add a,c
  733 D1:B8B9 DD 86 01 -      add a,(ix+REGX)
  734 D1:B8BC 4F -  -  -      ld  c,a
  735 D1:B8BD 0A -  -  -      ld  a,(bc)
  736 D1:B8BE DD 77 02 -      ld  (ix+REGY),a
  737 D1:B8C1 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  738 D1:B8D4 ED 33 04 -      ADDCYC(4)
  739 D1:B8D7 C3 1E B3 D1     jp i6502NextLoad
  740 D1:B8DB -  -  -  -  
  741 D1:B8DB -  -  -  -  ;absolute	LDY oper	AC	3	4  
  742 D1:B8DB -  -  -  -  inst6502_ldy_abs:
  743 D1:B8DB CD 3B B5 D1     call subroutine6502_abs_split_start
  744 D1:B8DF E5 -  -  -      push hl
  745 D1:B8E0 50 -  -  -          ld  d,b
  746 D1:B8E1 79 -  -  -          ld  a,c
  747 D1:B8E2 0E 08 -  -          ld  c,BASETABLE_STRIDE
  748 D1:B8E4 ED 4C -  -          mlt bc
  749 D1:B8E6 21 00 40 D0         ld  hl,PAGETABLE
  750 D1:B8EA 09 -  -  -          add hl,bc
  751 D1:B8EB ED 27 -  -          ld  hl,(hl)
  752 D1:B8ED 06 00 -  -          ld  b,0
  753 D1:B8EF 4F -  -  -          ld  c,a
  754 D1:B8F0 09 -  -  -          add hl,bc   ;full address
  755 D1:B8F1 7E -  -  -          READ_ACCESS
  756 D1:B8F2 DD 77 02 -          ld (ix+REGY),a
  757 D1:B8F5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  758 D1:B908 ED 33 04 -          ADDCYC(4)
  759 D1:B90B E1 -  -  -      pop hl
  760 D1:B90C C3 1E B3 D1     jp i6502NextLoad
  761 D1:B910 -  -  -  -  
  762 D1:B910 -  -  -  -  ;absolute,X	LDY oper,X	BC	3	4* 
  763 D1:B910 -  -  -  -  inst6502_ldy_absx:
  764 D1:B910 CD 3B B5 D1     call subroutine6502_abs_split_start
  765 D1:B914 E5 -  -  -      push hl
  766 D1:B915 50 -  -  -          ld  d,b
  767 D1:B916 79 -  -  -          ld  a,c
  768 D1:B917 0E 08 -  -          ld  c,BASETABLE_STRIDE
  769 D1:B919 ED 4C -  -          mlt bc
  770 D1:B91B 21 00 40 D0         ld  hl,PAGETABLE
  771 D1:B91F 09 -  -  -          add hl,bc
  772 D1:B920 ED 27 -  -          ld  hl,(hl)
  773 D1:B922 06 00 -  -          ld  b,0
  774 D1:B924 DD 86 01 -          add a,(ix+REGX)
  775 D1:B927 4F -  -  -          ld  c,a
  776 D1:B928 30 04 -  -          jr  nc,+_
  777 D1:B92A FD 23 -  -          ADDCYC(1)
  778 D1:B92C 04 -  -  -          inc b
  779 D1:B92D 14 -  -  -          inc d
  780 D1:B92E 09 -  -  -  _:      add hl,bc   ;full address
  781 D1:B92F 7E -  -  -          READ_ACCESS
  782 D1:B930 DD 77 02 -          ld (ix+REGY),a
  783 D1:B933 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -          FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
  784 D1:B946 ED 33 04 -          ADDCYC(4)
  785 D1:B949 E1 -  -  -      pop hl
  786 D1:B94A C3 1E B3 D1     jp i6502NextLoad
  787 D1:B94E -  -  -  -  
  788 D1:B94E -  -  -  -  ;-----------------------------------------------------------------------------
  789 D1:B94E -  -  -  -  ;STA - Store Accumulator in Memory
  790 D1:B94E -  -  -  -  ;    A -> M
  791 D1:B94E -  -  -  -  ;    N	Z	C	I	D	V
  792 D1:B94E -  -  -  -  ;    -	-	-	-	-	-
  793 D1:B94E -  -  -  -  
  794 D1:B94E -  -  -  -  ;zeropage	STA oper	85	2	3  
  795 D1:B94E -  -  -  -  inst6502_sta_zp:
  796 D1:B94E 7E -  -  -      ld  a,(hl)
  797 D1:B94F 01 00 38 D0     ld  bc,ZEROPAGE
  798 D1:B953 81 -  -  -      add a,c
  799 D1:B954 4F -  -  -      ld  c,a
  800 D1:B955 DD 7E 00 -      ld  a,(ix+REGA)
  801 D1:B958 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  802 D1:B959 ED 33 03 -      ADDCYC(3)
  803 D1:B95C C3 1E B3 D1     jp i6502NextLoad
  804 D1:B960 -  -  -  -  
  805 D1:B960 -  -  -  -  ;zeropage,X	STA oper,X	95	2	4  
  806 D1:B960 -  -  -  -  inst6502_sta_zpx:
  807 D1:B960 7E -  -  -      ld  a,(hl)
  808 D1:B961 01 00 38 D0     ld  bc,ZEROPAGE
  809 D1:B965 81 -  -  -      add a,c
  810 D1:B966 DD 86 01 -      add a,(ix+REGX)
  811 D1:B969 4F -  -  -      ld  c,a
  812 D1:B96A DD 7E 00 -      ld  a,(ix+REGA)
  813 D1:B96D 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  814 D1:B96E ED 33 04 -      ADDCYC(4)
  815 D1:B971 C3 1E B3 D1     jp i6502NextLoad
  816 D1:B975 -  -  -  -  
  817 D1:B975 -  -  -  -  ;absolute	STA oper	8D	3	4
  818 D1:B975 -  -  -  -  inst6502_sta_abs:
  819 D1:B975 CD 3B B5 D1     call subroutine6502_abs_split_start
  820 D1:B979 E5 -  -  -      push hl
  821 D1:B97A 50 -  -  -          ld  d,b
  822 D1:B97B 79 -  -  -          ld  a,c
  823 D1:B97C 0E 08 -  -          ld  c,BASETABLE_STRIDE
  824 D1:B97E ED 4C -  -          mlt bc
  825 D1:B980 21 00 40 D0         ld  hl,PAGETABLE
  826 D1:B984 09 -  -  -          add hl,bc
  827 D1:B985 ED 27 -  -          ld  hl,(hl)
  828 D1:B987 06 00 -  -          ld  b,0
  829 D1:B989 4F -  -  -          ld  c,a
  830 D1:B98A 09 -  -  -          add hl,bc   ;full address
  831 D1:B98B DD 46 00 -          ld  b,(ix+REGA)
  832 D1:B98E 70 -  -  -          WRITE_ACCESS
  833 D1:B98F ED 33 04 -          ADDCYC(4)
  834 D1:B992 E1 -  -  -      pop hl
  835 D1:B993 C3 1E B3 D1     jp i6502NextLoad
  836 D1:B997 -  -  -  -  
  837 D1:B997 -  -  -  -  ;absolute,X	STA oper,X	9D	3	5  
  838 D1:B997 -  -  -  -  inst6502_sta_absx:
  839 D1:B997 CD 3B B5 D1     call subroutine6502_abs_split_start
  840 D1:B99B E5 -  -  -      push hl
  841 D1:B99C 50 -  -  -          ld  d,b
  842 D1:B99D 79 -  -  -          ld  a,c
  843 D1:B99E 0E 08 -  -          ld  c,BASETABLE_STRIDE
  844 D1:B9A0 ED 4C -  -          mlt bc
  845 D1:B9A2 21 00 40 D0         ld  hl,PAGETABLE
  846 D1:B9A6 09 -  -  -          add hl,bc
  847 D1:B9A7 ED 27 -  -          ld  hl,(hl)
  848 D1:B9A9 06 00 -  -          ld  b,0
  849 D1:B9AB DD 86 01 -          add a,(ix+REGX)
  850 D1:B9AE 4F -  -  -          ld  c,a
  851 D1:B9AF 30 02 -  -          jr  nc,+_
  852 D1:B9B1 04 -  -  -          inc b
  853 D1:B9B2 14 -  -  -          inc d
  854 D1:B9B3 09 -  -  -  _:      add hl,bc   ;full address
  855 D1:B9B4 DD 46 00 -          ld  b,(ix+REGA)
  856 D1:B9B7 70 -  -  -          WRITE_ACCESS
  857 D1:B9B8 ED 33 05 -          ADDCYC(5)
  858 D1:B9BB E1 -  -  -      pop hl
  859 D1:B9BC C3 1E B3 D1     jp i6502NextLoad
  860 D1:B9C0 -  -  -  -  
  861 D1:B9C0 -  -  -  -  ;absolute,Y	STA oper,Y	99	3	5  
  862 D1:B9C0 -  -  -  -  inst6502_sta_absy:
  863 D1:B9C0 CD 3B B5 D1     call subroutine6502_abs_split_start
  864 D1:B9C4 E5 -  -  -      push hl
  865 D1:B9C5 50 -  -  -          ld  d,b
  866 D1:B9C6 79 -  -  -          ld  a,c
  867 D1:B9C7 0E 08 -  -          ld  c,BASETABLE_STRIDE
  868 D1:B9C9 ED 4C -  -          mlt bc
  869 D1:B9CB 21 00 40 D0         ld  hl,PAGETABLE
  870 D1:B9CF 09 -  -  -          add hl,bc
  871 D1:B9D0 ED 27 -  -          ld  hl,(hl)
  872 D1:B9D2 06 00 -  -          ld  b,0
  873 D1:B9D4 DD 86 02 -          add a,(ix+REGY)
  874 D1:B9D7 4F -  -  -          ld  c,a
  875 D1:B9D8 30 02 -  -          jr  nc,+_
  876 D1:B9DA 04 -  -  -          inc b
  877 D1:B9DB 14 -  -  -          inc d
  878 D1:B9DC 09 -  -  -  _:      add hl,bc   ;full address
  879 D1:B9DD DD 46 00 -          ld  b,(ix+REGA)
  880 D1:B9E0 70 -  -  -          WRITE_ACCESS
  881 D1:B9E1 ED 33 05 -          ADDCYC(5)
  882 D1:B9E4 E1 -  -  -      pop hl
  883 D1:B9E5 C3 1E B3 D1     jp i6502NextLoad
  884 D1:B9E9 -  -  -  -  
  885 D1:B9E9 -  -  -  -  ;(indirect,X)	STA (oper,X)	81	2	6  
  886 D1:B9E9 -  -  -  -  inst6502_sta_indx:
  887 D1:B9E9 E5 -  -  -      push hl
  888 D1:B9EA 7E -  -  -          ld  a,(hl)
  889 D1:B9EB 21 00 38 D0         ld  hl,ZEROPAGE
  890 D1:B9EF 85 -  -  -          add a,L
  891 D1:B9F0 DD 86 01 -          add a,(ix+REGX)
  892 D1:B9F3 6F -  -  -          ld  L,a
  893 D1:B9F4 7E -  -  -          ld  a,(hl)
  894 D1:B9F5 2C -  -  -          inc L
  895 D1:B9F6 56 -  -  -          ld  d,(hl)
  896 D1:B9F7 42 -  -  -          ld  b,d
  897 D1:B9F8 0E 08 -  -          ld  c,BASETABLE_STRIDE
  898 D1:B9FA ED 4C -  -          mlt bc
  899 D1:B9FC 21 00 40 D0         ld  hl,PAGETABLE
  900 D1:BA00 09 -  -  -          add hl,bc
  901 D1:BA01 ED 27 -  -          ld  hl,(hl)
  902 D1:BA03 06 00 -  -          ld  b,0
  903 D1:BA05 4F -  -  -          ld  c,a
  904 D1:BA06 09 -  -  -          add hl,bc
  905 D1:BA07 DD 46 00 -          ld  b,(ix+REGA)
  906 D1:BA0A 70 -  -  -          WRITE_ACCESS
  907 D1:BA0B ED 33 06 -          ADDCYC(6)
  908 D1:BA0E E1 -  -  -      pop hl
  909 D1:BA0F C3 1E B3 D1     jp i6502NextLoad
  910 D1:BA13 -  -  -  -  
  911 D1:BA13 -  -  -  -  ;(indirect),Y	STA (oper),Y	91	2	6  
  912 D1:BA13 -  -  -  -  inst6502_sta_indy:
  913 D1:BA13 E5 -  -  -      push hl
  914 D1:BA14 7E -  -  -          ld  a,(hl)
  915 D1:BA15 21 00 38 D0         ld  hl,ZEROPAGE
  916 D1:BA19 85 -  -  -          add a,L
  917 D1:BA1A 6F -  -  -          ld  L,a
  918 D1:BA1B 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
  919 D1:BA1C 2C -  -  -          inc L
  920 D1:BA1D DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
  921 D1:BA20 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
  922 D1:BA21 30 01 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
  923 D1:BA23 24 -  -  -          inc h
  924 D1:BA24 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
  925 D1:BA25 2E 08 -  -          ld  L,BASETABLE_STRIDE
  926 D1:BA27 ED 6C -  -          mlt hl          ;23.
  927 D1:BA29 01 00 40 D0         ld  bc,PAGETABLE
  928 D1:BA2D 09 -  -  -          add hl,bc
  929 D1:BA2E ED 27 -  -          ld  hl,(hl)     ;address get.
  930 D1:BA30 01 00 00 00         ld  bc,0
  931 D1:BA34 4F -  -  -          ld  c,a
  932 D1:BA35 09 -  -  -          add hl,bc       ;Full address get.
  933 D1:BA36 DD 46 00 -          ld  b,(ix+REGA)
  934 D1:BA39 70 -  -  -          WRITE_ACCESS
  935 D1:BA3A ED 33 06 -          ADDCYC(6)
  936 D1:BA3D E1 -  -  -      pop hl
  937 D1:BA3E C3 1E B3 D1     jp i6502NextLoad
  938 D1:BA42 -  -  -  -  
  939 D1:BA42 -  -  -  -  ;-----------------------------------------------------------------------------
  940 D1:BA42 -  -  -  -  ;STX - Store Index X in Memory
  941 D1:BA42 -  -  -  -  ;    X -> M
  942 D1:BA42 -  -  -  -  ;    N	Z	C	I	D	V
  943 D1:BA42 -  -  -  -  ;    -	-	-	-	-	-
  944 D1:BA42 -  -  -  -  
  945 D1:BA42 -  -  -  -  ;zeropage	STX oper	86	2	3  
  946 D1:BA42 -  -  -  -  inst6502_stx_zp:
  947 D1:BA42 7E -  -  -      ld  a,(hl)
  948 D1:BA43 01 00 38 D0     ld  bc,ZEROPAGE
  949 D1:BA47 81 -  -  -      add a,c
  950 D1:BA48 4F -  -  -      ld  c,a
  951 D1:BA49 DD 7E 01 -      ld  a,(ix+REGX)
  952 D1:BA4C 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  953 D1:BA4D ED 33 03 -      ADDCYC(3)
  954 D1:BA50 C3 1E B3 D1     jp i6502NextLoad
  955 D1:BA54 -  -  -  -  
  956 D1:BA54 -  -  -  -  ;zeropage,Y	STX oper,Y	96	2	4  
  957 D1:BA54 -  -  -  -  inst6502_stx_zpy:
  958 D1:BA54 7E -  -  -      ld  a,(hl)
  959 D1:BA55 01 00 38 D0     ld  bc,ZEROPAGE
  960 D1:BA59 81 -  -  -      add a,c
  961 D1:BA5A DD 86 02 -      add a,(ix+REGY)
  962 D1:BA5D 4F -  -  -      ld  c,a
  963 D1:BA5E DD 7E 01 -      ld  a,(ix+REGX)
  964 D1:BA61 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
  965 D1:BA62 ED 33 04 -      ADDCYC(4)
  966 D1:BA65 C3 1E B3 D1     jp i6502NextLoad
  967 D1:BA69 -  -  -  -  
  968 D1:BA69 -  -  -  -  ;absolute	STX oper	8E	3	4  
  969 D1:BA69 -  -  -  -  inst6502_stx_abs:
  970 D1:BA69 CD 3B B5 D1     call subroutine6502_abs_split_start
  971 D1:BA6D E5 -  -  -      push hl
  972 D1:BA6E 50 -  -  -          ld  d,b
  973 D1:BA6F 79 -  -  -          ld  a,c
  974 D1:BA70 0E 08 -  -          ld  c,BASETABLE_STRIDE
  975 D1:BA72 ED 4C -  -          mlt bc
  976 D1:BA74 21 00 40 D0         ld  hl,PAGETABLE
  977 D1:BA78 09 -  -  -          add hl,bc
  978 D1:BA79 ED 27 -  -          ld  hl,(hl)
  979 D1:BA7B 06 00 -  -          ld  b,0
  980 D1:BA7D 4F -  -  -          ld  c,a
  981 D1:BA7E 09 -  -  -          add hl,bc   ;full address
  982 D1:BA7F DD 46 01 -          ld  b,(ix+REGX)
  983 D1:BA82 70 -  -  -          WRITE_ACCESS
  984 D1:BA83 ED 33 04 -          ADDCYC(4)
  985 D1:BA86 E1 -  -  -      pop hl
  986 D1:BA87 C3 1E B3 D1     jp i6502NextLoad
  987 D1:BA8B -  -  -  -  
  988 D1:BA8B -  -  -  -  ;-----------------------------------------------------------------------------
  989 D1:BA8B -  -  -  -  ;STY - Store Index Y in Memory
  990 D1:BA8B -  -  -  -  ;    Y -> M
  991 D1:BA8B -  -  -  -  ;    N	Z	C	I	D	V
  992 D1:BA8B -  -  -  -  ;    -	-	-	-	-	-
  993 D1:BA8B -  -  -  -  
  994 D1:BA8B -  -  -  -  ;zeropage	STY oper	84	2	3  
  995 D1:BA8B -  -  -  -  inst6502_sty_zp:
  996 D1:BA8B 7E -  -  -      ld  a,(hl)
  997 D1:BA8C 01 00 38 D0     ld  bc,ZEROPAGE
  998 D1:BA90 81 -  -  -      add a,c
  999 D1:BA91 4F -  -  -      ld  c,a
 1000 D1:BA92 DD 7E 02 -      ld  a,(ix+REGY)
 1001 D1:BA95 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1002 D1:BA96 ED 33 03 -      ADDCYC(3)
 1003 D1:BA99 C3 1E B3 D1     jp i6502NextLoad
 1004 D1:BA9D -  -  -  -  
 1005 D1:BA9D -  -  -  -  ;zeropage,X	STY oper,X	94	2	4  
 1006 D1:BA9D -  -  -  -  inst6502_sty_zpx:
 1007 D1:BA9D 7E -  -  -      ld  a,(hl)
 1008 D1:BA9E 01 00 38 D0     ld  bc,ZEROPAGE
 1009 D1:BAA2 81 -  -  -      add a,c
 1010 D1:BAA3 DD 86 01 -      add a,(ix+REGX)
 1011 D1:BAA6 4F -  -  -      ld  c,a
 1012 D1:BAA7 DD 7E 02 -      ld  a,(ix+REGY)
 1013 D1:BAAA 02 -  -  -      ld  (bc),a      ;Zeropage access is not hardware-gated
 1014 D1:BAAB ED 33 04 -      ADDCYC(4)
 1015 D1:BAAE C3 1E B3 D1     jp i6502NextLoad
 1016 D1:BAB2 -  -  -  -  
 1017 D1:BAB2 -  -  -  -  ;absolute	STY oper	8C	3	4  
 1018 D1:BAB2 -  -  -  -  inst6502_sty_abs:
 1019 D1:BAB2 CD 3B B5 D1     call subroutine6502_abs_split_start
 1020 D1:BAB6 E5 -  -  -      push hl
 1021 D1:BAB7 50 -  -  -          ld  d,b
 1022 D1:BAB8 79 -  -  -          ld  a,c
 1023 D1:BAB9 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1024 D1:BABB ED 4C -  -          mlt bc
 1025 D1:BABD 21 00 40 D0         ld  hl,PAGETABLE
 1026 D1:BAC1 09 -  -  -          add hl,bc
 1027 D1:BAC2 ED 27 -  -          ld  hl,(hl)
 1028 D1:BAC4 06 00 -  -          ld  b,0
 1029 D1:BAC6 4F -  -  -          ld  c,a
 1030 D1:BAC7 09 -  -  -          add hl,bc   ;full address
 1031 D1:BAC8 DD 46 02 -          ld  b,(ix+REGY)
 1032 D1:BACB 70 -  -  -          WRITE_ACCESS
 1033 D1:BACC ED 33 04 -          ADDCYC(4)
 1034 D1:BACF E1 -  -  -      pop hl
 1035 D1:BAD0 C3 1E B3 D1     jp i6502NextLoad
 1036 D1:BAD4 -  -  -  -  
 1037 D1:BAD4 -  -  -  -  ;-----------------------------------------------------------------------------
 1038 D1:BAD4 -  -  -  -  ;TAX - Transfer Accumulator to Index X [A -> X]
 1039 D1:BAD4 -  -  -  -  ;N	Z	C	I	D	V
 1040 D1:BAD4 -  -  -  -  ;+	+	-	-	-	-
 1041 D1:BAD4 -  -  -  -  ;implied	TAX	AA	1	2
 1042 D1:BAD4 -  -  -  -  inst6502_tax:
 1043 D1:BAD4 DD 7E 00 -      ld  a,(ix+REGA)
 1044 D1:BAD7 DD 77 01 -      ld  (ix+REGX),a
 1045 D1:BADA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1046 D1:BAED ED 33 02 -      ADDCYC(2)
 1047 D1:BAF0 C3 37 B3 D1     jp i6502FinishLoad
 1048 D1:BAF4 -  -  -  -  
 1049 D1:BAF4 -  -  -  -  ;TAY - Transfer Accumulator to Index Y [A -> Y]
 1050 D1:BAF4 -  -  -  -  ;N	Z	C	I	D	V
 1051 D1:BAF4 -  -  -  -  ;+	+	-	-	-	-
 1052 D1:BAF4 -  -  -  -  ;implied	TAY	A8	1	2
 1053 D1:BAF4 -  -  -  -  inst6502_tay:
 1054 D1:BAF4 DD 7E 00 -      ld  a,(ix+REGA)
 1055 D1:BAF7 DD 77 02 -      ld  (ix+REGY),a
 1056 D1:BAFA DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1057 D1:BB0D ED 33 02 -      ADDCYC(2)
 1058 D1:BB10 C3 37 B3 D1     jp i6502FinishLoad
 1059 D1:BB14 -  -  -  -  
 1060 D1:BB14 -  -  -  -  ;TSX - Transfer Stack Pointer to Index X [SP -> X]
 1061 D1:BB14 -  -  -  -  ;N	Z	C	I	D	V
 1062 D1:BB14 -  -  -  -  ;+	+	-	-	-	-
 1063 D1:BB14 -  -  -  -  ;implied	TSX	BA	1	2
 1064 D1:BB14 -  -  -  -  inst6502_tsx:
 1065 D1:BB14 DD 7E 03 -      ld  a,(ix+REGSP)
 1066 D1:BB17 DD 77 01 -      ld  (ix+REGX),a
 1067 D1:BB1A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1068 D1:BB2D ED 33 02 -      ADDCYC(2)
 1069 D1:BB30 C3 37 B3 D1     jp i6502FinishLoad
 1070 D1:BB34 -  -  -  -  
 1071 D1:BB34 -  -  -  -  ;TXA - Transfer Index X to Accumulator [X -> A]
 1072 D1:BB34 -  -  -  -  ;N	Z	C	I	D	V
 1073 D1:BB34 -  -  -  -  ;+	+	-	-	-	-
 1074 D1:BB34 -  -  -  -  ;implied	TXA	8A	1	2
 1075 D1:BB34 -  -  -  -  inst6502_txa:
 1076 D1:BB34 DD 7E 01 -      ld  a,(ix+REGX)
 1077 D1:BB37 DD 77 00 -      ld  (ix+REGA),a
 1078 D1:BB3A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1079 D1:BB4D ED 33 02 -      ADDCYC(2)
 1080 D1:BB50 C3 37 B3 D1     jp i6502FinishLoad
 1081 D1:BB54 -  -  -  -  
 1082 D1:BB54 -  -  -  -  ;TXS - Transfer Index X to Stack Pointer [X -> SP]
 1083 D1:BB54 -  -  -  -  ;N	Z	C	I	D	V
 1084 D1:BB54 -  -  -  -  ;-	-	-	-	-	-
 1085 D1:BB54 -  -  -  -  ;implied	TXS	9A	1	2
 1086 D1:BB54 -  -  -  -  inst6502_txs:
 1087 D1:BB54 DD 7E 01 -      ld  a,(ix+REGX)
 1088 D1:BB57 DD 77 03 -      ld  (ix+REGSP),a
 1089 D1:BB5A ED 33 02 -      ADDCYC(2)
 1090 D1:BB5D C3 37 B3 D1     jp i6502FinishLoad
 1091 D1:BB61 -  -  -  -  
 1092 D1:BB61 -  -  -  -  ;TYA - Transfer Index Y to Accumulator [Y -> A]
 1093 D1:BB61 -  -  -  -  ;N	Z	C	I	D	V
 1094 D1:BB61 -  -  -  -  ;+	+	-	-	-	-
 1095 D1:BB61 -  -  -  -  ;implied	TYA	98	1	2
 1096 D1:BB61 -  -  -  -  inst6502_tya:
 1097 D1:BB61 DD 7E 02 -      ld  a,(ix+REGY)
 1098 D1:BB64 DD 77 00 -      ld  (ix+REGA),a
 1099 D1:BB67 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1100 D1:BB7A ED 33 02 -      ADDCYC(2)
 1101 D1:BB7D C3 37 B3 D1     jp i6502FinishLoad
 1102 D1:BB81 -  -  -  -  
 1103 D1:BB81 -  -  -  -  ;-----------------------------------------------------------------------------
 1104 D1:BB81 -  -  -  -  ;-----------------------------------------------------------------------------
 1105 D1:BB81 -  -  -  -  ;-----------------------------------------------------------------------------
 1106 D1:BB81 -  -  -  -  ;Instructions by type: Stack Instructions
 1107 D1:BB81 -  -  -  -  ;PHA - Push Accumulator on Stack
 1108 D1:BB81 -  -  -  -  ;    push A
 1109 D1:BB81 -  -  -  -  ;    N	Z	C	I	D	V
 1110 D1:BB81 -  -  -  -  ;    -	-	-	-	-	-
 1111 D1:BB81 -  -  -  -  ;implied	PHA	48	1	3 
 1112 D1:BB81 -  -  -  -  inst6502_pha:
 1113 D1:BB81 DD 7E 00 -      ld  a,(ix+REGA)
 1114 D1:BB84 01 00 39 D0     ld  bc,STACKBASE
 1115 D1:BB88 DD 4E 03 -      ld  c,(ix+REGSP)
 1116 D1:BB8B 02 -  -  -      ld  (bc),a
 1117 D1:BB8C 0D -  -  -      dec c
 1118 D1:BB8D DD 71 03 -      ld  (ix+REGSP),c
 1119 D1:BB90 C3 37 B3 D1     jp i6502FinishLoad
 1120 D1:BB94 -  -  -  -  
 1121 D1:BB94 -  -  -  -  ;PHP - Push Processor Status on Stack
 1122 D1:BB94 -  -  -  -  ;    The status register will be pushed with the break
 1123 D1:BB94 -  -  -  -  ;    flag and bit 5 set to 1.
 1124 D1:BB94 -  -  -  -  ;    push SR
 1125 D1:BB94 -  -  -  -  ;    N	Z	C	I	D	V
 1126 D1:BB94 -  -  -  -  ;    -	-	-	-	-	-
 1127 D1:BB94 -  -  -  -  ;implied	PHP	08	1	3  
 1128 D1:BB94 -  -  -  -  inst6502_php:
 1129 D1:BB94 DD 7E 04 -      ld  a,(ix+REGSR)
 1130 D1:BB97 F6 30 -  -      or  a,%00110000
 1131 D1:BB99 01 00 39 D0     ld  bc,STACKBASE
 1132 D1:BB9D DD 4E 03 -      ld  c,(ix+REGSP)
 1133 D1:BBA0 02 -  -  -      ld  (bc),a
 1134 D1:BBA1 0D -  -  -      dec c
 1135 D1:BBA2 DD 71 03 -      ld  (ix+REGSP),c
 1136 D1:BBA5 C3 37 B3 D1     jp i6502FinishLoad
 1137 D1:BBA9 -  -  -  -  
 1138 D1:BBA9 -  -  -  -  
 1139 D1:BBA9 -  -  -  -  
 1140 D1:BBA9 -  -  -  -  ;PLA - Pull Accumulator from Stack
 1141 D1:BBA9 -  -  -  -  ;    pull A
 1142 D1:BBA9 -  -  -  -  ;    N	Z	C	I	D	V
 1143 D1:BBA9 -  -  -  -  ;    +	+	-	-	-	-
 1144 D1:BBA9 -  -  -  -  ;implied	PLA	68	1	4  
 1145 D1:BBA9 -  -  -  -  inst6502_pla:
 1146 D1:BBA9 01 00 39 D0     ld  bc,STACKBASE
 1147 D1:BBAD DD 4E 03 -      ld  c,(ix+REGSP)
 1148 D1:BBB0 0C -  -  -      inc c
 1149 D1:BBB1 0A -  -  -      ld  a,(bc)
 1150 D1:BBB2 DD 71 03 -      ld  (ix+REGSP),c
 1151 D1:BBB5 DD 77 00 -      ld  (ix+REGA),a
 1152 D1:BBB8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1153 D1:BBCB C3 37 B3 D1     jp i6502FinishLoad
 1154 D1:BBCF -  -  -  -  
 1155 D1:BBCF -  -  -  -  ;PLP - Pull Processor Status from Stack
 1156 D1:BBCF -  -  -  -  ;    The status register will be pulled with the break
 1157 D1:BBCF -  -  -  -  ;    flag and bit 5 ignored.
 1158 D1:BBCF -  -  -  -  ;    pull SR
 1159 D1:BBCF -  -  -  -  ;    N	Z	C	I	D	V
 1160 D1:BBCF -  -  -  -  ;    from stack
 1161 D1:BBCF -  -  -  -  ;implied	PLP	28	1	4  
 1162 D1:BBCF -  -  -  -  inst6502_plp:
 1163 D1:BBCF 01 00 39 D0     ld  bc,STACKBASE
 1164 D1:BBD3 DD 4E 03 -      ld  c,(ix+REGSP)
 1165 D1:BBD6 0C -  -  -      inc c
 1166 D1:BBD7 0A -  -  -      ld  a,(bc)
 1167 D1:BBD8 DD 71 03 -      ld  (ix+REGSP),c
 1168 D1:BBDB DD 46 04 -      ld  b,(ix+REGSR)
 1169 D1:BBDE A8 -  -  -      xor a,b
 1170 D1:BBDF E6 CF -  -      and a,%11001111
 1171 D1:BBE1 A8 -  -  -      xor a,b
 1172 D1:BBE2 DD 77 04 -      ld  (ix+REGSR),a
 1173 D1:BBE5 C3 37 B3 D1     jp i6502FinishLoad
 1174 D1:BBE9 -  -  -  -  
 1175 D1:BBE9 -  -  -  -  
 1176 D1:BBE9 -  -  -  -  ;-----------------------------------------------------------------------------
 1177 D1:BBE9 -  -  -  -  ;-----------------------------------------------------------------------------
 1178 D1:BBE9 -  -  -  -  ;-----------------------------------------------------------------------------
 1179 D1:BBE9 -  -  -  -  ;Instructions by type: Decrements and Increments
 1180 D1:BBE9 -  -  -  -  
 1181 D1:BBE9 -  -  -  -  ;DEC -  Decrement Memory by One
 1182 D1:BBE9 -  -  -  -  ;    M - 1 -> M
 1183 D1:BBE9 -  -  -  -  ;    N	Z	C	I	D	V
 1184 D1:BBE9 -  -  -  -  ;    +	+	-	-	-	-
 1185 D1:BBE9 -  -  -  -  ;    addressing	assembler	opc	bytes	cycles
 1186 D1:BBE9 -  -  -  -  
 1187 D1:BBE9 -  -  -  -  ;    zeropage	DEC oper	C6	2	5  
 1188 D1:BBE9 -  -  -  -  inst6502_dec_zp:
 1189 D1:BBE9 7E -  -  -      ld  a,(hl)
 1190 D1:BBEA 01 00 38 D0     ld  bc,ZEROPAGE
 1191 D1:BBEE 81 -  -  -      add a,c
 1192 D1:BBEF 4F -  -  -      ld  c,a
 1193 D1:BBF0 0A -  -  -      ld  a,(bc)
 1194 D1:BBF1 3D -  -  -      dec a
 1195 D1:BBF2 02 -  -  -      ld  (bc),a
 1196 D1:BBF3 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1197 D1:BC06 ED 33 05 -      ADDCYC(5)
 1198 D1:BC09 C3 1E B3 D1     jp i6502NextLoad
 1199 D1:BC0D -  -  -  -  
 1200 D1:BC0D -  -  -  -  ;    zeropage,X	DEC oper,X	D6	2	6  
 1201 D1:BC0D -  -  -  -  inst6502_dec_zpx:
 1202 D1:BC0D 7E -  -  -      ld  a,(hl)
 1203 D1:BC0E 01 00 38 D0     ld  bc,ZEROPAGE
 1204 D1:BC12 81 -  -  -      add a,c
 1205 D1:BC13 DD 86 01 -      add a,(ix+REGX)
 1206 D1:BC16 4F -  -  -      ld  c,a
 1207 D1:BC17 0A -  -  -      ld  a,(bc)
 1208 D1:BC18 3D -  -  -      dec a
 1209 D1:BC19 02 -  -  -      ld  (bc),a
 1210 D1:BC1A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1211 D1:BC2D ED 33 06 -      ADDCYC(6)
 1212 D1:BC30 C3 1E B3 D1     jp i6502NextLoad
 1213 D1:BC34 -  -  -  -  
 1214 D1:BC34 -  -  -  -  ;    absolute	DEC oper	CE	3	6  
 1215 D1:BC34 -  -  -  -  inst6502_dec_abs:
 1216 D1:BC34 CD 3B B5 D1     call subroutine6502_abs_split_start
 1217 D1:BC38 E5 -  -  -      push hl
 1218 D1:BC39 50 -  -  -          ld  d,b
 1219 D1:BC3A 79 -  -  -          ld  a,c
 1220 D1:BC3B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1221 D1:BC3D ED 4C -  -          mlt bc
 1222 D1:BC3F 21 00 40 D0         ld  hl,PAGETABLE
 1223 D1:BC43 09 -  -  -          add hl,bc
 1224 D1:BC44 ED 27 -  -          ld  hl,(hl)
 1225 D1:BC46 06 00 -  -          ld  b,0
 1226 D1:BC48 4F -  -  -          ld  c,a
 1227 D1:BC49 09 -  -  -          add hl,bc   ;full address
 1228 D1:BC4A 7E -  -  -          READ_ACCESS
 1229 D1:BC4B 3D -  -  -          dec a
 1230 D1:BC4C 47 -  -  -          ld  b,a
 1231 D1:BC4D -  -  -  -          ;
 1232 D1:BC4D DD 7E 04 -          ld  a,(ix+REGSR)
 1233 D1:BC50 CB 8F -  -          res SF_ZERO,a
 1234 D1:BC52 20 02 -  -          jr  nz,$+4
 1235 D1:BC54 CB CF -  -          set SF_ZERO,a
 1236 D1:BC56 CB BF -  -          res SF_NEG,a
 1237 D1:BC58 FA 5D BC D1         jp  m,$+5
 1238 D1:BC5C CB FF -  -          set SF_NEG,a
 1239 D1:BC5E DD 77 04 -          ld  (ix+REGSR),a
 1240 D1:BC61 -  -  -  -          ;
 1241 D1:BC61 70 -  -  -          WRITE_ACCESS
 1242 D1:BC62 ED 33 06 -          ADDCYC(6)
 1243 D1:BC65 E1 -  -  -      pop hl
 1244 D1:BC66 C3 1E B3 D1     jp i6502NextLoad
 1245 D1:BC6A -  -  -  -  
 1246 D1:BC6A -  -  -  -  ;    absolute,X	DEC oper,X	DE	3	7  
 1247 D1:BC6A -  -  -  -  inst6502_dec_absx:
 1248 D1:BC6A CD 3B B5 D1     call subroutine6502_abs_split_start
 1249 D1:BC6E E5 -  -  -      push hl
 1250 D1:BC6F 50 -  -  -          ld  d,b
 1251 D1:BC70 79 -  -  -          ld  a,c
 1252 D1:BC71 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1253 D1:BC73 ED 4C -  -          mlt bc
 1254 D1:BC75 21 00 40 D0         ld  hl,PAGETABLE
 1255 D1:BC79 09 -  -  -          add hl,bc
 1256 D1:BC7A ED 27 -  -          ld  hl,(hl)
 1257 D1:BC7C 06 00 -  -          ld  b,0
 1258 D1:BC7E DD 86 01 -          add a,(ix+REGX)
 1259 D1:BC81 4F -  -  -          ld  c,a
 1260 D1:BC82 30 02 -  -          jr  nc,+_
 1261 D1:BC84 04 -  -  -          inc b
 1262 D1:BC85 14 -  -  -          inc d
 1263 D1:BC86 09 -  -  -  _:      add hl,bc   ;full address
 1264 D1:BC87 7E -  -  -          READ_ACCESS
 1265 D1:BC88 3D -  -  -          dec a
 1266 D1:BC89 47 -  -  -          ld  b,a
 1267 D1:BC8A -  -  -  -          ;
 1268 D1:BC8A DD 7E 04 -          ld  a,(ix+REGSR)
 1269 D1:BC8D CB 8F -  -          res SF_ZERO,a
 1270 D1:BC8F 20 02 -  -          jr  nz,$+4
 1271 D1:BC91 CB CF -  -          set SF_ZERO,a
 1272 D1:BC93 CB BF -  -          res SF_NEG,a
 1273 D1:BC95 FA 9A BC D1         jp  m,$+5
 1274 D1:BC99 CB FF -  -          set SF_NEG,a
 1275 D1:BC9B DD 77 04 -          ld  (ix+REGSR),a
 1276 D1:BC9E -  -  -  -          ;
 1277 D1:BC9E 70 -  -  -          WRITE_ACCESS
 1278 D1:BC9F ED 33 07 -          ADDCYC(7)
 1279 D1:BCA2 E1 -  -  -      pop hl
 1280 D1:BCA3 C3 1E B3 D1     jp i6502NextLoad
 1281 D1:BCA7 -  -  -  -  
 1282 D1:BCA7 -  -  -  -  ;DEX - Decrement Index X by One [X - 1 -> X]
 1283 D1:BCA7 -  -  -  -  ;Flags altered: NZ
 1284 D1:BCA7 -  -  -  -  ;implied	DEX	CA	1	2  
 1285 D1:BCA7 -  -  -  -  inst6502_dex:
 1286 D1:BCA7 DD 35 01 -      dec (ix+REGX)
 1287 D1:BCAA DD 7E 04 -  _:  ld  a,(ix+REGSR)
 1288 D1:BCAD CB 8F -  -      res SF_ZERO,a
 1289 D1:BCAF 20 02 -  -      jr  nz,$+4
 1290 D1:BCB1 CB CF -  -      set SF_ZERO,a
 1291 D1:BCB3 CB BF -  -      res SF_NEG,a
 1292 D1:BCB5 FA BA BC D1     jp  m,$+5
 1293 D1:BCB9 CB FF -  -      set SF_NEG,a
 1294 D1:BCBB DD 77 04 -      ld  (ix+REGSR),a
 1295 D1:BCBE ED 33 02 -      ADDCYC(2)
 1296 D1:BCC1 C3 37 B3 D1     jp i6502FinishLoad
 1297 D1:BCC5 -  -  -  -  
 1298 D1:BCC5 -  -  -  -  ;DEY - Decrement Index Y by One [Y - 1 -> Y]
 1299 D1:BCC5 -  -  -  -  ;Flags altered: NZ
 1300 D1:BCC5 -  -  -  -  ;implied	DEY	88	1	2  
 1301 D1:BCC5 -  -  -  -  inst6502_dey:
 1302 D1:BCC5 DD 35 02 -      dec (ix+REGY)
 1303 D1:BCC8 18 E0 -  -      jr  -_
 1304 D1:BCCA -  -  -  -  
 1305 D1:BCCA -  -  -  -  
 1306 D1:BCCA -  -  -  -  ;INX - Increment Index X by One [X + 1 -> X]
 1307 D1:BCCA -  -  -  -  ;Flags altered: NZ
 1308 D1:BCCA -  -  -  -  ;implied	INX	E8	1	2  
 1309 D1:BCCA -  -  -  -  inst6502_inx:
 1310 D1:BCCA DD 34 01 -      inc (ix+REGX)
 1311 D1:BCCD 18 DB -  -      jr  -_
 1312 D1:BCCF -  -  -  -  
 1313 D1:BCCF -  -  -  -  
 1314 D1:BCCF -  -  -  -  ;INY - Increment Index Y by One [Y + 1 -> Y]
 1315 D1:BCCF -  -  -  -  ;Flags altered: NZ
 1316 D1:BCCF -  -  -  -  ;implied	INY	C8	1	2  
 1317 D1:BCCF -  -  -  -  inst6502_iny:
 1318 D1:BCCF DD 34 02 -      inc (ix+REGY)
 1319 D1:BCD2 18 D6 -  -      jr  -_
 1320 D1:BCD4 -  -  -  -  
 1321 D1:BCD4 -  -  -  -  
 1322 D1:BCD4 -  -  -  -  ;INC - Increment Memory by One
 1323 D1:BCD4 -  -  -  -  ;    M + 1 -> M
 1324 D1:BCD4 -  -  -  -  ;    N	Z	C	I	D	V
 1325 D1:BCD4 -  -  -  -  ;    +	+	-	-	-	-
 1326 D1:BCD4 -  -  -  -  
 1327 D1:BCD4 -  -  -  -  ;zeropage	INC oper	E6	2	5  
 1328 D1:BCD4 -  -  -  -  inst6502_inc_zp:
 1329 D1:BCD4 7E -  -  -      ld  a,(hl)
 1330 D1:BCD5 01 00 38 D0     ld  bc,ZEROPAGE
 1331 D1:BCD9 81 -  -  -      add a,c
 1332 D1:BCDA 4F -  -  -      ld  c,a
 1333 D1:BCDB 0A -  -  -      ld  a,(bc)
 1334 D1:BCDC 3C -  -  -      inc a
 1335 D1:BCDD 02 -  -  -      ld  (bc),a
 1336 D1:BCDE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1337 D1:BCF1 ED 33 05 -      ADDCYC(5)
 1338 D1:BCF4 C3 1E B3 D1     jp i6502NextLoad
 1339 D1:BCF8 -  -  -  -  
 1340 D1:BCF8 -  -  -  -  ;zeropage,X	INC oper,X	F6	2	6  
 1341 D1:BCF8 -  -  -  -  inst6502_inc_zpx:
 1342 D1:BCF8 7E -  -  -      ld  a,(hl)
 1343 D1:BCF9 01 00 38 D0     ld  bc,ZEROPAGE
 1344 D1:BCFD 81 -  -  -      add a,c
 1345 D1:BCFE DD 86 01 -      add a,(ix+REGX)
 1346 D1:BD01 4F -  -  -      ld  c,a
 1347 D1:BD02 0A -  -  -      ld  a,(bc)
 1348 D1:BD03 3C -  -  -      inc a
 1349 D1:BD04 02 -  -  -      ld  (bc),a
 1350 D1:BD05 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1351 D1:BD18 ED 33 06 -      ADDCYC(6)
 1352 D1:BD1B C3 1E B3 D1     jp i6502NextLoad
 1353 D1:BD1F -  -  -  -      
 1354 D1:BD1F -  -  -  -  ;absolute	INC oper	EE	3	6
 1355 D1:BD1F -  -  -  -  inst6502_inc_abs:
 1356 D1:BD1F CD 3B B5 D1     call subroutine6502_abs_split_start
 1357 D1:BD23 E5 -  -  -      push hl
 1358 D1:BD24 50 -  -  -          ld  d,b
 1359 D1:BD25 79 -  -  -          ld  a,c
 1360 D1:BD26 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1361 D1:BD28 ED 4C -  -          mlt bc
 1362 D1:BD2A 21 00 40 D0         ld  hl,PAGETABLE
 1363 D1:BD2E 09 -  -  -          add hl,bc
 1364 D1:BD2F ED 27 -  -          ld  hl,(hl)
 1365 D1:BD31 06 00 -  -          ld  b,0
 1366 D1:BD33 4F -  -  -          ld  c,a
 1367 D1:BD34 09 -  -  -          add hl,bc   ;full address
 1368 D1:BD35 7E -  -  -          READ_ACCESS
 1369 D1:BD36 3C -  -  -          inc a
 1370 D1:BD37 47 -  -  -          ld  b,a
 1371 D1:BD38 -  -  -  -          ;
 1372 D1:BD38 DD 7E 04 -          ld  a,(ix+REGSR)
 1373 D1:BD3B CB 8F -  -          res SF_ZERO,a
 1374 D1:BD3D 20 02 -  -          jr  nz,$+4
 1375 D1:BD3F CB CF -  -          set SF_ZERO,a
 1376 D1:BD41 CB BF -  -          res SF_NEG,a
 1377 D1:BD43 FA 48 BD D1         jp  m,$+5
 1378 D1:BD47 CB FF -  -          set SF_NEG,a
 1379 D1:BD49 DD 77 04 -          ld  (ix+REGSR),a
 1380 D1:BD4C -  -  -  -          ;
 1381 D1:BD4C 70 -  -  -          WRITE_ACCESS
 1382 D1:BD4D ED 33 06 -          ADDCYC(6)
 1383 D1:BD50 E1 -  -  -      pop hl
 1384 D1:BD51 C3 1E B3 D1     jp i6502NextLoad
 1385 D1:BD55 -  -  -  -  
 1386 D1:BD55 -  -  -  -  ;absolute,X	INC oper,X	FE	3	7  
 1387 D1:BD55 -  -  -  -  inst6502_inc_absx:
 1388 D1:BD55 CD 3B B5 D1     call subroutine6502_abs_split_start
 1389 D1:BD59 E5 -  -  -      push hl
 1390 D1:BD5A 50 -  -  -          ld  d,b
 1391 D1:BD5B 79 -  -  -          ld  a,c
 1392 D1:BD5C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1393 D1:BD5E ED 4C -  -          mlt bc
 1394 D1:BD60 21 00 40 D0         ld  hl,PAGETABLE
 1395 D1:BD64 09 -  -  -          add hl,bc
 1396 D1:BD65 ED 27 -  -          ld  hl,(hl)
 1397 D1:BD67 06 00 -  -          ld  b,0
 1398 D1:BD69 DD 86 01 -          add a,(ix+REGX)
 1399 D1:BD6C 4F -  -  -          ld  c,a
 1400 D1:BD6D 30 02 -  -          jr nc,+_
 1401 D1:BD6F 04 -  -  -          inc b
 1402 D1:BD70 14 -  -  -          inc d
 1403 D1:BD71 09 -  -  -  _:      add hl,bc   ;full address
 1404 D1:BD72 7E -  -  -          READ_ACCESS
 1405 D1:BD73 3C -  -  -          inc a
 1406 D1:BD74 47 -  -  -          ld  b,a
 1407 D1:BD75 -  -  -  -          ;
 1408 D1:BD75 DD 7E 04 -          ld  a,(ix+REGSR)
 1409 D1:BD78 CB 8F -  -          res SF_ZERO,a
 1410 D1:BD7A 20 02 -  -          jr  nz,$+4
 1411 D1:BD7C CB CF -  -          set SF_ZERO,a
 1412 D1:BD7E CB BF -  -          res SF_NEG,a
 1413 D1:BD80 FA 85 BD D1         jp  m,$+5
 1414 D1:BD84 CB FF -  -          set SF_NEG,a
 1415 D1:BD86 DD 77 04 -          ld  (ix+REGSR),a
 1416 D1:BD89 -  -  -  -          ;
 1417 D1:BD89 70 -  -  -          WRITE_ACCESS
 1418 D1:BD8A ED 33 07 -          ADDCYC(7)
 1419 D1:BD8D E1 -  -  -      pop hl
 1420 D1:BD8E C3 1E B3 D1     jp i6502NextLoad
 1421 D1:BD92 -  -  -  -  
 1422 D1:BD92 -  -  -  -  ;-----------------------------------------------------------------------------
 1423 D1:BD92 -  -  -  -  ;-----------------------------------------------------------------------------
 1424 D1:BD92 -  -  -  -  ;-----------------------------------------------------------------------------
 1425 D1:BD92 -  -  -  -  ;Instructions by type: Arithmetic Operations
 1426 D1:BD92 -  -  -  -  ;ADC - Add Memory to Accumulator with Carry  [A + M + C -> A, C]
 1427 D1:BD92 -  -  -  -  ;    N	Z	C	I	D	V
 1428 D1:BD92 -  -  -  -  ;    +	+	+	-	-	+
 1429 D1:BD92 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1430 D1:BD92 -  -  -  -  
 1431 D1:BD92 -  -  -  -  ;immediate	ADC #oper	69	2	2  
 1432 D1:BD92 -  -  -  -  inst6502_adc_imm:
 1433 D1:BD92 ED 33 02 -      ADDCYC(2)
 1434 D1:BD95 4E -  -  -      ld  c,(hl)
 1435 D1:BD96 C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1436 D1:BD9A -  -  -  -      
 1437 D1:BD9A -  -  -  -  
 1438 D1:BD9A -  -  -  -  ;zeropage	ADC oper	65	2	3
 1439 D1:BD9A -  -  -  -  inst6502_adc_zp:
 1440 D1:BD9A ED 33 03 -      ADDCYC(3)
 1441 D1:BD9D 7E -  -  -      ld  a,(hl)
 1442 D1:BD9E 01 00 38 D0     ld  bc,ZEROPAGE
 1443 D1:BDA2 81 -  -  -      add a,c
 1444 D1:BDA3 4F -  -  -      ld  c,a
 1445 D1:BDA4 0A -  -  -      ld  a,(bc)
 1446 D1:BDA5 4F -  -  -      ld  c,a
 1447 D1:BDA6 C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1448 D1:BDAA -  -  -  -  
 1449 D1:BDAA -  -  -  -  ;zeropage,X	ADC oper,X	75	2	4  
 1450 D1:BDAA -  -  -  -  inst6502_adc_zpx:
 1451 D1:BDAA ED 33 04 -      ADDCYC(4)
 1452 D1:BDAD 7E -  -  -      ld  a,(hl)
 1453 D1:BDAE DD 86 01 -      add a,(ix+REGX)
 1454 D1:BDB1 01 00 38 D0     ld  bc,ZEROPAGE
 1455 D1:BDB5 81 -  -  -      add a,c
 1456 D1:BDB6 4F -  -  -      ld  c,a
 1457 D1:BDB7 0A -  -  -      ld  a,(bc)
 1458 D1:BDB8 4F -  -  -      ld  c,a
 1459 D1:BDB9 C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1460 D1:BDBD -  -  -  -  
 1461 D1:BDBD -  -  -  -  ;absolute	ADC oper	6D	3	4  
 1462 D1:BDBD -  -  -  -  inst6502_adc_abs:
 1463 D1:BDBD ED 33 04 -      ADDCYC(4)
 1464 D1:BDC0 CD 3B B5 D1     call subroutine6502_abs_split_start
 1465 D1:BDC4 E5 -  -  -      push hl
 1466 D1:BDC5 50 -  -  -          ld  d,b
 1467 D1:BDC6 79 -  -  -          ld  a,c
 1468 D1:BDC7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1469 D1:BDC9 ED 4C -  -          mlt bc
 1470 D1:BDCB 21 00 40 D0         ld  hl,PAGETABLE
 1471 D1:BDCF 09 -  -  -          add hl,bc
 1472 D1:BDD0 ED 27 -  -          ld  hl,(hl)
 1473 D1:BDD2 06 00 -  -          ld  b,0
 1474 D1:BDD4 4F -  -  -          ld  c,a
 1475 D1:BDD5 09 -  -  -          add hl,bc   ;full address
 1476 D1:BDD6 7E -  -  -          READ_ACCESS
 1477 D1:BDD7 E1 -  -  -      pop hl
 1478 D1:BDD8 4F -  -  -      ld  c,a
 1479 D1:BDD9 C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1480 D1:BDDD -  -  -  -  
 1481 D1:BDDD -  -  -  -  ;absolute,X	ADC oper,X	7D	3	4* 
 1482 D1:BDDD -  -  -  -  inst6502_adc_absx:
 1483 D1:BDDD ED 33 04 -      ADDCYC(4)
 1484 D1:BDE0 CD 3B B5 D1     call subroutine6502_abs_split_start
 1485 D1:BDE4 E5 -  -  -      push hl
 1486 D1:BDE5 50 -  -  -          ld  d,b
 1487 D1:BDE6 79 -  -  -          ld  a,c
 1488 D1:BDE7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1489 D1:BDE9 ED 4C -  -          mlt bc
 1490 D1:BDEB 21 00 40 D0         ld  hl,PAGETABLE
 1491 D1:BDEF 09 -  -  -          add hl,bc
 1492 D1:BDF0 ED 27 -  -          ld  hl,(hl)
 1493 D1:BDF2 06 00 -  -          ld  b,0
 1494 D1:BDF4 DD 86 01 -          add a,(ix+REGX)
 1495 D1:BDF7 4F -  -  -          ld  c,a
 1496 D1:BDF8 30 04 -  -          jr  nc,+_
 1497 D1:BDFA FD 23 -  -          ADDCYC(1)
 1498 D1:BDFC 04 -  -  -          inc b
 1499 D1:BDFD 14 -  -  -          inc d
 1500 D1:BDFE 09 -  -  -  _:      add hl,bc   ;full address
 1501 D1:BDFF 7E -  -  -          READ_ACCESS
 1502 D1:BE00 E1 -  -  -      pop hl
 1503 D1:BE01 4F -  -  -      ld  c,a
 1504 D1:BE02 C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1505 D1:BE06 -  -  -  -  
 1506 D1:BE06 -  -  -  -  ;absolute,Y	ADC oper,Y	79	3	4*
 1507 D1:BE06 -  -  -  -  inst6502_adc_absy:
 1508 D1:BE06 ED 33 04 -      ADDCYC(4)
 1509 D1:BE09 CD 3B B5 D1     call subroutine6502_abs_split_start
 1510 D1:BE0D E5 -  -  -      push hl
 1511 D1:BE0E 50 -  -  -          ld  d,b
 1512 D1:BE0F 79 -  -  -          ld  a,c
 1513 D1:BE10 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1514 D1:BE12 ED 4C -  -          mlt bc
 1515 D1:BE14 21 00 40 D0         ld  hl,PAGETABLE
 1516 D1:BE18 09 -  -  -          add hl,bc
 1517 D1:BE19 ED 27 -  -          ld  hl,(hl)
 1518 D1:BE1B 06 00 -  -          ld  b,0
 1519 D1:BE1D DD 86 02 -          add a,(ix+REGY)
 1520 D1:BE20 4F -  -  -          ld  c,a
 1521 D1:BE21 30 04 -  -          jr  nc,+_
 1522 D1:BE23 FD 23 -  -          ADDCYC(1)
 1523 D1:BE25 04 -  -  -          inc b
 1524 D1:BE26 14 -  -  -          inc d
 1525 D1:BE27 09 -  -  -  _:      add hl,bc   ;full address
 1526 D1:BE28 7E -  -  -          READ_ACCESS
 1527 D1:BE29 E1 -  -  -      pop hl
 1528 D1:BE2A 4F -  -  -      ld  c,a
 1529 D1:BE2B C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1530 D1:BE2F -  -  -  -  
 1531 D1:BE2F -  -  -  -  ;(indirect,X)	ADC (oper,X)	61	2	6  
 1532 D1:BE2F -  -  -  -  inst6502_adc_indx:
 1533 D1:BE2F ED 33 06 -      ADDCYC(6)
 1534 D1:BE32 E5 -  -  -      push hl
 1535 D1:BE33 7E -  -  -          ld  a,(hl)
 1536 D1:BE34 21 00 38 D0         ld  hl,ZEROPAGE
 1537 D1:BE38 85 -  -  -          add a,L
 1538 D1:BE39 DD 86 01 -          add a,(ix+REGX)
 1539 D1:BE3C 6F -  -  -          ld  L,a
 1540 D1:BE3D 7E -  -  -          ld  a,(hl)
 1541 D1:BE3E 2C -  -  -          inc L
 1542 D1:BE3F 56 -  -  -          ld  d,(hl)
 1543 D1:BE40 42 -  -  -          ld  b,d
 1544 D1:BE41 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1545 D1:BE43 ED 4C -  -          mlt bc
 1546 D1:BE45 21 00 40 D0         ld  hl,PAGETABLE
 1547 D1:BE49 09 -  -  -          add hl,bc
 1548 D1:BE4A ED 27 -  -          ld  hl,(hl)
 1549 D1:BE4C 06 00 -  -          ld  b,0
 1550 D1:BE4E 4F -  -  -          ld  c,a
 1551 D1:BE4F 09 -  -  -          add hl,bc
 1552 D1:BE50 7E -  -  -          READ_ACCESS
 1553 D1:BE51 E1 -  -  -      pop hl
 1554 D1:BE52 4F -  -  -      ld  c,a
 1555 D1:BE53 C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1556 D1:BE57 -  -  -  -  
 1557 D1:BE57 -  -  -  -  ;(indirect),Y	ADC (oper),Y	71	2	5* 
 1558 D1:BE57 -  -  -  -  inst6502_adc_indy:
 1559 D1:BE57 E5 -  -  -      push hl
 1560 D1:BE58 7E -  -  -          ld  a,(hl)
 1561 D1:BE59 21 00 38 D0         ld  hl,ZEROPAGE
 1562 D1:BE5D 85 -  -  -          add a,L
 1563 D1:BE5E 6F -  -  -          ld  L,a
 1564 D1:BE5F 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1565 D1:BE60 2C -  -  -          inc L
 1566 D1:BE61 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1567 D1:BE64 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1568 D1:BE65 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1569 D1:BE67 FD 23 -  -          ADDCYC(1)
 1570 D1:BE69 24 -  -  -          inc h
 1571 D1:BE6A 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1572 D1:BE6B 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1573 D1:BE6D ED 6C -  -          mlt hl          ;23.
 1574 D1:BE6F 01 00 40 D0         ld  bc,PAGETABLE
 1575 D1:BE73 09 -  -  -          add hl,bc
 1576 D1:BE74 ED 27 -  -          ld  hl,(hl)     ;address get.
 1577 D1:BE76 01 00 00 00         ld  bc,0
 1578 D1:BE7A 4F -  -  -          ld  c,a
 1579 D1:BE7B 09 -  -  -          add hl,bc       ;Full address get.
 1580 D1:BE7C 7E -  -  -          READ_ACCESS
 1581 D1:BE7D E1 -  -  -      pop hl
 1582 D1:BE7E 4F -  -  -      ld  c,a
 1583 D1:BE7F C3 57 B5 D1     jp  subroutine6502_adc_combined_end
 1584 D1:BE83 -  -  -  -  
 1585 D1:BE83 -  -  -  -  
 1586 D1:BE83 -  -  -  -  ;SBC - Subtract Memory from Accumulator with Borrow
 1587 D1:BE83 -  -  -  -  ;A - M - C̅ -> A
 1588 D1:BE83 -  -  -  -  ;N	Z	C	I	D	V
 1589 D1:BE83 -  -  -  -  ;+	+	+	-	-	+
 1590 D1:BE83 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1591 D1:BE83 -  -  -  -  
 1592 D1:BE83 -  -  -  -  ;immediate	SBC #oper	E9	2	2  
 1593 D1:BE83 -  -  -  -  inst6502_sbc_imm:
 1594 D1:BE83 ED 33 02 -      ADDCYC(2)
 1595 D1:BE86 4E -  -  -      ld  c,(hl)
 1596 D1:BE87 C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1597 D1:BE8B -  -  -  -  
 1598 D1:BE8B -  -  -  -  ;zeropage	SBC oper	E5	2	3  
 1599 D1:BE8B -  -  -  -  inst6502_sbc_zp:
 1600 D1:BE8B ED 33 03 -      ADDCYC(3)
 1601 D1:BE8E 7E -  -  -      ld  a,(hl)
 1602 D1:BE8F 01 00 38 D0     ld  bc,ZEROPAGE
 1603 D1:BE93 81 -  -  -      add a,c
 1604 D1:BE94 4F -  -  -      ld  c,a
 1605 D1:BE95 0A -  -  -      ld  a,(bc)
 1606 D1:BE96 4F -  -  -      ld  c,a
 1607 D1:BE97 C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1608 D1:BE9B -  -  -  -  
 1609 D1:BE9B -  -  -  -  ;zeropage,X	SBC oper,X	F5	2	4  
 1610 D1:BE9B -  -  -  -  inst6502_sbc_zpx:
 1611 D1:BE9B ED 33 04 -      ADDCYC(4)
 1612 D1:BE9E 7E -  -  -      ld  a,(hl)
 1613 D1:BE9F DD 86 01 -      add a,(ix+REGX)
 1614 D1:BEA2 01 00 38 D0     ld  bc,ZEROPAGE
 1615 D1:BEA6 81 -  -  -      add a,c
 1616 D1:BEA7 4F -  -  -      ld  c,a
 1617 D1:BEA8 0A -  -  -      ld  a,(bc)
 1618 D1:BEA9 4F -  -  -      ld  c,a
 1619 D1:BEAA C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1620 D1:BEAE -  -  -  -  
 1621 D1:BEAE -  -  -  -  ;absolute	SBC oper	ED	3	4  
 1622 D1:BEAE -  -  -  -  inst6502_sbc_abs:
 1623 D1:BEAE ED 33 04 -      ADDCYC(4)
 1624 D1:BEB1 CD 3B B5 D1     call subroutine6502_abs_split_start
 1625 D1:BEB5 E5 -  -  -      push hl
 1626 D1:BEB6 50 -  -  -          ld  d,b
 1627 D1:BEB7 79 -  -  -          ld  a,c
 1628 D1:BEB8 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1629 D1:BEBA ED 4C -  -          mlt bc
 1630 D1:BEBC 21 00 40 D0         ld  hl,PAGETABLE
 1631 D1:BEC0 09 -  -  -          add hl,bc
 1632 D1:BEC1 ED 27 -  -          ld  hl,(hl)
 1633 D1:BEC3 06 00 -  -          ld  b,0
 1634 D1:BEC5 4F -  -  -          ld  c,a
 1635 D1:BEC6 09 -  -  -          add hl,bc   ;full address
 1636 D1:BEC7 7E -  -  -          READ_ACCESS
 1637 D1:BEC8 E1 -  -  -      pop hl
 1638 D1:BEC9 4F -  -  -      ld  c,a
 1639 D1:BECA C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1640 D1:BECE -  -  -  -  
 1641 D1:BECE -  -  -  -  ;absolute,X	SBC oper,X	FD	3	4* 
 1642 D1:BECE -  -  -  -  inst6502_sbc_absx:
 1643 D1:BECE ED 33 04 -      ADDCYC(4)
 1644 D1:BED1 CD 3B B5 D1     call subroutine6502_abs_split_start
 1645 D1:BED5 E5 -  -  -      push hl
 1646 D1:BED6 50 -  -  -          ld  d,b
 1647 D1:BED7 79 -  -  -          ld  a,c
 1648 D1:BED8 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1649 D1:BEDA ED 4C -  -          mlt bc
 1650 D1:BEDC 21 00 40 D0         ld  hl,PAGETABLE
 1651 D1:BEE0 09 -  -  -          add hl,bc
 1652 D1:BEE1 ED 27 -  -          ld  hl,(hl)
 1653 D1:BEE3 06 00 -  -          ld  b,0
 1654 D1:BEE5 DD 86 01 -          add a,(ix+REGX)
 1655 D1:BEE8 4F -  -  -          ld  c,a
 1656 D1:BEE9 30 04 -  -          jr  nc,+_
 1657 D1:BEEB FD 23 -  -          ADDCYC(1)
 1658 D1:BEED 04 -  -  -          inc b
 1659 D1:BEEE 14 -  -  -          inc d
 1660 D1:BEEF 09 -  -  -  _:      add hl,bc   ;full address
 1661 D1:BEF0 7E -  -  -          READ_ACCESS
 1662 D1:BEF1 E1 -  -  -      pop hl
 1663 D1:BEF2 4F -  -  -      ld  c,a
 1664 D1:BEF3 C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1665 D1:BEF7 -  -  -  -  
 1666 D1:BEF7 -  -  -  -  ;absolute,Y	SBC oper,Y	F9	3	4* 
 1667 D1:BEF7 -  -  -  -  inst6502_sbc_absy:
 1668 D1:BEF7 ED 33 04 -      ADDCYC(4)
 1669 D1:BEFA CD 3B B5 D1     call subroutine6502_abs_split_start
 1670 D1:BEFE E5 -  -  -      push hl
 1671 D1:BEFF 50 -  -  -          ld  d,b
 1672 D1:BF00 79 -  -  -          ld  a,c
 1673 D1:BF01 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1674 D1:BF03 ED 4C -  -          mlt bc
 1675 D1:BF05 21 00 40 D0         ld  hl,PAGETABLE
 1676 D1:BF09 09 -  -  -          add hl,bc
 1677 D1:BF0A ED 27 -  -          ld  hl,(hl)
 1678 D1:BF0C 06 00 -  -          ld  b,0
 1679 D1:BF0E DD 86 02 -          add a,(ix+REGY)
 1680 D1:BF11 4F -  -  -          ld  c,a
 1681 D1:BF12 30 04 -  -          jr  nc,+_
 1682 D1:BF14 FD 23 -  -          ADDCYC(1)
 1683 D1:BF16 04 -  -  -          inc b
 1684 D1:BF17 14 -  -  -          inc d
 1685 D1:BF18 09 -  -  -  _:      add hl,bc   ;full address
 1686 D1:BF19 7E -  -  -          READ_ACCESS
 1687 D1:BF1A E1 -  -  -      pop hl
 1688 D1:BF1B 4F -  -  -      ld  c,a
 1689 D1:BF1C C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1690 D1:BF20 -  -  -  -  
 1691 D1:BF20 -  -  -  -  ;(indirect,X)	SBC (oper,X)	E1	2	6  
 1692 D1:BF20 -  -  -  -  inst6502_sbc_indx:
 1693 D1:BF20 ED 33 06 -      ADDCYC(6)
 1694 D1:BF23 E5 -  -  -      push hl
 1695 D1:BF24 7E -  -  -          ld  a,(hl)
 1696 D1:BF25 21 00 38 D0         ld  hl,ZEROPAGE
 1697 D1:BF29 85 -  -  -          add a,L
 1698 D1:BF2A DD 86 01 -          add a,(ix+REGX)
 1699 D1:BF2D 6F -  -  -          ld  L,a
 1700 D1:BF2E 7E -  -  -          ld  a,(hl)
 1701 D1:BF2F 2C -  -  -          inc L
 1702 D1:BF30 56 -  -  -          ld  d,(hl)
 1703 D1:BF31 42 -  -  -          ld  b,d
 1704 D1:BF32 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1705 D1:BF34 ED 4C -  -          mlt bc
 1706 D1:BF36 21 00 40 D0         ld  hl,PAGETABLE
 1707 D1:BF3A 09 -  -  -          add hl,bc
 1708 D1:BF3B ED 27 -  -          ld  hl,(hl)
 1709 D1:BF3D 06 00 -  -          ld  b,0
 1710 D1:BF3F 4F -  -  -          ld  c,a
 1711 D1:BF40 09 -  -  -          add hl,bc
 1712 D1:BF41 7E -  -  -          READ_ACCESS
 1713 D1:BF42 E1 -  -  -      pop hl
 1714 D1:BF43 4F -  -  -      ld  c,a
 1715 D1:BF44 C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1716 D1:BF48 -  -  -  -  
 1717 D1:BF48 -  -  -  -  ;(indirect),Y	SBC (oper),Y	F1	2	5* 
 1718 D1:BF48 -  -  -  -  inst6502_sbc_indy:
 1719 D1:BF48 E5 -  -  -      push hl
 1720 D1:BF49 7E -  -  -          ld  a,(hl)
 1721 D1:BF4A 21 00 38 D0         ld  hl,ZEROPAGE
 1722 D1:BF4E 85 -  -  -          add a,L
 1723 D1:BF4F 6F -  -  -          ld  L,a
 1724 D1:BF50 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1725 D1:BF51 2C -  -  -          inc L
 1726 D1:BF52 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1727 D1:BF55 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1728 D1:BF56 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1729 D1:BF58 FD 23 -  -          ADDCYC(1)
 1730 D1:BF5A 24 -  -  -          inc h
 1731 D1:BF5B 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1732 D1:BF5C 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1733 D1:BF5E ED 6C -  -          mlt hl          ;23.
 1734 D1:BF60 01 00 40 D0         ld  bc,PAGETABLE
 1735 D1:BF64 09 -  -  -          add hl,bc
 1736 D1:BF65 ED 27 -  -          ld  hl,(hl)     ;address get.
 1737 D1:BF67 01 00 00 00         ld  bc,0
 1738 D1:BF6B 4F -  -  -          ld  c,a
 1739 D1:BF6C 09 -  -  -          add hl,bc       ;Full address get.
 1740 D1:BF6D 7E -  -  -          READ_ACCESS
 1741 D1:BF6E E1 -  -  -      pop hl
 1742 D1:BF6F 4F -  -  -      ld  c,a
 1743 D1:BF70 C3 87 B5 D1     jp  subroutine6502_sbc_combined_end
 1744 D1:BF74 -  -  -  -  
 1745 D1:BF74 -  -  -  -  
 1746 D1:BF74 -  -  -  -  
 1747 D1:BF74 -  -  -  -  ;-----------------------------------------------------------------------------
 1748 D1:BF74 -  -  -  -  ;-----------------------------------------------------------------------------
 1749 D1:BF74 -  -  -  -  ;-----------------------------------------------------------------------------
 1750 D1:BF74 -  -  -  -  ;Instructions by type: Logical Operations
 1751 D1:BF74 -  -  -  -  
 1752 D1:BF74 -  -  -  -  ;AND - AND Memory with Accumulator
 1753 D1:BF74 -  -  -  -  ;A AND M -> A
 1754 D1:BF74 -  -  -  -  ;N	Z	C	I	D	V
 1755 D1:BF74 -  -  -  -  ;+	+	-	-	-	-
 1756 D1:BF74 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1757 D1:BF74 -  -  -  -  
 1758 D1:BF74 -  -  -  -  ;immediate	AND #oper	29	2	2  
 1759 D1:BF74 -  -  -  -  inst6502_and_imm:
 1760 D1:BF74 ED 33 02 -      ADDCYC(2)
 1761 D1:BF77 7E -  -  -      ld  a,(hl)
 1762 D1:BF78 DD A6 00 -      and a,(ix+REGA)
 1763 D1:BF7B DD 77 00 -      ld  (ix+REGA),A
 1764 D1:BF7E DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1765 D1:BF91 C3 1E B3 D1     jp i6502NextLoad
 1766 D1:BF95 -  -  -  -  
 1767 D1:BF95 -  -  -  -  ;zeropage	AND oper	25	2	3  
 1768 D1:BF95 -  -  -  -  inst6502_and_zp:
 1769 D1:BF95 ED 33 03 -      ADDCYC(3)
 1770 D1:BF98 7E -  -  -      ld  a,(hl)
 1771 D1:BF99 01 00 38 D0     ld  bc,ZEROPAGE
 1772 D1:BF9D 81 -  -  -      add a,c
 1773 D1:BF9E 4F -  -  -      ld  c,a
 1774 D1:BF9F 0A -  -  -      ld  a,(bc)
 1775 D1:BFA0 DD A6 00 -      and a,(ix+REGA)
 1776 D1:BFA3 DD 77 00 -      ld  (ix+REGA),A
 1777 D1:BFA6 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1778 D1:BFB9 C3 1E B3 D1     jp i6502NextLoad
 1779 D1:BFBD -  -  -  -  
 1780 D1:BFBD -  -  -  -  ;zeropage,X	AND oper,X	35	2	4  
 1781 D1:BFBD -  -  -  -  inst6502_and_zpx:
 1782 D1:BFBD ED 33 04 -      ADDCYC(4)
 1783 D1:BFC0 7E -  -  -      ld  a,(hl)
 1784 D1:BFC1 01 00 38 D0     ld  bc,ZEROPAGE
 1785 D1:BFC5 81 -  -  -      add a,c
 1786 D1:BFC6 DD 86 01 -      add a,(ix+REGX)
 1787 D1:BFC9 4F -  -  -      ld  c,a
 1788 D1:BFCA 0A -  -  -      ld  a,(bc)
 1789 D1:BFCB DD A6 00 -      and a,(ix+REGA)
 1790 D1:BFCE DD 77 00 -      ld  (ix+REGA),A
 1791 D1:BFD1 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1792 D1:BFE4 C3 1E B3 D1     jp i6502NextLoad
 1793 D1:BFE8 -  -  -  -  
 1794 D1:BFE8 -  -  -  -  ;absolute	AND oper	2D	3	4  
 1795 D1:BFE8 -  -  -  -  inst6502_and_abs:
 1796 D1:BFE8 ED 33 04 -      ADDCYC(4)
 1797 D1:BFEB CD 3B B5 D1     call subroutine6502_abs_split_start
 1798 D1:BFEF E5 -  -  -      push hl
 1799 D1:BFF0 50 -  -  -          ld  d,b
 1800 D1:BFF1 79 -  -  -          ld  a,c
 1801 D1:BFF2 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1802 D1:BFF4 ED 4C -  -          mlt bc
 1803 D1:BFF6 21 00 40 D0         ld  hl,PAGETABLE
 1804 D1:BFFA 09 -  -  -          add hl,bc
 1805 D1:BFFB ED 27 -  -          ld  hl,(hl)
 1806 D1:BFFD 06 00 -  -          ld  b,0
 1807 D1:BFFF 4F -  -  -          ld  c,a
 1808 D1:C000 09 -  -  -          add hl,bc   ;full address
 1809 D1:C001 7E -  -  -          READ_ACCESS
 1810 D1:C002 E1 -  -  -      pop hl
 1811 D1:C003 DD A6 00 -      and a,(ix+REGA)
 1812 D1:C006 DD 77 00 -      ld  (ix+REGA),A
 1813 D1:C009 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1814 D1:C01C C3 1E B3 D1     jp i6502NextLoad
 1815 D1:C020 -  -  -  -  
 1816 D1:C020 -  -  -  -  ;absolute,X	AND oper,X	3D	3	4* 
 1817 D1:C020 -  -  -  -  inst6502_and_absx:
 1818 D1:C020 ED 33 04 -      ADDCYC(4)
 1819 D1:C023 CD 3B B5 D1     call subroutine6502_abs_split_start
 1820 D1:C027 E5 -  -  -      push hl
 1821 D1:C028 50 -  -  -          ld  d,b
 1822 D1:C029 79 -  -  -          ld  a,c
 1823 D1:C02A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1824 D1:C02C ED 4C -  -          mlt bc
 1825 D1:C02E 21 00 40 D0         ld  hl,PAGETABLE
 1826 D1:C032 09 -  -  -          add hl,bc
 1827 D1:C033 ED 27 -  -          ld  hl,(hl)
 1828 D1:C035 06 00 -  -          ld  b,0
 1829 D1:C037 DD 86 01 -          add a,(ix+REGX)
 1830 D1:C03A 4F -  -  -          ld  c,a
 1831 D1:C03B 30 04 -  -          jr  nc,+_
 1832 D1:C03D 04 -  -  -          inc b
 1833 D1:C03E 14 -  -  -          inc d
 1834 D1:C03F FD 23 -  -          ADDCYC(1)
 1835 D1:C041 09 -  -  -  _:      add hl,bc   ;full address
 1836 D1:C042 7E -  -  -          READ_ACCESS
 1837 D1:C043 E1 -  -  -      pop hl
 1838 D1:C044 DD A6 00 -      and a,(ix+REGA)
 1839 D1:C047 DD 77 00 -      ld  (ix+REGA),A
 1840 D1:C04A DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1841 D1:C05D C3 1E B3 D1     jp i6502NextLoad
 1842 D1:C061 -  -  -  -  
 1843 D1:C061 -  -  -  -  ;absolute,Y	AND oper,Y	39	3	4* 
 1844 D1:C061 -  -  -  -  inst6502_and_absy:
 1845 D1:C061 ED 33 04 -      ADDCYC(4)
 1846 D1:C064 CD 3B B5 D1     call subroutine6502_abs_split_start
 1847 D1:C068 E5 -  -  -      push hl
 1848 D1:C069 50 -  -  -          ld  d,b
 1849 D1:C06A 79 -  -  -          ld  a,c
 1850 D1:C06B 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1851 D1:C06D ED 4C -  -          mlt bc
 1852 D1:C06F 21 00 40 D0         ld  hl,PAGETABLE
 1853 D1:C073 09 -  -  -          add hl,bc
 1854 D1:C074 ED 27 -  -          ld  hl,(hl)
 1855 D1:C076 06 00 -  -          ld  b,0
 1856 D1:C078 DD 86 02 -          add a,(ix+REGY)
 1857 D1:C07B 4F -  -  -          ld  c,a
 1858 D1:C07C 30 04 -  -          jr  nc,+_
 1859 D1:C07E 04 -  -  -          inc b
 1860 D1:C07F 14 -  -  -          inc d
 1861 D1:C080 FD 23 -  -          ADDCYC(1)
 1862 D1:C082 09 -  -  -  _:      add hl,bc   ;full address
 1863 D1:C083 7E -  -  -          READ_ACCESS
 1864 D1:C084 E1 -  -  -      pop hl
 1865 D1:C085 DD A6 00 -      and a,(ix+REGA)
 1866 D1:C088 DD 77 00 -      ld  (ix+REGA),A
 1867 D1:C08B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1868 D1:C09E C3 1E B3 D1     jp i6502NextLoad
 1869 D1:C0A2 -  -  -  -  
 1870 D1:C0A2 -  -  -  -  ;(indirect,X)	AND (oper,X)	21	2	6  
 1871 D1:C0A2 -  -  -  -  inst6502_and_indx:
 1872 D1:C0A2 ED 33 06 -      ADDCYC(6)
 1873 D1:C0A5 E5 -  -  -      push hl
 1874 D1:C0A6 7E -  -  -          ld  a,(hl)
 1875 D1:C0A7 21 00 38 D0         ld  hl,ZEROPAGE
 1876 D1:C0AB 85 -  -  -          add a,L
 1877 D1:C0AC DD 86 01 -          add a,(ix+REGX)
 1878 D1:C0AF 6F -  -  -          ld  L,a
 1879 D1:C0B0 7E -  -  -          ld  a,(hl)
 1880 D1:C0B1 2C -  -  -          inc L
 1881 D1:C0B2 56 -  -  -          ld  d,(hl)
 1882 D1:C0B3 42 -  -  -          ld  b,d
 1883 D1:C0B4 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1884 D1:C0B6 ED 4C -  -          mlt bc
 1885 D1:C0B8 21 00 40 D0         ld  hl,PAGETABLE
 1886 D1:C0BC 09 -  -  -          add hl,bc
 1887 D1:C0BD ED 27 -  -          ld  hl,(hl)
 1888 D1:C0BF 06 00 -  -          ld  b,0
 1889 D1:C0C1 4F -  -  -          ld  c,a
 1890 D1:C0C2 09 -  -  -          add hl,bc
 1891 D1:C0C3 7E -  -  -          READ_ACCESS
 1892 D1:C0C4 E1 -  -  -      pop hl
 1893 D1:C0C5 DD A6 00 -      and a,(ix+REGA)
 1894 D1:C0C8 DD 77 00 -      ld  (ix+REGA),A
 1895 D1:C0CB DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1896 D1:C0DE C3 1E B3 D1     jp i6502NextLoad
 1897 D1:C0E2 -  -  -  -  
 1898 D1:C0E2 -  -  -  -  ;(indirect),Y	AND (oper),Y	31	2	5* 
 1899 D1:C0E2 -  -  -  -  inst6502_and_indy:
 1900 D1:C0E2 ED 33 05 -      ADDCYC(5)
 1901 D1:C0E5 E5 -  -  -      push hl
 1902 D1:C0E6 7E -  -  -          ld  a,(hl)
 1903 D1:C0E7 21 00 38 D0         ld  hl,ZEROPAGE
 1904 D1:C0EB 85 -  -  -          add a,L
 1905 D1:C0EC 6F -  -  -          ld  L,a
 1906 D1:C0ED 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 1907 D1:C0EE 2C -  -  -          inc L
 1908 D1:C0EF DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 1909 D1:C0F2 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 1910 D1:C0F3 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 1911 D1:C0F5 24 -  -  -          inc h
 1912 D1:C0F6 FD 23 -  -          ADDCYC(1)
 1913 D1:C0F8 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 1914 D1:C0F9 2E 08 -  -          ld  L,BASETABLE_STRIDE
 1915 D1:C0FB ED 6C -  -          mlt hl          ;23.
 1916 D1:C0FD 01 00 40 D0         ld  bc,PAGETABLE
 1917 D1:C101 09 -  -  -          add hl,bc
 1918 D1:C102 ED 27 -  -          ld  hl,(hl)     ;address get.
 1919 D1:C104 01 00 00 00         ld  bc,0
 1920 D1:C108 4F -  -  -          ld  c,a
 1921 D1:C109 09 -  -  -          add hl,bc       ;Full address get.
 1922 D1:C10A 7E -  -  -          READ_ACCESS
 1923 D1:C10B E1 -  -  -      pop hl
 1924 D1:C10C DD A6 00 -      and a,(ix+REGA)
 1925 D1:C10F DD 77 00 -      ld  (ix+REGA),A
 1926 D1:C112 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1927 D1:C125 C3 1E B3 D1     jp i6502NextLoad
 1928 D1:C129 -  -  -  -  
 1929 D1:C129 -  -  -  -  ;-----------------------------------------------------------------------------
 1930 D1:C129 -  -  -  -  ;EOR - Exclusive-OR Memory with Accumulator
 1931 D1:C129 -  -  -  -  ;A EOR M -> A
 1932 D1:C129 -  -  -  -  ;N	Z	C	I	D	V
 1933 D1:C129 -  -  -  -  ;+	+	-	-	-	-
 1934 D1:C129 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 1935 D1:C129 -  -  -  -  
 1936 D1:C129 -  -  -  -  ;immediate	EOR #oper	49	2	2  
 1937 D1:C129 -  -  -  -  inst6502_eor_imm:
 1938 D1:C129 ED 33 02 -      ADDCYC(2)
 1939 D1:C12C 7E -  -  -      ld  a,(hl)
 1940 D1:C12D DD AE 00 -      xor a,(ix+REGA)
 1941 D1:C130 DD 77 00 -      ld  (ix+REGA),A
 1942 D1:C133 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1943 D1:C146 C3 1E B3 D1     jp i6502NextLoad
 1944 D1:C14A -  -  -  -  
 1945 D1:C14A -  -  -  -  ;zeropage	EOR oper	45	2	3  
 1946 D1:C14A -  -  -  -  inst6502_eor_zp:
 1947 D1:C14A ED 33 03 -      ADDCYC(3)
 1948 D1:C14D 7E -  -  -      ld  a,(hl)
 1949 D1:C14E 01 00 38 D0     ld  bc,ZEROPAGE
 1950 D1:C152 81 -  -  -      add a,c
 1951 D1:C153 4F -  -  -      ld  c,a
 1952 D1:C154 0A -  -  -      ld  a,(bc)
 1953 D1:C155 DD AE 00 -      xor a,(ix+REGA)
 1954 D1:C158 DD 77 00 -      ld  (ix+REGA),A
 1955 D1:C15B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1956 D1:C16E C3 1E B3 D1     jp i6502NextLoad
 1957 D1:C172 -  -  -  -  
 1958 D1:C172 -  -  -  -  
 1959 D1:C172 -  -  -  -  ;zeropage,X	EOR oper,X	55	2	4  
 1960 D1:C172 -  -  -  -  inst6502_eor_zpx:
 1961 D1:C172 ED 33 04 -      ADDCYC(4)
 1962 D1:C175 7E -  -  -      ld  a,(hl)
 1963 D1:C176 01 00 38 D0     ld  bc,ZEROPAGE
 1964 D1:C17A 81 -  -  -      add a,c
 1965 D1:C17B DD 86 01 -      add a,(ix+REGX)
 1966 D1:C17E 4F -  -  -      ld  c,a
 1967 D1:C17F 0A -  -  -      ld  a,(bc)
 1968 D1:C180 DD AE 00 -      xor a,(ix+REGA)
 1969 D1:C183 DD 77 00 -      ld  (ix+REGA),A
 1970 D1:C186 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1971 D1:C199 C3 1E B3 D1     jp i6502NextLoad
 1972 D1:C19D -  -  -  -  
 1973 D1:C19D -  -  -  -  ;absolute	EOR oper	4D	3	4  
 1974 D1:C19D -  -  -  -  inst6502_eor_abs:
 1975 D1:C19D ED 33 04 -      ADDCYC(4)
 1976 D1:C1A0 CD 3B B5 D1     call subroutine6502_abs_split_start
 1977 D1:C1A4 E5 -  -  -      push hl
 1978 D1:C1A5 50 -  -  -          ld  d,b
 1979 D1:C1A6 79 -  -  -          ld  a,c
 1980 D1:C1A7 0E 08 -  -          ld  c,BASETABLE_STRIDE
 1981 D1:C1A9 ED 4C -  -          mlt bc
 1982 D1:C1AB 21 00 40 D0         ld  hl,PAGETABLE
 1983 D1:C1AF 09 -  -  -          add hl,bc
 1984 D1:C1B0 ED 27 -  -          ld  hl,(hl)
 1985 D1:C1B2 06 00 -  -          ld  b,0
 1986 D1:C1B4 4F -  -  -          ld  c,a
 1987 D1:C1B5 09 -  -  -          add hl,bc   ;full address
 1988 D1:C1B6 7E -  -  -          READ_ACCESS
 1989 D1:C1B7 E1 -  -  -      pop hl
 1990 D1:C1B8 DD AE 00 -      xor a,(ix+REGA)
 1991 D1:C1BB DD 77 00 -      ld  (ix+REGA),A
 1992 D1:C1BE DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 1993 D1:C1D1 C3 1E B3 D1     jp i6502NextLoad
 1994 D1:C1D5 -  -  -  -  
 1995 D1:C1D5 -  -  -  -  ;absolute,X	EOR oper,X	5D	3	4* 
 1996 D1:C1D5 -  -  -  -  inst6502_eor_absx:
 1997 D1:C1D5 ED 33 04 -      ADDCYC(4)
 1998 D1:C1D8 CD 3B B5 D1     call subroutine6502_abs_split_start
 1999 D1:C1DC E5 -  -  -      push hl
 2000 D1:C1DD 50 -  -  -          ld  d,b
 2001 D1:C1DE 79 -  -  -          ld  a,c
 2002 D1:C1DF 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2003 D1:C1E1 ED 4C -  -          mlt bc
 2004 D1:C1E3 21 00 40 D0         ld  hl,PAGETABLE
 2005 D1:C1E7 09 -  -  -          add hl,bc
 2006 D1:C1E8 ED 27 -  -          ld  hl,(hl)
 2007 D1:C1EA 06 00 -  -          ld  b,0
 2008 D1:C1EC DD 86 01 -          add a,(ix+REGX)
 2009 D1:C1EF 4F -  -  -          ld  c,a
 2010 D1:C1F0 30 04 -  -          jr  nc,+_
 2011 D1:C1F2 04 -  -  -          inc b
 2012 D1:C1F3 14 -  -  -          inc d
 2013 D1:C1F4 FD 23 -  -          ADDCYC(1)
 2014 D1:C1F6 09 -  -  -  _:      add hl,bc   ;full address
 2015 D1:C1F7 7E -  -  -          READ_ACCESS
 2016 D1:C1F8 E1 -  -  -      pop hl
 2017 D1:C1F9 DD AE 00 -      xor a,(ix+REGA)
 2018 D1:C1FC DD 77 00 -      ld  (ix+REGA),A
 2019 D1:C1FF DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2020 D1:C212 C3 1E B3 D1     jp i6502NextLoad
 2021 D1:C216 -  -  -  -  
 2022 D1:C216 -  -  -  -  ;absolute,Y	EOR oper,Y	59	3	4* 
 2023 D1:C216 -  -  -  -  inst6502_eor_absy:
 2024 D1:C216 ED 33 04 -      ADDCYC(4)
 2025 D1:C219 CD 3B B5 D1     call subroutine6502_abs_split_start
 2026 D1:C21D E5 -  -  -      push hl
 2027 D1:C21E 50 -  -  -          ld  d,b
 2028 D1:C21F 79 -  -  -          ld  a,c
 2029 D1:C220 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2030 D1:C222 ED 4C -  -          mlt bc
 2031 D1:C224 21 00 40 D0         ld  hl,PAGETABLE
 2032 D1:C228 09 -  -  -          add hl,bc
 2033 D1:C229 ED 27 -  -          ld  hl,(hl)
 2034 D1:C22B 06 00 -  -          ld  b,0
 2035 D1:C22D DD 86 02 -          add a,(ix+REGY)
 2036 D1:C230 4F -  -  -          ld  c,a
 2037 D1:C231 30 04 -  -          jr  nc,+_
 2038 D1:C233 04 -  -  -          inc b
 2039 D1:C234 14 -  -  -          inc d
 2040 D1:C235 FD 23 -  -          ADDCYC(1)
 2041 D1:C237 09 -  -  -  _:      add hl,bc   ;full address
 2042 D1:C238 7E -  -  -          READ_ACCESS
 2043 D1:C239 E1 -  -  -      pop hl
 2044 D1:C23A DD AE 00 -      xor a,(ix+REGA)
 2045 D1:C23D DD 77 00 -      ld  (ix+REGA),A
 2046 D1:C240 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2047 D1:C253 C3 1E B3 D1     jp i6502NextLoad
 2048 D1:C257 -  -  -  -  
 2049 D1:C257 -  -  -  -  ;(indirect,X)	EOR (oper,X)	41	2	6  
 2050 D1:C257 -  -  -  -  inst6502_eor_indx:
 2051 D1:C257 ED 33 06 -      ADDCYC(6)
 2052 D1:C25A E5 -  -  -      push hl
 2053 D1:C25B 7E -  -  -          ld  a,(hl)
 2054 D1:C25C 21 00 38 D0         ld  hl,ZEROPAGE
 2055 D1:C260 85 -  -  -          add a,L
 2056 D1:C261 DD 86 01 -          add a,(ix+REGX)
 2057 D1:C264 6F -  -  -          ld  L,a
 2058 D1:C265 7E -  -  -          ld  a,(hl)
 2059 D1:C266 2C -  -  -          inc L
 2060 D1:C267 56 -  -  -          ld  d,(hl)
 2061 D1:C268 42 -  -  -          ld  b,d
 2062 D1:C269 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2063 D1:C26B ED 4C -  -          mlt bc
 2064 D1:C26D 21 00 40 D0         ld  hl,PAGETABLE
 2065 D1:C271 09 -  -  -          add hl,bc
 2066 D1:C272 ED 27 -  -          ld  hl,(hl)
 2067 D1:C274 06 00 -  -          ld  b,0
 2068 D1:C276 4F -  -  -          ld  c,a
 2069 D1:C277 09 -  -  -          add hl,bc
 2070 D1:C278 7E -  -  -          READ_ACCESS
 2071 D1:C279 E1 -  -  -      pop hl
 2072 D1:C27A DD AE 00 -      xor a,(ix+REGA)
 2073 D1:C27D DD 77 00 -      ld  (ix+REGA),A
 2074 D1:C280 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2075 D1:C293 C3 1E B3 D1     jp i6502NextLoad
 2076 D1:C297 -  -  -  -  
 2077 D1:C297 -  -  -  -  ;(indirect),Y	EOR (oper),Y	51	2	5* 
 2078 D1:C297 -  -  -  -  inst6502_eor_indy:
 2079 D1:C297 ED 33 05 -      ADDCYC(5)
 2080 D1:C29A E5 -  -  -      push hl
 2081 D1:C29B 7E -  -  -          ld  a,(hl)
 2082 D1:C29C 21 00 38 D0         ld  hl,ZEROPAGE
 2083 D1:C2A0 85 -  -  -          add a,L
 2084 D1:C2A1 6F -  -  -          ld  L,a
 2085 D1:C2A2 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2086 D1:C2A3 2C -  -  -          inc L
 2087 D1:C2A4 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2088 D1:C2A7 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2089 D1:C2A8 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2090 D1:C2AA 24 -  -  -          inc h
 2091 D1:C2AB FD 23 -  -          ADDCYC(1)
 2092 D1:C2AD 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2093 D1:C2AE 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2094 D1:C2B0 ED 6C -  -          mlt hl          ;23.
 2095 D1:C2B2 01 00 40 D0         ld  bc,PAGETABLE
 2096 D1:C2B6 09 -  -  -          add hl,bc
 2097 D1:C2B7 ED 27 -  -          ld  hl,(hl)     ;address get.
 2098 D1:C2B9 01 00 00 00         ld  bc,0
 2099 D1:C2BD 4F -  -  -          ld  c,a
 2100 D1:C2BE 09 -  -  -          add hl,bc       ;Full address get.
 2101 D1:C2BF 7E -  -  -          READ_ACCESS
 2102 D1:C2C0 E1 -  -  -      pop hl
 2103 D1:C2C1 DD AE 00 -      xor a,(ix+REGA)
 2104 D1:C2C4 DD 77 00 -      ld  (ix+REGA),A
 2105 D1:C2C7 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2106 D1:C2DA C3 1E B3 D1     jp i6502NextLoad
 2107 D1:C2DE -  -  -  -  
 2108 D1:C2DE -  -  -  -  ;-----------------------------------------------------------------------------
 2109 D1:C2DE -  -  -  -  ;ORA - OR Memory with Accumulator
 2110 D1:C2DE -  -  -  -  ;A OR M -> A
 2111 D1:C2DE -  -  -  -  ;N	Z	C	I	D	V
 2112 D1:C2DE -  -  -  -  ;+	+	-	-	-	-
 2113 D1:C2DE -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2114 D1:C2DE -  -  -  -  
 2115 D1:C2DE -  -  -  -  ;immediate	ORA #oper	09	2	2  
 2116 D1:C2DE -  -  -  -  inst6502_ora_imm:
 2117 D1:C2DE ED 33 02 -      ADDCYC(2)
 2118 D1:C2E1 7E -  -  -      ld  a,(hl)
 2119 D1:C2E2 DD B6 00 -      or  a,(ix+REGA)
 2120 D1:C2E5 DD 77 00 -      ld  (ix+REGA),A
 2121 D1:C2E8 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2122 D1:C2FB C3 1E B3 D1     jp i6502NextLoad
 2123 D1:C2FF -  -  -  -  
 2124 D1:C2FF -  -  -  -  ;zeropage	ORA oper	05	2	3  
 2125 D1:C2FF -  -  -  -  inst6502_ora_zp:
 2126 D1:C2FF ED 33 03 -      ADDCYC(3)
 2127 D1:C302 7E -  -  -      ld  a,(hl)
 2128 D1:C303 01 00 38 D0     ld  bc,ZEROPAGE
 2129 D1:C307 81 -  -  -      add a,c
 2130 D1:C308 4F -  -  -      ld  c,a
 2131 D1:C309 0A -  -  -      ld  a,(bc)
 2132 D1:C30A DD B6 00 -      or  a,(ix+REGA)
 2133 D1:C30D DD 77 00 -      ld  (ix+REGA),A
 2134 D1:C310 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2135 D1:C323 C3 1E B3 D1     jp i6502NextLoad
 2136 D1:C327 -  -  -  -  
 2137 D1:C327 -  -  -  -  ;zeropage,X	ORA oper,X	15	2	4  
 2138 D1:C327 -  -  -  -  inst6502_ora_zpx:
 2139 D1:C327 ED 33 04 -      ADDCYC(4)
 2140 D1:C32A 7E -  -  -      ld  a,(hl)
 2141 D1:C32B 01 00 38 D0     ld  bc,ZEROPAGE
 2142 D1:C32F 81 -  -  -      add a,c
 2143 D1:C330 DD 86 01 -      add a,(ix+REGX)
 2144 D1:C333 4F -  -  -      ld  c,a
 2145 D1:C334 0A -  -  -      ld  a,(bc)
 2146 D1:C335 DD B6 00 -      or  a,(ix+REGA)
 2147 D1:C338 DD 77 00 -      ld  (ix+REGA),A
 2148 D1:C33B DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2149 D1:C34E C3 1E B3 D1     jp i6502NextLoad
 2150 D1:C352 -  -  -  -  
 2151 D1:C352 -  -  -  -  ;absolute	ORA oper	0D	3	4  
 2152 D1:C352 -  -  -  -  inst6502_ora_abs:
 2153 D1:C352 ED 33 04 -      ADDCYC(4)
 2154 D1:C355 CD 3B B5 D1     call subroutine6502_abs_split_start
 2155 D1:C359 E5 -  -  -      push hl
 2156 D1:C35A 50 -  -  -          ld  d,b
 2157 D1:C35B 79 -  -  -          ld  a,c
 2158 D1:C35C 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2159 D1:C35E ED 4C -  -          mlt bc
 2160 D1:C360 21 00 40 D0         ld  hl,PAGETABLE
 2161 D1:C364 09 -  -  -          add hl,bc
 2162 D1:C365 ED 27 -  -          ld  hl,(hl)
 2163 D1:C367 06 00 -  -          ld  b,0
 2164 D1:C369 4F -  -  -          ld  c,a
 2165 D1:C36A 09 -  -  -          add hl,bc   ;full address
 2166 D1:C36B 7E -  -  -          READ_ACCESS
 2167 D1:C36C E1 -  -  -      pop hl
 2168 D1:C36D DD B6 00 -      or  a,(ix+REGA)
 2169 D1:C370 DD 77 00 -      ld  (ix+REGA),A
 2170 D1:C373 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2171 D1:C386 C3 1E B3 D1     jp i6502NextLoad
 2172 D1:C38A -  -  -  -  
 2173 D1:C38A -  -  -  -  ;absolute,X	ORA oper,X	1D	3	4* 
 2174 D1:C38A -  -  -  -  inst6502_ora_absx:
 2175 D1:C38A ED 33 04 -      ADDCYC(4)
 2176 D1:C38D CD 3B B5 D1     call subroutine6502_abs_split_start
 2177 D1:C391 E5 -  -  -      push hl
 2178 D1:C392 50 -  -  -          ld  d,b
 2179 D1:C393 79 -  -  -          ld  a,c
 2180 D1:C394 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2181 D1:C396 ED 4C -  -          mlt bc
 2182 D1:C398 21 00 40 D0         ld  hl,PAGETABLE
 2183 D1:C39C 09 -  -  -          add hl,bc
 2184 D1:C39D ED 27 -  -          ld  hl,(hl)
 2185 D1:C39F 06 00 -  -          ld  b,0
 2186 D1:C3A1 DD 86 01 -          add a,(ix+REGX)
 2187 D1:C3A4 4F -  -  -          ld  c,a
 2188 D1:C3A5 30 04 -  -          jr  nc,+_
 2189 D1:C3A7 04 -  -  -          inc b
 2190 D1:C3A8 14 -  -  -          inc d
 2191 D1:C3A9 FD 23 -  -          ADDCYC(1)
 2192 D1:C3AB 09 -  -  -  _:      add hl,bc   ;full address
 2193 D1:C3AC 7E -  -  -          READ_ACCESS
 2194 D1:C3AD E1 -  -  -      pop hl
 2195 D1:C3AE DD B6 00 -      or  a,(ix+REGA)
 2196 D1:C3B1 DD 77 00 -      ld  (ix+REGA),A
 2197 D1:C3B4 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2198 D1:C3C7 C3 1E B3 D1     jp i6502NextLoad
 2199 D1:C3CB -  -  -  -  
 2200 D1:C3CB -  -  -  -  ;absolute,Y	ORA oper,Y	19	3	4* 
 2201 D1:C3CB -  -  -  -  inst6502_ora_absy:
 2202 D1:C3CB ED 33 04 -      ADDCYC(4)
 2203 D1:C3CE CD 3B B5 D1     call subroutine6502_abs_split_start
 2204 D1:C3D2 E5 -  -  -      push hl
 2205 D1:C3D3 50 -  -  -          ld  d,b
 2206 D1:C3D4 79 -  -  -          ld  a,c
 2207 D1:C3D5 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2208 D1:C3D7 ED 4C -  -          mlt bc
 2209 D1:C3D9 21 00 40 D0         ld  hl,PAGETABLE
 2210 D1:C3DD 09 -  -  -          add hl,bc
 2211 D1:C3DE ED 27 -  -          ld  hl,(hl)
 2212 D1:C3E0 06 00 -  -          ld  b,0
 2213 D1:C3E2 DD 86 02 -          add a,(ix+REGY)
 2214 D1:C3E5 4F -  -  -          ld  c,a
 2215 D1:C3E6 30 04 -  -          jr  nc,+_
 2216 D1:C3E8 04 -  -  -          inc b
 2217 D1:C3E9 14 -  -  -          inc d
 2218 D1:C3EA FD 23 -  -          ADDCYC(1)
 2219 D1:C3EC 09 -  -  -  _:      add hl,bc   ;full address
 2220 D1:C3ED 7E -  -  -          READ_ACCESS
 2221 D1:C3EE E1 -  -  -      pop hl
 2222 D1:C3EF DD B6 00 -      or  a,(ix+REGA)
 2223 D1:C3F2 DD 77 00 -      ld  (ix+REGA),A
 2224 D1:C3F5 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2225 D1:C408 C3 1E B3 D1     jp i6502NextLoad
 2226 D1:C40C -  -  -  -  
 2227 D1:C40C -  -  -  -  ;(indirect,X)	ORA (oper,X)	01	2	6  
 2228 D1:C40C -  -  -  -  inst6502_ora_indx:
 2229 D1:C40C ED 33 06 -      ADDCYC(6)
 2230 D1:C40F E5 -  -  -      push hl
 2231 D1:C410 7E -  -  -          ld  a,(hl)
 2232 D1:C411 21 00 38 D0         ld  hl,ZEROPAGE
 2233 D1:C415 85 -  -  -          add a,L
 2234 D1:C416 DD 86 01 -          add a,(ix+REGX)
 2235 D1:C419 6F -  -  -          ld  L,a
 2236 D1:C41A 7E -  -  -          ld  a,(hl)
 2237 D1:C41B 2C -  -  -          inc L
 2238 D1:C41C 56 -  -  -          ld  d,(hl)
 2239 D1:C41D 42 -  -  -          ld  b,d
 2240 D1:C41E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2241 D1:C420 ED 4C -  -          mlt bc
 2242 D1:C422 21 00 40 D0         ld  hl,PAGETABLE
 2243 D1:C426 09 -  -  -          add hl,bc
 2244 D1:C427 ED 27 -  -          ld  hl,(hl)
 2245 D1:C429 06 00 -  -          ld  b,0
 2246 D1:C42B 4F -  -  -          ld  c,a
 2247 D1:C42C 09 -  -  -          add hl,bc
 2248 D1:C42D 7E -  -  -          READ_ACCESS
 2249 D1:C42E E1 -  -  -      pop hl
 2250 D1:C42F DD B6 00 -      or  a,(ix+REGA)
 2251 D1:C432 DD 77 00 -      ld  (ix+REGA),A
 2252 D1:C435 DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2253 D1:C448 C3 1E B3 D1     jp i6502NextLoad
 2254 D1:C44C -  -  -  -  
 2255 D1:C44C -  -  -  -  ;(indirect),Y	ORA (oper),Y	11	2	5* 
 2256 D1:C44C -  -  -  -  inst6502_ora_indy:
 2257 D1:C44C ED 33 05 -      ADDCYC(5)
 2258 D1:C44F E5 -  -  -      push hl
 2259 D1:C450 7E -  -  -          ld  a,(hl)
 2260 D1:C451 21 00 38 D0         ld  hl,ZEROPAGE
 2261 D1:C455 85 -  -  -          add a,L
 2262 D1:C456 6F -  -  -          ld  L,a
 2263 D1:C457 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2264 D1:C458 2C -  -  -          inc L
 2265 D1:C459 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2266 D1:C45C 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2267 D1:C45D 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2268 D1:C45F 24 -  -  -          inc h
 2269 D1:C460 FD 23 -  -          ADDCYC(1)
 2270 D1:C462 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2271 D1:C463 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2272 D1:C465 ED 6C -  -          mlt hl          ;23.
 2273 D1:C467 01 00 40 D0         ld  bc,PAGETABLE
 2274 D1:C46B 09 -  -  -          add hl,bc
 2275 D1:C46C ED 27 -  -          ld  hl,(hl)     ;address get.
 2276 D1:C46E 01 00 00 00         ld  bc,0
 2277 D1:C472 4F -  -  -          ld  c,a
 2278 D1:C473 09 -  -  -          add hl,bc       ;Full address get.
 2279 D1:C474 7E -  -  -          READ_ACCESS
 2280 D1:C475 E1 -  -  -      pop hl
 2281 D1:C476 DD B6 00 -      or  a,(ix+REGA)
 2282 D1:C479 DD 77 00 -      ld  (ix+REGA),A
 2283 D1:C47C DD 46 04 87 
              CB 88 20 02 
              CB C8 -  -      FLAGS_ZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              CB B8 30 02 
              CB F8 DD 70 
              04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2284 D1:C48F C3 1E B3 D1     jp i6502NextLoad
 2285 D1:C493 -  -  -  -  
 2286 D1:C493 -  -  -  -  ;-----------------------------------------------------------------------------
 2287 D1:C493 -  -  -  -  ;-----------------------------------------------------------------------------
 2288 D1:C493 -  -  -  -  ;-----------------------------------------------------------------------------
 2289 D1:C493 -  -  -  -  ;Instructions by type: Shift & Rotate Instructions
 2290 D1:C493 -  -  -  -  ;ASL - Shift Left One Bit (Memory or Accumulator)
 2291 D1:C493 -  -  -  -  ;C <- [76543210] <- 0
 2292 D1:C493 -  -  -  -  ;N	Z	C	I	D	V
 2293 D1:C493 -  -  -  -  ;+	+	+	-	-	-
 2294 D1:C493 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2295 D1:C493 -  -  -  -  
 2296 D1:C493 -  -  -  -  ;accumulator	ASL A	0A	1	2  
 2297 D1:C493 -  -  -  -  inst6502_asl:
 2298 D1:C493 ED 33 02 -      ADDCYC(2)
 2299 D1:C496 DD CB 00 26     sla (ix+REGA)
 2300 D1:C49A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2301 D1:C4B3 C3 37 B3 D1     jp i6502FinishLoad
 2302 D1:C4B7 -  -  -  -  
 2303 D1:C4B7 -  -  -  -  ;zeropage	ASL oper	06	2	5  
 2304 D1:C4B7 -  -  -  -  inst6502_asl_zp:
 2305 D1:C4B7 ED 33 05 -      ADDCYC(5)
 2306 D1:C4BA 7E -  -  -      ld  a,(hl)
 2307 D1:C4BB 01 00 38 D0     ld  bc,ZEROPAGE
 2308 D1:C4BF 81 -  -  -      add a,c
 2309 D1:C4C0 4F -  -  -      ld  c,a
 2310 D1:C4C1 0A -  -  -      ld  a,(bc)
 2311 D1:C4C2 CB 27 -  -      sla a
 2312 D1:C4C4 02 -  -  -      ld  (bc),a
 2313 D1:C4C5 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2314 D1:C4DE C3 1E B3 D1     jp i6502NextLoad
 2315 D1:C4E2 -  -  -  -  
 2316 D1:C4E2 -  -  -  -  ;zeropage,X	ASL oper,X	16	2	6  
 2317 D1:C4E2 -  -  -  -  inst6502_asl_zpx:
 2318 D1:C4E2 ED 33 06 -      ADDCYC(6)
 2319 D1:C4E5 7E -  -  -      ld  a,(hl)
 2320 D1:C4E6 01 00 38 D0     ld  bc,ZEROPAGE
 2321 D1:C4EA 81 -  -  -      add a,c
 2322 D1:C4EB DD 86 01 -      add a,(ix+REGX)
 2323 D1:C4EE 4F -  -  -      ld  c,a
 2324 D1:C4EF 0A -  -  -      ld  a,(bc)
 2325 D1:C4F0 CB 27 -  -      sla a
 2326 D1:C4F2 02 -  -  -      ld  (bc),a
 2327 D1:C4F3 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2328 D1:C50C C3 1E B3 D1     jp i6502NextLoad
 2329 D1:C510 -  -  -  -  
 2330 D1:C510 -  -  -  -  ;absolute	ASL oper	0E	3	6  
 2331 D1:C510 -  -  -  -  inst6502_asl_abs:
 2332 D1:C510 ED 33 06 -      ADDCYC(6)
 2333 D1:C513 CD 3B B5 D1     call subroutine6502_abs_split_start
 2334 D1:C517 E5 -  -  -      push hl
 2335 D1:C518 50 -  -  -          ld  d,b
 2336 D1:C519 79 -  -  -          ld  a,c
 2337 D1:C51A 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2338 D1:C51C ED 4C -  -          mlt bc
 2339 D1:C51E 21 00 40 D0         ld  hl,PAGETABLE
 2340 D1:C522 09 -  -  -          add hl,bc
 2341 D1:C523 ED 27 -  -          ld  hl,(hl)
 2342 D1:C525 06 00 -  -          ld  b,0
 2343 D1:C527 4F -  -  -          ld  c,a
 2344 D1:C528 09 -  -  -          add hl,bc   ;full address
 2345 D1:C529 7E -  -  -          READ_ACCESS
 2346 D1:C52A E1 -  -  -      pop hl
 2347 D1:C52B 7E -  -  -      ld  a,(hl)
 2348 D1:C52C CB 27 -  -      sla a
 2349 D1:C52E 47 -  -  -      ld  b,a
 2350 D1:C52F DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2351 D1:C548 70 -  -  -      WRITE_ACCESS
 2352 D1:C549 C3 1E B3 D1     jp i6502NextLoad
 2353 D1:C54D -  -  -  -  
 2354 D1:C54D -  -  -  -  ;absolute,X	ASL oper,X	1E	3	7  
 2355 D1:C54D -  -  -  -  inst6502_asl_absx:
 2356 D1:C54D ED 33 07 -      ADDCYC(7)
 2357 D1:C550 CD 3B B5 D1     call subroutine6502_abs_split_start
 2358 D1:C554 E5 -  -  -      push hl
 2359 D1:C555 50 -  -  -          ld  d,b
 2360 D1:C556 79 -  -  -          ld  a,c
 2361 D1:C557 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2362 D1:C559 ED 4C -  -          mlt bc
 2363 D1:C55B 21 00 40 D0         ld  hl,PAGETABLE
 2364 D1:C55F 09 -  -  -          add hl,bc
 2365 D1:C560 ED 27 -  -          ld  hl,(hl)
 2366 D1:C562 06 00 -  -          ld  b,0
 2367 D1:C564 DD 86 01 -          add a,(ix+REGX)
 2368 D1:C567 4F -  -  -          ld  c,a
 2369 D1:C568 30 02 -  -          jr  nc,+_
 2370 D1:C56A 04 -  -  -          inc b
 2371 D1:C56B 14 -  -  -          inc d
 2372 D1:C56C 09 -  -  -  _:      add hl,bc   ;full address
 2373 D1:C56D 7E -  -  -          READ_ACCESS
 2374 D1:C56E E1 -  -  -      pop hl
 2375 D1:C56F 7E -  -  -      ld  a,(hl)
 2376 D1:C570 CB 27 -  -      sla a
 2377 D1:C572 47 -  -  -      ld  b,a
 2378 D1:C573 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2379 D1:C58C 70 -  -  -      WRITE_ACCESS
 2380 D1:C58D C3 1E B3 D1     jp i6502NextLoad
 2381 D1:C591 -  -  -  -  
 2382 D1:C591 -  -  -  -  ;-----------------------------------------------------------------------------
 2383 D1:C591 -  -  -  -  ;LSR - Shift One Bit Right (Memory or Accumulator)
 2384 D1:C591 -  -  -  -  ;0 -> [76543210] -> C
 2385 D1:C591 -  -  -  -  ;N	Z	C	I	D	V
 2386 D1:C591 -  -  -  -  ;0	+	+	-	-	-
 2387 D1:C591 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2388 D1:C591 -  -  -  -  
 2389 D1:C591 -  -  -  -  ;accumulator	LSR A	4A	1	2  
 2390 D1:C591 -  -  -  -  inst6502_lsr:
 2391 D1:C591 ED 33 02 -      ADDCYC(2)
 2392 D1:C594 DD CB 00 3E     srl (ix+REGA)
 2393 D1:C598 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2394 D1:C5B1 C3 37 B3 D1     jp i6502FinishLoad
 2395 D1:C5B5 -  -  -  -  
 2396 D1:C5B5 -  -  -  -  ;zeropage	LSR oper	46	2	5  
 2397 D1:C5B5 -  -  -  -  inst6502_lsr_zp:
 2398 D1:C5B5 ED 33 05 -      ADDCYC(5)
 2399 D1:C5B8 7E -  -  -      ld  a,(hl)
 2400 D1:C5B9 01 00 38 D0     ld  bc,ZEROPAGE
 2401 D1:C5BD 81 -  -  -      add a,c
 2402 D1:C5BE 4F -  -  -      ld  c,a
 2403 D1:C5BF 0A -  -  -      ld  a,(bc)
 2404 D1:C5C0 CB 3F -  -      srl a
 2405 D1:C5C2 02 -  -  -      ld  (bc),a
 2406 D1:C5C3 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2407 D1:C5DC C3 1E B3 D1     jp i6502NextLoad
 2408 D1:C5E0 -  -  -  -  
 2409 D1:C5E0 -  -  -  -  ;zeropage,X	LSR oper,X	56	2	6  
 2410 D1:C5E0 -  -  -  -  inst6502_lsr_zpx:
 2411 D1:C5E0 ED 33 06 -      ADDCYC(6)
 2412 D1:C5E3 7E -  -  -      ld  a,(hl)
 2413 D1:C5E4 01 00 38 D0     ld  bc,ZEROPAGE
 2414 D1:C5E8 81 -  -  -      add a,c
 2415 D1:C5E9 DD 86 01 -      add a,(ix+REGX)
 2416 D1:C5EC 4F -  -  -      ld  c,a
 2417 D1:C5ED 0A -  -  -      ld  a,(bc)
 2418 D1:C5EE CB 3F -  -      srl a
 2419 D1:C5F0 02 -  -  -      ld  (bc),a
 2420 D1:C5F1 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2421 D1:C60A C3 1E B3 D1     jp i6502NextLoad
 2422 D1:C60E -  -  -  -      
 2423 D1:C60E -  -  -  -  ;absolute	LSR oper	4E	3	6  
 2424 D1:C60E -  -  -  -  inst6502_lsr_abs:
 2425 D1:C60E ED 33 06 -      ADDCYC(6)
 2426 D1:C611 CD 3B B5 D1     call subroutine6502_abs_split_start
 2427 D1:C615 E5 -  -  -      push hl
 2428 D1:C616 50 -  -  -          ld  d,b
 2429 D1:C617 79 -  -  -          ld  a,c
 2430 D1:C618 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2431 D1:C61A ED 4C -  -          mlt bc
 2432 D1:C61C 21 00 40 D0         ld  hl,PAGETABLE
 2433 D1:C620 09 -  -  -          add hl,bc
 2434 D1:C621 ED 27 -  -          ld  hl,(hl)
 2435 D1:C623 06 00 -  -          ld  b,0
 2436 D1:C625 4F -  -  -          ld  c,a
 2437 D1:C626 09 -  -  -          add hl,bc   ;full address
 2438 D1:C627 7E -  -  -          READ_ACCESS
 2439 D1:C628 E1 -  -  -      pop hl
 2440 D1:C629 7E -  -  -      ld  a,(hl)
 2441 D1:C62A CB 3F -  -      srl a
 2442 D1:C62C 47 -  -  -      ld  b,a
 2443 D1:C62D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2444 D1:C646 70 -  -  -      WRITE_ACCESS
 2445 D1:C647 C3 1E B3 D1     jp i6502NextLoad
 2446 D1:C64B -  -  -  -  
 2447 D1:C64B -  -  -  -  ;absolute,X	LSR oper,X	5E	3	7  
 2448 D1:C64B -  -  -  -  inst6502_lsr_absx:
 2449 D1:C64B ED 33 07 -      ADDCYC(7)
 2450 D1:C64E CD 3B B5 D1     call subroutine6502_abs_split_start
 2451 D1:C652 E5 -  -  -      push hl
 2452 D1:C653 50 -  -  -          ld  d,b
 2453 D1:C654 79 -  -  -          ld  a,c
 2454 D1:C655 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2455 D1:C657 ED 4C -  -          mlt bc
 2456 D1:C659 21 00 40 D0         ld  hl,PAGETABLE
 2457 D1:C65D 09 -  -  -          add hl,bc
 2458 D1:C65E ED 27 -  -          ld  hl,(hl)
 2459 D1:C660 06 00 -  -          ld  b,0
 2460 D1:C662 DD 86 01 -          add a,(ix+REGX)
 2461 D1:C665 4F -  -  -          ld  c,a
 2462 D1:C666 30 02 -  -          jr  nc,+_
 2463 D1:C668 04 -  -  -          inc b
 2464 D1:C669 14 -  -  -          inc d
 2465 D1:C66A 09 -  -  -  _:      add hl,bc   ;full address
 2466 D1:C66B 7E -  -  -          READ_ACCESS
 2467 D1:C66C E1 -  -  -      pop hl
 2468 D1:C66D 7E -  -  -      ld  a,(hl)
 2469 D1:C66E CB 3F -  -      srl a
 2470 D1:C670 47 -  -  -      ld  b,a
 2471 D1:C671 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2472 D1:C68A 70 -  -  -      WRITE_ACCESS
 2473 D1:C68B C3 1E B3 D1     jp i6502NextLoad
 2474 D1:C68F -  -  -  -  
 2475 D1:C68F -  -  -  -  ;-----------------------------------------------------------------------------
 2476 D1:C68F -  -  -  -  ;ROL - Rotate One Bit Left (Memory or Accumulator)
 2477 D1:C68F -  -  -  -  ;C <- [76543210] <- C
 2478 D1:C68F -  -  -  -  ;N	Z	C	I	D	V
 2479 D1:C68F -  -  -  -  ;+	+	+	-	-	-
 2480 D1:C68F -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2481 D1:C68F -  -  -  -  
 2482 D1:C68F -  -  -  -  ;accumulator	ROL A	2A	1	2  
 2483 D1:C68F -  -  -  -  inst6502_rol:
 2484 D1:C68F ED 33 02 -      ADDCYC(2)
 2485 D1:C692 DD 7E 04 -      ld  a,(ix+REGSR)
 2486 D1:C695 1F -  -  -      rra
 2487 D1:C696 DD CB 00 16     rl (ix+REGA)
 2488 D1:C69A DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2489 D1:C6B3 C3 37 B3 D1     jp i6502FinishLoad
 2490 D1:C6B7 -  -  -  -  
 2491 D1:C6B7 -  -  -  -  ;zeropage	ROL oper	26	2	5  
 2492 D1:C6B7 -  -  -  -  inst6502_rol_zp:
 2493 D1:C6B7 ED 33 05 -      ADDCYC(5)
 2494 D1:C6BA 7E -  -  -      ld  a,(hl)
 2495 D1:C6BB 01 00 38 D0     ld  bc,ZEROPAGE
 2496 D1:C6BF 81 -  -  -      add a,c
 2497 D1:C6C0 4F -  -  -      ld  c,a
 2498 D1:C6C1 DD 7E 04 -      ld  a,(ix+REGSR)
 2499 D1:C6C4 1F -  -  -      rra
 2500 D1:C6C5 0A -  -  -      ld  a,(bc)
 2501 D1:C6C6 17 -  -  -      rla
 2502 D1:C6C7 02 -  -  -      ld  (bc),a
 2503 D1:C6C8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2504 D1:C6E1 C3 1E B3 D1     jp i6502NextLoad
 2505 D1:C6E5 -  -  -  -  
 2506 D1:C6E5 -  -  -  -  ;zeropage,X	ROL oper,X	36	2	6  
 2507 D1:C6E5 -  -  -  -  inst6502_rol_zpx:
 2508 D1:C6E5 ED 33 06 -      ADDCYC(6)
 2509 D1:C6E8 7E -  -  -      ld  a,(hl)
 2510 D1:C6E9 01 00 38 D0     ld  bc,ZEROPAGE
 2511 D1:C6ED 81 -  -  -      add a,c
 2512 D1:C6EE DD 86 01 -      add a,(ix+REGX)
 2513 D1:C6F1 4F -  -  -      ld  c,a
 2514 D1:C6F2 DD 7E 04 -      ld  a,(ix+REGSR)
 2515 D1:C6F5 1F -  -  -      rra
 2516 D1:C6F6 0A -  -  -      ld  a,(bc)
 2517 D1:C6F7 17 -  -  -      rla
 2518 D1:C6F8 02 -  -  -      ld  (bc),a
 2519 D1:C6F9 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2520 D1:C712 C3 1E B3 D1     jp i6502NextLoad
 2521 D1:C716 -  -  -  -  
 2522 D1:C716 -  -  -  -  ;absolute	ROL oper	2E	3	6  
 2523 D1:C716 -  -  -  -  inst6502_rol_abs:
 2524 D1:C716 ED 33 06 -      ADDCYC(6)
 2525 D1:C719 CD 3B B5 D1     call subroutine6502_abs_split_start
 2526 D1:C71D E5 -  -  -      push hl
 2527 D1:C71E 50 -  -  -          ld  d,b
 2528 D1:C71F 79 -  -  -          ld  a,c
 2529 D1:C720 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2530 D1:C722 ED 4C -  -          mlt bc
 2531 D1:C724 21 00 40 D0         ld  hl,PAGETABLE
 2532 D1:C728 09 -  -  -          add hl,bc
 2533 D1:C729 ED 27 -  -          ld  hl,(hl)
 2534 D1:C72B 06 00 -  -          ld  b,0
 2535 D1:C72D 4F -  -  -          ld  c,a
 2536 D1:C72E 09 -  -  -          add hl,bc   ;full address
 2537 D1:C72F 7E -  -  -          READ_ACCESS
 2538 D1:C730 E1 -  -  -      pop hl
 2539 D1:C731 DD 7E 04 -      ld  a,(ix+REGSR)
 2540 D1:C734 1F -  -  -      rra
 2541 D1:C735 7E -  -  -      ld  a,(hl)
 2542 D1:C736 17 -  -  -      rla
 2543 D1:C737 47 -  -  -      ld  b,a
 2544 D1:C738 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2545 D1:C751 70 -  -  -      WRITE_ACCESS
 2546 D1:C752 C3 1E B3 D1     jp i6502NextLoad
 2547 D1:C756 -  -  -  -  
 2548 D1:C756 -  -  -  -  ;absolute,X	ROL oper,X	3E	3	7  
 2549 D1:C756 -  -  -  -  inst6502_rol_absx:
 2550 D1:C756 ED 33 07 -      ADDCYC(7)
 2551 D1:C759 CD 3B B5 D1     call subroutine6502_abs_split_start
 2552 D1:C75D E5 -  -  -      push hl
 2553 D1:C75E 50 -  -  -          ld  d,b
 2554 D1:C75F 79 -  -  -          ld  a,c
 2555 D1:C760 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2556 D1:C762 ED 4C -  -          mlt bc
 2557 D1:C764 21 00 40 D0         ld  hl,PAGETABLE
 2558 D1:C768 09 -  -  -          add hl,bc
 2559 D1:C769 ED 27 -  -          ld  hl,(hl)
 2560 D1:C76B 06 00 -  -          ld  b,0
 2561 D1:C76D DD 86 01 -          add a,(ix+REGX)
 2562 D1:C770 4F -  -  -          ld  c,a
 2563 D1:C771 30 02 -  -          jr  nc,+_
 2564 D1:C773 04 -  -  -          inc b
 2565 D1:C774 14 -  -  -          inc d
 2566 D1:C775 09 -  -  -  _:      add hl,bc   ;full address
 2567 D1:C776 7E -  -  -          READ_ACCESS
 2568 D1:C777 E1 -  -  -      pop hl
 2569 D1:C778 DD 7E 04 -      ld  a,(ix+REGSR)
 2570 D1:C77B 1F -  -  -      rra
 2571 D1:C77C 7E -  -  -      ld  a,(hl)
 2572 D1:C77D 17 -  -  -      rla
 2573 D1:C77E 47 -  -  -      ld  b,a
 2574 D1:C77F DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2575 D1:C798 70 -  -  -      WRITE_ACCESS
 2576 D1:C799 C3 1E B3 D1     jp i6502NextLoad
 2577 D1:C79D -  -  -  -  
 2578 D1:C79D -  -  -  -  ;-----------------------------------------------------------------------------
 2579 D1:C79D -  -  -  -  ;ROR - Rotate One Bit Right (Memory or Accumulator)
 2580 D1:C79D -  -  -  -  ;C -> [76543210] -> C
 2581 D1:C79D -  -  -  -  ;N	Z	C	I	D	V
 2582 D1:C79D -  -  -  -  ;+	+	+	-	-	-
 2583 D1:C79D -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2584 D1:C79D -  -  -  -  
 2585 D1:C79D -  -  -  -  ;accumulator	ROR A	6A	1	2  
 2586 D1:C79D -  -  -  -  inst6502_ror:
 2587 D1:C79D ED 33 02 -      ADDCYC(2)
 2588 D1:C7A0 DD 7E 04 -      ld  a,(ix+REGSR)
 2589 D1:C7A3 1F -  -  -      rra
 2590 D1:C7A4 DD CB 00 1E     rr  (ix+REGA)
 2591 D1:C7A8 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2592 D1:C7C1 C3 37 B3 D1     jp i6502FinishLoad
 2593 D1:C7C5 -  -  -  -  
 2594 D1:C7C5 -  -  -  -  ;zeropage	ROR oper	66	2	5  
 2595 D1:C7C5 -  -  -  -  inst6502_ror_zp:
 2596 D1:C7C5 ED 33 05 -      ADDCYC(5)
 2597 D1:C7C8 7E -  -  -      ld  a,(hl)
 2598 D1:C7C9 01 00 38 D0     ld  bc,ZEROPAGE
 2599 D1:C7CD 81 -  -  -      add a,c
 2600 D1:C7CE 4F -  -  -      ld  c,a
 2601 D1:C7CF DD 7E 04 -      ld  a,(ix+REGSR)
 2602 D1:C7D2 1F -  -  -      rra
 2603 D1:C7D3 0A -  -  -      ld  a,(bc)
 2604 D1:C7D4 1F -  -  -      rra
 2605 D1:C7D5 02 -  -  -      ld  (bc),a
 2606 D1:C7D6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2607 D1:C7EF C3 1E B3 D1     jp i6502NextLoad
 2608 D1:C7F3 -  -  -  -  
 2609 D1:C7F3 -  -  -  -  ;zeropage,X	ROR oper,X	76	2	6  
 2610 D1:C7F3 -  -  -  -  inst6502_ror_zpx:
 2611 D1:C7F3 ED 33 06 -      ADDCYC(6)
 2612 D1:C7F6 7E -  -  -      ld  a,(hl)
 2613 D1:C7F7 01 00 38 D0     ld  bc,ZEROPAGE
 2614 D1:C7FB 81 -  -  -      add a,c
 2615 D1:C7FC DD 86 01 -      add a,(ix+REGX)
 2616 D1:C7FF 4F -  -  -      ld  c,a
 2617 D1:C800 DD 7E 04 -      ld  a,(ix+REGSR)
 2618 D1:C803 1F -  -  -      rra
 2619 D1:C804 0A -  -  -      ld  a,(bc)
 2620 D1:C805 1F -  -  -      rra
 2621 D1:C806 02 -  -  -      ld  (bc),a
 2622 D1:C807 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2623 D1:C820 C3 1E B3 D1     jp i6502NextLoad
 2624 D1:C824 -  -  -  -  
 2625 D1:C824 -  -  -  -  ;absolute	ROR oper	6E	3	6  
 2626 D1:C824 -  -  -  -  inst6502_ror_abs:
 2627 D1:C824 ED 33 06 -      ADDCYC(6)
 2628 D1:C827 CD 3B B5 D1     call subroutine6502_abs_split_start
 2629 D1:C82B E5 -  -  -      push hl
 2630 D1:C82C 50 -  -  -          ld  d,b
 2631 D1:C82D 79 -  -  -          ld  a,c
 2632 D1:C82E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2633 D1:C830 ED 4C -  -          mlt bc
 2634 D1:C832 21 00 40 D0         ld  hl,PAGETABLE
 2635 D1:C836 09 -  -  -          add hl,bc
 2636 D1:C837 ED 27 -  -          ld  hl,(hl)
 2637 D1:C839 06 00 -  -          ld  b,0
 2638 D1:C83B 4F -  -  -          ld  c,a
 2639 D1:C83C 09 -  -  -          add hl,bc   ;full address
 2640 D1:C83D 7E -  -  -          READ_ACCESS
 2641 D1:C83E E1 -  -  -      pop hl
 2642 D1:C83F DD 7E 04 -      ld  a,(ix+REGSR)
 2643 D1:C842 1F -  -  -      rra
 2644 D1:C843 7E -  -  -      ld  a,(hl)
 2645 D1:C844 1F -  -  -      rra
 2646 D1:C845 47 -  -  -      ld  b,a
 2647 D1:C846 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2648 D1:C85F 70 -  -  -      WRITE_ACCESS
 2649 D1:C860 C3 1E B3 D1     jp i6502NextLoad
 2650 D1:C864 -  -  -  -  
 2651 D1:C864 -  -  -  -  ;absolute,X	ROR oper,X	7E	3	7  
 2652 D1:C864 -  -  -  -  inst6502_ror_absx:
 2653 D1:C864 ED 33 07 -      ADDCYC(7)
 2654 D1:C867 CD 3B B5 D1     call subroutine6502_abs_split_start
 2655 D1:C86B E5 -  -  -      push hl
 2656 D1:C86C 50 -  -  -          ld  d,b
 2657 D1:C86D 79 -  -  -          ld  a,c
 2658 D1:C86E 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2659 D1:C870 ED 4C -  -          mlt bc
 2660 D1:C872 21 00 40 D0         ld  hl,PAGETABLE
 2661 D1:C876 09 -  -  -          add hl,bc
 2662 D1:C877 ED 27 -  -          ld  hl,(hl)
 2663 D1:C879 06 00 -  -          ld  b,0
 2664 D1:C87B DD 86 01 -          add a,(ix+REGX)
 2665 D1:C87E 4F -  -  -          ld  c,a
 2666 D1:C87F 30 02 -  -          jr  nc,+_
 2667 D1:C881 04 -  -  -          inc b
 2668 D1:C882 14 -  -  -          inc d
 2669 D1:C883 09 -  -  -  _:      add hl,bc   ;full address
 2670 D1:C884 7E -  -  -          READ_ACCESS
 2671 D1:C885 E1 -  -  -      pop hl
 2672 D1:C886 DD 7E 04 -      ld  a,(ix+REGSR)
 2673 D1:C889 1F -  -  -      rra
 2674 D1:C88A 7E -  -  -      ld  a,(hl)
 2675 D1:C88B 1F -  -  -      rra
 2676 D1:C88C 47 -  -  -      ld  b,a
 2677 D1:C88D DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2678 D1:C8A6 70 -  -  -      WRITE_ACCESS
 2679 D1:C8A7 C3 1E B3 D1     jp i6502NextLoad
 2680 D1:C8AB -  -  -  -  
 2681 D1:C8AB -  -  -  -  ;-----------------------------------------------------------------------------
 2682 D1:C8AB -  -  -  -  ;-----------------------------------------------------------------------------
 2683 D1:C8AB -  -  -  -  ;-----------------------------------------------------------------------------
 2684 D1:C8AB -  -  -  -  ;Instructions by type: Flag Instructions
 2685 D1:C8AB -  -  -  -  
 2686 D1:C8AB -  -  -  -  ;CLC - Clear Carry Flag
 2687 D1:C8AB -  -  -  -  ;0 -> C
 2688 D1:C8AB -  -  -  -  ;N	Z	C	I	D	V
 2689 D1:C8AB -  -  -  -  ;-	-	0	-	-	-
 2690 D1:C8AB -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2691 D1:C8AB -  -  -  -  ;implied	CLC	18	1	2  
 2692 D1:C8AB -  -  -  -  inst6502_clc:
 2693 D1:C8AB DD CB 04 86     res SF_CARRY,(ix+REGSR)
 2694 D1:C8AF C3 37 B3 D1     jp  i6502FinishLoad
 2695 D1:C8B3 -  -  -  -  
 2696 D1:C8B3 -  -  -  -  ;CLD - Clear Decimal Mode
 2697 D1:C8B3 -  -  -  -  ;0 -> D
 2698 D1:C8B3 -  -  -  -  ;N	Z	C	I	D	V
 2699 D1:C8B3 -  -  -  -  ;-	-	-	-	0	-
 2700 D1:C8B3 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2701 D1:C8B3 -  -  -  -  ;implied	CLD	D8	1	2  
 2702 D1:C8B3 -  -  -  -  inst6502_cld:
 2703 D1:C8B3 DD CB 04 9E     res SF_DEC,(ix+REGSR)
 2704 D1:C8B7 C3 37 B3 D1     jp  i6502FinishLoad
 2705 D1:C8BB -  -  -  -  
 2706 D1:C8BB -  -  -  -  ;CLI -  Clear Interrupt Disable Bit
 2707 D1:C8BB -  -  -  -  ;0 -> I
 2708 D1:C8BB -  -  -  -  ;N	Z	C	I	D	V
 2709 D1:C8BB -  -  -  -  ;-	-	-	0	-	-
 2710 D1:C8BB -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2711 D1:C8BB -  -  -  -  ;implied	CLI	58	1	2  
 2712 D1:C8BB -  -  -  -  inst6502_cli:
 2713 D1:C8BB DD CB 04 96     res SF_INT,(ix+REGSR)
 2714 D1:C8BF C3 37 B3 D1     jp  i6502FinishLoad
 2715 D1:C8C3 -  -  -  -  
 2716 D1:C8C3 -  -  -  -  ;CLV - Clear Overflow Flag
 2717 D1:C8C3 -  -  -  -  ;0 -> V
 2718 D1:C8C3 -  -  -  -  ;N	Z	C	I	D	V
 2719 D1:C8C3 -  -  -  -  ;-	-	-	-	-	0
 2720 D1:C8C3 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2721 D1:C8C3 -  -  -  -  ;implied	CLV	B8	1	2  
 2722 D1:C8C3 -  -  -  -  inst6502_clv:
 2723 D1:C8C3 DD CB 04 B6     res SF_OVER,(ix+REGSR)
 2724 D1:C8C7 C3 37 B3 D1     jp  i6502FinishLoad
 2725 D1:C8CB -  -  -  -  
 2726 D1:C8CB -  -  -  -  ;SEC - Set Carry Flag
 2727 D1:C8CB -  -  -  -  ;1 -> C
 2728 D1:C8CB -  -  -  -  ;N	Z	C	I	D	V
 2729 D1:C8CB -  -  -  -  ;-	-	1	-	-	-
 2730 D1:C8CB -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2731 D1:C8CB -  -  -  -  ;implied	SEC	38	1	2  
 2732 D1:C8CB -  -  -  -  inst6502_sec:
 2733 D1:C8CB DD CB 04 C6     set SF_CARRY,(ix+REGSR)
 2734 D1:C8CF C3 37 B3 D1     jp  i6502FinishLoad
 2735 D1:C8D3 -  -  -  -  
 2736 D1:C8D3 -  -  -  -  ;SED - Set Decimal Flag
 2737 D1:C8D3 -  -  -  -  ;1 -> D
 2738 D1:C8D3 -  -  -  -  ;N	Z	C	I	D	V
 2739 D1:C8D3 -  -  -  -  ;-	-	-	-	1	-
 2740 D1:C8D3 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2741 D1:C8D3 -  -  -  -  ;implied	SED	F8	1	2  
 2742 D1:C8D3 -  -  -  -  inst6502_sed:
 2743 D1:C8D3 DD CB 04 DE     set SF_DEC,(ix+REGSR)
 2744 D1:C8D7 C3 37 B3 D1     jp  i6502FinishLoad
 2745 D1:C8DB -  -  -  -  
 2746 D1:C8DB -  -  -  -  ;SEI - Set Interrupt Disable Status
 2747 D1:C8DB -  -  -  -  ;1 -> I
 2748 D1:C8DB -  -  -  -  ;N	Z	C	I	D	V
 2749 D1:C8DB -  -  -  -  ;-	-	-	1	-	-
 2750 D1:C8DB -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2751 D1:C8DB -  -  -  -  ;implied	SEI	78	1	2  
 2752 D1:C8DB -  -  -  -  inst6502_sei:
 2753 D1:C8DB DD CB 04 D6     set SF_INT,(ix+REGSR)
 2754 D1:C8DF C3 37 B3 D1     jp  i6502FinishLoad
 2755 D1:C8E3 -  -  -  -  
 2756 D1:C8E3 -  -  -  -  ;-----------------------------------------------------------------------------
 2757 D1:C8E3 -  -  -  -  ;-----------------------------------------------------------------------------
 2758 D1:C8E3 -  -  -  -  ;-----------------------------------------------------------------------------
 2759 D1:C8E3 -  -  -  -  ;Instructions by type: Comparisons
 2760 D1:C8E3 -  -  -  -  
 2761 D1:C8E3 -  -  -  -  ;CMP - Compare Memory with Accumulator
 2762 D1:C8E3 -  -  -  -  ;A - M
 2763 D1:C8E3 -  -  -  -  ;N	Z	C	I	D	V
 2764 D1:C8E3 -  -  -  -  ;+	+	+	-	-	-
 2765 D1:C8E3 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2766 D1:C8E3 -  -  -  -  
 2767 D1:C8E3 -  -  -  -  ;immediate	CMP #oper	C9	2	2  
 2768 D1:C8E3 -  -  -  -  inst6502_cmp_imm:
 2769 D1:C8E3 ED 33 02 -      ADDCYC(2)
 2770 D1:C8E6 46 -  -  -      ld  b,(hl)
 2771 D1:C8E7 C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2772 D1:C8EB -  -  -  -  
 2773 D1:C8EB -  -  -  -  ;zeropage	CMP oper	C5	2	3  
 2774 D1:C8EB -  -  -  -  inst6502_cmp_zp:
 2775 D1:C8EB ED 33 03 -      ADDCYC(3)
 2776 D1:C8EE 7E -  -  -      ld  a,(hl)
 2777 D1:C8EF 01 00 38 D0     ld  bc,ZEROPAGE
 2778 D1:C8F3 81 -  -  -      add a,c
 2779 D1:C8F4 4F -  -  -      ld  c,a
 2780 D1:C8F5 0A -  -  -      ld  a,(bc)
 2781 D1:C8F6 47 -  -  -      ld  b,a
 2782 D1:C8F7 C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2783 D1:C8FB -  -  -  -  
 2784 D1:C8FB -  -  -  -  ;zeropage,X	CMP oper,X	D5	2	4  
 2785 D1:C8FB -  -  -  -  inst6502_cmp_zpx:
 2786 D1:C8FB ED 33 04 -      ADDCYC(4)
 2787 D1:C8FE 7E -  -  -      ld  a,(hl)
 2788 D1:C8FF 01 00 38 D0     ld  bc,ZEROPAGE
 2789 D1:C903 81 -  -  -      add a,c
 2790 D1:C904 DD 86 01 -      add a,(ix+REGX)
 2791 D1:C907 4F -  -  -      ld  c,a
 2792 D1:C908 0A -  -  -      ld  a,(bc)
 2793 D1:C909 47 -  -  -      ld  b,a
 2794 D1:C90A C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2795 D1:C90E -  -  -  -  
 2796 D1:C90E -  -  -  -  ;absolute	CMP oper	CD	3	4  
 2797 D1:C90E -  -  -  -  inst6502_cmp_abs:
 2798 D1:C90E ED 33 04 -      ADDCYC(4)
 2799 D1:C911 CD 3B B5 D1     call subroutine6502_abs_split_start
 2800 D1:C915 E5 -  -  -      push hl
 2801 D1:C916 50 -  -  -          ld  d,b
 2802 D1:C917 79 -  -  -          ld  a,c
 2803 D1:C918 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2804 D1:C91A ED 4C -  -          mlt bc
 2805 D1:C91C 21 00 40 D0         ld  hl,PAGETABLE
 2806 D1:C920 09 -  -  -          add hl,bc
 2807 D1:C921 ED 27 -  -          ld  hl,(hl)
 2808 D1:C923 06 00 -  -          ld  b,0
 2809 D1:C925 4F -  -  -          ld  c,a
 2810 D1:C926 09 -  -  -          add hl,bc   ;full address
 2811 D1:C927 7E -  -  -          READ_ACCESS
 2812 D1:C928 E1 -  -  -      pop hl
 2813 D1:C929 47 -  -  -      ld  b,a
 2814 D1:C92A C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2815 D1:C92E -  -  -  -  
 2816 D1:C92E -  -  -  -  ;absolute,X	CMP oper,X	DD	3	4* 
 2817 D1:C92E -  -  -  -  inst6502_cmp_absx:
 2818 D1:C92E ED 33 04 -      ADDCYC(4)
 2819 D1:C931 CD 3B B5 D1     call subroutine6502_abs_split_start
 2820 D1:C935 E5 -  -  -      push hl
 2821 D1:C936 50 -  -  -          ld  d,b
 2822 D1:C937 79 -  -  -          ld  a,c
 2823 D1:C938 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2824 D1:C93A ED 4C -  -          mlt bc
 2825 D1:C93C 21 00 40 D0         ld  hl,PAGETABLE
 2826 D1:C940 09 -  -  -          add hl,bc
 2827 D1:C941 ED 27 -  -          ld  hl,(hl)
 2828 D1:C943 06 00 -  -          ld  b,0
 2829 D1:C945 DD 86 01 -          add a,(ix+REGX)
 2830 D1:C948 4F -  -  -          ld  c,a
 2831 D1:C949 30 04 -  -          jr  nc,+_
 2832 D1:C94B 04 -  -  -          inc b
 2833 D1:C94C 14 -  -  -          inc d
 2834 D1:C94D FD 23 -  -          ADDCYC(1)
 2835 D1:C94F 09 -  -  -  _:      add hl,bc   ;full address
 2836 D1:C950 7E -  -  -          READ_ACCESS
 2837 D1:C951 E1 -  -  -      pop hl
 2838 D1:C952 47 -  -  -      ld  b,a
 2839 D1:C953 C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2840 D1:C957 -  -  -  -  
 2841 D1:C957 -  -  -  -  ;absolute,Y	CMP oper,Y	D9	3	4* 
 2842 D1:C957 -  -  -  -  inst6502_cmp_absy:
 2843 D1:C957 ED 33 04 -      ADDCYC(4)
 2844 D1:C95A CD 3B B5 D1     call subroutine6502_abs_split_start
 2845 D1:C95E E5 -  -  -      push hl
 2846 D1:C95F 50 -  -  -          ld  d,b
 2847 D1:C960 79 -  -  -          ld  a,c
 2848 D1:C961 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2849 D1:C963 ED 4C -  -          mlt bc
 2850 D1:C965 21 00 40 D0         ld  hl,PAGETABLE
 2851 D1:C969 09 -  -  -          add hl,bc
 2852 D1:C96A ED 27 -  -          ld  hl,(hl)
 2853 D1:C96C 06 00 -  -          ld  b,0
 2854 D1:C96E DD 86 02 -          add a,(ix+REGY)
 2855 D1:C971 4F -  -  -          ld  c,a
 2856 D1:C972 30 04 -  -          jr  nc,+_
 2857 D1:C974 04 -  -  -          inc b
 2858 D1:C975 14 -  -  -          inc d
 2859 D1:C976 FD 23 -  -          ADDCYC(1)
 2860 D1:C978 09 -  -  -  _:      add hl,bc   ;full address
 2861 D1:C979 7E -  -  -          READ_ACCESS
 2862 D1:C97A E1 -  -  -      pop hl
 2863 D1:C97B 47 -  -  -      ld  b,a
 2864 D1:C97C C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2865 D1:C980 -  -  -  -  
 2866 D1:C980 -  -  -  -  ;(indirect,X)	CMP (oper,X)	C1	2	6  
 2867 D1:C980 -  -  -  -  inst6502_cmp_indx:
 2868 D1:C980 ED 33 06 -      ADDCYC(6)
 2869 D1:C983 E5 -  -  -      push hl
 2870 D1:C984 7E -  -  -          ld  a,(hl)
 2871 D1:C985 21 00 38 D0         ld  hl,ZEROPAGE
 2872 D1:C989 85 -  -  -          add a,L
 2873 D1:C98A DD 86 01 -          add a,(ix+REGX)
 2874 D1:C98D 6F -  -  -          ld  L,a
 2875 D1:C98E 7E -  -  -          ld  a,(hl)
 2876 D1:C98F 2C -  -  -          inc L
 2877 D1:C990 56 -  -  -          ld  d,(hl)
 2878 D1:C991 42 -  -  -          ld  b,d
 2879 D1:C992 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2880 D1:C994 ED 4C -  -          mlt bc
 2881 D1:C996 21 00 40 D0         ld  hl,PAGETABLE
 2882 D1:C99A 09 -  -  -          add hl,bc
 2883 D1:C99B ED 27 -  -          ld  hl,(hl)
 2884 D1:C99D 06 00 -  -          ld  b,0
 2885 D1:C99F 4F -  -  -          ld  c,a
 2886 D1:C9A0 09 -  -  -          add hl,bc
 2887 D1:C9A1 7E -  -  -          READ_ACCESS
 2888 D1:C9A2 E1 -  -  -      pop hl
 2889 D1:C9A3 47 -  -  -      ld  b,a
 2890 D1:C9A4 C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2891 D1:C9A8 -  -  -  -  
 2892 D1:C9A8 -  -  -  -  ;(indirect),Y	CMP (oper),Y	D1	2	5* 
 2893 D1:C9A8 -  -  -  -  inst6502_cmp_indy:
 2894 D1:C9A8 ED 33 05 -      ADDCYC(5)
 2895 D1:C9AB E5 -  -  -      push hl
 2896 D1:C9AC 7E -  -  -          ld  a,(hl)
 2897 D1:C9AD 21 00 38 D0         ld  hl,ZEROPAGE
 2898 D1:C9B1 85 -  -  -          add a,L
 2899 D1:C9B2 6F -  -  -          ld  L,a
 2900 D1:C9B3 7E -  -  -          ld  a,(hl)      ;LSB. Keep in A for now.
 2901 D1:C9B4 2C -  -  -          inc L
 2902 D1:C9B5 DD 86 02 -          add a,(ix+REGY)    ;Adjust LSB for post-idx
 2903 D1:C9B8 66 -  -  -          ld  h,(hl)      ;Retrieve MSB.
 2904 D1:C9B9 30 03 -  -          jr  nc,+_       ;Skip MSB/CC adjust if addition did not carry.
 2905 D1:C9BB 24 -  -  -          inc h
 2906 D1:C9BC FD 23 -  -          ADDCYC(1)
 2907 D1:C9BE 54 -  -  -  _:      ld  d,h         ;save MSB of read address for access controls
 2908 D1:C9BF 2E 08 -  -          ld  L,BASETABLE_STRIDE
 2909 D1:C9C1 ED 6C -  -          mlt hl          ;23.
 2910 D1:C9C3 01 00 40 D0         ld  bc,PAGETABLE
 2911 D1:C9C7 09 -  -  -          add hl,bc
 2912 D1:C9C8 ED 27 -  -          ld  hl,(hl)     ;address get.
 2913 D1:C9CA 01 00 00 00         ld  bc,0
 2914 D1:C9CE 4F -  -  -          ld  c,a
 2915 D1:C9CF 09 -  -  -          add hl,bc       ;Full address get.
 2916 D1:C9D0 7E -  -  -          READ_ACCESS
 2917 D1:C9D1 E1 -  -  -      pop hl
 2918 D1:C9D2 47 -  -  -      ld  b,a
 2919 D1:C9D3 C3 B9 B5 D1     jp  subroutine6502_cmp_combined_end
 2920 D1:C9D7 -  -  -  -  
 2921 D1:C9D7 -  -  -  -  ;-----------------------------------------------------------------------------
 2922 D1:C9D7 -  -  -  -  ;CPX - Compare Memory and Index X
 2923 D1:C9D7 -  -  -  -  ;X - M
 2924 D1:C9D7 -  -  -  -  ;N	Z	C	I	D	V
 2925 D1:C9D7 -  -  -  -  ;+	+	+	-	-	-
 2926 D1:C9D7 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2927 D1:C9D7 -  -  -  -  ;immediate	CPX #oper	E0	2	2  
 2928 D1:C9D7 -  -  -  -  inst6502_cpx_imm:
 2929 D1:C9D7 ED 33 02 -      ADDCYC(2)
 2930 D1:C9DA DD 7E 01 -      ld  a,(ix+REGX)
 2931 D1:C9DD BE -  -  -      cp  (hl)
 2932 D1:C9DE DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2933 D1:C9F7 C3 1E B3 D1     jp  i6502NextLoad
 2934 D1:C9FB -  -  -  -  
 2935 D1:C9FB -  -  -  -  ;zeropage	CPX oper	E4	2	3  
 2936 D1:C9FB -  -  -  -  inst6502_cpx_zp:
 2937 D1:C9FB ED 33 03 -      ADDCYC(3)
 2938 D1:C9FE 7E -  -  -      ld  a,(hl)
 2939 D1:C9FF 01 00 38 D0     ld  bc,ZEROPAGE
 2940 D1:CA03 81 -  -  -      add a,c
 2941 D1:CA04 4F -  -  -      ld  c,a
 2942 D1:CA05 0A -  -  -      ld  a,(bc)
 2943 D1:CA06 47 -  -  -      ld  b,a
 2944 D1:CA07 DD 7E 01 -      ld  a,(ix+REGX)
 2945 D1:CA0A B8 -  -  -      cp  b
 2946 D1:CA0B DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2947 D1:CA24 C3 1E B3 D1     jp i6502NextLoad
 2948 D1:CA28 -  -  -  -  ;absolute	CPX oper	EC	3	4  
 2949 D1:CA28 -  -  -  -  inst6502_cpx_abs:
 2950 D1:CA28 ED 33 04 -      ADDCYC(4)
 2951 D1:CA2B CD 3B B5 D1     call subroutine6502_abs_split_start
 2952 D1:CA2F E5 -  -  -      push hl
 2953 D1:CA30 50 -  -  -          ld  d,b
 2954 D1:CA31 79 -  -  -          ld  a,c
 2955 D1:CA32 0E 08 -  -          ld  c,BASETABLE_STRIDE
 2956 D1:CA34 ED 4C -  -          mlt bc
 2957 D1:CA36 21 00 40 D0         ld  hl,PAGETABLE
 2958 D1:CA3A 09 -  -  -          add hl,bc
 2959 D1:CA3B ED 27 -  -          ld  hl,(hl)
 2960 D1:CA3D 06 00 -  -          ld  b,0
 2961 D1:CA3F 4F -  -  -          ld  c,a
 2962 D1:CA40 09 -  -  -          add hl,bc   ;full address
 2963 D1:CA41 7E -  -  -          READ_ACCESS
 2964 D1:CA42 E1 -  -  -      pop hl
 2965 D1:CA43 47 -  -  -      ld  b,a
 2966 D1:CA44 DD 7E 01 -      ld  a,(ix+REGX)
 2967 D1:CA47 B8 -  -  -      cp  b
 2968 D1:CA48 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2969 D1:CA61 C3 1E B3 D1     jp i6502NextLoad
 2970 D1:CA65 -  -  -  -  
 2971 D1:CA65 -  -  -  -  ;-----------------------------------------------------------------------------
 2972 D1:CA65 -  -  -  -  ;CPY - Compare Memory and Index Y
 2973 D1:CA65 -  -  -  -  ;Y - M
 2974 D1:CA65 -  -  -  -  ;N	Z	C	I	D	V
 2975 D1:CA65 -  -  -  -  ;+	+	+	-	-	-
 2976 D1:CA65 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 2977 D1:CA65 -  -  -  -  ;immediate	CPY #oper	C0	2	2  
 2978 D1:CA65 -  -  -  -  inst6502_cpy_imm:
 2979 D1:CA65 ED 33 02 -      ADDCYC(2)
 2980 D1:CA68 DD 7E 02 -      ld  a,(ix+REGY)
 2981 D1:CA6B BE -  -  -      cp  (hl)
 2982 D1:CA6C DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2983 D1:CA85 C3 1E B3 D1     jp  i6502NextLoad
 2984 D1:CA89 -  -  -  -  
 2985 D1:CA89 -  -  -  -  ;zeropage	CPY oper	C4	2	3  
 2986 D1:CA89 -  -  -  -  inst6502_cpy_zp:
 2987 D1:CA89 ED 33 03 -      ADDCYC(3)
 2988 D1:CA8C 7E -  -  -      ld  a,(hl)
 2989 D1:CA8D 01 00 38 D0     ld  bc,ZEROPAGE
 2990 D1:CA91 81 -  -  -      add a,c
 2991 D1:CA92 4F -  -  -      ld  c,a
 2992 D1:CA93 0A -  -  -      ld  a,(bc)
 2993 D1:CA94 47 -  -  -      ld  b,a
 2994 D1:CA95 DD 7E 02 -      ld  a,(ix+REGY)
 2995 D1:CA98 B8 -  -  -      cp  b
 2996 D1:CA99 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 2997 D1:CAB2 C3 1E B3 D1     jp i6502NextLoad
 2998 D1:CAB6 -  -  -  -  
 2999 D1:CAB6 -  -  -  -  ;absolute	CPY oper	CC	3	4  
 3000 D1:CAB6 -  -  -  -  inst6502_cpy_abs:
 3001 D1:CAB6 ED 33 04 -      ADDCYC(4)
 3002 D1:CAB9 CD 3B B5 D1     call subroutine6502_abs_split_start
 3003 D1:CABD E5 -  -  -      push hl
 3004 D1:CABE 50 -  -  -          ld  d,b
 3005 D1:CABF 79 -  -  -          ld  a,c
 3006 D1:CAC0 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3007 D1:CAC2 ED 4C -  -          mlt bc
 3008 D1:CAC4 21 00 40 D0         ld  hl,PAGETABLE
 3009 D1:CAC8 09 -  -  -          add hl,bc
 3010 D1:CAC9 ED 27 -  -          ld  hl,(hl)
 3011 D1:CACB 06 00 -  -          ld  b,0
 3012 D1:CACD 4F -  -  -          ld  c,a
 3013 D1:CACE 09 -  -  -          add hl,bc   ;full address
 3014 D1:CACF 7E -  -  -          READ_ACCESS
 3015 D1:CAD0 E1 -  -  -      pop hl
 3016 D1:CAD1 47 -  -  -      ld  b,a
 3017 D1:CAD2 DD 7E 02 -      ld  a,(ix+REGY)
 3018 D1:CAD5 B8 -  -  -      cp  b
 3019 D1:CAD6 DD 46 04 CB 
              80 30 02 CB 
              C0 -  -  -      FLAGS_CZN
Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"

              87 CB 88 20 
              02 CB C8 CB 
              B8 30 02 CB 
              F8 DD 70 04 Listing for file "C:\Users\Xethyl\Desktop\aCEtoNES\core.z80"
 3020 D1:CAEF C3 1E B3 D1     jp i6502NextLoad
 3021 D1:CAF3 -  -  -  -  
 3022 D1:CAF3 -  -  -  -  
 3023 D1:CAF3 -  -  -  -  ;-----------------------------------------------------------------------------
 3024 D1:CAF3 -  -  -  -  ;-----------------------------------------------------------------------------
 3025 D1:CAF3 -  -  -  -  ;-----------------------------------------------------------------------------
 3026 D1:CAF3 -  -  -  -  ;Instructions by type: Conditional Branch Instructions
 3027 D1:CAF3 -  -  -  -  
 3028 D1:CAF3 -  -  -  -  ;branch on C=0
 3029 D1:CAF3 -  -  -  -  ;relative	BCC oper	90	2	2**
 3030 D1:CAF3 -  -  -  -  inst6502_bcc:
 3031 D1:CAF3 ED 33 02 -      ADDCYC(2)
 3032 D1:CAF6 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3033 D1:CAFA C2 1E B3 D1     jp  nz,i6502NextLoad
 3034 D1:CAFE C3 DA B5 D1     jp  subroutine6502_take_branch
 3035 D1:CB02 -  -  -  -  
 3036 D1:CB02 -  -  -  -  ;branch on C=1
 3037 D1:CB02 -  -  -  -  ;relative	BCS oper	B0	2	2**
 3038 D1:CB02 -  -  -  -  inst6502_bcs:
 3039 D1:CB02 ED 33 02 -      ADDCYC(2)
 3040 D1:CB05 DD CB 04 46     bit SF_CARRY,(ix+REGSR)
 3041 D1:CB09 CA 1E B3 D1     jp  z,i6502NextLoad
 3042 D1:CB0D C3 DA B5 D1     jp  subroutine6502_take_branch
 3043 D1:CB11 -  -  -  -  
 3044 D1:CB11 -  -  -  -  ;branch on Z=1
 3045 D1:CB11 -  -  -  -  ;relative	BEQ oper	F0	2	2**
 3046 D1:CB11 -  -  -  -  inst6502_beq:
 3047 D1:CB11 ED 33 02 -      ADDCYC(2)
 3048 D1:CB14 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3049 D1:CB18 CA 1E B3 D1     jp  z,i6502NextLoad
 3050 D1:CB1C C3 DA B5 D1     jp  subroutine6502_take_branch
 3051 D1:CB20 -  -  -  -  
 3052 D1:CB20 -  -  -  -  ;branch on N=1
 3053 D1:CB20 -  -  -  -  ;relative	BMI oper	30	2	2**
 3054 D1:CB20 -  -  -  -  inst6502_bmi:
 3055 D1:CB20 ED 33 02 -      ADDCYC(2)
 3056 D1:CB23 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3057 D1:CB27 CA 1E B3 D1     jp  z,i6502NextLoad
 3058 D1:CB2B C3 DA B5 D1     jp  subroutine6502_take_branch
 3059 D1:CB2F -  -  -  -  
 3060 D1:CB2F -  -  -  -  
 3061 D1:CB2F -  -  -  -  ;branch on Z=0
 3062 D1:CB2F -  -  -  -  ;relative	BNE oper	D0	2	2**
 3063 D1:CB2F -  -  -  -  inst6502_bne:
 3064 D1:CB2F ED 33 02 -      ADDCYC(2)
 3065 D1:CB32 DD CB 04 4E     bit SF_ZERO,(ix+REGSR)
 3066 D1:CB36 C2 1E B3 D1     jp  nz,i6502NextLoad
 3067 D1:CB3A C3 DA B5 D1     jp  subroutine6502_take_branch
 3068 D1:CB3E -  -  -  -  
 3069 D1:CB3E -  -  -  -  ;branch on N=0
 3070 D1:CB3E -  -  -  -  ;relative	BPL oper	10	2	2**
 3071 D1:CB3E -  -  -  -  inst6502_bpl:
 3072 D1:CB3E ED 33 02 -      ADDCYC(2)
 3073 D1:CB41 DD CB 04 7E     bit SF_NEG,(ix+REGSR)
 3074 D1:CB45 C2 1E B3 D1     jp  nz,i6502NextLoad
 3075 D1:CB49 C3 DA B5 D1     jp  subroutine6502_take_branch
 3076 D1:CB4D -  -  -  -  
 3077 D1:CB4D -  -  -  -  ;branch on V=0
 3078 D1:CB4D -  -  -  -  ;relative	BVC oper	50	2	2**
 3079 D1:CB4D -  -  -  -  inst6502_bvc:
 3080 D1:CB4D ED 33 02 -      ADDCYC(2)
 3081 D1:CB50 DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3082 D1:CB54 C2 1E B3 D1     jp  nz,i6502NextLoad
 3083 D1:CB58 C3 DA B5 D1     jp  subroutine6502_take_branch
 3084 D1:CB5C -  -  -  -  
 3085 D1:CB5C -  -  -  -  ;branch on V=1
 3086 D1:CB5C -  -  -  -  ;relative	BVS oper	70	2	2**
 3087 D1:CB5C -  -  -  -  inst6502_bvs:
 3088 D1:CB5C ED 33 02 -      ADDCYC(2)
 3089 D1:CB5F DD CB 04 76     bit SF_OVER,(ix+REGSR)
 3090 D1:CB63 CA 1E B3 D1     jp  z,i6502NextLoad
 3091 D1:CB67 C3 DA B5 D1     jp  subroutine6502_take_branch
 3092 D1:CB6B -  -  -  -  
 3093 D1:CB6B -  -  -  -  ;-----------------------------------------------------------------------------
 3094 D1:CB6B -  -  -  -  ;-----------------------------------------------------------------------------
 3095 D1:CB6B -  -  -  -  ;-----------------------------------------------------------------------------
 3096 D1:CB6B -  -  -  -  ;Instructions by type: Interrupts
 3097 D1:CB6B -  -  -  -  
 3098 D1:CB6B -  -  -  -  ;BRK - Force Break
 3099 D1:CB6B -  -  -  -  ;BRK initiates a software interrupt similar to a hardware
 3100 D1:CB6B -  -  -  -  ;interrupt (IRQ). The return address pushed to the stack is
 3101 D1:CB6B -  -  -  -  ;PC+2, providing an extra byte of spacing for a break mark
 3102 D1:CB6B -  -  -  -  ;(identifying a reason for the break.)
 3103 D1:CB6B -  -  -  -  ;The status register will be pushed to the stack with the break
 3104 D1:CB6B -  -  -  -  ;flag set to 1. However, when retrieved during RTI or by a PLP
 3105 D1:CB6B -  -  -  -  ;instruction, the break flag will be ignored.
 3106 D1:CB6B -  -  -  -  ;The interrupt disable flag is not set automatically.
 3107 D1:CB6B -  -  -  -  ;
 3108 D1:CB6B -  -  -  -  ;interrupt,             N	Z	C	I	D	V
 3109 D1:CB6B -  -  -  -  ;push PC+2, push SR     -	-	-	1	-	-
 3110 D1:CB6B -  -  -  -  ;implied	BRK	00	1	7  
 3111 D1:CB6B -  -  -  -  inst6502_brk:
 3112 D1:CB6B ED 33 07 -      ADDCYC(7)
 3113 D1:CB6E 21 00 39 D0     ld  hl,STACKBASE
 3114 D1:CB72 DD 6E 03 -      ld  L,(ix+REGSP)
 3115 D1:CB75 52 DD 17 05     ld.s de,(ix+REGPC)
 3116 D1:CB79 13 -  -  -      inc de      ;that extra spacer.
 3117 D1:CB7A 72 -  -  -      ld  (hl),d
 3118 D1:CB7B 2D -  -  -      dec L
 3119 D1:CB7C 73 -  -  -      ld  (hl),e
 3120 D1:CB7D 2D -  -  -      dec L
 3121 D1:CB7E DD 7E 04 -      ld  a,(ix+REGSR)
 3122 D1:CB81 CB D7 -  -      set SF_INT,a
 3123 D1:CB83 77 -  -  -      ld  (hl),a
 3124 D1:CB84 2D -  -  -      dec L
 3125 D1:CB85 DD 75 03 -      ld  (ix+REGSP),L
 3126 D1:CB88 B7 -  -  -      WAS_NMI_TRIGGERED
 3127 D1:CB89 01 FE 00 00     ld  bc,$FE  ;IRQ vector
 3128 D1:CB8D 28 04 -  -      jr  z,+_
 3129 D1:CB8F 01 FA 00 00     ld  bc,$FA  ;NMI vector, if NMI is hijacking this instruction.
 3130 D1:CB93 21 F8 47 D0 _:  ld  hl,(BASETABLE_STRIDE*$FF)+PAGETABLE
 3131 D1:CB97 ED 27 -  -      ld  hl,(hl)
 3132 D1:CB99 09 -  -  -      add hl,bc
 3133 D1:CB9A ED 17 -  -      ld  de,(hl)
 3134 D1:CB9C 52 DD 1F 05     ld.s (ix+REGPC),de
 3135 D1:CBA0 C3 08 B3 D1     jp  i6502FirstLoad
 3136 D1:CBA4 -  -  -  -  
 3137 D1:CBA4 -  -  -  -  ;RTI - Return from Interrupt
 3138 D1:CBA4 -  -  -  -  ;The status register is pulled with the break flag
 3139 D1:CBA4 -  -  -  -  ;and bit 5 ignored. Then PC is pulled from the stack.
 3140 D1:CBA4 -  -  -  -  ;pull SR, pull PC      N Z C I D V
 3141 D1:CBA4 -  -  -  -  ;                      from stack
 3142 D1:CBA4 -  -  -  -  ;implied	RTI	40	1	6  
 3143 D1:CBA4 -  -  -  -  inst6502_rti:
 3144 D1:CBA4 21 00 39 D0     ld  hl,STACKBASE
 3145 D1:CBA8 DD 6E 03 -      ld  l,(ix+REGSP)
 3146 D1:CBAB 2C -  -  -      inc l
 3147 D1:CBAC 7E -  -  -      ld  a,(hl)
 3148 D1:CBAD 2C -  -  -      inc l
 3149 D1:CBAE 5E -  -  -      ld  e,(hl)
 3150 D1:CBAF 2C -  -  -      inc l
 3151 D1:CBB0 56 -  -  -      ld  d,(hl)
 3152 D1:CBB1 DD 75 03 -      ld  (ix+REGSP),l
 3153 D1:CBB4 52 DD 1F 05     ld.s (ix+REGPC),de
 3154 D1:CBB8 DD 46 04 -      ld  b,(ix+REGSR)
 3155 D1:CBBB A8 -  -  -      xor a,b
 3156 D1:CBBC E6 DF -  -      and a,%11011111
 3157 D1:CBBE A8 -  -  -      xor a,b
 3158 D1:CBBF DD 77 04 -      ld  (ix+REGSR),a
 3159 D1:CBC2 ED 33 06 -      ADDCYC(6)
 3160 D1:CBC5 C3 08 B3 D1     jp  i6502FirstLoad
 3161 D1:CBC9 -  -  -  -  
 3162 D1:CBC9 -  -  -  -  
 3163 D1:CBC9 -  -  -  -  
 3164 D1:CBC9 -  -  -  -  ;-----------------------------------------------------------------------------
 3165 D1:CBC9 -  -  -  -  ;-----------------------------------------------------------------------------
 3166 D1:CBC9 -  -  -  -  ;-----------------------------------------------------------------------------
 3167 D1:CBC9 -  -  -  -  ;Instructions by type: Jumps and Subroutines
 3168 D1:CBC9 -  -  -  -  
 3169 D1:CBC9 -  -  -  -  ;absolute	JMP oper	4C	3	3  
 3170 D1:CBC9 -  -  -  -  inst6052_jmp_abs:
 3171 D1:CBC9 7E -  -  -      ld  a,(hl)
 3172 D1:CBCA 23 -  -  -      inc hl
 3173 D1:CBCB 1C -  -  -      inc e
 3174 D1:CBCC 20 0F -  -      jr  nz,+_
 3175 D1:CBCE DD 56 06 -      ld  d,(ix+REGPC+1)
 3176 D1:CBD1 14 -  -  -      inc d
 3177 D1:CBD2 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3178 D1:CBD4 ED 5C -  -      mlt de
 3179 D1:CBD6 21 00 40 D0     ld  hl,PAGETABLE
 3180 D1:CBDA 19 -  -  -      add hl,de
 3181 D1:CBDB ED 27 -  -      ld  hl,(hl)
 3182 D1:CBDD DD 77 05 -  _:  ld  (ix+REGPC+0),a
 3183 D1:CBE0 7E -  -  -      ld  a,(hl)
 3184 D1:CBE1 DD 77 06 -      ld  (ix+REGPC+1),a
 3185 D1:CBE4 ED 33 03 -      ADDCYC(3)
 3186 D1:CBE7 C3 08 B3 D1     jp i6502FirstLoad
 3187 D1:CBEB -  -  -  -  
 3188 D1:CBEB -  -  -  -  
 3189 D1:CBEB -  -  -  -  ;Note: In earlier 6502 implementations, cross-page reads on indirect is bugged.
 3190 D1:CBEB -  -  -  -  ;   The end effect would be that inst6502_jmp_indir_splitread would wrap around
 3191 D1:CBEB -  -  -  -  ;   to the start of the current page rather than try to read the next page.
 3192 D1:CBEB -  -  -  -  ;indirect	JMP (oper)	6C	3	5  
 3193 D1:CBEB -  -  -  -  inst6502_jmp_indir:
 3194 D1:CBEB ED 33 05 -      ADDCYC(5)
 3195 D1:CBEE 5E -  -  -      ld  e,(hl)
 3196 D1:CBEF 7B -  -  -      ld  a,e
 3197 D1:CBF0 23 -  -  -      inc hl
 3198 D1:CBF1 3C -  -  -      inc a
 3199 D1:CBF2 20 0F -  -      jr  nz,+_
 3200 D1:CBF4 DD 46 06 -      ld  b,(ix+REGPC+1)
 3201 D1:CBF7 04 -  -  -      inc b
 3202 D1:CBF8 0E 08 -  -      ld  c,BASETABLE_STRIDE
 3203 D1:CBFA ED 4C -  -      mlt bc
 3204 D1:CBFC 21 00 40 D0     ld  hl,PAGETABLE
 3205 D1:CC00 09 -  -  -      add hl,bc
 3206 D1:CC01 ED 27 -  -      ld  hl,(hl)
 3207 D1:CC03 56 -  -  -  _:  ld  d,(hl)  ;new 6502 address to read from is loaded from memory
 3208 D1:CC04 1C -  -  -      inc e
 3209 D1:CC05 28 1B -  -      jr  z,inst6502_jmp_indir_splitread
 3210 D1:CC07 1D -  -  -      dec e
 3211 D1:CC08 4B -  -  -      ld  c,e
 3212 D1:CC09 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3213 D1:CC0B ED 5C -  -      mlt de
 3214 D1:CC0D 21 00 40 D0     ld  hl,PAGETABLE
 3215 D1:CC11 19 -  -  -      add hl,de
 3216 D1:CC12 ED 27 -  -      ld  hl,(hl)
 3217 D1:CC14 16 00 -  -      ld  d,0
 3218 D1:CC16 59 -  -  -      ld  e,c
 3219 D1:CC17 19 -  -  -      add hl,de   ;full real address reconstructed.
 3220 D1:CC18 ED 17 -  -      ld  de,(hl)
 3221 D1:CC1A 52 DD 1F 05     ld.s (ix+REGPC),de
 3222 D1:CC1E C3 08 B3 D1     jp  i6502FirstLoad
 3223 D1:CC22 -  -  -  -  inst6502_jmp_indir_splitread:
 3224 D1:CC22 -  -  -  -      ;emulating jmp indirect wraparound behavior instead of
 3225 D1:CC22 -  -  -  -      ;more correct behavior, which tbh, is probably cheaper that way.
 3226 D1:CC22 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3227 D1:CC24 ED 5C -  -      mlt de
 3228 D1:CC26 21 00 40 D0     ld  hl,PAGETABLE
 3229 D1:CC2A 19 -  -  -      add hl,de
 3230 D1:CC2B ED 27 -  -      ld  hl,(hl)
 3231 D1:CC2D 56 -  -  -      ld  d,(hl)
 3232 D1:CC2E 01 FF 00 00     ld  bc,255
 3233 D1:CC32 09 -  -  -      add hl,bc
 3234 D1:CC33 5E -  -  -      ld  e,(hl)
 3235 D1:CC34 52 DD 1F 05     ld.s (ix+REGPC),de
 3236 D1:CC38 C3 08 B3 D1     jp  i6502FirstLoad
 3237 D1:CC3C -  -  -  -  
 3238 D1:CC3C -  -  -  -  ;    ld  e,BASETABLE_STRIDE
 3239 D1:CC3C -  -  -  -  ;    mlt de
 3240 D1:CC3C -  -  -  -  ;    ld  hl,PAGETABLE
 3241 D1:CC3C -  -  -  -  ;    add hl,de
 3242 D1:CC3C -  -  -  -  ;    ld  de,(hl) ;
 3243 D1:CC3C -  -  -  -  ;    ex  de,hl
 3244 D1:CC3C -  -  -  -  ;    ld  bc,255
 3245 D1:CC3C -  -  -  -  ;    add hl,bc
 3246 D1:CC3C -  -  -  -  ;    ld  a,(hl)  ;first byte at indirect loaded
 3247 D1:CC3C -  -  -  -  ;    ex  de,hl
 3248 D1:CC3C -  -  -  -  ;    ld  c,BASETABLE_STRIDE  ;yeee
 3249 D1:CC3C -  -  -  -  ;    add hl,bc   ;get next page from table w/o need to mlt again.
 3250 D1:CC3C -  -  -  -  ;    ld  e,(hl)
 3251 D1:CC3C -  -  -  -  ;    ld  d,a
 3252 D1:CC3C -  -  -  -  ;    ld.s (ix+REGPC),de
 3253 D1:CC3C -  -  -  -  ;    jp  i6502FirstLoad
 3254 D1:CC3C -  -  -  -  
 3255 D1:CC3C -  -  -  -  ;absolute	JSR oper	20	3	6  
 3256 D1:CC3C -  -  -  -  inst6502_jsr:
 3257 D1:CC3C DD 56 06 -      ld  d,(ix+REGPC+1)
 3258 D1:CC3F 4E -  -  -      ld  c,(hl)
 3259 D1:CC40 23 -  -  -      inc hl
 3260 D1:CC41 1C -  -  -      inc e
 3261 D1:CC42 20 0E -  -      jr  nz,+_
 3262 D1:CC44 14 -  -  -      inc d
 3263 D1:CC45 7A -  -  -      ld  a,d
 3264 D1:CC46 1E 08 -  -      ld  e,BASETABLE_STRIDE
 3265 D1:CC48 ED 5C -  -      mlt de
 3266 D1:CC4A 21 00 40 D0     ld  hl,PAGETABLE
 3267 D1:CC4E 19 -  -  -      add hl,de
 3268 D1:CC4F ED 27 -  -      ld  hl,(hl)
 3269 D1:CC51 57 -  -  -      ld  d,a
 3270 D1:CC52 46 -  -  -  _:  ld  b,(hl)
 3271 D1:CC53 -  -  -  -      ;push de to 6502stack
 3272 D1:CC53 21 00 39 D0     ld  hl,STACKBASE
 3273 D1:CC57 DD 6E 03 -      ld  l,(ix+REGSP)
 3274 D1:CC5A 72 -  -  -      ld  (hl),d
 3275 D1:CC5B 2D -  -  -      dec l
 3276 D1:CC5C 73 -  -  -      ld  (hl),e
 3277 D1:CC5D 2D -  -  -      dec l
 3278 D1:CC5E DD 75 03 -      ld  (ix+REGSP),l
 3279 D1:CC61 52 DD 0F 05     ld.s (ix+REGPC),bc
 3280 D1:CC65 ED 33 06 -      ADDCYC(6)
 3281 D1:CC68 C3 08 B3 D1     jp  i6502FirstLoad
 3282 D1:CC6C -  -  -  -  
 3283 D1:CC6C -  -  -  -  ;implied	RTS	60	1	6
 3284 D1:CC6C -  -  -  -  inst6502_rts:
 3285 D1:CC6C 21 00 39 D0     ld  hl,STACKBASE
 3286 D1:CC70 DD 6E 03 -      ld  l,(ix+REGSP)
 3287 D1:CC73 2C -  -  -      inc l
 3288 D1:CC74 5E -  -  -      ld  e,(hl)
 3289 D1:CC75 2C -  -  -      inc l
 3290 D1:CC76 56 -  -  -      ld  d,(hl)
 3291 D1:CC77 DD 75 03 -      ld  (ix+REGSP),l
 3292 D1:CC7A 52 DD 1F 05     ld.s (ix+REGPC),de
 3293 D1:CC7E ED 33 06 -      ADDCYC(6)
 3294 D1:CC81 C3 08 B3 D1     jp  i6502FirstLoad
 3295 D1:CC85 -  -  -  -  
 3296 D1:CC85 -  -  -  -  
 3297 D1:CC85 -  -  -  -  ;-----------------------------------------------------------------------------
 3298 D1:CC85 -  -  -  -  ;-----------------------------------------------------------------------------
 3299 D1:CC85 -  -  -  -  ;-----------------------------------------------------------------------------
 3300 D1:CC85 -  -  -  -  ;Instructions by type: Miscellaneous
 3301 D1:CC85 -  -  -  -  ;BIT - Test Bits in Memory with Accumulator
 3302 D1:CC85 -  -  -  -  ;
 3303 D1:CC85 -  -  -  -  ;bits 7 and 6 of operand are transfered to bit 7 and 6 of SR (N,V);
 3304 D1:CC85 -  -  -  -  ;the zero-flag is set according to the result of the operand AND
 3305 D1:CC85 -  -  -  -  ;the accumulator (set, if the result is zero, unset otherwise).
 3306 D1:CC85 -  -  -  -  ;This allows a quick check of a few bits at once without affecting
 3307 D1:CC85 -  -  -  -  ;any of the registers, other than the status register (SR).
 3308 D1:CC85 -  -  -  -  
 3309 D1:CC85 -  -  -  -  ;A AND M -> Z, M7 -> N, M6 -> V             N	Z	C	I	D	V
 3310 D1:CC85 -  -  -  -  ;                                           M7	+	-	-	-	M6
 3311 D1:CC85 -  -  -  -  ;addressing	assembler	opc	bytes	cycles
 3312 D1:CC85 -  -  -  -  ;zeropage	BIT oper	24	2	3  
 3313 D1:CC85 -  -  -  -  inst6502_bit_zp:
 3314 D1:CC85 ED 33 03 -      ADDCYC(3)
 3315 D1:CC88 7E -  -  -      ld  a,(hl)
 3316 D1:CC89 01 00 38 D0     ld  bc,ZEROPAGE
 3317 D1:CC8D 81 -  -  -      add a,c
 3318 D1:CC8E 4F -  -  -      ld  c,a
 3319 D1:CC8F 0A -  -  -      ld  a,(bc)
 3320 D1:CC90 DD A6 00 -  _:  and a,(ix+REGA)
 3321 D1:CC93 CB 8F -  -      res SF_ZERO,a
 3322 D1:CC95 20 02 -  -      jr  nz,$+4
 3323 D1:CC97 CB CF -  -      set SF_ZERO,a
 3324 D1:CC99 DD 46 04 -      ld  b,(ix+REGSR)
 3325 D1:CC9C A8 -  -  -      xor a,b
 3326 D1:CC9D E6 C2 -  -      and a,%11000010
 3327 D1:CC9F A8 -  -  -      xor a,b
 3328 D1:CCA0 DD 77 04 -      ld  (ix+REGSR),a
 3329 D1:CCA3 C3 1E B3 D1     jp  i6502NextLoad
 3330 D1:CCA7 -  -  -  -  
 3331 D1:CCA7 -  -  -  -  ;absolute	BIT oper	2C	3	4  
 3332 D1:CCA7 -  -  -  -  inst6502_bit_abs:
 3333 D1:CCA7 ED 33 04 -      ADDCYC(4)
 3334 D1:CCAA CD 3B B5 D1     call subroutine6502_abs_split_start
 3335 D1:CCAE E5 -  -  -      push hl
 3336 D1:CCAF 50 -  -  -          ld  d,b
 3337 D1:CCB0 79 -  -  -          ld  a,c
 3338 D1:CCB1 0E 08 -  -          ld  c,BASETABLE_STRIDE
 3339 D1:CCB3 ED 4C -  -          mlt bc
 3340 D1:CCB5 21 00 40 D0         ld  hl,PAGETABLE
 3341 D1:CCB9 09 -  -  -          add hl,bc
 3342 D1:CCBA ED 27 -  -          ld  hl,(hl)
 3343 D1:CCBC 06 00 -  -          ld  b,0
 3344 D1:CCBE 4F -  -  -          ld  c,a
 3345 D1:CCBF 09 -  -  -          add hl,bc   ;full address
 3346 D1:CCC0 7E -  -  -          READ_ACCESS
 3347 D1:CCC1 E1 -  -  -      pop hl
 3348 D1:CCC2 18 CC -  -      jr  -_    
 3349 D1:CCC4 -  -  -  -  
 3350 D1:CCC4 -  -  -  -  ;NOP - No Operation
 3351 D1:CCC4 -  -  -  -  ;implied	NOP	EA	1	2  
 3352 D1:CCC4 -  -  -  -  inst6502_nop:
 3353 D1:CCC4 ED 33 02 -      ADDCYC(2)
 3354 D1:CCC7 C3 37 B3 D1     jp  i6502FinishLoad
 3355 D1:CCCB -  -  -  -  
 3356 D1:CCCB -  -  -  -  ;-----------------------------------------------------------------------------
 3357 D1:CCCB -  -  -  -  ;-----------------------------------------------------------------------------
 3358 D1:CCCB -  -  -  -  ;-----------------------------------------------------------------------------
 3359 D1:CCCB -  -  -  -  ;Instruction not mapped: Terminate emulation
 3360 D1:CCCB -  -  -  -  inst6502_:
 3361 D1:CCCB C9 -  -  -      ret
 3362 D1:CCCC -  -  -  -  
 3363 D1:CCCC -  -  -  -  inst6502_halt:
 3364 D1:CCCC 18 FE -  -      jr $
 3365 D1:CCCE C3 37 B3 D1     jp i6502FinishLoad
 3366 D1:CCD2 -  -  -  -  
 3367 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3368 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3369 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3370 D1:CCD2 -  -  -  -  ;Instructions by type: Illegal Instructions
 3371 D1:CCD2 -  -  -  -  
 3372 D1:CCD2 -  -  -  -  
 3373 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3374 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3375 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3376 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3377 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3378 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3379 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3380 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3381 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3382 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3383 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3384 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3385 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3386 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3387 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3388 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3389 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3390 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3391 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3392 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3393 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3394 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3395 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3396 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3397 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3398 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3399 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3400 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3401 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3402 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3403 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3404 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3405 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3406 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3407 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3408 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3409 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3410 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3411 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3412 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3413 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3414 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3415 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3416 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3417 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3418 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3419 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3420 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3421 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3422 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3423 D1:CCD2 -  -  -  -  ;-----------------------------------------------------------------------------
 3424 D1:CCD2 -  -  -  -  
 3425 D1:CCD2 -  -  -  -  inst6502_instruction_set:
 3426 D1:CCD2 6B CB D1 -  .dl	inst6502_brk					;00
 3427 D1:CCD5 0C C4 D1 -  .dl	inst6502_ora_indx				;01
 3428 D1:CCD8 CB CC D1 -  .dl	inst6502_				;02
 3429 D1:CCDB CB CC D1 -  .dl	inst6502_				;03
 3430 D1:CCDE CB CC D1 -  .dl	inst6502_				;04
 3431 D1:CCE1 FF C2 D1 -  .dl	inst6502_ora_zp					;05
 3432 D1:CCE4 B7 C4 D1 -  .dl	inst6502_asl_zp					;06
 3433 D1:CCE7 CB CC D1 -  .dl	inst6502_				;07
 3434 D1:CCEA 94 BB D1 -  .dl	inst6502_php					;08
 3435 D1:CCED DE C2 D1 -  .dl	inst6502_ora_imm				;09
 3436 D1:CCF0 93 C4 D1 -  .dl	inst6502_asl					;0A
 3437 D1:CCF3 CB CC D1 -  .dl	inst6502_				;0B
 3438 D1:CCF6 CB CC D1 -  .dl	inst6502_				;0C
 3439 D1:CCF9 52 C3 D1 -  .dl	inst6502_ora_abs				;0D
 3440 D1:CCFC 10 C5 D1 -  .dl	inst6502_asl_abs				;0E
 3441 D1:CCFF CB CC D1 -  .dl	inst6502_				;0F
 3442 D1:CD02 3E CB D1 -  .dl	inst6502_bpl					;10
 3443 D1:CD05 4C C4 D1 -  .dl	inst6502_ora_indy				;11
 3444 D1:CD08 CC CC D1 -  .dl	inst6502_halt				;12 JAM. Used to halt emulation for inspection
 3445 D1:CD0B CB CC D1 -  .dl	inst6502_				;13
 3446 D1:CD0E CB CC D1 -  .dl	inst6502_				;14
 3447 D1:CD11 27 C3 D1 -  .dl	inst6502_ora_zpx				;15
 3448 D1:CD14 E2 C4 D1 -  .dl	inst6502_asl_zpx				;16
 3449 D1:CD17 CB CC D1 -  .dl	inst6502_				;17
 3450 D1:CD1A AB C8 D1 -  .dl	inst6502_clc					;18
 3451 D1:CD1D CB C3 D1 -  .dl	inst6502_ora_absy				;19
 3452 D1:CD20 CB CC D1 -  .dl	inst6502_				;1A
 3453 D1:CD23 CB CC D1 -  .dl	inst6502_				;1B
 3454 D1:CD26 CB CC D1 -  .dl	inst6502_				;1C
 3455 D1:CD29 8A C3 D1 -  .dl	inst6502_ora_absx				;1D
 3456 D1:CD2C 4D C5 D1 -  .dl	inst6502_asl_absx				;1E
 3457 D1:CD2F CB CC D1 -  .dl	inst6502_				;1F
 3458 D1:CD32 3C CC D1 -  .dl	inst6502_jsr					;20
 3459 D1:CD35 A2 C0 D1 -  .dl	inst6502_and_indx				;21
 3460 D1:CD38 CB CC D1 -  .dl	inst6502_				;22
 3461 D1:CD3B CB CC D1 -  .dl	inst6502_				;23
 3462 D1:CD3E 85 CC D1 -  .dl	inst6502_bit_zp					;24
 3463 D1:CD41 95 BF D1 -  .dl	inst6502_and_zp					;25
 3464 D1:CD44 B7 C6 D1 -  .dl	inst6502_rol_zp					;26
 3465 D1:CD47 CB CC D1 -  .dl	inst6502_				;27
 3466 D1:CD4A CF BB D1 -  .dl	inst6502_plp					;28
 3467 D1:CD4D 74 BF D1 -  .dl	inst6502_and_imm				;29
 3468 D1:CD50 8F C6 D1 -  .dl	inst6502_rol					;2A
 3469 D1:CD53 CB CC D1 -  .dl	inst6502_				;2B
 3470 D1:CD56 A7 CC D1 -  .dl	inst6502_bit_abs				;2C
 3471 D1:CD59 E8 BF D1 -  .dl	inst6502_and_abs				;2D
 3472 D1:CD5C 16 C7 D1 -  .dl	inst6502_rol_abs				;2E
 3473 D1:CD5F CB CC D1 -  .dl	inst6502_				;2F
 3474 D1:CD62 20 CB D1 -  .dl	inst6502_bmi					;30
 3475 D1:CD65 E2 C0 D1 -  .dl	inst6502_and_indy				;31
 3476 D1:CD68 CB CC D1 -  .dl	inst6502_				;32
 3477 D1:CD6B CB CC D1 -  .dl	inst6502_				;33
 3478 D1:CD6E CB CC D1 -  .dl	inst6502_				;34
 3479 D1:CD71 BD BF D1 -  .dl	inst6502_and_zpx				;35
 3480 D1:CD74 E5 C6 D1 -  .dl	inst6502_rol_zpx				;36
 3481 D1:CD77 CB CC D1 -  .dl	inst6502_						;37
 3482 D1:CD7A CB C8 D1 -  .dl	inst6502_sec					;38
 3483 D1:CD7D 61 C0 D1 -  .dl	inst6502_and_absy				;39
 3484 D1:CD80 CB CC D1 -  .dl	inst6502_			;3A
 3485 D1:CD83 CB CC D1 -  .dl	inst6502_			;3B
 3486 D1:CD86 CB CC D1 -  .dl	inst6502_			;3C
 3487 D1:CD89 20 C0 D1 -  .dl	inst6502_and_absx				;3D
 3488 D1:CD8C 56 C7 D1 -  .dl	inst6502_rol_absx				;3E
 3489 D1:CD8F CB CC D1 -  .dl	inst6502_			;3F
 3490 D1:CD92 6C CC D1 -  .dl	inst6502_rts					;40
 3491 D1:CD95 57 C2 D1 -  .dl	inst6502_eor_indx				;41
 3492 D1:CD98 CB CC D1 -  .dl	inst6502_			;42
 3493 D1:CD9B CB CC D1 -  .dl	inst6502_			;43
 3494 D1:CD9E CB CC D1 -  .dl	inst6502_			;44
 3495 D1:CDA1 4A C1 D1 -  .dl	inst6502_eor_zp					;45
 3496 D1:CDA4 B5 C5 D1 -  .dl	inst6502_lsr_zp					;46
 3497 D1:CDA7 CB CC D1 -  .dl	inst6502_			;47
 3498 D1:CDAA 81 BB D1 -  .dl	inst6502_pha					;48
 3499 D1:CDAD 29 C1 D1 -  .dl	inst6502_eor_imm				;49
 3500 D1:CDB0 91 C5 D1 -  .dl	inst6502_lsr					;4A
 3501 D1:CDB3 CB CC D1 -  .dl	inst6502_			;4B
 3502 D1:CDB6 C9 CB D1 -  .dl	inst6052_jmp_abs				;4C
 3503 D1:CDB9 9D C1 D1 -  .dl	inst6502_eor_abs				;4D
 3504 D1:CDBC 0E C6 D1 -  .dl	inst6502_lsr_abs				;4E
 3505 D1:CDBF CB CC D1 -  .dl	inst6502_			;4F
 3506 D1:CDC2 4D CB D1 -  .dl	inst6502_bvc					;50
 3507 D1:CDC5 97 C2 D1 -  .dl	inst6502_eor_indy				;51
 3508 D1:CDC8 CB CC D1 -  .dl	inst6502_			;52
 3509 D1:CDCB CB CC D1 -  .dl	inst6502_			;53
 3510 D1:CDCE CB CC D1 -  .dl	inst6502_			;54
 3511 D1:CDD1 72 C1 D1 -  .dl	inst6502_eor_zpx				;55
 3512 D1:CDD4 E0 C5 D1 -  .dl	inst6502_lsr_zpx				;56
 3513 D1:CDD7 CB CC D1 -  .dl	inst6502_			;57
 3514 D1:CDDA BB C8 D1 -  .dl	inst6502_cli					;58
 3515 D1:CDDD 16 C2 D1 -  .dl	inst6502_eor_absy				;59
 3516 D1:CDE0 CB CC D1 -  .dl	inst6502_			;5A
 3517 D1:CDE3 CB CC D1 -  .dl	inst6502_			;5B
 3518 D1:CDE6 CB CC D1 -  .dl	inst6502_			;5C
 3519 D1:CDE9 D5 C1 D1 -  .dl	inst6502_eor_absx				;5D
 3520 D1:CDEC 4B C6 D1 -  .dl	inst6502_lsr_absx				;5E
 3521 D1:CDEF CB CC D1 -  .dl	inst6502_			;5F
 3522 D1:CDF2 6C CC D1 -  .dl	inst6502_rts					;60
 3523 D1:CDF5 2F BE D1 -  .dl	inst6502_adc_indx				;61
 3524 D1:CDF8 CB CC D1 -  .dl	inst6502_			;62
 3525 D1:CDFB CB CC D1 -  .dl	inst6502_			;63
 3526 D1:CDFE CB CC D1 -  .dl	inst6502_			;64
 3527 D1:CE01 9A BD D1 -  .dl	inst6502_adc_zp					;65
 3528 D1:CE04 C5 C7 D1 -  .dl	inst6502_ror_zp					;66
 3529 D1:CE07 CB CC D1 -  .dl	inst6502_			;67
 3530 D1:CE0A A9 BB D1 -  .dl	inst6502_pla					;68
 3531 D1:CE0D 92 BD D1 -  .dl	inst6502_adc_imm				;69
 3532 D1:CE10 9D C7 D1 -  .dl	inst6502_ror					;6A
 3533 D1:CE13 CB CC D1 -  .dl	inst6502_			;6B
 3534 D1:CE16 EB CB D1 -  .dl	inst6502_jmp_indir				;6C
 3535 D1:CE19 BD BD D1 -  .dl	inst6502_adc_abs				;6D
 3536 D1:CE1C 24 C8 D1 -  .dl	inst6502_ror_abs				;6E
 3537 D1:CE1F CB CC D1 -  .dl	inst6502_			;6F
 3538 D1:CE22 5C CB D1 -  .dl	inst6502_bvs					;70
 3539 D1:CE25 57 BE D1 -  .dl	inst6502_adc_indy				;71
 3540 D1:CE28 CB CC D1 -  .dl	inst6502_			;72
 3541 D1:CE2B CB CC D1 -  .dl	inst6502_			;73
 3542 D1:CE2E CB CC D1 -  .dl	inst6502_			;74
 3543 D1:CE31 AA BD D1 -  .dl	inst6502_adc_zpx				;75
 3544 D1:CE34 F3 C7 D1 -  .dl	inst6502_ror_zpx				;76
 3545 D1:CE37 CB CC D1 -  .dl	inst6502_			;77
 3546 D1:CE3A DB C8 D1 -  .dl	inst6502_sei					;78
 3547 D1:CE3D 06 BE D1 -  .dl	inst6502_adc_absy				;79
 3548 D1:CE40 CB CC D1 -  .dl	inst6502_			;7A
 3549 D1:CE43 CB CC D1 -  .dl	inst6502_			;7B
 3550 D1:CE46 CB CC D1 -  .dl	inst6502_			;7C
 3551 D1:CE49 DD BD D1 -  .dl	inst6502_adc_absx				;7D
 3552 D1:CE4C 64 C8 D1 -  .dl	inst6502_ror_absx				;7E
 3553 D1:CE4F CB CC D1 -  .dl	inst6502_			;7F
 3554 D1:CE52 CB CC D1 -  .dl	inst6502_			;80
 3555 D1:CE55 E9 B9 D1 -  .dl	inst6502_sta_indx				;81
 3556 D1:CE58 CB CC D1 -  .dl	inst6502_			;82
 3557 D1:CE5B CB CC D1 -  .dl	inst6502_			;83
 3558 D1:CE5E 8B BA D1 -  .dl	inst6502_sty_zp					;84
 3559 D1:CE61 4E B9 D1 -  .dl	inst6502_sta_zp					;85
 3560 D1:CE64 42 BA D1 -  .dl	inst6502_stx_zp					;86
 3561 D1:CE67 CB CC D1 -  .dl	inst6502_			;87
 3562 D1:CE6A C5 BC D1 -  .dl	inst6502_dey					;88
 3563 D1:CE6D CB CC D1 -  .dl	inst6502_			;89
 3564 D1:CE70 34 BB D1 -  .dl	inst6502_txa					;8A
 3565 D1:CE73 CB CC D1 -  .dl	inst6502_			;8B
 3566 D1:CE76 B2 BA D1 -  .dl	inst6502_sty_abs				;8C
 3567 D1:CE79 75 B9 D1 -  .dl	inst6502_sta_abs				;8D
 3568 D1:CE7C 69 BA D1 -  .dl	inst6502_stx_abs				;8E
 3569 D1:CE7F CB CC D1 -  .dl	inst6502_			;8F
 3570 D1:CE82 F3 CA D1 -  .dl	inst6502_bcc					;90
 3571 D1:CE85 13 BA D1 -  .dl	inst6502_sta_indy				;91
 3572 D1:CE88 CB CC D1 -  .dl	inst6502_			;92
 3573 D1:CE8B CB CC D1 -  .dl	inst6502_			;93
 3574 D1:CE8E 9D BA D1 -  .dl	inst6502_sty_zpx				;94
 3575 D1:CE91 60 B9 D1 -  .dl	inst6502_sta_zpx				;95
 3576 D1:CE94 54 BA D1 -  .dl	inst6502_stx_zpy				;96
 3577 D1:CE97 CB CC D1 -  .dl	inst6502_			;97
 3578 D1:CE9A 61 BB D1 -  .dl	inst6502_tya					;98
 3579 D1:CE9D C0 B9 D1 -  .dl	inst6502_sta_absy				;99
 3580 D1:CEA0 54 BB D1 -  .dl	inst6502_txs					;9A
 3581 D1:CEA3 CB CC D1 -  .dl	inst6502_			;9B
 3582 D1:CEA6 CB CC D1 -  .dl	inst6502_			;9C
 3583 D1:CEA9 97 B9 D1 -  .dl	inst6502_sta_absx				;9D
 3584 D1:CEAC CB CC D1 -  .dl	inst6502_			;9E
 3585 D1:CEAF CB CC D1 -  .dl	inst6502_			;9F
 3586 D1:CEB2 70 B8 D1 -  .dl	inst6502_ldy_imm				;A0
 3587 D1:CEB5 11 B7 D1 -  .dl	inst6502_lda_indx				;A1
 3588 D1:CEB8 92 B7 D1 -  .dl	inst6502_ldx_imm				;A2
 3589 D1:CEBB CB CC D1 -  .dl	inst6502_			;A3
 3590 D1:CEBE 8E B8 D1 -  .dl	inst6502_ldy_zp					;A4
 3591 D1:CEC1 13 B6 D1 -  .dl	inst6502_lda_zp					;A5
 3592 D1:CEC4 B0 B7 D1 -  .dl	inst6502_ldx_zp					;A6
 3593 D1:CEC7 CB CC D1 -  .dl	inst6502_			;A7
 3594 D1:CECA F4 BA D1 -  .dl	inst6502_tay					;A8
 3595 D1:CECD F5 B5 D1 -  .dl	inst6502_lda_imm				;A9
 3596 D1:CED0 D4 BA D1 -  .dl	inst6502_tax					;AA
 3597 D1:CED3 CB CC D1 -  .dl	inst6502_			;AB
 3598 D1:CED6 DB B8 D1 -  .dl	inst6502_ldy_abs				;AC
 3599 D1:CED9 60 B6 D1 -  .dl	inst6502_lda_abs				;AD
 3600 D1:CEDC FD B7 D1 -  .dl	inst6502_ldx_abs				;AE
 3601 D1:CEDF CB CC D1 -  .dl	inst6502_			;AF
 3602 D1:CEE2 02 CB D1 -  .dl	inst6502_bcs					;B0
 3603 D1:CEE5 4E B7 D1 -  .dl	inst6502_lda_indy				;B1
 3604 D1:CEE8 CB CC D1 -  .dl	inst6502_			;B2
 3605 D1:CEEB CB CC D1 -  .dl	inst6502_			;B3
 3606 D1:CEEE B3 B8 D1 -  .dl	inst6502_ldy_zpx				;B4
 3607 D1:CEF1 38 B6 D1 -  .dl	inst6502_lda_zpx				;B5
 3608 D1:CEF4 D5 B7 D1 -  .dl	inst6502_ldx_zpy				;B6
 3609 D1:CEF7 CB CC D1 -  .dl	inst6502_			;B7
 3610 D1:CEFA C3 C8 D1 -  .dl	inst6502_clv					;B8
 3611 D1:CEFD D3 B6 D1 -  .dl	inst6502_lda_absy				;B9
 3612 D1:CF00 14 BB D1 -  .dl	inst6502_tsx					;BA
 3613 D1:CF03 CB CC D1 -  .dl	inst6502_			;BB
 3614 D1:CF06 10 B9 D1 -  .dl	inst6502_ldy_absx				;BC
 3615 D1:CF09 95 B6 D1 -  .dl	inst6502_lda_absx				;BD
 3616 D1:CF0C 32 B8 D1 -  .dl	inst6502_ldx_absy				;BE
 3617 D1:CF0F CB CC D1 -  .dl	inst6502_			;BF
 3618 D1:CF12 65 CA D1 -  .dl	inst6502_cpy_imm				;C0
 3619 D1:CF15 80 C9 D1 -  .dl	inst6502_cmp_indx				;C1
 3620 D1:CF18 CB CC D1 -  .dl	inst6502_			;C2
 3621 D1:CF1B CB CC D1 -  .dl	inst6502_			;C3
 3622 D1:CF1E 89 CA D1 -  .dl	inst6502_cpy_zp					;C4
 3623 D1:CF21 EB C8 D1 -  .dl	inst6502_cmp_zp					;C5
 3624 D1:CF24 E9 BB D1 -  .dl	inst6502_dec_zp					;C6
 3625 D1:CF27 CB CC D1 -  .dl	inst6502_			;C7
 3626 D1:CF2A CF BC D1 -  .dl	inst6502_iny					;C8
 3627 D1:CF2D E3 C8 D1 -  .dl	inst6502_cmp_imm				;C9
 3628 D1:CF30 A7 BC D1 -  .dl	inst6502_dex					;CA
 3629 D1:CF33 CB CC D1 -  .dl	inst6502_			;CB
 3630 D1:CF36 B6 CA D1 -  .dl	inst6502_cpy_abs				;CC
 3631 D1:CF39 0E C9 D1 -  .dl	inst6502_cmp_abs				;CD
 3632 D1:CF3C 34 BC D1 -  .dl	inst6502_dec_abs				;CE
 3633 D1:CF3F CB CC D1 -  .dl	inst6502_			;CF
 3634 D1:CF42 2F CB D1 -  .dl	inst6502_bne					;D0
 3635 D1:CF45 A8 C9 D1 -  .dl	inst6502_cmp_indy				;D1
 3636 D1:CF48 CB CC D1 -  .dl	inst6502_			;D2
 3637 D1:CF4B CB CC D1 -  .dl	inst6502_			;D3
 3638 D1:CF4E CB CC D1 -  .dl	inst6502_			;D4
 3639 D1:CF51 FB C8 D1 -  .dl	inst6502_cmp_zpx				;D5
 3640 D1:CF54 0D BC D1 -  .dl	inst6502_dec_zpx				;D6
 3641 D1:CF57 CB CC D1 -  .dl	inst6502_			;D7
 3642 D1:CF5A B3 C8 D1 -  .dl	inst6502_cld					;D8
 3643 D1:CF5D 57 C9 D1 -  .dl	inst6502_cmp_absy				;D9
 3644 D1:CF60 CB CC D1 -  .dl	inst6502_			;DA
 3645 D1:CF63 CB CC D1 -  .dl	inst6502_			;DB
 3646 D1:CF66 CB CC D1 -  .dl	inst6502_			;DC
 3647 D1:CF69 2E C9 D1 -  .dl	inst6502_cmp_absx				;DD
 3648 D1:CF6C 6A BC D1 -  .dl	inst6502_dec_absx				;DE
 3649 D1:CF6F CB CC D1 -  .dl	inst6502_			;DF
 3650 D1:CF72 D7 C9 D1 -  .dl	inst6502_cpx_imm				;E0
 3651 D1:CF75 20 BF D1 -  .dl	inst6502_sbc_indx				;E1
 3652 D1:CF78 CB CC D1 -  .dl	inst6502_			;E2
 3653 D1:CF7B CB CC D1 -  .dl	inst6502_			;E3
 3654 D1:CF7E FB C9 D1 -  .dl	inst6502_cpx_zp					;E4
 3655 D1:CF81 8B BE D1 -  .dl	inst6502_sbc_zp					;E5
 3656 D1:CF84 D4 BC D1 -  .dl	inst6502_inc_zp					;E6
 3657 D1:CF87 CB CC D1 -  .dl	inst6502_			;E7
 3658 D1:CF8A CA BC D1 -  .dl	inst6502_inx					;E8
 3659 D1:CF8D 83 BE D1 -  .dl	inst6502_sbc_imm				;E9
 3660 D1:CF90 C4 CC D1 -  .dl	inst6502_nop					;EA
 3661 D1:CF93 CB CC D1 -  .dl	inst6502_			;EB
 3662 D1:CF96 28 CA D1 -  .dl	inst6502_cpx_abs				;EC
 3663 D1:CF99 AE BE D1 -  .dl	inst6502_sbc_abs				;ED
 3664 D1:CF9C 1F BD D1 -  .dl	inst6502_inc_abs				;EE
 3665 D1:CF9F CB CC D1 -  .dl	inst6502_			;EF
 3666 D1:CFA2 11 CB D1 -  .dl	inst6502_beq					;F0
 3667 D1:CFA5 48 BF D1 -  .dl	inst6502_sbc_indy				;F1
 3668 D1:CFA8 CB CC D1 -  .dl	inst6502_			;F2
 3669 D1:CFAB CB CC D1 -  .dl	inst6502_			;F3
 3670 D1:CFAE CB CC D1 -  .dl	inst6502_			;F4
 3671 D1:CFB1 9B BE D1 -  .dl	inst6502_sbc_zpx				;F5
 3672 D1:CFB4 F8 BC D1 -  .dl	inst6502_inc_zpx				;F6
 3673 D1:CFB7 CB CC D1 -  .dl	inst6502_			;F7
 3674 D1:CFBA D3 C8 D1 -  .dl	inst6502_sed					;F8
 3675 D1:CFBD F7 BE D1 -  .dl	inst6502_sbc_absy				;F9
 3676 D1:CFC0 CB CC D1 -  .dl	inst6502_			;FA
 3677 D1:CFC3 CB CC D1 -  .dl	inst6502_			;FB
 3678 D1:CFC6 CB CC D1 -  .dl	inst6502_			;FC
 3679 D1:CFC9 CE BE D1 -  .dl	inst6502_sbc_absx				;FD
 3680 D1:CFCC 55 BD D1 -  .dl	inst6502_inc_absx				;FE
 3681 D1:CFCF CB CC D1 -  .dl	inst6502_			;FF
 3682 D1:CFD2 -  -  -  -  
 3683 D1:CFD2 -  -  -  -  
 3684 D1:CFD2 -  -  -  -  
 3685 D1:CFD2 -  -  -  -  
 3686 D1:CFD2 -  -  -  -  
 3687 D1:CFD2 -  -  -  -  
 3688 D1:CFD2 -  -  -  -  
 3689 D1:CFD2 -  -  -  -  
 3690 D1:CFD2 -  -  -  -  
 3691 D1:CFD2 -  -  -  -  
 3692 D1:CFD2 -  -  -  -  
 3693 D1:CFD2 -  -  -  -  
 3694 D1:CFD2 -  -  -  -  
Listing for file "main.z80"
  622 D1:CFD2 -  -  -  -  .echo "Main program size: ",$-programStart
